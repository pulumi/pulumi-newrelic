// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.insights;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.insights.EventArgs;
import com.pulumi.newrelic.insights.inputs.EventState;
import com.pulumi.newrelic.insights.outputs.EventEvent;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Use this resource to create one or more Insights events.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.insights.Event;
 * import com.pulumi.newrelic.insights.EventArgs;
 * import com.pulumi.newrelic.insights.inputs.EventEventArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new Event("foo", EventArgs.builder()
 *             .events(EventEventArgs.builder()
 *                 .type("MyEvent")
 *                 .timestamp(1232471100)
 *                 .attributes(                
 *                     EventEventAttributeArgs.builder()
 *                         .key("a_string_attribute")
 *                         .value("a string")
 *                         .build(),
 *                     EventEventAttributeArgs.builder()
 *                         .key("an_integer_attribute")
 *                         .value("42")
 *                         .type("int")
 *                         .build(),
 *                     EventEventAttributeArgs.builder()
 *                         .key("a_float_attribute")
 *                         .value("101.1")
 *                         .type("float")
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Events
 * 
 * The `event` mapping supports the following arguments:
 * 
 *   * `type` - (Required) The event&#39;s name. Can be a combination of alphanumeric characters, underscores, and colons.
 *   * `timestamp` - (Optional) Must be a Unix epoch timestamp. You can define timestamps either in seconds or in milliseconds.
 *   * `attribute` - (Required) An attribute to include in your event payload. Multiple attribute blocks can be defined for an event. See Attributes below for details.
 * 
 * ### Attributes
 * 
 * The `attribute` mapping supports the following arguments:
 * 
 *   * `key` - (Required) The name of the attribute.
 *   * `value` - (Required) The value of the attribute.
 *   * `type` - (Optional) Specify the type for the attribute value. This is useful when passing integer or float values to Insights. Allowed values are `string`, `int`, or `float`. Defaults to `string`.
 * 
 */
@ResourceType(type="newrelic:insights/event:Event")
public class Event extends com.pulumi.resources.CustomResource {
    /**
     * An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
     * 
     */
    @Export(name="events", refs={List.class,EventEvent.class}, tree="[0,1]")
    private Output<List<EventEvent>> events;

    /**
     * @return An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
     * 
     */
    public Output<List<EventEvent>> events() {
        return this.events;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Event(java.lang.String name) {
        this(name, EventArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Event(java.lang.String name, EventArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Event(java.lang.String name, EventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:insights/event:Event", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Event(java.lang.String name, Output<java.lang.String> id, @Nullable EventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:insights/event:Event", name, state, makeResourceOptions(options, id), false);
    }

    private static EventArgs makeArgs(EventArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? EventArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Event get(java.lang.String name, Output<java.lang.String> id, @Nullable EventState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Event(name, id, state, options);
    }
}
