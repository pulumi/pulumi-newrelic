// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NrqlAlertConditionCriticalPredictionArgs extends com.pulumi.resources.ResourceArgs {

    public static final NrqlAlertConditionCriticalPredictionArgs Empty = new NrqlAlertConditionCriticalPredictionArgs();

    /**
     * BETA PREVIEW: the `predict_by` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
     * 
     */
    @Import(name="predictBy")
    private @Nullable Output<Integer> predictBy;

    /**
     * @return BETA PREVIEW: the `predict_by` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
     * 
     */
    public Optional<Output<Integer>> predictBy() {
        return Optional.ofNullable(this.predictBy);
    }

    /**
     * BETA PREVIEW: the `prefer_prediction_violation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term&#39;s static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `prefer_prediction_violation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
     * 
     */
    @Import(name="preferPredictionViolation")
    private @Nullable Output<Boolean> preferPredictionViolation;

    /**
     * @return BETA PREVIEW: the `prefer_prediction_violation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term&#39;s static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `prefer_prediction_violation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
     * 
     */
    public Optional<Output<Boolean>> preferPredictionViolation() {
        return Optional.ofNullable(this.preferPredictionViolation);
    }

    private NrqlAlertConditionCriticalPredictionArgs() {}

    private NrqlAlertConditionCriticalPredictionArgs(NrqlAlertConditionCriticalPredictionArgs $) {
        this.predictBy = $.predictBy;
        this.preferPredictionViolation = $.preferPredictionViolation;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NrqlAlertConditionCriticalPredictionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NrqlAlertConditionCriticalPredictionArgs $;

        public Builder() {
            $ = new NrqlAlertConditionCriticalPredictionArgs();
        }

        public Builder(NrqlAlertConditionCriticalPredictionArgs defaults) {
            $ = new NrqlAlertConditionCriticalPredictionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param predictBy BETA PREVIEW: the `predict_by` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
         * 
         * @return builder
         * 
         */
        public Builder predictBy(@Nullable Output<Integer> predictBy) {
            $.predictBy = predictBy;
            return this;
        }

        /**
         * @param predictBy BETA PREVIEW: the `predict_by` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
         * 
         * @return builder
         * 
         */
        public Builder predictBy(Integer predictBy) {
            return predictBy(Output.of(predictBy));
        }

        /**
         * @param preferPredictionViolation BETA PREVIEW: the `prefer_prediction_violation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term&#39;s static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `prefer_prediction_violation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
         * 
         * @return builder
         * 
         */
        public Builder preferPredictionViolation(@Nullable Output<Boolean> preferPredictionViolation) {
            $.preferPredictionViolation = preferPredictionViolation;
            return this;
        }

        /**
         * @param preferPredictionViolation BETA PREVIEW: the `prefer_prediction_violation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term&#39;s static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `prefer_prediction_violation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
         * 
         * @return builder
         * 
         */
        public Builder preferPredictionViolation(Boolean preferPredictionViolation) {
            return preferPredictionViolation(Output.of(preferPredictionViolation));
        }

        public NrqlAlertConditionCriticalPredictionArgs build() {
            return $;
        }
    }

}
