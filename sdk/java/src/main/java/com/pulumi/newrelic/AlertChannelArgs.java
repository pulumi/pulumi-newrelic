// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.newrelic.inputs.AlertChannelConfigArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertChannelArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertChannelArgs Empty = new AlertChannelArgs();

    /**
     * The New Relic account ID where you want to create alert channels.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<Integer> accountId;

    /**
     * @return The New Relic account ID where you want to create alert channels.
     * 
     */
    public Optional<Output<Integer>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The configuration block for the alert channel.
     * 
     */
    @Import(name="config")
    private @Nullable Output<AlertChannelConfigArgs> config;

    /**
     * @return The configuration block for the alert channel.
     * 
     */
    public Optional<Output<AlertChannelConfigArgs>> config() {
        return Optional.ofNullable(this.config);
    }

    /**
     * (Required) The name of the channel.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return (Required) The name of the channel.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * (Required) The type of channel. One of: (opsgenie, pagerduty, slack, user, victorops, webhook, email).
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return (Required) The type of channel. One of: (opsgenie, pagerduty, slack, user, victorops, webhook, email).
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private AlertChannelArgs() {}

    private AlertChannelArgs(AlertChannelArgs $) {
        this.accountId = $.accountId;
        this.config = $.config;
        this.name = $.name;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertChannelArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertChannelArgs $;

        public Builder() {
            $ = new AlertChannelArgs();
        }

        public Builder(AlertChannelArgs defaults) {
            $ = new AlertChannelArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The New Relic account ID where you want to create alert channels.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<Integer> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The New Relic account ID where you want to create alert channels.
         * 
         * @return builder
         * 
         */
        public Builder accountId(Integer accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param config The configuration block for the alert channel.
         * 
         * @return builder
         * 
         */
        public Builder config(@Nullable Output<AlertChannelConfigArgs> config) {
            $.config = config;
            return this;
        }

        /**
         * @param config The configuration block for the alert channel.
         * 
         * @return builder
         * 
         */
        public Builder config(AlertChannelConfigArgs config) {
            return config(Output.of(config));
        }

        /**
         * @param name (Required) The name of the channel.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name (Required) The name of the channel.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type (Required) The type of channel. One of: (opsgenie, pagerduty, slack, user, victorops, webhook, email).
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type (Required) The type of channel. One of: (opsgenie, pagerduty, slack, user, victorops, webhook, email).
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public AlertChannelArgs build() {
            if ($.type == null) {
                throw new MissingRequiredPropertyException("AlertChannelArgs", "type");
            }
            return $;
        }
    }

}
