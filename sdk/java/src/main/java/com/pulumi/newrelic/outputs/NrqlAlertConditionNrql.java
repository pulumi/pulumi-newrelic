// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NrqlAlertConditionNrql {
    /**
     * @return BETA PREVIEW: the `data_account_id` field is in limited release and only enabled for preview on a per-account basis. - The New Relic account ID to use as the basis for the NRQL alert condition&#39;s `query`; will default to `account_id` if unspecified.
     * 
     */
    private @Nullable String dataAccountId;
    /**
     * @return NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition&#39;s `evaluation_offset`.
     * 
     * @deprecated
     * use `aggregation_method` attribute instead
     * 
     */
    @Deprecated /* use `aggregation_method` attribute instead */
    private @Nullable Integer evaluationOffset;
    private String query;
    /**
     * @return NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition&#39;s `since_value`.
     * 
     * @deprecated
     * use `aggregation_method` attribute instead
     * 
     */
    @Deprecated /* use `aggregation_method` attribute instead */
    private @Nullable String sinceValue;

    private NrqlAlertConditionNrql() {}
    /**
     * @return BETA PREVIEW: the `data_account_id` field is in limited release and only enabled for preview on a per-account basis. - The New Relic account ID to use as the basis for the NRQL alert condition&#39;s `query`; will default to `account_id` if unspecified.
     * 
     */
    public Optional<String> dataAccountId() {
        return Optional.ofNullable(this.dataAccountId);
    }
    /**
     * @return NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition&#39;s `evaluation_offset`.
     * 
     * @deprecated
     * use `aggregation_method` attribute instead
     * 
     */
    @Deprecated /* use `aggregation_method` attribute instead */
    public Optional<Integer> evaluationOffset() {
        return Optional.ofNullable(this.evaluationOffset);
    }
    public String query() {
        return this.query;
    }
    /**
     * @return NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition&#39;s `since_value`.
     * 
     * @deprecated
     * use `aggregation_method` attribute instead
     * 
     */
    @Deprecated /* use `aggregation_method` attribute instead */
    public Optional<String> sinceValue() {
        return Optional.ofNullable(this.sinceValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NrqlAlertConditionNrql defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String dataAccountId;
        private @Nullable Integer evaluationOffset;
        private String query;
        private @Nullable String sinceValue;
        public Builder() {}
        public Builder(NrqlAlertConditionNrql defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dataAccountId = defaults.dataAccountId;
    	      this.evaluationOffset = defaults.evaluationOffset;
    	      this.query = defaults.query;
    	      this.sinceValue = defaults.sinceValue;
        }

        @CustomType.Setter
        public Builder dataAccountId(@Nullable String dataAccountId) {

            this.dataAccountId = dataAccountId;
            return this;
        }
        @CustomType.Setter
        public Builder evaluationOffset(@Nullable Integer evaluationOffset) {

            this.evaluationOffset = evaluationOffset;
            return this;
        }
        @CustomType.Setter
        public Builder query(String query) {
            if (query == null) {
              throw new MissingRequiredPropertyException("NrqlAlertConditionNrql", "query");
            }
            this.query = query;
            return this;
        }
        @CustomType.Setter
        public Builder sinceValue(@Nullable String sinceValue) {

            this.sinceValue = sinceValue;
            return this;
        }
        public NrqlAlertConditionNrql build() {
            final var _resultValue = new NrqlAlertConditionNrql();
            _resultValue.dataAccountId = dataAccountId;
            _resultValue.evaluationOffset = evaluationOffset;
            _resultValue.query = query;
            _resultValue.sinceValue = sinceValue;
            return _resultValue;
        }
    }
}
