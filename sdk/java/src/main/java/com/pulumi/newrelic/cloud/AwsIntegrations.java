// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.cloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.cloud.AwsIntegrationsArgs;
import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsState;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAlb;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsApiGateway;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAutoScaling;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsAppSync;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsAthena;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsCognito;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsConnect;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsDirectConnect;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsFsx;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsGlue;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsKinesisAnalytics;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsMediaConvert;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsMediaPackageVod;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsMq;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsMsk;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsNeptune;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsQldb;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsRoute53resolver;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsStates;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsTransitGateway;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsWaf;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsAwsWafv2;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsBilling;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsCloudfront;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsCloudtrail;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsDocDb;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsDynamodb;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsEbs;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsEc2;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsEcs;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsEfs;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsElasticache;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsElasticbeanstalk;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsElasticsearch;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsElb;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsEmr;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsHealth;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsIam;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsIot;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsKinesis;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsKinesisFirehose;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsLambda;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsRds;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsRedshift;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsRoute53;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsS3;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsSes;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsSns;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsSqs;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsTrustedAdvisor;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsVpc;
import com.pulumi.newrelic.cloud.outputs.AwsIntegrationsXRay;
import java.lang.Integer;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use this resource to integrate AWS services with New Relic.
 * 
 * ## Prerequisite
 * 
 * Setup is required for this resource to work properly. This resource assumes you have linked an AWS account to New Relic and configured it to push metrics using CloudWatch Metric Streams.
 * 
 * New Relic doesn&#39;t automatically receive metrics from AWS for some services so this resource can be used to configure integrations to those services.
 * 
 * Using a metric stream to New Relic is the preferred way to integrate with AWS. Follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#set-up-metric-stream) to set up a metric stream. This resource supports any integration that&#39;s not available through AWS metric stream.
 * 
 * ## Example Usage
 * 
 * Leave an integration block empty to use its default configuration. You can also use the full example, including the AWS set up, found in our guides.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.cloud.AwsLinkAccount;
 * import com.pulumi.newrelic.cloud.AwsLinkAccountArgs;
 * import com.pulumi.newrelic.cloud.AwsIntegrations;
 * import com.pulumi.newrelic.cloud.AwsIntegrationsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsBillingArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsCloudtrailArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsHealthArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsTrustedAdvisorArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsVpcArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsXRayArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsS3Args;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsDocDbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsSqsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsEbsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAlbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsElasticacheArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsApiGatewayArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAutoScalingArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsAppSyncArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsAthenaArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsCognitoArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsConnectArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsDirectConnectArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsFsxArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsGlueArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsKinesisAnalyticsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsMediaConvertArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsMediaPackageVodArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsMqArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsMskArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsNeptuneArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsQldbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsRoute53resolverArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsStatesArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsTransitGatewayArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsWafArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsAwsWafv2Args;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsCloudfrontArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsDynamodbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsEc2Args;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsEcsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsEfsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsElasticbeanstalkArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsElasticsearchArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsElbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsEmrArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsIamArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsIotArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsKinesisArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsKinesisFirehoseArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsLambdaArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsRdsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsRedshiftArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsRoute53Args;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsSesArgs;
 * import com.pulumi.newrelic.cloud.inputs.AwsIntegrationsSnsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new AwsLinkAccount(&#34;foo&#34;, AwsLinkAccountArgs.builder()        
 *             .arn(aws_iam_role.newrelic_aws_role().arn())
 *             .metricCollectionMode(&#34;PULL&#34;)
 *             .build());
 * 
 *         var bar = new AwsIntegrations(&#34;bar&#34;, AwsIntegrationsArgs.builder()        
 *             .linkedAccountId(foo.id())
 *             .billing()
 *             .cloudtrail(AwsIntegrationsCloudtrailArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .awsRegions(                
 *                     &#34;us-east-1&#34;,
 *                     &#34;us-east-2&#34;)
 *                 .build())
 *             .health(AwsIntegrationsHealthArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .trustedAdvisor(AwsIntegrationsTrustedAdvisorArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .vpc(AwsIntegrationsVpcArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .awsRegions(                
 *                     &#34;us-east-1&#34;,
 *                     &#34;us-east-2&#34;)
 *                 .fetchNatGateway(true)
 *                 .fetchVpn(false)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .xRay(AwsIntegrationsXRayArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .awsRegions(                
 *                     &#34;us-east-1&#34;,
 *                     &#34;us-east-2&#34;)
 *                 .build())
 *             .s3(AwsIntegrationsS3Args.builder()
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .docDb(AwsIntegrationsDocDbArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .sqs(AwsIntegrationsSqsArgs.builder()
 *                 .fetchExtendedInventory(true)
 *                 .fetchTags(true)
 *                 .queuePrefixes(&#34;queue prefix&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .ebs(AwsIntegrationsEbsArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .fetchExtendedInventory(true)
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .alb(AwsIntegrationsAlbArgs.builder()
 *                 .fetchExtendedInventory(true)
 *                 .fetchTags(true)
 *                 .loadBalancerPrefixes(&#34;load balancer prefix&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .elasticache(AwsIntegrationsElasticacheArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .apiGateway(AwsIntegrationsApiGatewayArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .stagePrefixes(&#34;stage prefix&#34;)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .autoScaling(AwsIntegrationsAutoScalingArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsAppSync(AwsIntegrationsAwsAppSyncArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsAthena(AwsIntegrationsAwsAthenaArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsCognito(AwsIntegrationsAwsCognitoArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsConnect(AwsIntegrationsAwsConnectArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsDirectConnect(AwsIntegrationsAwsDirectConnectArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsFsx(AwsIntegrationsAwsFsxArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsGlue(AwsIntegrationsAwsGlueArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsKinesisAnalytics(AwsIntegrationsAwsKinesisAnalyticsArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsMediaConvert(AwsIntegrationsAwsMediaConvertArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsMediaPackageVod(AwsIntegrationsAwsMediaPackageVodArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsMq(AwsIntegrationsAwsMqArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsMsk(AwsIntegrationsAwsMskArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsNeptune(AwsIntegrationsAwsNeptuneArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsQldb(AwsIntegrationsAwsQldbArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsRoute53resolver(AwsIntegrationsAwsRoute53resolverArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsStates(AwsIntegrationsAwsStatesArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsTransitGateway(AwsIntegrationsAwsTransitGatewayArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsWaf(AwsIntegrationsAwsWafArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .awsWafv2(AwsIntegrationsAwsWafv2Args.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .cloudfront(AwsIntegrationsCloudfrontArgs.builder()
 *                 .fetchLambdasAtEdge(true)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .dynamodb(AwsIntegrationsDynamodbArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchExtendedInventory(true)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .ec2(AwsIntegrationsEc2Args.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .duplicateEc2Tags(true)
 *                 .fetchIpAddresses(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .ecs(AwsIntegrationsEcsArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .efs(AwsIntegrationsEfsArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .elasticbeanstalk(AwsIntegrationsElasticbeanstalkArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchExtendedInventory(true)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .elasticsearch(AwsIntegrationsElasticsearchArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchNodes(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .elb(AwsIntegrationsElbArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchExtendedInventory(true)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .emr(AwsIntegrationsEmrArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .iam(AwsIntegrationsIamArgs.builder()
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .iot(AwsIntegrationsIotArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .kinesis(AwsIntegrationsKinesisArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchShards(true)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .kinesisFirehose(AwsIntegrationsKinesisFirehoseArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .lambda(AwsIntegrationsLambdaArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .rds(AwsIntegrationsRdsArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchTags(true)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .redshift(AwsIntegrationsRedshiftArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .tagKey(&#34;tag key&#34;)
 *                 .tagValue(&#34;tag value&#34;)
 *                 .build())
 *             .route53(AwsIntegrationsRoute53Args.builder()
 *                 .fetchExtendedInventory(true)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .ses(AwsIntegrationsSesArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .sns(AwsIntegrationsSnsArgs.builder()
 *                 .awsRegions(&#34;us-east-1&#34;)
 *                 .fetchExtendedInventory(true)
 *                 .metricsPollingInterval(6000)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Linked AWS account integrations can be imported using the `id`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import newrelic:cloud/awsIntegrations:AwsIntegrations foo &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="newrelic:cloud/awsIntegrations:AwsIntegrations")
public class AwsIntegrations extends com.pulumi.resources.CustomResource {
    /**
     * The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     * 
     */
    @Export(name="accountId", type=Integer.class, parameters={})
    private Output<Integer> accountId;

    /**
     * @return The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     * 
     */
    public Output<Integer> accountId() {
        return this.accountId;
    }
    /**
     * ALB integration
     * 
     */
    @Export(name="alb", type=AwsIntegrationsAlb.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAlb> alb;

    /**
     * @return ALB integration
     * 
     */
    public Output<Optional<AwsIntegrationsAlb>> alb() {
        return Codegen.optional(this.alb);
    }
    /**
     * API Gateway integration
     * 
     */
    @Export(name="apiGateway", type=AwsIntegrationsApiGateway.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsApiGateway> apiGateway;

    /**
     * @return API Gateway integration
     * 
     */
    public Output<Optional<AwsIntegrationsApiGateway>> apiGateway() {
        return Codegen.optional(this.apiGateway);
    }
    /**
     * ,`aws_app_sync`,`aws_athena`,`aws_cognito`,`aws_connect`,`aws_direct_connect`,`aws_fsx`,`aws_glue`,`aws_kinesis_analytics`,`aws_media_convert`,`aws_media_package_vod`,`aws_mq`,`aws_msk`,`aws_neptune`,`aws_qldb`,`aws_route53resolver`,`aws_states`,`aws_transit_gateway`,`aws_waf`,`aws_wafv2`,`iot`,`kinesis_firehose` and `ses`.
     * 
     */
    @Export(name="autoScaling", type=AwsIntegrationsAutoScaling.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAutoScaling> autoScaling;

    /**
     * @return ,`aws_app_sync`,`aws_athena`,`aws_cognito`,`aws_connect`,`aws_direct_connect`,`aws_fsx`,`aws_glue`,`aws_kinesis_analytics`,`aws_media_convert`,`aws_media_package_vod`,`aws_mq`,`aws_msk`,`aws_neptune`,`aws_qldb`,`aws_route53resolver`,`aws_states`,`aws_transit_gateway`,`aws_waf`,`aws_wafv2`,`iot`,`kinesis_firehose` and `ses`.
     * 
     */
    public Output<Optional<AwsIntegrationsAutoScaling>> autoScaling() {
        return Codegen.optional(this.autoScaling);
    }
    /**
     * Aws Appsync integration
     * 
     */
    @Export(name="awsAppSync", type=AwsIntegrationsAwsAppSync.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsAppSync> awsAppSync;

    /**
     * @return Aws Appsync integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsAppSync>> awsAppSync() {
        return Codegen.optional(this.awsAppSync);
    }
    /**
     * Aws Athena integration
     * 
     */
    @Export(name="awsAthena", type=AwsIntegrationsAwsAthena.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsAthena> awsAthena;

    /**
     * @return Aws Athena integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsAthena>> awsAthena() {
        return Codegen.optional(this.awsAthena);
    }
    /**
     * Aws Cognito integration
     * 
     */
    @Export(name="awsCognito", type=AwsIntegrationsAwsCognito.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsCognito> awsCognito;

    /**
     * @return Aws Cognito integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsCognito>> awsCognito() {
        return Codegen.optional(this.awsCognito);
    }
    /**
     * Aws Connect integration
     * 
     */
    @Export(name="awsConnect", type=AwsIntegrationsAwsConnect.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsConnect> awsConnect;

    /**
     * @return Aws Connect integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsConnect>> awsConnect() {
        return Codegen.optional(this.awsConnect);
    }
    /**
     * Aws Direct Connect integration
     * 
     */
    @Export(name="awsDirectConnect", type=AwsIntegrationsAwsDirectConnect.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsDirectConnect> awsDirectConnect;

    /**
     * @return Aws Direct Connect integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsDirectConnect>> awsDirectConnect() {
        return Codegen.optional(this.awsDirectConnect);
    }
    /**
     * Aws Fsx integration
     * 
     */
    @Export(name="awsFsx", type=AwsIntegrationsAwsFsx.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsFsx> awsFsx;

    /**
     * @return Aws Fsx integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsFsx>> awsFsx() {
        return Codegen.optional(this.awsFsx);
    }
    /**
     * Aws Glue integration
     * 
     */
    @Export(name="awsGlue", type=AwsIntegrationsAwsGlue.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsGlue> awsGlue;

    /**
     * @return Aws Glue integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsGlue>> awsGlue() {
        return Codegen.optional(this.awsGlue);
    }
    /**
     * Aws Kinesis Analytics integration
     * 
     */
    @Export(name="awsKinesisAnalytics", type=AwsIntegrationsAwsKinesisAnalytics.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsKinesisAnalytics> awsKinesisAnalytics;

    /**
     * @return Aws Kinesis Analytics integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsKinesisAnalytics>> awsKinesisAnalytics() {
        return Codegen.optional(this.awsKinesisAnalytics);
    }
    /**
     * Aws Media Convert integration
     * 
     */
    @Export(name="awsMediaConvert", type=AwsIntegrationsAwsMediaConvert.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsMediaConvert> awsMediaConvert;

    /**
     * @return Aws Media Convert integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsMediaConvert>> awsMediaConvert() {
        return Codegen.optional(this.awsMediaConvert);
    }
    /**
     * Aws Media PackageVod integration
     * 
     */
    @Export(name="awsMediaPackageVod", type=AwsIntegrationsAwsMediaPackageVod.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsMediaPackageVod> awsMediaPackageVod;

    /**
     * @return Aws Media PackageVod integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsMediaPackageVod>> awsMediaPackageVod() {
        return Codegen.optional(this.awsMediaPackageVod);
    }
    /**
     * Aws Mq integration
     * 
     */
    @Export(name="awsMq", type=AwsIntegrationsAwsMq.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsMq> awsMq;

    /**
     * @return Aws Mq integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsMq>> awsMq() {
        return Codegen.optional(this.awsMq);
    }
    /**
     * Aws Msk integration
     * 
     */
    @Export(name="awsMsk", type=AwsIntegrationsAwsMsk.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsMsk> awsMsk;

    /**
     * @return Aws Msk integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsMsk>> awsMsk() {
        return Codegen.optional(this.awsMsk);
    }
    /**
     * Aws Neptune integration
     * 
     */
    @Export(name="awsNeptune", type=AwsIntegrationsAwsNeptune.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsNeptune> awsNeptune;

    /**
     * @return Aws Neptune integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsNeptune>> awsNeptune() {
        return Codegen.optional(this.awsNeptune);
    }
    /**
     * Aws Qldb integration
     * 
     */
    @Export(name="awsQldb", type=AwsIntegrationsAwsQldb.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsQldb> awsQldb;

    /**
     * @return Aws Qldb integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsQldb>> awsQldb() {
        return Codegen.optional(this.awsQldb);
    }
    /**
     * Aws Route53resolver integration
     * 
     */
    @Export(name="awsRoute53resolver", type=AwsIntegrationsAwsRoute53resolver.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsRoute53resolver> awsRoute53resolver;

    /**
     * @return Aws Route53resolver integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsRoute53resolver>> awsRoute53resolver() {
        return Codegen.optional(this.awsRoute53resolver);
    }
    /**
     * Aws states integration
     * 
     */
    @Export(name="awsStates", type=AwsIntegrationsAwsStates.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsStates> awsStates;

    /**
     * @return Aws states integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsStates>> awsStates() {
        return Codegen.optional(this.awsStates);
    }
    /**
     * Aws Transit Gateway integration
     * 
     */
    @Export(name="awsTransitGateway", type=AwsIntegrationsAwsTransitGateway.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsTransitGateway> awsTransitGateway;

    /**
     * @return Aws Transit Gateway integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsTransitGateway>> awsTransitGateway() {
        return Codegen.optional(this.awsTransitGateway);
    }
    /**
     * Aws Waf integration
     * 
     */
    @Export(name="awsWaf", type=AwsIntegrationsAwsWaf.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsWaf> awsWaf;

    /**
     * @return Aws Waf integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsWaf>> awsWaf() {
        return Codegen.optional(this.awsWaf);
    }
    /**
     * Aws Wafv2 integration
     * 
     */
    @Export(name="awsWafv2", type=AwsIntegrationsAwsWafv2.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsAwsWafv2> awsWafv2;

    /**
     * @return Aws Wafv2 integration
     * 
     */
    public Output<Optional<AwsIntegrationsAwsWafv2>> awsWafv2() {
        return Codegen.optional(this.awsWafv2);
    }
    /**
     * Billing integration
     * 
     */
    @Export(name="billing", type=AwsIntegrationsBilling.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsBilling> billing;

    /**
     * @return Billing integration
     * 
     */
    public Output<Optional<AwsIntegrationsBilling>> billing() {
        return Codegen.optional(this.billing);
    }
    /**
     * Cloudfront integration
     * 
     */
    @Export(name="cloudfront", type=AwsIntegrationsCloudfront.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsCloudfront> cloudfront;

    /**
     * @return Cloudfront integration
     * 
     */
    public Output<Optional<AwsIntegrationsCloudfront>> cloudfront() {
        return Codegen.optional(this.cloudfront);
    }
    /**
     * CloudTrail integration
     * 
     */
    @Export(name="cloudtrail", type=AwsIntegrationsCloudtrail.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsCloudtrail> cloudtrail;

    /**
     * @return CloudTrail integration
     * 
     */
    public Output<Optional<AwsIntegrationsCloudtrail>> cloudtrail() {
        return Codegen.optional(this.cloudtrail);
    }
    /**
     * Doc DB integration
     * 
     */
    @Export(name="docDb", type=AwsIntegrationsDocDb.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsDocDb> docDb;

    /**
     * @return Doc DB integration
     * 
     */
    public Output<Optional<AwsIntegrationsDocDb>> docDb() {
        return Codegen.optional(this.docDb);
    }
    /**
     * Dynamo DB integration
     * 
     */
    @Export(name="dynamodb", type=AwsIntegrationsDynamodb.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsDynamodb> dynamodb;

    /**
     * @return Dynamo DB integration
     * 
     */
    public Output<Optional<AwsIntegrationsDynamodb>> dynamodb() {
        return Codegen.optional(this.dynamodb);
    }
    /**
     * EBS integration
     * 
     */
    @Export(name="ebs", type=AwsIntegrationsEbs.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsEbs> ebs;

    /**
     * @return EBS integration
     * 
     */
    public Output<Optional<AwsIntegrationsEbs>> ebs() {
        return Codegen.optional(this.ebs);
    }
    /**
     * Ec2 integration
     * 
     */
    @Export(name="ec2", type=AwsIntegrationsEc2.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsEc2> ec2;

    /**
     * @return Ec2 integration
     * 
     */
    public Output<Optional<AwsIntegrationsEc2>> ec2() {
        return Codegen.optional(this.ec2);
    }
    /**
     * Ecs integration
     * 
     */
    @Export(name="ecs", type=AwsIntegrationsEcs.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsEcs> ecs;

    /**
     * @return Ecs integration
     * 
     */
    public Output<Optional<AwsIntegrationsEcs>> ecs() {
        return Codegen.optional(this.ecs);
    }
    /**
     * Efs integration
     * 
     */
    @Export(name="efs", type=AwsIntegrationsEfs.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsEfs> efs;

    /**
     * @return Efs integration
     * 
     */
    public Output<Optional<AwsIntegrationsEfs>> efs() {
        return Codegen.optional(this.efs);
    }
    /**
     * Elasticache integration
     * 
     */
    @Export(name="elasticache", type=AwsIntegrationsElasticache.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsElasticache> elasticache;

    /**
     * @return Elasticache integration
     * 
     */
    public Output<Optional<AwsIntegrationsElasticache>> elasticache() {
        return Codegen.optional(this.elasticache);
    }
    /**
     * Elastic Bean Stalk integration
     * 
     */
    @Export(name="elasticbeanstalk", type=AwsIntegrationsElasticbeanstalk.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsElasticbeanstalk> elasticbeanstalk;

    /**
     * @return Elastic Bean Stalk integration
     * 
     */
    public Output<Optional<AwsIntegrationsElasticbeanstalk>> elasticbeanstalk() {
        return Codegen.optional(this.elasticbeanstalk);
    }
    /**
     * Elastic Search integration
     * 
     */
    @Export(name="elasticsearch", type=AwsIntegrationsElasticsearch.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsElasticsearch> elasticsearch;

    /**
     * @return Elastic Search integration
     * 
     */
    public Output<Optional<AwsIntegrationsElasticsearch>> elasticsearch() {
        return Codegen.optional(this.elasticsearch);
    }
    /**
     * Elb integration
     * 
     */
    @Export(name="elb", type=AwsIntegrationsElb.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsElb> elb;

    /**
     * @return Elb integration
     * 
     */
    public Output<Optional<AwsIntegrationsElb>> elb() {
        return Codegen.optional(this.elb);
    }
    /**
     * Emr integration
     * 
     */
    @Export(name="emr", type=AwsIntegrationsEmr.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsEmr> emr;

    /**
     * @return Emr integration
     * 
     */
    public Output<Optional<AwsIntegrationsEmr>> emr() {
        return Codegen.optional(this.emr);
    }
    /**
     * Health integration
     * 
     */
    @Export(name="health", type=AwsIntegrationsHealth.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsHealth> health;

    /**
     * @return Health integration
     * 
     */
    public Output<Optional<AwsIntegrationsHealth>> health() {
        return Codegen.optional(this.health);
    }
    /**
     * Iam integration
     * 
     */
    @Export(name="iam", type=AwsIntegrationsIam.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsIam> iam;

    /**
     * @return Iam integration
     * 
     */
    public Output<Optional<AwsIntegrationsIam>> iam() {
        return Codegen.optional(this.iam);
    }
    /**
     * Iot integration
     * 
     */
    @Export(name="iot", type=AwsIntegrationsIot.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsIot> iot;

    /**
     * @return Iot integration
     * 
     */
    public Output<Optional<AwsIntegrationsIot>> iot() {
        return Codegen.optional(this.iot);
    }
    /**
     * Kinesis integration
     * 
     */
    @Export(name="kinesis", type=AwsIntegrationsKinesis.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsKinesis> kinesis;

    /**
     * @return Kinesis integration
     * 
     */
    public Output<Optional<AwsIntegrationsKinesis>> kinesis() {
        return Codegen.optional(this.kinesis);
    }
    /**
     * Kinesis Firehose integration
     * 
     */
    @Export(name="kinesisFirehose", type=AwsIntegrationsKinesisFirehose.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsKinesisFirehose> kinesisFirehose;

    /**
     * @return Kinesis Firehose integration
     * 
     */
    public Output<Optional<AwsIntegrationsKinesisFirehose>> kinesisFirehose() {
        return Codegen.optional(this.kinesisFirehose);
    }
    /**
     * Lambda integration
     * 
     */
    @Export(name="lambda", type=AwsIntegrationsLambda.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsLambda> lambda;

    /**
     * @return Lambda integration
     * 
     */
    public Output<Optional<AwsIntegrationsLambda>> lambda() {
        return Codegen.optional(this.lambda);
    }
    /**
     * The ID of the linked AWS account in New Relic.
     * 
     * All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
     * 
     * | Block                   | Description                   |
     * |-------------------------|-------------------------------|
     * | `alb`                   | ALB Integration               |
     * | `api_gateway`           | API Gateway Integration       |
     * | `auto_scaling`          | Auto Scaling Integration      |
     * | `aws_app_sync`          | AppSync Integration           |
     * | `aws_athena`            | Athena Integration            |
     * | `aws_cognito`           | Cognito Integration           |
     * | `aws_connect`           | Connect Integration           |
     * | `aws_direct_connect`    | Direct Connect Integration    |
     * | `aws_fsx`               | FSx Integration               |
     * | `aws_glue`              | Glue Integration              |
     * | `aws_kinesis_analytics` | Kinesis Analytics Integration |
     * | `aws_media_convert`     | MediaConvert Integration      |
     * | `aws_media_package_vod` | Media Package VOD Integration |
     * | `aws_mq`                | MQ Integration                |
     * | `aws_msk`               | MSK Integration               |
     * | `aws_neptune`           | Neptune Integration           |
     * | `aws_qldb`              | QLDB Integration              |
     * | `aws_route53resolver`   | Route53 Resolver Integration  |
     * | `aws_states`            | States Integration            |
     * | `aws_transit_gateway`   | Transit Gateway Integration   |
     * | `aws_waf`               | WAF Integration               |
     * | `aws_wafv2`             | WAFv2 Integration             |
     * | `billing`               | Billing Integration           |
     * | `cloudfront`            | CloudFront Integration        |
     * | `cloudtrail`            | CloudTrail Integration        |
     * | `doc_db`                | DocumentDB Integration        |
     * | `dynamodb`              | DynamoDB Integration          |
     * | `ebs`                   | EBS Integration               |
     * | `ec2`                   | EC2 Integration               |
     * | `ecs`                   | ECS Integration               |
     * | `efs`                   | EFS Integration               |
     * | `elasticache`           | ElastiCache Integration       |
     * | `elasticbeanstalk`      | Elastic Beanstalk Integration |
     * | `elasticsearch`         | Elasticsearch Integration     |
     * | `elb`                   | ELB Integration               |
     * | `emr`                   | EMR Integration               |
     * | `health`                | Health Integration            |
     * | `iam`                   | IAM Integration               |
     * | `iot`                   | IoT Integration               |
     * | `kinesis`               | Kinesis Integration           |
     * | `kinesis_firehose`      | Kinesis Firehose Integration  |
     * | `lambda`                | Lambda Integration            |
     * | `rds`                   | RDS Integration               |
     * | `redshift`              | Redshift Integration          |
     * | `route53`               | Route53 Integration           |
     * | `s3`                    | S3 Integration                |
     * | `ses`                   | SES Integration               |
     * | `sns`                   | SNS Integration               |
     * | `sqs`                   | SQS Integration               |
     * | `trusted_advisor`       | Trusted Advisor Integration   |
     * | `vpc`                   | VPC Integration               |
     * | `x_ray`                 | X-Ray Integration             |
     * 
     */
    @Export(name="linkedAccountId", type=Integer.class, parameters={})
    private Output<Integer> linkedAccountId;

    /**
     * @return The ID of the linked AWS account in New Relic.
     * 
     * All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
     * 
     * | Block                   | Description                   |
     * |-------------------------|-------------------------------|
     * | `alb`                   | ALB Integration               |
     * | `api_gateway`           | API Gateway Integration       |
     * | `auto_scaling`          | Auto Scaling Integration      |
     * | `aws_app_sync`          | AppSync Integration           |
     * | `aws_athena`            | Athena Integration            |
     * | `aws_cognito`           | Cognito Integration           |
     * | `aws_connect`           | Connect Integration           |
     * | `aws_direct_connect`    | Direct Connect Integration    |
     * | `aws_fsx`               | FSx Integration               |
     * | `aws_glue`              | Glue Integration              |
     * | `aws_kinesis_analytics` | Kinesis Analytics Integration |
     * | `aws_media_convert`     | MediaConvert Integration      |
     * | `aws_media_package_vod` | Media Package VOD Integration |
     * | `aws_mq`                | MQ Integration                |
     * | `aws_msk`               | MSK Integration               |
     * | `aws_neptune`           | Neptune Integration           |
     * | `aws_qldb`              | QLDB Integration              |
     * | `aws_route53resolver`   | Route53 Resolver Integration  |
     * | `aws_states`            | States Integration            |
     * | `aws_transit_gateway`   | Transit Gateway Integration   |
     * | `aws_waf`               | WAF Integration               |
     * | `aws_wafv2`             | WAFv2 Integration             |
     * | `billing`               | Billing Integration           |
     * | `cloudfront`            | CloudFront Integration        |
     * | `cloudtrail`            | CloudTrail Integration        |
     * | `doc_db`                | DocumentDB Integration        |
     * | `dynamodb`              | DynamoDB Integration          |
     * | `ebs`                   | EBS Integration               |
     * | `ec2`                   | EC2 Integration               |
     * | `ecs`                   | ECS Integration               |
     * | `efs`                   | EFS Integration               |
     * | `elasticache`           | ElastiCache Integration       |
     * | `elasticbeanstalk`      | Elastic Beanstalk Integration |
     * | `elasticsearch`         | Elasticsearch Integration     |
     * | `elb`                   | ELB Integration               |
     * | `emr`                   | EMR Integration               |
     * | `health`                | Health Integration            |
     * | `iam`                   | IAM Integration               |
     * | `iot`                   | IoT Integration               |
     * | `kinesis`               | Kinesis Integration           |
     * | `kinesis_firehose`      | Kinesis Firehose Integration  |
     * | `lambda`                | Lambda Integration            |
     * | `rds`                   | RDS Integration               |
     * | `redshift`              | Redshift Integration          |
     * | `route53`               | Route53 Integration           |
     * | `s3`                    | S3 Integration                |
     * | `ses`                   | SES Integration               |
     * | `sns`                   | SNS Integration               |
     * | `sqs`                   | SQS Integration               |
     * | `trusted_advisor`       | Trusted Advisor Integration   |
     * | `vpc`                   | VPC Integration               |
     * | `x_ray`                 | X-Ray Integration             |
     * 
     */
    public Output<Integer> linkedAccountId() {
        return this.linkedAccountId;
    }
    /**
     * Rds integration
     * 
     */
    @Export(name="rds", type=AwsIntegrationsRds.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsRds> rds;

    /**
     * @return Rds integration
     * 
     */
    public Output<Optional<AwsIntegrationsRds>> rds() {
        return Codegen.optional(this.rds);
    }
    /**
     * Redshift integration
     * 
     */
    @Export(name="redshift", type=AwsIntegrationsRedshift.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsRedshift> redshift;

    /**
     * @return Redshift integration
     * 
     */
    public Output<Optional<AwsIntegrationsRedshift>> redshift() {
        return Codegen.optional(this.redshift);
    }
    /**
     * Route53 integration
     * 
     */
    @Export(name="route53", type=AwsIntegrationsRoute53.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsRoute53> route53;

    /**
     * @return Route53 integration
     * 
     */
    public Output<Optional<AwsIntegrationsRoute53>> route53() {
        return Codegen.optional(this.route53);
    }
    /**
     * S3 integration
     * 
     */
    @Export(name="s3", type=AwsIntegrationsS3.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsS3> s3;

    /**
     * @return S3 integration
     * 
     */
    public Output<Optional<AwsIntegrationsS3>> s3() {
        return Codegen.optional(this.s3);
    }
    /**
     * Ses integration
     * 
     */
    @Export(name="ses", type=AwsIntegrationsSes.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsSes> ses;

    /**
     * @return Ses integration
     * 
     */
    public Output<Optional<AwsIntegrationsSes>> ses() {
        return Codegen.optional(this.ses);
    }
    /**
     * Sns integration
     * 
     */
    @Export(name="sns", type=AwsIntegrationsSns.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsSns> sns;

    /**
     * @return Sns integration
     * 
     */
    public Output<Optional<AwsIntegrationsSns>> sns() {
        return Codegen.optional(this.sns);
    }
    /**
     * SQS integration
     * 
     */
    @Export(name="sqs", type=AwsIntegrationsSqs.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsSqs> sqs;

    /**
     * @return SQS integration
     * 
     */
    public Output<Optional<AwsIntegrationsSqs>> sqs() {
        return Codegen.optional(this.sqs);
    }
    /**
     * Trusted Advisor integration
     * 
     */
    @Export(name="trustedAdvisor", type=AwsIntegrationsTrustedAdvisor.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsTrustedAdvisor> trustedAdvisor;

    /**
     * @return Trusted Advisor integration
     * 
     */
    public Output<Optional<AwsIntegrationsTrustedAdvisor>> trustedAdvisor() {
        return Codegen.optional(this.trustedAdvisor);
    }
    /**
     * VPC integration
     * 
     */
    @Export(name="vpc", type=AwsIntegrationsVpc.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsVpc> vpc;

    /**
     * @return VPC integration
     * 
     */
    public Output<Optional<AwsIntegrationsVpc>> vpc() {
        return Codegen.optional(this.vpc);
    }
    /**
     * X-Ray integration
     * 
     */
    @Export(name="xRay", type=AwsIntegrationsXRay.class, parameters={})
    private Output</* @Nullable */ AwsIntegrationsXRay> xRay;

    /**
     * @return X-Ray integration
     * 
     */
    public Output<Optional<AwsIntegrationsXRay>> xRay() {
        return Codegen.optional(this.xRay);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AwsIntegrations(String name) {
        this(name, AwsIntegrationsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AwsIntegrations(String name, AwsIntegrationsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AwsIntegrations(String name, AwsIntegrationsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:cloud/awsIntegrations:AwsIntegrations", name, args == null ? AwsIntegrationsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AwsIntegrations(String name, Output<String> id, @Nullable AwsIntegrationsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:cloud/awsIntegrations:AwsIntegrations", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AwsIntegrations get(String name, Output<String> id, @Nullable AwsIntegrationsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AwsIntegrations(name, id, state, options);
    }
}
