// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.NotificationDestinationArgs;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.inputs.NotificationDestinationState;
import com.pulumi.newrelic.outputs.NotificationDestinationProperty;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use this resource to create and manage New Relic notification destinations.
 * 
 * ## Example Usage
 * 
 * ##### Webhook
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.NotificationDestination;
 * import com.pulumi.newrelic.NotificationDestinationArgs;
 * import com.pulumi.newrelic.inputs.NotificationDestinationPropertyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new NotificationDestination(&#34;foo&#34;, NotificationDestinationArgs.builder()        
 *             .auth(Map.ofEntries(
 *                 Map.entry(&#34;password&#34;, &#34;1234&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;BASIC&#34;),
 *                 Map.entry(&#34;user&#34;, &#34;user&#34;)
 *             ))
 *             .properties(NotificationDestinationPropertyArgs.builder()
 *                 .key(&#34;url&#34;)
 *                 .value(&#34;https://webhook.site/&#34;)
 *                 .build())
 *             .type(&#34;WEBHOOK&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * See additional examples.
 * ## Additional Examples
 * 
 * ##### ServiceNow
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.NotificationDestination;
 * import com.pulumi.newrelic.NotificationDestinationArgs;
 * import com.pulumi.newrelic.inputs.NotificationDestinationPropertyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new NotificationDestination(&#34;foo&#34;, NotificationDestinationArgs.builder()        
 *             .auth(Map.ofEntries(
 *                 Map.entry(&#34;password&#34;, &#34;pass&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;BASIC&#34;),
 *                 Map.entry(&#34;user&#34;, &#34;user&#34;)
 *             ))
 *             .properties(            
 *                 NotificationDestinationPropertyArgs.builder()
 *                     .key(&#34;url&#34;)
 *                     .value(&#34;https://service-now.com/&#34;)
 *                     .build(),
 *                 NotificationDestinationPropertyArgs.builder()
 *                     .key(&#34;two_way_integration&#34;)
 *                     .value(&#34;true&#34;)
 *                     .build())
 *             .type(&#34;SERVICE_NOW&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ##### Email
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.NotificationDestination;
 * import com.pulumi.newrelic.NotificationDestinationArgs;
 * import com.pulumi.newrelic.inputs.NotificationDestinationPropertyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new NotificationDestination(&#34;foo&#34;, NotificationDestinationArgs.builder()        
 *             .auth(Map.ofEntries(
 *                 Map.entry(&#34;prefix&#34;, &#34;prefix&#34;),
 *                 Map.entry(&#34;token&#34;, &#34;bearer&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;TOKEN&#34;)
 *             ))
 *             .properties(NotificationDestinationPropertyArgs.builder()
 *                 .key(&#34;email&#34;)
 *                 .value(&#34;email@email.com,email2@email.com&#34;)
 *                 .build())
 *             .type(&#34;EMAIL&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ##### PagerDuty with service integration
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.NotificationDestination;
 * import com.pulumi.newrelic.NotificationDestinationArgs;
 * import com.pulumi.newrelic.inputs.NotificationDestinationPropertyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new NotificationDestination(&#34;foo&#34;, NotificationDestinationArgs.builder()        
 *             .auth(Map.ofEntries(
 *                 Map.entry(&#34;prefix&#34;, &#34;prefix&#34;),
 *                 Map.entry(&#34;token&#34;, &#34;bearer&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;TOKEN&#34;)
 *             ))
 *             .properties(NotificationDestinationPropertyArgs.builder()
 *                 .key(&#34;two_way_integration&#34;)
 *                 .value(&#34;true&#34;)
 *                 .build())
 *             .type(&#34;PAGERDUTY_SERVICE_INTEGRATION&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ##### PagerDuty with account integration
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.NotificationDestination;
 * import com.pulumi.newrelic.NotificationDestinationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foo = new NotificationDestination(&#34;foo&#34;, NotificationDestinationArgs.builder()        
 *             .auth(Map.ofEntries(
 *                 Map.entry(&#34;prefix&#34;, &#34;prefix&#34;),
 *                 Map.entry(&#34;token&#34;, &#34;bearer&#34;),
 *                 Map.entry(&#34;type&#34;, &#34;TOKEN&#34;)
 *             ))
 *             .type(&#34;PAGERDUTY_ACCOUNT_INTEGRATION&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * &gt; **NOTE:** Sensitive data such as destination API keys, service keys, etc are not returned from the underlying API for security reasons and may not be set in state when importing.
 * 
 */
@ResourceType(type="newrelic:index/notificationDestination:NotificationDestination")
public class NotificationDestination extends com.pulumi.resources.CustomResource {
    /**
     * A nested block that describes a notification destination authentication. Only one auth block is permitted per notification destination definition.  See Nested auth blocks below for details.
     * 
     */
    @Export(name="auth", type=Map.class, parameters={String.class, String.class})
    private Output</* @Nullable */ Map<String,String>> auth;

    /**
     * @return A nested block that describes a notification destination authentication. Only one auth block is permitted per notification destination definition.  See Nested auth blocks below for details.
     * 
     */
    public Output<Optional<Map<String,String>>> auth() {
        return Codegen.optional(this.auth);
    }
    /**
     * The name of the destination.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The name of the destination.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * A nested block that describes a notification destination properties.  Only one properties block is permitted per notification destination definition.  See Nested properties blocks below for details.
     * 
     */
    @Export(name="properties", type=List.class, parameters={NotificationDestinationProperty.class})
    private Output</* @Nullable */ List<NotificationDestinationProperty>> properties;

    /**
     * @return A nested block that describes a notification destination properties.  Only one properties block is permitted per notification destination definition.  See Nested properties blocks below for details.
     * 
     */
    public Output<Optional<List<NotificationDestinationProperty>>> properties() {
        return Codegen.optional(this.properties);
    }
    /**
     * The type of the auth.  One of: `TOKEN` or `BASIC`.
     * 
     */
    @Export(name="type", type=String.class, parameters={})
    private Output<String> type;

    /**
     * @return The type of the auth.  One of: `TOKEN` or `BASIC`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NotificationDestination(String name) {
        this(name, NotificationDestinationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NotificationDestination(String name, NotificationDestinationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NotificationDestination(String name, NotificationDestinationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:index/notificationDestination:NotificationDestination", name, args == null ? NotificationDestinationArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NotificationDestination(String name, Output<String> id, @Nullable NotificationDestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:index/notificationDestination:NotificationDestination", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NotificationDestination get(String name, Output<String> id, @Nullable NotificationDestinationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NotificationDestination(name, id, state, options);
    }
}
