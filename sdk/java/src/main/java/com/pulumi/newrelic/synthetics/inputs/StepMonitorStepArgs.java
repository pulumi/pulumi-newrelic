// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class StepMonitorStepArgs extends com.pulumi.resources.ResourceArgs {

    public static final StepMonitorStepArgs Empty = new StepMonitorStepArgs();

    /**
     * The position of the step within the script ranging from 0-100.
     * 
     */
    @Import(name="ordinal", required=true)
    private Output<Integer> ordinal;

    /**
     * @return The position of the step within the script ranging from 0-100.
     * 
     */
    public Output<Integer> ordinal() {
        return this.ordinal;
    }

    /**
     * Name of the tag key. Valid values are ASSERT_ELEMENT, ASSERT_MODAL, ASSERT_TEXT, ASSERT_TITLE, CLICK_ELEMENT, DISMISS_MODAL, DOUBLE_CLICK_ELEMENT, HOVER_ELEMENT, NAVIGATE, SECURE_TEXT_ENTRY, SELECT_ELEMENT, TEXT_ENTRY.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Name of the tag key. Valid values are ASSERT_ELEMENT, ASSERT_MODAL, ASSERT_TEXT, ASSERT_TITLE, CLICK_ELEMENT, DISMISS_MODAL, DOUBLE_CLICK_ELEMENT, HOVER_ELEMENT, NAVIGATE, SECURE_TEXT_ENTRY, SELECT_ELEMENT, TEXT_ENTRY.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * The metadata values related to the step.
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<String>> values;

    /**
     * @return The metadata values related to the step.
     * 
     */
    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private StepMonitorStepArgs() {}

    private StepMonitorStepArgs(StepMonitorStepArgs $) {
        this.ordinal = $.ordinal;
        this.type = $.type;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StepMonitorStepArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StepMonitorStepArgs $;

        public Builder() {
            $ = new StepMonitorStepArgs();
        }

        public Builder(StepMonitorStepArgs defaults) {
            $ = new StepMonitorStepArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ordinal The position of the step within the script ranging from 0-100.
         * 
         * @return builder
         * 
         */
        public Builder ordinal(Output<Integer> ordinal) {
            $.ordinal = ordinal;
            return this;
        }

        /**
         * @param ordinal The position of the step within the script ranging from 0-100.
         * 
         * @return builder
         * 
         */
        public Builder ordinal(Integer ordinal) {
            return ordinal(Output.of(ordinal));
        }

        /**
         * @param type Name of the tag key. Valid values are ASSERT_ELEMENT, ASSERT_MODAL, ASSERT_TEXT, ASSERT_TITLE, CLICK_ELEMENT, DISMISS_MODAL, DOUBLE_CLICK_ELEMENT, HOVER_ELEMENT, NAVIGATE, SECURE_TEXT_ENTRY, SELECT_ELEMENT, TEXT_ENTRY.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Name of the tag key. Valid values are ASSERT_ELEMENT, ASSERT_MODAL, ASSERT_TEXT, ASSERT_TITLE, CLICK_ELEMENT, DISMISS_MODAL, DOUBLE_CLICK_ELEMENT, HOVER_ELEMENT, NAVIGATE, SECURE_TEXT_ENTRY, SELECT_ELEMENT, TEXT_ENTRY.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param values The metadata values related to the step.
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values The metadata values related to the step.
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        /**
         * @param values The metadata values related to the step.
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public StepMonitorStepArgs build() {
            if ($.ordinal == null) {
                throw new MissingRequiredPropertyException("StepMonitorStepArgs", "ordinal");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("StepMonitorStepArgs", "type");
            }
            return $;
        }
    }

}
