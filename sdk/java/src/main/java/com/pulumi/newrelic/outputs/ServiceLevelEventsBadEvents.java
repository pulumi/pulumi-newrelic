// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.newrelic.outputs.ServiceLevelEventsBadEventsSelect;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServiceLevelEventsBadEvents {
    private String from;
    private @Nullable ServiceLevelEventsBadEventsSelect select;
    private @Nullable String where;

    private ServiceLevelEventsBadEvents() {}
    public String from() {
        return this.from;
    }
    public Optional<ServiceLevelEventsBadEventsSelect> select() {
        return Optional.ofNullable(this.select);
    }
    public Optional<String> where() {
        return Optional.ofNullable(this.where);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServiceLevelEventsBadEvents defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String from;
        private @Nullable ServiceLevelEventsBadEventsSelect select;
        private @Nullable String where;
        public Builder() {}
        public Builder(ServiceLevelEventsBadEvents defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.from = defaults.from;
    	      this.select = defaults.select;
    	      this.where = defaults.where;
        }

        @CustomType.Setter
        public Builder from(String from) {
            if (from == null) {
              throw new MissingRequiredPropertyException("ServiceLevelEventsBadEvents", "from");
            }
            this.from = from;
            return this;
        }
        @CustomType.Setter
        public Builder select(@Nullable ServiceLevelEventsBadEventsSelect select) {

            this.select = select;
            return this;
        }
        @CustomType.Setter
        public Builder where(@Nullable String where) {

            this.where = where;
            return this;
        }
        public ServiceLevelEventsBadEvents build() {
            final var _resultValue = new ServiceLevelEventsBadEvents();
            _resultValue.from = from;
            _resultValue.select = select;
            _resultValue.where = where;
            return _resultValue;
        }
    }
}
