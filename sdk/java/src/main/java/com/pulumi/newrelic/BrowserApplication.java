// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.BrowserApplicationArgs;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.inputs.BrowserApplicationState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Import
 * 
 * A browser application can be imported using its GUID, i.e.
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import newrelic:index/browserApplication:BrowserApplication foo &lt;GUID&gt;
 * ```
 * 
 */
@ResourceType(type="newrelic:index/browserApplication:BrowserApplication")
public class BrowserApplication extends com.pulumi.resources.CustomResource {
    /**
     * The account ID of the New Relic account you wish to create the browser application in. Defaults to the value of the environment variable `NEW_RELIC_ACCOUNT_ID` if not specified.
     * 
     */
    @Export(name="accountId", refs={String.class}, tree="[0]")
    private Output<String> accountId;

    /**
     * @return The account ID of the New Relic account you wish to create the browser application in. Defaults to the value of the environment variable `NEW_RELIC_ACCOUNT_ID` if not specified.
     * 
     */
    public Output<String> accountId() {
        return this.accountId;
    }
    /**
     * The application ID of the browser application (not to be confused with GUID).
     * 
     */
    @Export(name="applicationId", refs={String.class}, tree="[0]")
    private Output<String> applicationId;

    /**
     * @return The application ID of the browser application (not to be confused with GUID).
     * 
     */
    public Output<String> applicationId() {
        return this.applicationId;
    }
    /**
     * Configures cookies. Defaults to `true`, if not specified.
     * 
     */
    @Export(name="cookiesEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> cookiesEnabled;

    /**
     * @return Configures cookies. Defaults to `true`, if not specified.
     * 
     */
    public Output<Optional<Boolean>> cookiesEnabled() {
        return Codegen.optional(this.cookiesEnabled);
    }
    /**
     * Configures distributed tracing in browser apps. Defaults to `true`, if not specified.
     * 
     */
    @Export(name="distributedTracingEnabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> distributedTracingEnabled;

    /**
     * @return Configures distributed tracing in browser apps. Defaults to `true`, if not specified.
     * 
     */
    public Output<Optional<Boolean>> distributedTracingEnabled() {
        return Codegen.optional(this.distributedTracingEnabled);
    }
    /**
     * The GUID of the browser application.
     * 
     */
    @Export(name="guid", refs={String.class}, tree="[0]")
    private Output<String> guid;

    /**
     * @return The GUID of the browser application.
     * 
     */
    public Output<String> guid() {
        return this.guid;
    }
    /**
     * The JavaScript configuration of the browser application, encoded into a string.
     * 
     */
    @Export(name="jsConfig", refs={String.class}, tree="[0]")
    private Output<String> jsConfig;

    /**
     * @return The JavaScript configuration of the browser application, encoded into a string.
     * 
     */
    public Output<String> jsConfig() {
        return this.jsConfig;
    }
    /**
     * Determines the browser loader configured. Valid values are `SPA`, `PRO`, and `LITE`. The default is `SPA`. Refer to the [browser agent loader documentation](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#agent-types) for more information on valid loader types.
     * 
     */
    @Export(name="loaderType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> loaderType;

    /**
     * @return Determines the browser loader configured. Valid values are `SPA`, `PRO`, and `LITE`. The default is `SPA`. Refer to the [browser agent loader documentation](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#agent-types) for more information on valid loader types.
     * 
     */
    public Output<Optional<String>> loaderType() {
        return Codegen.optional(this.loaderType);
    }
    /**
     * The name of the browser application.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the browser application.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BrowserApplication(java.lang.String name) {
        this(name, BrowserApplicationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BrowserApplication(java.lang.String name, @Nullable BrowserApplicationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BrowserApplication(java.lang.String name, @Nullable BrowserApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:index/browserApplication:BrowserApplication", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BrowserApplication(java.lang.String name, Output<java.lang.String> id, @Nullable BrowserApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:index/browserApplication:BrowserApplication", name, state, makeResourceOptions(options, id), false);
    }

    private static BrowserApplicationArgs makeArgs(@Nullable BrowserApplicationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BrowserApplicationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BrowserApplication get(java.lang.String name, Output<java.lang.String> id, @Nullable BrowserApplicationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BrowserApplication(name, id, state, options);
    }
}
