// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.plugins;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.plugins.AlertConditionArgs;
import com.pulumi.newrelic.plugins.inputs.AlertConditionState;
import com.pulumi.newrelic.plugins.outputs.AlertConditionTerm;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * New Relic Plugins reached end of life Wednesday June 16, 2021.
 * 
 * **This resource has been removed.**
 * 
 * For more information, [click here](https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267)
 * 
 */
@ResourceType(type="newrelic:plugins/alertCondition:AlertCondition")
public class AlertCondition extends com.pulumi.resources.CustomResource {
    /**
     * Whether or not this condition is enabled.
     * 
     */
    @Export(name="enabled", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return Whether or not this condition is enabled.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The plugin component IDs to target.
     * 
     */
    @Export(name="entities", type=List.class, parameters={Integer.class})
    private Output<List<Integer>> entities;

    /**
     * @return The plugin component IDs to target.
     * 
     */
    public Output<List<Integer>> entities() {
        return this.entities;
    }
    /**
     * The plugin metric to evaluate.
     * 
     */
    @Export(name="metric", type=String.class, parameters={})
    private Output<String> metric;

    /**
     * @return The plugin metric to evaluate.
     * 
     */
    public Output<String> metric() {
        return this.metric;
    }
    /**
     * The metric description.
     * 
     */
    @Export(name="metricDescription", type=String.class, parameters={})
    private Output<String> metricDescription;

    /**
     * @return The metric description.
     * 
     */
    public Output<String> metricDescription() {
        return this.metricDescription;
    }
    /**
     * The title of the condition. Must be between 1 and 64 characters, inclusive.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return The title of the condition. Must be between 1 and 64 characters, inclusive.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The GUID of the plugin which produces the metric.
     * 
     */
    @Export(name="pluginGuid", type=String.class, parameters={})
    private Output<String> pluginGuid;

    /**
     * @return The GUID of the plugin which produces the metric.
     * 
     */
    public Output<String> pluginGuid() {
        return this.pluginGuid;
    }
    /**
     * The ID of the installed plugin instance which produces the metric.
     * 
     */
    @Export(name="pluginId", type=String.class, parameters={})
    private Output<String> pluginId;

    /**
     * @return The ID of the installed plugin instance which produces the metric.
     * 
     */
    public Output<String> pluginId() {
        return this.pluginId;
    }
    /**
     * The ID of the policy where this condition should be used.
     * 
     */
    @Export(name="policyId", type=Integer.class, parameters={})
    private Output<Integer> policyId;

    /**
     * @return The ID of the policy where this condition should be used.
     * 
     */
    public Output<Integer> policyId() {
        return this.policyId;
    }
    /**
     * Runbook URL to display in notifications.
     * 
     */
    @Export(name="runbookUrl", type=String.class, parameters={})
    private Output</* @Nullable */ String> runbookUrl;

    /**
     * @return Runbook URL to display in notifications.
     * 
     */
    public Output<Optional<String>> runbookUrl() {
        return Codegen.optional(this.runbookUrl);
    }
    @Export(name="terms", type=List.class, parameters={AlertConditionTerm.class})
    private Output<List<AlertConditionTerm>> terms;

    public Output<List<AlertConditionTerm>> terms() {
        return this.terms;
    }
    /**
     * The value function to apply to the metric data. One of `min`, `max`, `average`, `sample_size`, `total`, or `percent`.
     * 
     */
    @Export(name="valueFunction", type=String.class, parameters={})
    private Output<String> valueFunction;

    /**
     * @return The value function to apply to the metric data. One of `min`, `max`, `average`, `sample_size`, `total`, or `percent`.
     * 
     */
    public Output<String> valueFunction() {
        return this.valueFunction;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AlertCondition(String name) {
        this(name, AlertConditionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AlertCondition(String name, AlertConditionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AlertCondition(String name, AlertConditionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:plugins/alertCondition:AlertCondition", name, args == null ? AlertConditionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AlertCondition(String name, Output<String> id, @Nullable AlertConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:plugins/alertCondition:AlertCondition", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AlertCondition get(String name, Output<String> id, @Nullable AlertConditionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AlertCondition(name, id, state, options);
    }
}
