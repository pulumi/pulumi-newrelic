// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WorkflowDestinationArgs extends com.pulumi.resources.ResourceArgs {

    public static final WorkflowDestinationArgs Empty = new WorkflowDestinationArgs();

    /**
     * Id of a notification_channel to use for notifications. Please note that you have to use a
     * **notification** channel, not an `alert_channel`.
     * 
     */
    @Import(name="channelId", required=true)
    private Output<String> channelId;

    /**
     * @return Id of a notification_channel to use for notifications. Please note that you have to use a
     * **notification** channel, not an `alert_channel`.
     * 
     */
    public Output<String> channelId() {
        return this.channelId;
    }

    /**
     * The name of the workflow.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the workflow.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
     * 
     */
    @Import(name="notificationTriggers")
    private @Nullable Output<List<String>> notificationTriggers;

    /**
     * @return Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
     * 
     */
    public Optional<Output<List<String>>> notificationTriggers() {
        return Optional.ofNullable(this.notificationTriggers);
    }

    /**
     * Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private WorkflowDestinationArgs() {}

    private WorkflowDestinationArgs(WorkflowDestinationArgs $) {
        this.channelId = $.channelId;
        this.name = $.name;
        this.notificationTriggers = $.notificationTriggers;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WorkflowDestinationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WorkflowDestinationArgs $;

        public Builder() {
            $ = new WorkflowDestinationArgs();
        }

        public Builder(WorkflowDestinationArgs defaults) {
            $ = new WorkflowDestinationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channelId Id of a notification_channel to use for notifications. Please note that you have to use a
         * **notification** channel, not an `alert_channel`.
         * 
         * @return builder
         * 
         */
        public Builder channelId(Output<String> channelId) {
            $.channelId = channelId;
            return this;
        }

        /**
         * @param channelId Id of a notification_channel to use for notifications. Please note that you have to use a
         * **notification** channel, not an `alert_channel`.
         * 
         * @return builder
         * 
         */
        public Builder channelId(String channelId) {
            return channelId(Output.of(channelId));
        }

        /**
         * @param name The name of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the workflow.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notificationTriggers Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
         * 
         * @return builder
         * 
         */
        public Builder notificationTriggers(@Nullable Output<List<String>> notificationTriggers) {
            $.notificationTriggers = notificationTriggers;
            return this;
        }

        /**
         * @param notificationTriggers Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
         * 
         * @return builder
         * 
         */
        public Builder notificationTriggers(List<String> notificationTriggers) {
            return notificationTriggers(Output.of(notificationTriggers));
        }

        /**
         * @param notificationTriggers Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
         * 
         * @return builder
         * 
         */
        public Builder notificationTriggers(String... notificationTriggers) {
            return notificationTriggers(List.of(notificationTriggers));
        }

        /**
         * @param type Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public WorkflowDestinationArgs build() {
            if ($.channelId == null) {
                throw new MissingRequiredPropertyException("WorkflowDestinationArgs", "channelId");
            }
            return $;
        }
    }

}
