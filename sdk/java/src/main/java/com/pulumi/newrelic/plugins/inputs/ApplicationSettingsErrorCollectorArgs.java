// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.plugins.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ApplicationSettingsErrorCollectorArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationSettingsErrorCollectorArgs Empty = new ApplicationSettingsErrorCollectorArgs();

    /**
     * A list of expected error classes.
     * 
     */
    @Import(name="expectedErrorClasses")
    private @Nullable Output<List<String>> expectedErrorClasses;

    /**
     * @return A list of expected error classes.
     * 
     */
    public Optional<Output<List<String>>> expectedErrorClasses() {
        return Optional.ofNullable(this.expectedErrorClasses);
    }

    /**
     * A list of expected error codes(any status code between 100-900).
     * 
     */
    @Import(name="expectedErrorCodes")
    private @Nullable Output<List<String>> expectedErrorCodes;

    /**
     * @return A list of expected error codes(any status code between 100-900).
     * 
     */
    public Optional<Output<List<String>>> expectedErrorCodes() {
        return Optional.ofNullable(this.expectedErrorCodes);
    }

    /**
     * A list of ignored error classes.
     * 
     */
    @Import(name="ignoredErrorClasses")
    private @Nullable Output<List<String>> ignoredErrorClasses;

    /**
     * @return A list of ignored error classes.
     * 
     */
    public Optional<Output<List<String>>> ignoredErrorClasses() {
        return Optional.ofNullable(this.ignoredErrorClasses);
    }

    /**
     * A list of ignored error codes(any status code between 100-900).
     * 
     */
    @Import(name="ignoredErrorCodes")
    private @Nullable Output<List<String>> ignoredErrorCodes;

    /**
     * @return A list of ignored error codes(any status code between 100-900).
     * 
     */
    public Optional<Output<List<String>>> ignoredErrorCodes() {
        return Optional.ofNullable(this.ignoredErrorCodes);
    }

    private ApplicationSettingsErrorCollectorArgs() {}

    private ApplicationSettingsErrorCollectorArgs(ApplicationSettingsErrorCollectorArgs $) {
        this.expectedErrorClasses = $.expectedErrorClasses;
        this.expectedErrorCodes = $.expectedErrorCodes;
        this.ignoredErrorClasses = $.ignoredErrorClasses;
        this.ignoredErrorCodes = $.ignoredErrorCodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationSettingsErrorCollectorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationSettingsErrorCollectorArgs $;

        public Builder() {
            $ = new ApplicationSettingsErrorCollectorArgs();
        }

        public Builder(ApplicationSettingsErrorCollectorArgs defaults) {
            $ = new ApplicationSettingsErrorCollectorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param expectedErrorClasses A list of expected error classes.
         * 
         * @return builder
         * 
         */
        public Builder expectedErrorClasses(@Nullable Output<List<String>> expectedErrorClasses) {
            $.expectedErrorClasses = expectedErrorClasses;
            return this;
        }

        /**
         * @param expectedErrorClasses A list of expected error classes.
         * 
         * @return builder
         * 
         */
        public Builder expectedErrorClasses(List<String> expectedErrorClasses) {
            return expectedErrorClasses(Output.of(expectedErrorClasses));
        }

        /**
         * @param expectedErrorClasses A list of expected error classes.
         * 
         * @return builder
         * 
         */
        public Builder expectedErrorClasses(String... expectedErrorClasses) {
            return expectedErrorClasses(List.of(expectedErrorClasses));
        }

        /**
         * @param expectedErrorCodes A list of expected error codes(any status code between 100-900).
         * 
         * @return builder
         * 
         */
        public Builder expectedErrorCodes(@Nullable Output<List<String>> expectedErrorCodes) {
            $.expectedErrorCodes = expectedErrorCodes;
            return this;
        }

        /**
         * @param expectedErrorCodes A list of expected error codes(any status code between 100-900).
         * 
         * @return builder
         * 
         */
        public Builder expectedErrorCodes(List<String> expectedErrorCodes) {
            return expectedErrorCodes(Output.of(expectedErrorCodes));
        }

        /**
         * @param expectedErrorCodes A list of expected error codes(any status code between 100-900).
         * 
         * @return builder
         * 
         */
        public Builder expectedErrorCodes(String... expectedErrorCodes) {
            return expectedErrorCodes(List.of(expectedErrorCodes));
        }

        /**
         * @param ignoredErrorClasses A list of ignored error classes.
         * 
         * @return builder
         * 
         */
        public Builder ignoredErrorClasses(@Nullable Output<List<String>> ignoredErrorClasses) {
            $.ignoredErrorClasses = ignoredErrorClasses;
            return this;
        }

        /**
         * @param ignoredErrorClasses A list of ignored error classes.
         * 
         * @return builder
         * 
         */
        public Builder ignoredErrorClasses(List<String> ignoredErrorClasses) {
            return ignoredErrorClasses(Output.of(ignoredErrorClasses));
        }

        /**
         * @param ignoredErrorClasses A list of ignored error classes.
         * 
         * @return builder
         * 
         */
        public Builder ignoredErrorClasses(String... ignoredErrorClasses) {
            return ignoredErrorClasses(List.of(ignoredErrorClasses));
        }

        /**
         * @param ignoredErrorCodes A list of ignored error codes(any status code between 100-900).
         * 
         * @return builder
         * 
         */
        public Builder ignoredErrorCodes(@Nullable Output<List<String>> ignoredErrorCodes) {
            $.ignoredErrorCodes = ignoredErrorCodes;
            return this;
        }

        /**
         * @param ignoredErrorCodes A list of ignored error codes(any status code between 100-900).
         * 
         * @return builder
         * 
         */
        public Builder ignoredErrorCodes(List<String> ignoredErrorCodes) {
            return ignoredErrorCodes(Output.of(ignoredErrorCodes));
        }

        /**
         * @param ignoredErrorCodes A list of ignored error codes(any status code between 100-900).
         * 
         * @return builder
         * 
         */
        public Builder ignoredErrorCodes(String... ignoredErrorCodes) {
            return ignoredErrorCodes(List.of(ignoredErrorCodes));
        }

        public ApplicationSettingsErrorCollectorArgs build() {
            return $;
        }
    }

}
