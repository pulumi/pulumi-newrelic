// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAlertPolicyPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAlertPolicyPlainArgs Empty = new GetAlertPolicyPlainArgs();

    @Import(name="accountId")
    private @Nullable Integer accountId;

    public Optional<Integer> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.
     * 
     */
    @Import(name="incidentPreference")
    private @Nullable String incidentPreference;

    /**
     * @return The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.
     * 
     */
    public Optional<String> incidentPreference() {
        return Optional.ofNullable(this.incidentPreference);
    }

    /**
     * The name of the alert policy in New Relic.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the alert policy in New Relic.
     * 
     */
    public String name() {
        return this.name;
    }

    private GetAlertPolicyPlainArgs() {}

    private GetAlertPolicyPlainArgs(GetAlertPolicyPlainArgs $) {
        this.accountId = $.accountId;
        this.incidentPreference = $.incidentPreference;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAlertPolicyPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAlertPolicyPlainArgs $;

        public Builder() {
            $ = new GetAlertPolicyPlainArgs();
        }

        public Builder(GetAlertPolicyPlainArgs defaults) {
            $ = new GetAlertPolicyPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Integer accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param incidentPreference The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.
         * 
         * @return builder
         * 
         */
        public Builder incidentPreference(@Nullable String incidentPreference) {
            $.incidentPreference = incidentPreference;
            return this;
        }

        /**
         * @param name The name of the alert policy in New Relic.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public GetAlertPolicyPlainArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
