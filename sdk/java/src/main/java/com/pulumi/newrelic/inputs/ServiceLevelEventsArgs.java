// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.newrelic.inputs.ServiceLevelEventsBadEventsArgs;
import com.pulumi.newrelic.inputs.ServiceLevelEventsGoodEventsArgs;
import com.pulumi.newrelic.inputs.ServiceLevelEventsValidEventsArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLevelEventsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLevelEventsArgs Empty = new ServiceLevelEventsArgs();

    @Import(name="accountId", required=true)
    private Output<String> accountId;

    public Output<String> accountId() {
        return this.accountId;
    }

    @Import(name="badEvents")
    private @Nullable Output<ServiceLevelEventsBadEventsArgs> badEvents;

    public Optional<Output<ServiceLevelEventsBadEventsArgs>> badEvents() {
        return Optional.ofNullable(this.badEvents);
    }

    @Import(name="goodEvents")
    private @Nullable Output<ServiceLevelEventsGoodEventsArgs> goodEvents;

    public Optional<Output<ServiceLevelEventsGoodEventsArgs>> goodEvents() {
        return Optional.ofNullable(this.goodEvents);
    }

    @Import(name="validEvents", required=true)
    private Output<ServiceLevelEventsValidEventsArgs> validEvents;

    public Output<ServiceLevelEventsValidEventsArgs> validEvents() {
        return this.validEvents;
    }

    private ServiceLevelEventsArgs() {}

    private ServiceLevelEventsArgs(ServiceLevelEventsArgs $) {
        this.accountId = $.accountId;
        this.badEvents = $.badEvents;
        this.goodEvents = $.goodEvents;
        this.validEvents = $.validEvents;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLevelEventsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLevelEventsArgs $;

        public Builder() {
            $ = new ServiceLevelEventsArgs();
        }

        public Builder(ServiceLevelEventsArgs defaults) {
            $ = new ServiceLevelEventsArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder badEvents(@Nullable Output<ServiceLevelEventsBadEventsArgs> badEvents) {
            $.badEvents = badEvents;
            return this;
        }

        public Builder badEvents(ServiceLevelEventsBadEventsArgs badEvents) {
            return badEvents(Output.of(badEvents));
        }

        public Builder goodEvents(@Nullable Output<ServiceLevelEventsGoodEventsArgs> goodEvents) {
            $.goodEvents = goodEvents;
            return this;
        }

        public Builder goodEvents(ServiceLevelEventsGoodEventsArgs goodEvents) {
            return goodEvents(Output.of(goodEvents));
        }

        public Builder validEvents(Output<ServiceLevelEventsValidEventsArgs> validEvents) {
            $.validEvents = validEvents;
            return this;
        }

        public Builder validEvents(ServiceLevelEventsValidEventsArgs validEvents) {
            return validEvents(Output.of(validEvents));
        }

        public ServiceLevelEventsArgs build() {
            if ($.accountId == null) {
                throw new MissingRequiredPropertyException("ServiceLevelEventsArgs", "accountId");
            }
            if ($.validEvents == null) {
                throw new MissingRequiredPropertyException("ServiceLevelEventsArgs", "validEvents");
            }
            return $;
        }
    }

}
