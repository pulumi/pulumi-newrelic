// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationChannelPropertyArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationChannelPropertyArgs Empty = new NotificationChannelPropertyArgs();

    /**
     * Notification property display key.
     * 
     */
    @Import(name="displayValue")
    private @Nullable Output<String> displayValue;

    /**
     * @return Notification property display key.
     * 
     */
    public Optional<Output<String>> displayValue() {
        return Optional.ofNullable(this.displayValue);
    }

    /**
     * Notification property key.
     * 
     */
    @Import(name="key", required=true)
    private Output<String> key;

    /**
     * @return Notification property key.
     * 
     */
    public Output<String> key() {
        return this.key;
    }

    /**
     * Notification property label.
     * 
     */
    @Import(name="label")
    private @Nullable Output<String> label;

    /**
     * @return Notification property label.
     * 
     */
    public Optional<Output<String>> label() {
        return Optional.ofNullable(this.label);
    }

    /**
     * Notification property value.
     * 
     */
    @Import(name="value", required=true)
    private Output<String> value;

    /**
     * @return Notification property value.
     * 
     */
    public Output<String> value() {
        return this.value;
    }

    private NotificationChannelPropertyArgs() {}

    private NotificationChannelPropertyArgs(NotificationChannelPropertyArgs $) {
        this.displayValue = $.displayValue;
        this.key = $.key;
        this.label = $.label;
        this.value = $.value;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationChannelPropertyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationChannelPropertyArgs $;

        public Builder() {
            $ = new NotificationChannelPropertyArgs();
        }

        public Builder(NotificationChannelPropertyArgs defaults) {
            $ = new NotificationChannelPropertyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param displayValue Notification property display key.
         * 
         * @return builder
         * 
         */
        public Builder displayValue(@Nullable Output<String> displayValue) {
            $.displayValue = displayValue;
            return this;
        }

        /**
         * @param displayValue Notification property display key.
         * 
         * @return builder
         * 
         */
        public Builder displayValue(String displayValue) {
            return displayValue(Output.of(displayValue));
        }

        /**
         * @param key Notification property key.
         * 
         * @return builder
         * 
         */
        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key Notification property key.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param label Notification property label.
         * 
         * @return builder
         * 
         */
        public Builder label(@Nullable Output<String> label) {
            $.label = label;
            return this;
        }

        /**
         * @param label Notification property label.
         * 
         * @return builder
         * 
         */
        public Builder label(String label) {
            return label(Output.of(label));
        }

        /**
         * @param value Notification property value.
         * 
         * @return builder
         * 
         */
        public Builder value(Output<String> value) {
            $.value = value;
            return this;
        }

        /**
         * @param value Notification property value.
         * 
         * @return builder
         * 
         */
        public Builder value(String value) {
            return value(Output.of(value));
        }

        public NotificationChannelPropertyArgs build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("NotificationChannelPropertyArgs", "key");
            }
            if ($.value == null) {
                throw new MissingRequiredPropertyException("NotificationChannelPropertyArgs", "value");
            }
            return $;
        }
    }

}
