// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.newrelic.outputs.GetEntityTag;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetEntityResult {
    /**
     * @return The New Relic account ID associated with this entity.
     * 
     */
    private Integer accountId;
    /**
     * @return The domain-specific application ID of the entity. Only returned for APM and Browser applications.
     * 
     */
    private Integer applicationId;
    private String domain;
    /**
     * @return The unique GUID of the entity.
     * 
     */
    private String guid;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable Boolean ignoreCase;
    private String name;
    private Integer servingApmApplicationId;
    private @Nullable GetEntityTag tag;
    private String type;

    private GetEntityResult() {}
    /**
     * @return The New Relic account ID associated with this entity.
     * 
     */
    public Integer accountId() {
        return this.accountId;
    }
    /**
     * @return The domain-specific application ID of the entity. Only returned for APM and Browser applications.
     * 
     */
    public Integer applicationId() {
        return this.applicationId;
    }
    public String domain() {
        return this.domain;
    }
    /**
     * @return The unique GUID of the entity.
     * 
     */
    public String guid() {
        return this.guid;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<Boolean> ignoreCase() {
        return Optional.ofNullable(this.ignoreCase);
    }
    public String name() {
        return this.name;
    }
    public Integer servingApmApplicationId() {
        return this.servingApmApplicationId;
    }
    public Optional<GetEntityTag> tag() {
        return Optional.ofNullable(this.tag);
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetEntityResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer accountId;
        private Integer applicationId;
        private String domain;
        private String guid;
        private String id;
        private @Nullable Boolean ignoreCase;
        private String name;
        private Integer servingApmApplicationId;
        private @Nullable GetEntityTag tag;
        private String type;
        public Builder() {}
        public Builder(GetEntityResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.applicationId = defaults.applicationId;
    	      this.domain = defaults.domain;
    	      this.guid = defaults.guid;
    	      this.id = defaults.id;
    	      this.ignoreCase = defaults.ignoreCase;
    	      this.name = defaults.name;
    	      this.servingApmApplicationId = defaults.servingApmApplicationId;
    	      this.tag = defaults.tag;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accountId(Integer accountId) {
            this.accountId = Objects.requireNonNull(accountId);
            return this;
        }
        @CustomType.Setter
        public Builder applicationId(Integer applicationId) {
            this.applicationId = Objects.requireNonNull(applicationId);
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            this.domain = Objects.requireNonNull(domain);
            return this;
        }
        @CustomType.Setter
        public Builder guid(String guid) {
            this.guid = Objects.requireNonNull(guid);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ignoreCase(@Nullable Boolean ignoreCase) {
            this.ignoreCase = ignoreCase;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder servingApmApplicationId(Integer servingApmApplicationId) {
            this.servingApmApplicationId = Objects.requireNonNull(servingApmApplicationId);
            return this;
        }
        @CustomType.Setter
        public Builder tag(@Nullable GetEntityTag tag) {
            this.tag = tag;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetEntityResult build() {
            final var o = new GetEntityResult();
            o.accountId = accountId;
            o.applicationId = applicationId;
            o.domain = domain;
            o.guid = guid;
            o.id = id;
            o.ignoreCase = ignoreCase;
            o.name = name;
            o.servingApmApplicationId = servingApmApplicationId;
            o.tag = tag;
            o.type = type;
            return o;
        }
    }
}
