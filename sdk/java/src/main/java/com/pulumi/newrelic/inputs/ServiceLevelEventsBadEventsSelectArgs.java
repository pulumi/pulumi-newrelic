// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceLevelEventsBadEventsSelectArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceLevelEventsBadEventsSelectArgs Empty = new ServiceLevelEventsBadEventsSelectArgs();

    @Import(name="attribute")
    private @Nullable Output<String> attribute;

    public Optional<Output<String>> attribute() {
        return Optional.ofNullable(this.attribute);
    }

    @Import(name="function", required=true)
    private Output<String> function;

    public Output<String> function() {
        return this.function;
    }

    /**
     * The event threshold to use in the SELECT clause
     * 
     */
    @Import(name="threshold")
    private @Nullable Output<Double> threshold;

    /**
     * @return The event threshold to use in the SELECT clause
     * 
     */
    public Optional<Output<Double>> threshold() {
        return Optional.ofNullable(this.threshold);
    }

    private ServiceLevelEventsBadEventsSelectArgs() {}

    private ServiceLevelEventsBadEventsSelectArgs(ServiceLevelEventsBadEventsSelectArgs $) {
        this.attribute = $.attribute;
        this.function = $.function;
        this.threshold = $.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceLevelEventsBadEventsSelectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceLevelEventsBadEventsSelectArgs $;

        public Builder() {
            $ = new ServiceLevelEventsBadEventsSelectArgs();
        }

        public Builder(ServiceLevelEventsBadEventsSelectArgs defaults) {
            $ = new ServiceLevelEventsBadEventsSelectArgs(Objects.requireNonNull(defaults));
        }

        public Builder attribute(@Nullable Output<String> attribute) {
            $.attribute = attribute;
            return this;
        }

        public Builder attribute(String attribute) {
            return attribute(Output.of(attribute));
        }

        public Builder function(Output<String> function) {
            $.function = function;
            return this;
        }

        public Builder function(String function) {
            return function(Output.of(function));
        }

        /**
         * @param threshold The event threshold to use in the SELECT clause
         * 
         * @return builder
         * 
         */
        public Builder threshold(@Nullable Output<Double> threshold) {
            $.threshold = threshold;
            return this;
        }

        /**
         * @param threshold The event threshold to use in the SELECT clause
         * 
         * @return builder
         * 
         */
        public Builder threshold(Double threshold) {
            return threshold(Output.of(threshold));
        }

        public ServiceLevelEventsBadEventsSelectArgs build() {
            if ($.function == null) {
                throw new MissingRequiredPropertyException("ServiceLevelEventsBadEventsSelectArgs", "function");
            }
            return $;
        }
    }

}
