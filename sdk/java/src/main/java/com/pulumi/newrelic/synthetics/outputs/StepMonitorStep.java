// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class StepMonitorStep {
    /**
     * @return The position of the step within the script ranging from 0-100.
     * 
     */
    private Integer ordinal;
    /**
     * @return Name of the tag key. Valid values are `ASSERT_ELEMENT`, `ASSERT_MODAL`, `ASSERT_TEXT`, `ASSERT_TITLE`, `CLICK_ELEMENT`, `DISMISS_MODAL`, `DOUBLE_CLICK_ELEMENT`, `HOVER_ELEMENT`, `NAVIGATE`, `SECURE_TEXT_ENTRY`, `SELECT_ELEMENT`, `TEXT_ENTRY`.
     * 
     */
    private String type;
    /**
     * @return The metadata values related to the step.
     * 
     */
    private @Nullable List<String> values;

    private StepMonitorStep() {}
    /**
     * @return The position of the step within the script ranging from 0-100.
     * 
     */
    public Integer ordinal() {
        return this.ordinal;
    }
    /**
     * @return Name of the tag key. Valid values are `ASSERT_ELEMENT`, `ASSERT_MODAL`, `ASSERT_TEXT`, `ASSERT_TITLE`, `CLICK_ELEMENT`, `DISMISS_MODAL`, `DOUBLE_CLICK_ELEMENT`, `HOVER_ELEMENT`, `NAVIGATE`, `SECURE_TEXT_ENTRY`, `SELECT_ELEMENT`, `TEXT_ENTRY`.
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return The metadata values related to the step.
     * 
     */
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StepMonitorStep defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer ordinal;
        private String type;
        private @Nullable List<String> values;
        public Builder() {}
        public Builder(StepMonitorStep defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ordinal = defaults.ordinal;
    	      this.type = defaults.type;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder ordinal(Integer ordinal) {
            if (ordinal == null) {
              throw new MissingRequiredPropertyException("StepMonitorStep", "ordinal");
            }
            this.ordinal = ordinal;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("StepMonitorStep", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<String> values) {

            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public StepMonitorStep build() {
            final var _resultValue = new StepMonitorStep();
            _resultValue.ordinal = ordinal;
            _resultValue.type = type;
            _resultValue.values = values;
            return _resultValue;
        }
    }
}
