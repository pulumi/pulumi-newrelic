// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.cloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AzureIntegrationsMonitorArgs extends com.pulumi.resources.ResourceArgs {

    public static final AzureIntegrationsMonitorArgs Empty = new AzureIntegrationsMonitorArgs();

    /**
     * A flag that specifies if the integration is active
     * 
     */
    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    /**
     * @return A flag that specifies if the integration is active
     * 
     */
    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Specify resource tags in &#39;key:value&#39; form to be excluded from monitoring
     * 
     */
    @Import(name="excludeTags")
    private @Nullable Output<List<String>> excludeTags;

    /**
     * @return Specify resource tags in &#39;key:value&#39; form to be excluded from monitoring
     * 
     */
    public Optional<Output<List<String>>> excludeTags() {
        return Optional.ofNullable(this.excludeTags);
    }

    /**
     * Specify resource tags in &#39;key:value&#39; form to be monitored
     * 
     */
    @Import(name="includeTags")
    private @Nullable Output<List<String>> includeTags;

    /**
     * @return Specify resource tags in &#39;key:value&#39; form to be monitored
     * 
     */
    public Optional<Output<List<String>>> includeTags() {
        return Optional.ofNullable(this.includeTags);
    }

    /**
     * The data polling interval in seconds
     * 
     */
    @Import(name="metricsPollingInterval")
    private @Nullable Output<Integer> metricsPollingInterval;

    /**
     * @return The data polling interval in seconds
     * 
     */
    public Optional<Output<Integer>> metricsPollingInterval() {
        return Optional.ofNullable(this.metricsPollingInterval);
    }

    /**
     * Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     * 
     */
    @Import(name="resourceGroups")
    private @Nullable Output<List<String>> resourceGroups;

    /**
     * @return Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
     * 
     */
    public Optional<Output<List<String>>> resourceGroups() {
        return Optional.ofNullable(this.resourceGroups);
    }

    /**
     * Specify each Azure resource type that needs to be monitored
     * 
     */
    @Import(name="resourceTypes")
    private @Nullable Output<List<String>> resourceTypes;

    /**
     * @return Specify each Azure resource type that needs to be monitored
     * 
     */
    public Optional<Output<List<String>>> resourceTypes() {
        return Optional.ofNullable(this.resourceTypes);
    }

    private AzureIntegrationsMonitorArgs() {}

    private AzureIntegrationsMonitorArgs(AzureIntegrationsMonitorArgs $) {
        this.enabled = $.enabled;
        this.excludeTags = $.excludeTags;
        this.includeTags = $.includeTags;
        this.metricsPollingInterval = $.metricsPollingInterval;
        this.resourceGroups = $.resourceGroups;
        this.resourceTypes = $.resourceTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AzureIntegrationsMonitorArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AzureIntegrationsMonitorArgs $;

        public Builder() {
            $ = new AzureIntegrationsMonitorArgs();
        }

        public Builder(AzureIntegrationsMonitorArgs defaults) {
            $ = new AzureIntegrationsMonitorArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param enabled A flag that specifies if the integration is active
         * 
         * @return builder
         * 
         */
        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param enabled A flag that specifies if the integration is active
         * 
         * @return builder
         * 
         */
        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param excludeTags Specify resource tags in &#39;key:value&#39; form to be excluded from monitoring
         * 
         * @return builder
         * 
         */
        public Builder excludeTags(@Nullable Output<List<String>> excludeTags) {
            $.excludeTags = excludeTags;
            return this;
        }

        /**
         * @param excludeTags Specify resource tags in &#39;key:value&#39; form to be excluded from monitoring
         * 
         * @return builder
         * 
         */
        public Builder excludeTags(List<String> excludeTags) {
            return excludeTags(Output.of(excludeTags));
        }

        /**
         * @param excludeTags Specify resource tags in &#39;key:value&#39; form to be excluded from monitoring
         * 
         * @return builder
         * 
         */
        public Builder excludeTags(String... excludeTags) {
            return excludeTags(List.of(excludeTags));
        }

        /**
         * @param includeTags Specify resource tags in &#39;key:value&#39; form to be monitored
         * 
         * @return builder
         * 
         */
        public Builder includeTags(@Nullable Output<List<String>> includeTags) {
            $.includeTags = includeTags;
            return this;
        }

        /**
         * @param includeTags Specify resource tags in &#39;key:value&#39; form to be monitored
         * 
         * @return builder
         * 
         */
        public Builder includeTags(List<String> includeTags) {
            return includeTags(Output.of(includeTags));
        }

        /**
         * @param includeTags Specify resource tags in &#39;key:value&#39; form to be monitored
         * 
         * @return builder
         * 
         */
        public Builder includeTags(String... includeTags) {
            return includeTags(List.of(includeTags));
        }

        /**
         * @param metricsPollingInterval The data polling interval in seconds
         * 
         * @return builder
         * 
         */
        public Builder metricsPollingInterval(@Nullable Output<Integer> metricsPollingInterval) {
            $.metricsPollingInterval = metricsPollingInterval;
            return this;
        }

        /**
         * @param metricsPollingInterval The data polling interval in seconds
         * 
         * @return builder
         * 
         */
        public Builder metricsPollingInterval(Integer metricsPollingInterval) {
            return metricsPollingInterval(Output.of(metricsPollingInterval));
        }

        /**
         * @param resourceGroups Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(@Nullable Output<List<String>> resourceGroups) {
            $.resourceGroups = resourceGroups;
            return this;
        }

        /**
         * @param resourceGroups Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(List<String> resourceGroups) {
            return resourceGroups(Output.of(resourceGroups));
        }

        /**
         * @param resourceGroups Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive
         * 
         * @return builder
         * 
         */
        public Builder resourceGroups(String... resourceGroups) {
            return resourceGroups(List.of(resourceGroups));
        }

        /**
         * @param resourceTypes Specify each Azure resource type that needs to be monitored
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(@Nullable Output<List<String>> resourceTypes) {
            $.resourceTypes = resourceTypes;
            return this;
        }

        /**
         * @param resourceTypes Specify each Azure resource type that needs to be monitored
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(List<String> resourceTypes) {
            return resourceTypes(Output.of(resourceTypes));
        }

        /**
         * @param resourceTypes Specify each Azure resource type that needs to be monitored
         * 
         * @return builder
         * 
         */
        public Builder resourceTypes(String... resourceTypes) {
            return resourceTypes(List.of(resourceTypes));
        }

        public AzureIntegrationsMonitorArgs build() {
            return $;
        }
    }

}
