// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class NotificationDestinationAuthTokenArgs extends com.pulumi.resources.ResourceArgs {

    public static final NotificationDestinationAuthTokenArgs Empty = new NotificationDestinationAuthTokenArgs();

    /**
     * The prefix of the token auth.
     * 
     */
    @Import(name="prefix")
    private @Nullable Output<String> prefix;

    /**
     * @return The prefix of the token auth.
     * 
     */
    public Optional<Output<String>> prefix() {
        return Optional.ofNullable(this.prefix);
    }

    @Import(name="token", required=true)
    private Output<String> token;

    public Output<String> token() {
        return this.token;
    }

    private NotificationDestinationAuthTokenArgs() {}

    private NotificationDestinationAuthTokenArgs(NotificationDestinationAuthTokenArgs $) {
        this.prefix = $.prefix;
        this.token = $.token;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NotificationDestinationAuthTokenArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NotificationDestinationAuthTokenArgs $;

        public Builder() {
            $ = new NotificationDestinationAuthTokenArgs();
        }

        public Builder(NotificationDestinationAuthTokenArgs defaults) {
            $ = new NotificationDestinationAuthTokenArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param prefix The prefix of the token auth.
         * 
         * @return builder
         * 
         */
        public Builder prefix(@Nullable Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix The prefix of the token auth.
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        public Builder token(Output<String> token) {
            $.token = token;
            return this;
        }

        public Builder token(String token) {
            return token(Output.of(token));
        }

        public NotificationDestinationAuthTokenArgs build() {
            $.token = Objects.requireNonNull($.token, "expected parameter 'token' to be non-null");
            return $;
        }
    }

}
