// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DashboardFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final DashboardFilterArgs Empty = new DashboardFilterArgs();

    @Import(name="attributes")
    private @Nullable Output<List<String>> attributes;

    public Optional<Output<List<String>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    @Import(name="eventTypes", required=true)
    private Output<List<String>> eventTypes;

    public Output<List<String>> eventTypes() {
        return this.eventTypes;
    }

    private DashboardFilterArgs() {}

    private DashboardFilterArgs(DashboardFilterArgs $) {
        this.attributes = $.attributes;
        this.eventTypes = $.eventTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DashboardFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DashboardFilterArgs $;

        public Builder() {
            $ = new DashboardFilterArgs();
        }

        public Builder(DashboardFilterArgs defaults) {
            $ = new DashboardFilterArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributes(@Nullable Output<List<String>> attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder attributes(List<String> attributes) {
            return attributes(Output.of(attributes));
        }

        public Builder attributes(String... attributes) {
            return attributes(List.of(attributes));
        }

        public Builder eventTypes(Output<List<String>> eventTypes) {
            $.eventTypes = eventTypes;
            return this;
        }

        public Builder eventTypes(List<String> eventTypes) {
            return eventTypes(Output.of(eventTypes));
        }

        public Builder eventTypes(String... eventTypes) {
            return eventTypes(List.of(eventTypes));
        }

        public DashboardFilterArgs build() {
            $.eventTypes = Objects.requireNonNull($.eventTypes, "expected parameter 'eventTypes' to be non-null");
            return $;
        }
    }

}
