// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.insights.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.newrelic.insights.outputs.EventEventAttribute;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class EventEvent {
    private List<EventEventAttribute> attributes;
    private @Nullable Integer timestamp;
    private String type;

    private EventEvent() {}
    public List<EventEventAttribute> attributes() {
        return this.attributes;
    }
    public Optional<Integer> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(EventEvent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<EventEventAttribute> attributes;
        private @Nullable Integer timestamp;
        private String type;
        public Builder() {}
        public Builder(EventEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.timestamp = defaults.timestamp;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder attributes(List<EventEventAttribute> attributes) {
            this.attributes = Objects.requireNonNull(attributes);
            return this;
        }
        public Builder attributes(EventEventAttribute... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder timestamp(@Nullable Integer timestamp) {
            this.timestamp = timestamp;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public EventEvent build() {
            final var o = new EventEvent();
            o.attributes = attributes;
            o.timestamp = timestamp;
            o.type = type;
            return o;
        }
    }
}
