// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;


public final class MultiLocationAlertConditionCriticalArgs extends com.pulumi.resources.ResourceArgs {

    public static final MultiLocationAlertConditionCriticalArgs Empty = new MultiLocationAlertConditionCriticalArgs();

    @Import(name="threshold", required=true)
    private Output<Integer> threshold;

    public Output<Integer> threshold() {
        return this.threshold;
    }

    private MultiLocationAlertConditionCriticalArgs() {}

    private MultiLocationAlertConditionCriticalArgs(MultiLocationAlertConditionCriticalArgs $) {
        this.threshold = $.threshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MultiLocationAlertConditionCriticalArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MultiLocationAlertConditionCriticalArgs $;

        public Builder() {
            $ = new MultiLocationAlertConditionCriticalArgs();
        }

        public Builder(MultiLocationAlertConditionCriticalArgs defaults) {
            $ = new MultiLocationAlertConditionCriticalArgs(Objects.requireNonNull(defaults));
        }

        public Builder threshold(Output<Integer> threshold) {
            $.threshold = threshold;
            return this;
        }

        public Builder threshold(Integer threshold) {
            return threshold(Output.of(threshold));
        }

        public MultiLocationAlertConditionCriticalArgs build() {
            $.threshold = Objects.requireNonNull($.threshold, "expected parameter 'threshold' to be non-null");
            return $;
        }
    }

}
