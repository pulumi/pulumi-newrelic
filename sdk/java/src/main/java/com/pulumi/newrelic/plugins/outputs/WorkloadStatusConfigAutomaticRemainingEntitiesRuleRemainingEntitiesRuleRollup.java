// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.plugins.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup {
    /**
     * @return The grouping to be applied to the remaining entities.
     * 
     */
    private String groupBy;
    /**
     * @return The rollup strategy that is applied to a group of entities.
     * 
     */
    private String strategy;
    /**
     * @return Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.
     * 
     */
    private @Nullable String thresholdType;
    /**
     * @return Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.
     * 
     */
    private @Nullable Integer thresholdValue;

    private WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup() {}
    /**
     * @return The grouping to be applied to the remaining entities.
     * 
     */
    public String groupBy() {
        return this.groupBy;
    }
    /**
     * @return The rollup strategy that is applied to a group of entities.
     * 
     */
    public String strategy() {
        return this.strategy;
    }
    /**
     * @return Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.
     * 
     */
    public Optional<String> thresholdType() {
        return Optional.ofNullable(this.thresholdType);
    }
    /**
     * @return Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.
     * 
     */
    public Optional<Integer> thresholdValue() {
        return Optional.ofNullable(this.thresholdValue);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String groupBy;
        private String strategy;
        private @Nullable String thresholdType;
        private @Nullable Integer thresholdValue;
        public Builder() {}
        public Builder(WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.groupBy = defaults.groupBy;
    	      this.strategy = defaults.strategy;
    	      this.thresholdType = defaults.thresholdType;
    	      this.thresholdValue = defaults.thresholdValue;
        }

        @CustomType.Setter
        public Builder groupBy(String groupBy) {
            if (groupBy == null) {
              throw new MissingRequiredPropertyException("WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup", "groupBy");
            }
            this.groupBy = groupBy;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(String strategy) {
            if (strategy == null) {
              throw new MissingRequiredPropertyException("WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup", "strategy");
            }
            this.strategy = strategy;
            return this;
        }
        @CustomType.Setter
        public Builder thresholdType(@Nullable String thresholdType) {

            this.thresholdType = thresholdType;
            return this;
        }
        @CustomType.Setter
        public Builder thresholdValue(@Nullable Integer thresholdValue) {

            this.thresholdValue = thresholdValue;
            return this;
        }
        public WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup build() {
            final var _resultValue = new WorkloadStatusConfigAutomaticRemainingEntitiesRuleRemainingEntitiesRuleRollup();
            _resultValue.groupBy = groupBy;
            _resultValue.strategy = strategy;
            _resultValue.thresholdType = thresholdType;
            _resultValue.thresholdValue = thresholdValue;
            return _resultValue;
        }
    }
}
