// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.EntityTagsArgs;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.inputs.EntityTagsState;
import com.pulumi.newrelic.outputs.EntityTagsTag;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Use this resource to create, update, and delete tags for a New Relic One entity.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.NewrelicFunctions;
 * import com.pulumi.newrelic.inputs.GetEntityArgs;
 * import com.pulumi.newrelic.EntityTags;
 * import com.pulumi.newrelic.EntityTagsArgs;
 * import com.pulumi.newrelic.inputs.EntityTagsTagArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var fooEntity = NewrelicFunctions.getEntity(GetEntityArgs.builder()
 *             .name(&#34;Example application&#34;)
 *             .type(&#34;APPLICATION&#34;)
 *             .domain(&#34;APM&#34;)
 *             .build());
 * 
 *         var fooEntityTags = new EntityTags(&#34;fooEntityTags&#34;, EntityTagsArgs.builder()        
 *             .guid(fooEntity.applyValue(getEntityResult -&gt; getEntityResult.guid()))
 *             .tags(            
 *                 EntityTagsTagArgs.builder()
 *                     .key(&#34;my-key&#34;)
 *                     .values(                    
 *                         &#34;my-value&#34;,
 *                         &#34;my-other-value&#34;)
 *                     .build(),
 *                 EntityTagsTagArgs.builder()
 *                     .key(&#34;my-key-2&#34;)
 *                     .values(&#34;my-value-2&#34;)
 *                     .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * New Relic One entity tags can be imported using a concatenated string of the format
 * 
 * `&lt;guid&gt;`, e.g. bash
 * 
 * ```sh
 *  $ pulumi import newrelic:index/entityTags:EntityTags foo MjUyMDUyOHxBUE18QVBRTElDQVRJT058MjE1MDM3Nzk1
 * ```
 * 
 */
@ResourceType(type="newrelic:index/entityTags:EntityTags")
public class EntityTags extends com.pulumi.resources.CustomResource {
    /**
     * The guid of the entity to tag.
     * 
     */
    @Export(name="guid", type=String.class, parameters={})
    private Output<String> guid;

    /**
     * @return The guid of the entity to tag.
     * 
     */
    public Output<String> guid() {
        return this.guid;
    }
    /**
     * A nested block that describes an entity tag. See Nested tag blocks below for details.
     * 
     */
    @Export(name="tags", type=List.class, parameters={EntityTagsTag.class})
    private Output<List<EntityTagsTag>> tags;

    /**
     * @return A nested block that describes an entity tag. See Nested tag blocks below for details.
     * 
     */
    public Output<List<EntityTagsTag>> tags() {
        return this.tags;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public EntityTags(String name) {
        this(name, EntityTagsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public EntityTags(String name, EntityTagsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public EntityTags(String name, EntityTagsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:index/entityTags:EntityTags", name, args == null ? EntityTagsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private EntityTags(String name, Output<String> id, @Nullable EntityTagsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:index/entityTags:EntityTags", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static EntityTags get(String name, Output<String> id, @Nullable EntityTagsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new EntityTags(name, id, state, options);
    }
}
