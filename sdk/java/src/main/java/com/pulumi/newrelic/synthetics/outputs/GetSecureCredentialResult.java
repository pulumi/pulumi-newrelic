// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSecureCredentialResult {
    private String accountId;
    /**
     * @return The secure credential&#39;s description.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String key;
    /**
     * @return The time the secure credential was last updated.
     * 
     */
    private String lastUpdated;

    private GetSecureCredentialResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return The secure credential&#39;s description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String key() {
        return this.key;
    }
    /**
     * @return The time the secure credential was last updated.
     * 
     */
    public String lastUpdated() {
        return this.lastUpdated;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecureCredentialResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String description;
        private String id;
        private String key;
        private String lastUpdated;
        public Builder() {}
        public Builder(GetSecureCredentialResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.key = defaults.key;
    	      this.lastUpdated = defaults.lastUpdated;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetSecureCredentialResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSecureCredentialResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSecureCredentialResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder key(String key) {
            if (key == null) {
              throw new MissingRequiredPropertyException("GetSecureCredentialResult", "key");
            }
            this.key = key;
            return this;
        }
        @CustomType.Setter
        public Builder lastUpdated(String lastUpdated) {
            if (lastUpdated == null) {
              throw new MissingRequiredPropertyException("GetSecureCredentialResult", "lastUpdated");
            }
            this.lastUpdated = lastUpdated;
            return this;
        }
        public GetSecureCredentialResult build() {
            final var _resultValue = new GetSecureCredentialResult();
            _resultValue.accountId = accountId;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.key = key;
            _resultValue.lastUpdated = lastUpdated;
            return _resultValue;
        }
    }
}
