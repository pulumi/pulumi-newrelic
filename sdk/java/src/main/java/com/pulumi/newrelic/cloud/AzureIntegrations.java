// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.cloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.cloud.AzureIntegrationsArgs;
import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsState;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsApiManagement;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsAppGateway;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsAppService;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsContainers;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsCosmosDb;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsCostManagement;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsDataFactory;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsEventHub;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsExpressRoute;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsFirewalls;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsFrontDoor;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsFunctions;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsKeyVault;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsLoadBalancer;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsLogicApps;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsMachineLearning;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsMariaDb;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsMonitor;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsMysql;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsMysqlFlexible;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsPostgresql;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsPostgresqlFlexible;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsPowerBiDedicated;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsRedisCache;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsServiceBus;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsSql;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsSqlManaged;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsStorage;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsVirtualMachine;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsVirtualNetworks;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsVms;
import com.pulumi.newrelic.cloud.outputs.AzureIntegrationsVpnGateway;
import java.lang.Integer;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Use this resource to integrate Azure services with New Relic.
 * 
 * ## Prerequisite
 * 
 * To start receiving Azure data with New Relic Azure integrations, connect your Azure account to New Relic infrastructure monitoring. If you don&#39;t have one already, create a New Relic account. It&#39;s free, forever.
 * 
 * Setup is required for this resource to work properly. This resource assumes you have linked an Azure account to New Relic.
 * 
 * You can find instructions on how to set up Azure on [our documentation](https://docs.newrelic.com/docs/infrastructure/microsoft-azure-integrations/get-started/activate-azure-integrations/).
 * 
 * ## Example Usage
 * 
 * Leave an integration block empty to use its default configuration. You can also use the full example, including the Azure set up, found in our guides.
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.newrelic.cloud.AzureLinkAccount;
 * import com.pulumi.newrelic.cloud.AzureLinkAccountArgs;
 * import com.pulumi.newrelic.cloud.AzureIntegrations;
 * import com.pulumi.newrelic.cloud.AzureIntegrationsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsApiManagementArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsAppGatewayArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsAppServiceArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsContainersArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsCosmosDbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsCostManagementArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsDataFactoryArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsEventHubArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsExpressRouteArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsFirewallsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsFrontDoorArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsFunctionsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsKeyVaultArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsLoadBalancerArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsLogicAppsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsMachineLearningArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsMariaDbArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsMonitorArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsMysqlArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsMysqlFlexibleArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsPostgresqlArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsPostgresqlFlexibleArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsPowerBiDedicatedArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsRedisCacheArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsServiceBusArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsSqlArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsSqlManagedArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsStorageArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsVirtualMachineArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsVirtualNetworksArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsVmsArgs;
 * import com.pulumi.newrelic.cloud.inputs.AzureIntegrationsVpnGatewayArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var fooAzureLinkAccount = new AzureLinkAccount(&#34;fooAzureLinkAccount&#34;, AzureLinkAccountArgs.builder()        
 *             .accountId(&#34;The New Relic account ID where you want to link the Azure account&#34;)
 *             .applicationId(&#34;ID of the application&#34;)
 *             .clientSecret(&#34;Secret value of client&#39;s Azure account&#34;)
 *             .subscriptionId(&#34;Subscription ID of Azure&#34;)
 *             .tenantId(&#34;Tenant ID of the Azure&#34;)
 *             .build());
 * 
 *         var fooAzureIntegrations = new AzureIntegrations(&#34;fooAzureIntegrations&#34;, AzureIntegrationsArgs.builder()        
 *             .linkedAccountId(fooAzureLinkAccount.id())
 *             .accountId(&#34;The New Relic account ID&#34;)
 *             .apiManagement(AzureIntegrationsApiManagementArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .appGateway(AzureIntegrationsAppGatewayArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .appService(AzureIntegrationsAppServiceArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .containers(AzureIntegrationsContainersArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .cosmosDb(AzureIntegrationsCosmosDbArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .costManagement(AzureIntegrationsCostManagementArgs.builder()
 *                 .metricsPollingInterval(3600)
 *                 .tagKeys(&#34;tag_keys&#34;)
 *                 .build())
 *             .dataFactory(AzureIntegrationsDataFactoryArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .eventHub(AzureIntegrationsEventHubArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .expressRoute(AzureIntegrationsExpressRouteArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .firewalls(AzureIntegrationsFirewallsArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .frontDoor(AzureIntegrationsFrontDoorArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .functions(AzureIntegrationsFunctionsArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .keyVault(AzureIntegrationsKeyVaultArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .loadBalancer(AzureIntegrationsLoadBalancerArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .logicApps(AzureIntegrationsLogicAppsArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .machineLearning(AzureIntegrationsMachineLearningArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .mariaDb(AzureIntegrationsMariaDbArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .monitor(AzureIntegrationsMonitorArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .includeTags(&#34;env:production&#34;)
 *                 .excludeTags(                
 *                     &#34;env:staging&#34;,
 *                     &#34;env:testing&#34;)
 *                 .enabled(true)
 *                 .resourceTypes(&#34;microsoft.datashare/accounts&#34;)
 *                 .build())
 *             .mysql(AzureIntegrationsMysqlArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .mysqlFlexible(AzureIntegrationsMysqlFlexibleArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .postgresql(AzureIntegrationsPostgresqlArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .postgresqlFlexible(AzureIntegrationsPostgresqlFlexibleArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .powerBiDedicated(AzureIntegrationsPowerBiDedicatedArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .redisCache(AzureIntegrationsRedisCacheArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .serviceBus(AzureIntegrationsServiceBusArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .sql(AzureIntegrationsSqlArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .sqlManaged(AzureIntegrationsSqlManagedArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .storage(AzureIntegrationsStorageArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .virtualMachine(AzureIntegrationsVirtualMachineArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .virtualNetworks(AzureIntegrationsVirtualNetworksArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .vms(AzureIntegrationsVmsArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .vpnGateway(AzureIntegrationsVpnGatewayArgs.builder()
 *                 .metricsPollingInterval(1200)
 *                 .resourceGroups(&#34;resource_groups&#34;)
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * Linked Azure accounts can be imported using `id`, you can find the `id` of existing Azure linked accounts in Azure dashboard under Infrastructure in NewRelic. bash
 * 
 * ```sh
 *  $ pulumi import newrelic:cloud/azureIntegrations:AzureIntegrations foo &lt;id&gt;
 * ```
 * 
 */
@ResourceType(type="newrelic:cloud/azureIntegrations:AzureIntegrations")
public class AzureIntegrations extends com.pulumi.resources.CustomResource {
    /**
     * The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     * 
     */
    @Export(name="accountId", refs={Integer.class}, tree="[0]")
    private Output<Integer> accountId;

    /**
     * @return The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     * 
     */
    public Output<Integer> accountId() {
        return this.accountId;
    }
    /**
     * Azure API Management. See Integration blocks below for details.
     * 
     */
    @Export(name="apiManagement", refs={AzureIntegrationsApiManagement.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsApiManagement> apiManagement;

    /**
     * @return Azure API Management. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsApiManagement>> apiManagement() {
        return Codegen.optional(this.apiManagement);
    }
    /**
     * Azure App Gateway. See Integration blocks below for details.
     * 
     */
    @Export(name="appGateway", refs={AzureIntegrationsAppGateway.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsAppGateway> appGateway;

    /**
     * @return Azure App Gateway. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsAppGateway>> appGateway() {
        return Codegen.optional(this.appGateway);
    }
    /**
     * Azure App Service. See Integration blocks below for details.
     * 
     */
    @Export(name="appService", refs={AzureIntegrationsAppService.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsAppService> appService;

    /**
     * @return Azure App Service. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsAppService>> appService() {
        return Codegen.optional(this.appService);
    }
    /**
     * Azure Containers. See Integration blocks below for details.
     * 
     */
    @Export(name="containers", refs={AzureIntegrationsContainers.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsContainers> containers;

    /**
     * @return Azure Containers. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsContainers>> containers() {
        return Codegen.optional(this.containers);
    }
    /**
     * Azure CosmosDB. See Integration blocks below for details.
     * 
     */
    @Export(name="cosmosDb", refs={AzureIntegrationsCosmosDb.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsCosmosDb> cosmosDb;

    /**
     * @return Azure CosmosDB. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsCosmosDb>> cosmosDb() {
        return Codegen.optional(this.cosmosDb);
    }
    /**
     * Azure Cost Management. See Integration blocks below for details.
     * 
     */
    @Export(name="costManagement", refs={AzureIntegrationsCostManagement.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsCostManagement> costManagement;

    /**
     * @return Azure Cost Management. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsCostManagement>> costManagement() {
        return Codegen.optional(this.costManagement);
    }
    /**
     * Azure Data Factory. See Integration blocks below for details.
     * 
     */
    @Export(name="dataFactory", refs={AzureIntegrationsDataFactory.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsDataFactory> dataFactory;

    /**
     * @return Azure Data Factory. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsDataFactory>> dataFactory() {
        return Codegen.optional(this.dataFactory);
    }
    /**
     * Azure Event Hub. See Integration blocks below for details.
     * 
     */
    @Export(name="eventHub", refs={AzureIntegrationsEventHub.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsEventHub> eventHub;

    /**
     * @return Azure Event Hub. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsEventHub>> eventHub() {
        return Codegen.optional(this.eventHub);
    }
    /**
     * Azure Express Route. See Integration blocks below for details.
     * 
     */
    @Export(name="expressRoute", refs={AzureIntegrationsExpressRoute.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsExpressRoute> expressRoute;

    /**
     * @return Azure Express Route. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsExpressRoute>> expressRoute() {
        return Codegen.optional(this.expressRoute);
    }
    /**
     * Azure Firewalls. See Integration blocks below for details.
     * 
     */
    @Export(name="firewalls", refs={AzureIntegrationsFirewalls.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsFirewalls> firewalls;

    /**
     * @return Azure Firewalls. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsFirewalls>> firewalls() {
        return Codegen.optional(this.firewalls);
    }
    /**
     * Azure Front Door. See Integration blocks below for details.
     * 
     */
    @Export(name="frontDoor", refs={AzureIntegrationsFrontDoor.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsFrontDoor> frontDoor;

    /**
     * @return Azure Front Door. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsFrontDoor>> frontDoor() {
        return Codegen.optional(this.frontDoor);
    }
    /**
     * Azure Functions. See Integration blocks below for details.
     * 
     */
    @Export(name="functions", refs={AzureIntegrationsFunctions.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsFunctions> functions;

    /**
     * @return Azure Functions. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsFunctions>> functions() {
        return Codegen.optional(this.functions);
    }
    /**
     * Azure Key Vault. See Integration blocks below for details.
     * 
     */
    @Export(name="keyVault", refs={AzureIntegrationsKeyVault.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsKeyVault> keyVault;

    /**
     * @return Azure Key Vault. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsKeyVault>> keyVault() {
        return Codegen.optional(this.keyVault);
    }
    /**
     * The ID of the linked Azure account in New Relic.
     * 
     */
    @Export(name="linkedAccountId", refs={Integer.class}, tree="[0]")
    private Output<Integer> linkedAccountId;

    /**
     * @return The ID of the linked Azure account in New Relic.
     * 
     */
    public Output<Integer> linkedAccountId() {
        return this.linkedAccountId;
    }
    /**
     * Azure Load Balancer. See Integration blocks below for details.
     * 
     */
    @Export(name="loadBalancer", refs={AzureIntegrationsLoadBalancer.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsLoadBalancer> loadBalancer;

    /**
     * @return Azure Load Balancer. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsLoadBalancer>> loadBalancer() {
        return Codegen.optional(this.loadBalancer);
    }
    /**
     * Azure Logic Apps. See Integration blocks below for details.
     * 
     */
    @Export(name="logicApps", refs={AzureIntegrationsLogicApps.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsLogicApps> logicApps;

    /**
     * @return Azure Logic Apps. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsLogicApps>> logicApps() {
        return Codegen.optional(this.logicApps);
    }
    /**
     * Azure Machine Learning. See Integration blocks below for details.
     * 
     */
    @Export(name="machineLearning", refs={AzureIntegrationsMachineLearning.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsMachineLearning> machineLearning;

    /**
     * @return Azure Machine Learning. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsMachineLearning>> machineLearning() {
        return Codegen.optional(this.machineLearning);
    }
    /**
     * Azure MariaDB. See Integration blocks below for details.
     * 
     */
    @Export(name="mariaDb", refs={AzureIntegrationsMariaDb.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsMariaDb> mariaDb;

    /**
     * @return Azure MariaDB. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsMariaDb>> mariaDb() {
        return Codegen.optional(this.mariaDb);
    }
    /**
     * Azure Monitor. See Integration blocks below for details.
     * 
     */
    @Export(name="monitor", refs={AzureIntegrationsMonitor.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsMonitor> monitor;

    /**
     * @return Azure Monitor. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsMonitor>> monitor() {
        return Codegen.optional(this.monitor);
    }
    /**
     * Azure MySQL. See Integration blocks below for details.
     * 
     */
    @Export(name="mysql", refs={AzureIntegrationsMysql.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsMysql> mysql;

    /**
     * @return Azure MySQL. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsMysql>> mysql() {
        return Codegen.optional(this.mysql);
    }
    /**
     * Azure MySQL Flexible Server. See Integration blocks below for details.
     * 
     */
    @Export(name="mysqlFlexible", refs={AzureIntegrationsMysqlFlexible.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsMysqlFlexible> mysqlFlexible;

    /**
     * @return Azure MySQL Flexible Server. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsMysqlFlexible>> mysqlFlexible() {
        return Codegen.optional(this.mysqlFlexible);
    }
    /**
     * Azure PostgreSQL. See Integration blocks below for details.
     * 
     */
    @Export(name="postgresql", refs={AzureIntegrationsPostgresql.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsPostgresql> postgresql;

    /**
     * @return Azure PostgreSQL. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsPostgresql>> postgresql() {
        return Codegen.optional(this.postgresql);
    }
    /**
     * Azure PostgreSQL Flexible Server. See Integration blocks below for details.
     * 
     */
    @Export(name="postgresqlFlexible", refs={AzureIntegrationsPostgresqlFlexible.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsPostgresqlFlexible> postgresqlFlexible;

    /**
     * @return Azure PostgreSQL Flexible Server. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsPostgresqlFlexible>> postgresqlFlexible() {
        return Codegen.optional(this.postgresqlFlexible);
    }
    /**
     * Azure Power BI Dedicated. See Integration blocks below for details.
     * 
     */
    @Export(name="powerBiDedicated", refs={AzureIntegrationsPowerBiDedicated.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsPowerBiDedicated> powerBiDedicated;

    /**
     * @return Azure Power BI Dedicated. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsPowerBiDedicated>> powerBiDedicated() {
        return Codegen.optional(this.powerBiDedicated);
    }
    /**
     * Azure Redis Cache. See Integration blocks below for details.
     * 
     */
    @Export(name="redisCache", refs={AzureIntegrationsRedisCache.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsRedisCache> redisCache;

    /**
     * @return Azure Redis Cache. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsRedisCache>> redisCache() {
        return Codegen.optional(this.redisCache);
    }
    /**
     * Azure Service Bus. See Integration blocks below for details.
     * 
     */
    @Export(name="serviceBus", refs={AzureIntegrationsServiceBus.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsServiceBus> serviceBus;

    /**
     * @return Azure Service Bus. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsServiceBus>> serviceBus() {
        return Codegen.optional(this.serviceBus);
    }
    /**
     * Azure SQL. See Integration blocks below for details.
     * 
     */
    @Export(name="sql", refs={AzureIntegrationsSql.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsSql> sql;

    /**
     * @return Azure SQL. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsSql>> sql() {
        return Codegen.optional(this.sql);
    }
    /**
     * Azure SQL Managed. See Integration blocks below for details.
     * 
     */
    @Export(name="sqlManaged", refs={AzureIntegrationsSqlManaged.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsSqlManaged> sqlManaged;

    /**
     * @return Azure SQL Managed. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsSqlManaged>> sqlManaged() {
        return Codegen.optional(this.sqlManaged);
    }
    /**
     * for Azure Storage. See Integration blocks below for details.
     * 
     */
    @Export(name="storage", refs={AzureIntegrationsStorage.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsStorage> storage;

    /**
     * @return for Azure Storage. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsStorage>> storage() {
        return Codegen.optional(this.storage);
    }
    /**
     * Azure Virtual machine. See Integration blocks below for details.
     * 
     */
    @Export(name="virtualMachine", refs={AzureIntegrationsVirtualMachine.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsVirtualMachine> virtualMachine;

    /**
     * @return Azure Virtual machine. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsVirtualMachine>> virtualMachine() {
        return Codegen.optional(this.virtualMachine);
    }
    /**
     * for Azure Virtual networks. See Integration blocks below for details.
     * 
     * Below argument supports the minimum metric polling interval of 3600 seconds
     * 
     */
    @Export(name="virtualNetworks", refs={AzureIntegrationsVirtualNetworks.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsVirtualNetworks> virtualNetworks;

    /**
     * @return for Azure Virtual networks. See Integration blocks below for details.
     * 
     * Below argument supports the minimum metric polling interval of 3600 seconds
     * 
     */
    public Output<Optional<AzureIntegrationsVirtualNetworks>> virtualNetworks() {
        return Codegen.optional(this.virtualNetworks);
    }
    /**
     * Azure VMs. See Integration blocks below for details.
     * 
     */
    @Export(name="vms", refs={AzureIntegrationsVms.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsVms> vms;

    /**
     * @return Azure VMs. See Integration blocks below for details.
     * 
     */
    public Output<Optional<AzureIntegrationsVms>> vms() {
        return Codegen.optional(this.vms);
    }
    /**
     * Azure VPN Gateway. See Integration blocks below for details.
     * 
     * Below arguments supports the minimum metric polling interval of 900 seconds
     * 
     */
    @Export(name="vpnGateway", refs={AzureIntegrationsVpnGateway.class}, tree="[0]")
    private Output</* @Nullable */ AzureIntegrationsVpnGateway> vpnGateway;

    /**
     * @return Azure VPN Gateway. See Integration blocks below for details.
     * 
     * Below arguments supports the minimum metric polling interval of 900 seconds
     * 
     */
    public Output<Optional<AzureIntegrationsVpnGateway>> vpnGateway() {
        return Codegen.optional(this.vpnGateway);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AzureIntegrations(String name) {
        this(name, AzureIntegrationsArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AzureIntegrations(String name, AzureIntegrationsArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AzureIntegrations(String name, AzureIntegrationsArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:cloud/azureIntegrations:AzureIntegrations", name, args == null ? AzureIntegrationsArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private AzureIntegrations(String name, Output<String> id, @Nullable AzureIntegrationsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("newrelic:cloud/azureIntegrations:AzureIntegrations", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AzureIntegrations get(String name, Output<String> id, @Nullable AzureIntegrationsState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AzureIntegrations(name, id, state, options);
    }
}
