// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceLevelAlertHelperResult {
    private String alertType;
    private @Nullable Integer customEvaluationPeriod;
    private @Nullable Double customToleratedBudgetConsumption;
    /**
     * @return (Computed) For non `custom` alert_type, this is the recommended for that type of alert. For `custom` alert_type it has the same value as `custom_evaluation_period`.
     * 
     */
    private Integer evaluationPeriod;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return (Computed) The nrql query for the selected type of alert.
     * 
     */
    private String nrql;
    private String sliGuid;
    private Integer sloPeriod;
    private Double sloTarget;
    /**
     * @return (Computed) The computed threshold given the provided arguments.
     * 
     */
    private Double threshold;
    /**
     * @return (Computed) For non `custom` alert_type, this is the recommended for that type of alert. For `custom` alert_type it has the same value as `custom_tolerated_budget_consumption`.
     * 
     */
    private Double toleratedBudgetConsumption;

    private GetServiceLevelAlertHelperResult() {}
    public String alertType() {
        return this.alertType;
    }
    public Optional<Integer> customEvaluationPeriod() {
        return Optional.ofNullable(this.customEvaluationPeriod);
    }
    public Optional<Double> customToleratedBudgetConsumption() {
        return Optional.ofNullable(this.customToleratedBudgetConsumption);
    }
    /**
     * @return (Computed) For non `custom` alert_type, this is the recommended for that type of alert. For `custom` alert_type it has the same value as `custom_evaluation_period`.
     * 
     */
    public Integer evaluationPeriod() {
        return this.evaluationPeriod;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return (Computed) The nrql query for the selected type of alert.
     * 
     */
    public String nrql() {
        return this.nrql;
    }
    public String sliGuid() {
        return this.sliGuid;
    }
    public Integer sloPeriod() {
        return this.sloPeriod;
    }
    public Double sloTarget() {
        return this.sloTarget;
    }
    /**
     * @return (Computed) The computed threshold given the provided arguments.
     * 
     */
    public Double threshold() {
        return this.threshold;
    }
    /**
     * @return (Computed) For non `custom` alert_type, this is the recommended for that type of alert. For `custom` alert_type it has the same value as `custom_tolerated_budget_consumption`.
     * 
     */
    public Double toleratedBudgetConsumption() {
        return this.toleratedBudgetConsumption;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceLevelAlertHelperResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String alertType;
        private @Nullable Integer customEvaluationPeriod;
        private @Nullable Double customToleratedBudgetConsumption;
        private Integer evaluationPeriod;
        private String id;
        private String nrql;
        private String sliGuid;
        private Integer sloPeriod;
        private Double sloTarget;
        private Double threshold;
        private Double toleratedBudgetConsumption;
        public Builder() {}
        public Builder(GetServiceLevelAlertHelperResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.alertType = defaults.alertType;
    	      this.customEvaluationPeriod = defaults.customEvaluationPeriod;
    	      this.customToleratedBudgetConsumption = defaults.customToleratedBudgetConsumption;
    	      this.evaluationPeriod = defaults.evaluationPeriod;
    	      this.id = defaults.id;
    	      this.nrql = defaults.nrql;
    	      this.sliGuid = defaults.sliGuid;
    	      this.sloPeriod = defaults.sloPeriod;
    	      this.sloTarget = defaults.sloTarget;
    	      this.threshold = defaults.threshold;
    	      this.toleratedBudgetConsumption = defaults.toleratedBudgetConsumption;
        }

        @CustomType.Setter
        public Builder alertType(String alertType) {
            this.alertType = Objects.requireNonNull(alertType);
            return this;
        }
        @CustomType.Setter
        public Builder customEvaluationPeriod(@Nullable Integer customEvaluationPeriod) {
            this.customEvaluationPeriod = customEvaluationPeriod;
            return this;
        }
        @CustomType.Setter
        public Builder customToleratedBudgetConsumption(@Nullable Double customToleratedBudgetConsumption) {
            this.customToleratedBudgetConsumption = customToleratedBudgetConsumption;
            return this;
        }
        @CustomType.Setter
        public Builder evaluationPeriod(Integer evaluationPeriod) {
            this.evaluationPeriod = Objects.requireNonNull(evaluationPeriod);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder nrql(String nrql) {
            this.nrql = Objects.requireNonNull(nrql);
            return this;
        }
        @CustomType.Setter
        public Builder sliGuid(String sliGuid) {
            this.sliGuid = Objects.requireNonNull(sliGuid);
            return this;
        }
        @CustomType.Setter
        public Builder sloPeriod(Integer sloPeriod) {
            this.sloPeriod = Objects.requireNonNull(sloPeriod);
            return this;
        }
        @CustomType.Setter
        public Builder sloTarget(Double sloTarget) {
            this.sloTarget = Objects.requireNonNull(sloTarget);
            return this;
        }
        @CustomType.Setter
        public Builder threshold(Double threshold) {
            this.threshold = Objects.requireNonNull(threshold);
            return this;
        }
        @CustomType.Setter
        public Builder toleratedBudgetConsumption(Double toleratedBudgetConsumption) {
            this.toleratedBudgetConsumption = Objects.requireNonNull(toleratedBudgetConsumption);
            return this;
        }
        public GetServiceLevelAlertHelperResult build() {
            final var o = new GetServiceLevelAlertHelperResult();
            o.alertType = alertType;
            o.customEvaluationPeriod = customEvaluationPeriod;
            o.customToleratedBudgetConsumption = customToleratedBudgetConsumption;
            o.evaluationPeriod = evaluationPeriod;
            o.id = id;
            o.nrql = nrql;
            o.sliGuid = sliGuid;
            o.sloPeriod = sloPeriod;
            o.sloTarget = sloTarget;
            o.threshold = threshold;
            o.toleratedBudgetConsumption = toleratedBudgetConsumption;
            return o;
        }
    }
}
