// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class MonitorDowntimeFrequencyDaysOfWeek {
    /**
     * @return The occurrence of `week_day` in a month (one of `&#34;FIRST&#34;`, `&#34;SECOND&#34;`, `&#34;THIRD&#34;`, `&#34;FOURTH&#34;`, `&#34;LAST&#34;`).
     * 
     * &gt; **NOTE:** `frequency` **can only be used with the mode** `MONTHLY`, and **is a required argument** with monthly monitor downtimes (if the `mode` is `MONTHLY`). Additionally, **either** `days_of_month` or `days_of_week` **are required to be specified with** `frequency`, but not both, as `days_of_month` and `days_of_week` are mutually exclusive. If `days_of_week` is specified, values of **both** of its nested arguments, `week_day` and `ordinal_day_of_month` **would need to be specified** too.
     * 
     */
    private String ordinalDayOfMonth;
    /**
     * @return A day of the week (one of `&#34;SUNDAY&#34;`, `&#34;MONDAY&#34;`, `&#34;TUESDAY&#34;`, `&#34;WEDNESDAY&#34;`, `&#34;THURSDAY&#34;`, `&#34;FRIDAY&#34;` or `&#34;SATURDAY&#34;`).
     * 
     */
    private String weekDay;

    private MonitorDowntimeFrequencyDaysOfWeek() {}
    /**
     * @return The occurrence of `week_day` in a month (one of `&#34;FIRST&#34;`, `&#34;SECOND&#34;`, `&#34;THIRD&#34;`, `&#34;FOURTH&#34;`, `&#34;LAST&#34;`).
     * 
     * &gt; **NOTE:** `frequency` **can only be used with the mode** `MONTHLY`, and **is a required argument** with monthly monitor downtimes (if the `mode` is `MONTHLY`). Additionally, **either** `days_of_month` or `days_of_week` **are required to be specified with** `frequency`, but not both, as `days_of_month` and `days_of_week` are mutually exclusive. If `days_of_week` is specified, values of **both** of its nested arguments, `week_day` and `ordinal_day_of_month` **would need to be specified** too.
     * 
     */
    public String ordinalDayOfMonth() {
        return this.ordinalDayOfMonth;
    }
    /**
     * @return A day of the week (one of `&#34;SUNDAY&#34;`, `&#34;MONDAY&#34;`, `&#34;TUESDAY&#34;`, `&#34;WEDNESDAY&#34;`, `&#34;THURSDAY&#34;`, `&#34;FRIDAY&#34;` or `&#34;SATURDAY&#34;`).
     * 
     */
    public String weekDay() {
        return this.weekDay;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MonitorDowntimeFrequencyDaysOfWeek defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String ordinalDayOfMonth;
        private String weekDay;
        public Builder() {}
        public Builder(MonitorDowntimeFrequencyDaysOfWeek defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.ordinalDayOfMonth = defaults.ordinalDayOfMonth;
    	      this.weekDay = defaults.weekDay;
        }

        @CustomType.Setter
        public Builder ordinalDayOfMonth(String ordinalDayOfMonth) {
            if (ordinalDayOfMonth == null) {
              throw new MissingRequiredPropertyException("MonitorDowntimeFrequencyDaysOfWeek", "ordinalDayOfMonth");
            }
            this.ordinalDayOfMonth = ordinalDayOfMonth;
            return this;
        }
        @CustomType.Setter
        public Builder weekDay(String weekDay) {
            if (weekDay == null) {
              throw new MissingRequiredPropertyException("MonitorDowntimeFrequencyDaysOfWeek", "weekDay");
            }
            this.weekDay = weekDay;
            return this;
        }
        public MonitorDowntimeFrequencyDaysOfWeek build() {
            final var _resultValue = new MonitorDowntimeFrequencyDaysOfWeek();
            _resultValue.ordinalDayOfMonth = ordinalDayOfMonth;
            _resultValue.weekDay = weekDay;
            return _resultValue;
        }
    }
}
