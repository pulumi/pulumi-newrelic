// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.plugins.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPluginComponentResult {
    private String healthStatus;
    private String id;
    private String name;
    private Integer pluginId;

    private GetPluginComponentResult() {}
    public String healthStatus() {
        return this.healthStatus;
    }
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public Integer pluginId() {
        return this.pluginId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPluginComponentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String healthStatus;
        private String id;
        private String name;
        private Integer pluginId;
        public Builder() {}
        public Builder(GetPluginComponentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.healthStatus = defaults.healthStatus;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.pluginId = defaults.pluginId;
        }

        @CustomType.Setter
        public Builder healthStatus(String healthStatus) {
            this.healthStatus = Objects.requireNonNull(healthStatus);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder pluginId(Integer pluginId) {
            this.pluginId = Objects.requireNonNull(pluginId);
            return this;
        }
        public GetPluginComponentResult build() {
            final var o = new GetPluginComponentResult();
            o.healthStatus = healthStatus;
            o.id = id;
            o.name = name;
            o.pluginId = pluginId;
            return o;
        }
    }
}
