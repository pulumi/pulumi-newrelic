// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class MonitorDowntimeFrequencyDaysOfWeekArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorDowntimeFrequencyDaysOfWeekArgs Empty = new MonitorDowntimeFrequencyDaysOfWeekArgs();

    /**
     * An occurrence of the day selected within the month.
     * 
     */
    @Import(name="ordinalDayOfMonth", required=true)
    private Output<String> ordinalDayOfMonth;

    /**
     * @return An occurrence of the day selected within the month.
     * 
     */
    public Output<String> ordinalDayOfMonth() {
        return this.ordinalDayOfMonth;
    }

    /**
     * The day of the week on which the Monitor Downtime would run.
     * 
     */
    @Import(name="weekDay", required=true)
    private Output<String> weekDay;

    /**
     * @return The day of the week on which the Monitor Downtime would run.
     * 
     */
    public Output<String> weekDay() {
        return this.weekDay;
    }

    private MonitorDowntimeFrequencyDaysOfWeekArgs() {}

    private MonitorDowntimeFrequencyDaysOfWeekArgs(MonitorDowntimeFrequencyDaysOfWeekArgs $) {
        this.ordinalDayOfMonth = $.ordinalDayOfMonth;
        this.weekDay = $.weekDay;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorDowntimeFrequencyDaysOfWeekArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorDowntimeFrequencyDaysOfWeekArgs $;

        public Builder() {
            $ = new MonitorDowntimeFrequencyDaysOfWeekArgs();
        }

        public Builder(MonitorDowntimeFrequencyDaysOfWeekArgs defaults) {
            $ = new MonitorDowntimeFrequencyDaysOfWeekArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ordinalDayOfMonth An occurrence of the day selected within the month.
         * 
         * @return builder
         * 
         */
        public Builder ordinalDayOfMonth(Output<String> ordinalDayOfMonth) {
            $.ordinalDayOfMonth = ordinalDayOfMonth;
            return this;
        }

        /**
         * @param ordinalDayOfMonth An occurrence of the day selected within the month.
         * 
         * @return builder
         * 
         */
        public Builder ordinalDayOfMonth(String ordinalDayOfMonth) {
            return ordinalDayOfMonth(Output.of(ordinalDayOfMonth));
        }

        /**
         * @param weekDay The day of the week on which the Monitor Downtime would run.
         * 
         * @return builder
         * 
         */
        public Builder weekDay(Output<String> weekDay) {
            $.weekDay = weekDay;
            return this;
        }

        /**
         * @param weekDay The day of the week on which the Monitor Downtime would run.
         * 
         * @return builder
         * 
         */
        public Builder weekDay(String weekDay) {
            return weekDay(Output.of(weekDay));
        }

        public MonitorDowntimeFrequencyDaysOfWeekArgs build() {
            if ($.ordinalDayOfMonth == null) {
                throw new MissingRequiredPropertyException("MonitorDowntimeFrequencyDaysOfWeekArgs", "ordinalDayOfMonth");
            }
            if ($.weekDay == null) {
                throw new MissingRequiredPropertyException("MonitorDowntimeFrequencyDaysOfWeekArgs", "weekDay");
            }
            return $;
        }
    }

}
