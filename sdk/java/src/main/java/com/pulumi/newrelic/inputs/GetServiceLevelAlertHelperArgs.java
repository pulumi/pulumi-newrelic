// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceLevelAlertHelperArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetServiceLevelAlertHelperArgs Empty = new GetServiceLevelAlertHelperArgs();

    @Import(name="alertType", required=true)
    private Output<String> alertType;

    public Output<String> alertType() {
        return this.alertType;
    }

    @Import(name="customEvaluationPeriod")
    private @Nullable Output<Integer> customEvaluationPeriod;

    public Optional<Output<Integer>> customEvaluationPeriod() {
        return Optional.ofNullable(this.customEvaluationPeriod);
    }

    @Import(name="customToleratedBudgetConsumption")
    private @Nullable Output<Double> customToleratedBudgetConsumption;

    public Optional<Output<Double>> customToleratedBudgetConsumption() {
        return Optional.ofNullable(this.customToleratedBudgetConsumption);
    }

    @Import(name="isBadEvents")
    private @Nullable Output<Boolean> isBadEvents;

    public Optional<Output<Boolean>> isBadEvents() {
        return Optional.ofNullable(this.isBadEvents);
    }

    @Import(name="sliGuid", required=true)
    private Output<String> sliGuid;

    public Output<String> sliGuid() {
        return this.sliGuid;
    }

    @Import(name="sloPeriod", required=true)
    private Output<Integer> sloPeriod;

    public Output<Integer> sloPeriod() {
        return this.sloPeriod;
    }

    @Import(name="sloTarget", required=true)
    private Output<Double> sloTarget;

    public Output<Double> sloTarget() {
        return this.sloTarget;
    }

    private GetServiceLevelAlertHelperArgs() {}

    private GetServiceLevelAlertHelperArgs(GetServiceLevelAlertHelperArgs $) {
        this.alertType = $.alertType;
        this.customEvaluationPeriod = $.customEvaluationPeriod;
        this.customToleratedBudgetConsumption = $.customToleratedBudgetConsumption;
        this.isBadEvents = $.isBadEvents;
        this.sliGuid = $.sliGuid;
        this.sloPeriod = $.sloPeriod;
        this.sloTarget = $.sloTarget;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceLevelAlertHelperArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceLevelAlertHelperArgs $;

        public Builder() {
            $ = new GetServiceLevelAlertHelperArgs();
        }

        public Builder(GetServiceLevelAlertHelperArgs defaults) {
            $ = new GetServiceLevelAlertHelperArgs(Objects.requireNonNull(defaults));
        }

        public Builder alertType(Output<String> alertType) {
            $.alertType = alertType;
            return this;
        }

        public Builder alertType(String alertType) {
            return alertType(Output.of(alertType));
        }

        public Builder customEvaluationPeriod(@Nullable Output<Integer> customEvaluationPeriod) {
            $.customEvaluationPeriod = customEvaluationPeriod;
            return this;
        }

        public Builder customEvaluationPeriod(Integer customEvaluationPeriod) {
            return customEvaluationPeriod(Output.of(customEvaluationPeriod));
        }

        public Builder customToleratedBudgetConsumption(@Nullable Output<Double> customToleratedBudgetConsumption) {
            $.customToleratedBudgetConsumption = customToleratedBudgetConsumption;
            return this;
        }

        public Builder customToleratedBudgetConsumption(Double customToleratedBudgetConsumption) {
            return customToleratedBudgetConsumption(Output.of(customToleratedBudgetConsumption));
        }

        public Builder isBadEvents(@Nullable Output<Boolean> isBadEvents) {
            $.isBadEvents = isBadEvents;
            return this;
        }

        public Builder isBadEvents(Boolean isBadEvents) {
            return isBadEvents(Output.of(isBadEvents));
        }

        public Builder sliGuid(Output<String> sliGuid) {
            $.sliGuid = sliGuid;
            return this;
        }

        public Builder sliGuid(String sliGuid) {
            return sliGuid(Output.of(sliGuid));
        }

        public Builder sloPeriod(Output<Integer> sloPeriod) {
            $.sloPeriod = sloPeriod;
            return this;
        }

        public Builder sloPeriod(Integer sloPeriod) {
            return sloPeriod(Output.of(sloPeriod));
        }

        public Builder sloTarget(Output<Double> sloTarget) {
            $.sloTarget = sloTarget;
            return this;
        }

        public Builder sloTarget(Double sloTarget) {
            return sloTarget(Output.of(sloTarget));
        }

        public GetServiceLevelAlertHelperArgs build() {
            if ($.alertType == null) {
                throw new MissingRequiredPropertyException("GetServiceLevelAlertHelperArgs", "alertType");
            }
            if ($.sliGuid == null) {
                throw new MissingRequiredPropertyException("GetServiceLevelAlertHelperArgs", "sliGuid");
            }
            if ($.sloPeriod == null) {
                throw new MissingRequiredPropertyException("GetServiceLevelAlertHelperArgs", "sloPeriod");
            }
            if ($.sloTarget == null) {
                throw new MissingRequiredPropertyException("GetServiceLevelAlertHelperArgs", "sloTarget");
            }
            return $;
        }
    }

}
