// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class MonitorScriptLocationArgs extends com.pulumi.resources.ResourceArgs {

    public static final MonitorScriptLocationArgs Empty = new MonitorScriptLocationArgs();

    /**
     * The monitor script authentication code for the location. Use one of either `hmac` or `vse_password`.
     * 
     */
    @Import(name="hmac")
    private @Nullable Output<String> hmac;

    /**
     * @return The monitor script authentication code for the location. Use one of either `hmac` or `vse_password`.
     * 
     */
    public Optional<Output<String>> hmac() {
        return Optional.ofNullable(this.hmac);
    }

    /**
     * The monitor script location name.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The monitor script location name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The password for the location used to calculate the HMAC. Use one of either `hmac` or `vse_password`.
     * 
     */
    @Import(name="vsePassword")
    private @Nullable Output<String> vsePassword;

    /**
     * @return The password for the location used to calculate the HMAC. Use one of either `hmac` or `vse_password`.
     * 
     */
    public Optional<Output<String>> vsePassword() {
        return Optional.ofNullable(this.vsePassword);
    }

    private MonitorScriptLocationArgs() {}

    private MonitorScriptLocationArgs(MonitorScriptLocationArgs $) {
        this.hmac = $.hmac;
        this.name = $.name;
        this.vsePassword = $.vsePassword;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(MonitorScriptLocationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private MonitorScriptLocationArgs $;

        public Builder() {
            $ = new MonitorScriptLocationArgs();
        }

        public Builder(MonitorScriptLocationArgs defaults) {
            $ = new MonitorScriptLocationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hmac The monitor script authentication code for the location. Use one of either `hmac` or `vse_password`.
         * 
         * @return builder
         * 
         */
        public Builder hmac(@Nullable Output<String> hmac) {
            $.hmac = hmac;
            return this;
        }

        /**
         * @param hmac The monitor script authentication code for the location. Use one of either `hmac` or `vse_password`.
         * 
         * @return builder
         * 
         */
        public Builder hmac(String hmac) {
            return hmac(Output.of(hmac));
        }

        /**
         * @param name The monitor script location name.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The monitor script location name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param vsePassword The password for the location used to calculate the HMAC. Use one of either `hmac` or `vse_password`.
         * 
         * @return builder
         * 
         */
        public Builder vsePassword(@Nullable Output<String> vsePassword) {
            $.vsePassword = vsePassword;
            return this;
        }

        /**
         * @param vsePassword The password for the location used to calculate the HMAC. Use one of either `hmac` or `vse_password`.
         * 
         * @return builder
         * 
         */
        public Builder vsePassword(String vsePassword) {
            return vsePassword(Output.of(vsePassword));
        }

        public MonitorScriptLocationArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
