// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class ObfuscationRuleAction {
    /**
     * @return Attribute names for action. An empty list applies the action to all the attributes.
     * 
     */
    private List<String> attributes;
    /**
     * @return Expression Id for action.
     * 
     */
    private String expressionId;
    /**
     * @return Obfuscation method to use. Methods for replacing obfuscated values are `HASH_SHA256` and `MASK`.
     * 
     */
    private String method;

    private ObfuscationRuleAction() {}
    /**
     * @return Attribute names for action. An empty list applies the action to all the attributes.
     * 
     */
    public List<String> attributes() {
        return this.attributes;
    }
    /**
     * @return Expression Id for action.
     * 
     */
    public String expressionId() {
        return this.expressionId;
    }
    /**
     * @return Obfuscation method to use. Methods for replacing obfuscated values are `HASH_SHA256` and `MASK`.
     * 
     */
    public String method() {
        return this.method;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ObfuscationRuleAction defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> attributes;
        private String expressionId;
        private String method;
        public Builder() {}
        public Builder(ObfuscationRuleAction defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attributes = defaults.attributes;
    	      this.expressionId = defaults.expressionId;
    	      this.method = defaults.method;
        }

        @CustomType.Setter
        public Builder attributes(List<String> attributes) {
            if (attributes == null) {
              throw new MissingRequiredPropertyException("ObfuscationRuleAction", "attributes");
            }
            this.attributes = attributes;
            return this;
        }
        public Builder attributes(String... attributes) {
            return attributes(List.of(attributes));
        }
        @CustomType.Setter
        public Builder expressionId(String expressionId) {
            if (expressionId == null) {
              throw new MissingRequiredPropertyException("ObfuscationRuleAction", "expressionId");
            }
            this.expressionId = expressionId;
            return this;
        }
        @CustomType.Setter
        public Builder method(String method) {
            if (method == null) {
              throw new MissingRequiredPropertyException("ObfuscationRuleAction", "method");
            }
            this.method = method;
            return this;
        }
        public ObfuscationRuleAction build() {
            final var _resultValue = new ObfuscationRuleAction();
            _resultValue.attributes = attributes;
            _resultValue.expressionId = expressionId;
            _resultValue.method = method;
            return _resultValue;
        }
    }
}
