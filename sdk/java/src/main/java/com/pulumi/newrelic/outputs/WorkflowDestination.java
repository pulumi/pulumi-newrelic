// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WorkflowDestination {
    /**
     * @return Id of a notification_channel to use for notifications. Please note that you have to use a
     * **notification** channel, not an `alert_channel`.
     * 
     */
    private String channelId;
    /**
     * @return The name of the workflow.
     * 
     */
    private @Nullable String name;
    /**
     * @return Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
     * 
     */
    private @Nullable List<String> notificationTriggers;
    /**
     * @return Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
     * 
     */
    private @Nullable String type;

    private WorkflowDestination() {}
    /**
     * @return Id of a notification_channel to use for notifications. Please note that you have to use a
     * **notification** channel, not an `alert_channel`.
     * 
     */
    public String channelId() {
        return this.channelId;
    }
    /**
     * @return The name of the workflow.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Issue events to notify on. The value is a list of possible issue events. See Notification Triggers below for details.
     * 
     */
    public List<String> notificationTriggers() {
        return this.notificationTriggers == null ? List.of() : this.notificationTriggers;
    }
    /**
     * @return Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WorkflowDestination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String channelId;
        private @Nullable String name;
        private @Nullable List<String> notificationTriggers;
        private @Nullable String type;
        public Builder() {}
        public Builder(WorkflowDestination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.channelId = defaults.channelId;
    	      this.name = defaults.name;
    	      this.notificationTriggers = defaults.notificationTriggers;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder channelId(String channelId) {
            this.channelId = Objects.requireNonNull(channelId);
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notificationTriggers(@Nullable List<String> notificationTriggers) {
            this.notificationTriggers = notificationTriggers;
            return this;
        }
        public Builder notificationTriggers(String... notificationTriggers) {
            return notificationTriggers(List.of(notificationTriggers));
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        public WorkflowDestination build() {
            final var _resultValue = new WorkflowDestination();
            _resultValue.channelId = channelId;
            _resultValue.name = name;
            _resultValue.notificationTriggers = notificationTriggers;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
