// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertPolicyChannelState extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyChannelState Empty = new AlertPolicyChannelState();

    /**
     * Determines the New Relic account where the alert policy channel will be created. Defaults to the account associated with the API key used.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return Determines the New Relic account where the alert policy channel will be created. Defaults to the account associated with the API key used.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift in your state.
     * 
     */
    @Import(name="channelIds")
    private @Nullable Output<List<String>> channelIds;

    /**
     * @return Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift in your state.
     * 
     */
    public Optional<Output<List<String>>> channelIds() {
        return Optional.ofNullable(this.channelIds);
    }

    /**
     * The ID of the policy.
     * 
     */
    @Import(name="policyId")
    private @Nullable Output<String> policyId;

    /**
     * @return The ID of the policy.
     * 
     */
    public Optional<Output<String>> policyId() {
        return Optional.ofNullable(this.policyId);
    }

    private AlertPolicyChannelState() {}

    private AlertPolicyChannelState(AlertPolicyChannelState $) {
        this.accountId = $.accountId;
        this.channelIds = $.channelIds;
        this.policyId = $.policyId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyChannelState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyChannelState $;

        public Builder() {
            $ = new AlertPolicyChannelState();
        }

        public Builder(AlertPolicyChannelState defaults) {
            $ = new AlertPolicyChannelState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId Determines the New Relic account where the alert policy channel will be created. Defaults to the account associated with the API key used.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId Determines the New Relic account where the alert policy channel will be created. Defaults to the account associated with the API key used.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @param channelIds Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift in your state.
         * 
         * @return builder
         * 
         */
        public Builder channelIds(@Nullable Output<List<String>> channelIds) {
            $.channelIds = channelIds;
            return this;
        }

        /**
         * @param channelIds Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift in your state.
         * 
         * @return builder
         * 
         */
        public Builder channelIds(List<String> channelIds) {
            return channelIds(Output.of(channelIds));
        }

        /**
         * @param channelIds Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift in your state.
         * 
         * @return builder
         * 
         */
        public Builder channelIds(String... channelIds) {
            return channelIds(List.of(channelIds));
        }

        /**
         * @param policyId The ID of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(@Nullable Output<String> policyId) {
            $.policyId = policyId;
            return this;
        }

        /**
         * @param policyId The ID of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policyId(String policyId) {
            return policyId(Output.of(policyId));
        }

        public AlertPolicyChannelState build() {
            return $;
        }
    }

}
