// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.newrelic.inputs.OneDashboardRawPageWidgetArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class OneDashboardRawPageArgs extends com.pulumi.resources.ResourceArgs {

    public static final OneDashboardRawPageArgs Empty = new OneDashboardRawPageArgs();

    /**
     * Brief text describing the dashboard.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Brief text describing the dashboard.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The unique entity identifier of the dashboard page in New Relic.
     * 
     */
    @Import(name="guid")
    private @Nullable Output<String> guid;

    /**
     * @return The unique entity identifier of the dashboard page in New Relic.
     * 
     */
    public Optional<Output<String>> guid() {
        return Optional.ofNullable(this.guid);
    }

    /**
     * The title of the dashboard.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The title of the dashboard.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
     * 
     */
    @Import(name="widgets")
    private @Nullable Output<List<OneDashboardRawPageWidgetArgs>> widgets;

    /**
     * @return (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
     * 
     */
    public Optional<Output<List<OneDashboardRawPageWidgetArgs>>> widgets() {
        return Optional.ofNullable(this.widgets);
    }

    private OneDashboardRawPageArgs() {}

    private OneDashboardRawPageArgs(OneDashboardRawPageArgs $) {
        this.description = $.description;
        this.guid = $.guid;
        this.name = $.name;
        this.widgets = $.widgets;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(OneDashboardRawPageArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private OneDashboardRawPageArgs $;

        public Builder() {
            $ = new OneDashboardRawPageArgs();
        }

        public Builder(OneDashboardRawPageArgs defaults) {
            $ = new OneDashboardRawPageArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Brief text describing the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Brief text describing the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param guid The unique entity identifier of the dashboard page in New Relic.
         * 
         * @return builder
         * 
         */
        public Builder guid(@Nullable Output<String> guid) {
            $.guid = guid;
            return this;
        }

        /**
         * @param guid The unique entity identifier of the dashboard page in New Relic.
         * 
         * @return builder
         * 
         */
        public Builder guid(String guid) {
            return guid(Output.of(guid));
        }

        /**
         * @param name The title of the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The title of the dashboard.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param widgets (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
         * 
         * @return builder
         * 
         */
        public Builder widgets(@Nullable Output<List<OneDashboardRawPageWidgetArgs>> widgets) {
            $.widgets = widgets;
            return this;
        }

        /**
         * @param widgets (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
         * 
         * @return builder
         * 
         */
        public Builder widgets(List<OneDashboardRawPageWidgetArgs> widgets) {
            return widgets(Output.of(widgets));
        }

        /**
         * @param widgets (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
         * 
         * @return builder
         * 
         */
        public Builder widgets(OneDashboardRawPageWidgetArgs... widgets) {
            return widgets(List.of(widgets));
        }

        public OneDashboardRawPageArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
