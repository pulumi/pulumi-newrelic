// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSecureCredentialArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSecureCredentialArgs Empty = new GetSecureCredentialArgs();

    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    @Import(name="key", required=true)
    private Output<String> key;

    public Output<String> key() {
        return this.key;
    }

    private GetSecureCredentialArgs() {}

    private GetSecureCredentialArgs(GetSecureCredentialArgs $) {
        this.accountId = $.accountId;
        this.key = $.key;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSecureCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSecureCredentialArgs $;

        public Builder() {
            $ = new GetSecureCredentialArgs();
        }

        public Builder(GetSecureCredentialArgs defaults) {
            $ = new GetSecureCredentialArgs(Objects.requireNonNull(defaults));
        }

        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        public Builder key(Output<String> key) {
            $.key = key;
            return this;
        }

        public Builder key(String key) {
            return key(Output.of(key));
        }

        public GetSecureCredentialArgs build() {
            if ($.key == null) {
                throw new MissingRequiredPropertyException("GetSecureCredentialArgs", "key");
            }
            return $;
        }
    }

}
