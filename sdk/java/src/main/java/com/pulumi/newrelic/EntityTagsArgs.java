// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.newrelic.inputs.EntityTagsTagArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class EntityTagsArgs extends com.pulumi.resources.ResourceArgs {

    public static final EntityTagsArgs Empty = new EntityTagsArgs();

    /**
     * The guid of the entity to tag.
     * 
     */
    @Import(name="guid", required=true)
    private Output<String> guid;

    /**
     * @return The guid of the entity to tag.
     * 
     */
    public Output<String> guid() {
        return this.guid;
    }

    /**
     * A nested block that describes an entity tag. See Nested tag blocks below for details.
     * 
     */
    @Import(name="tags", required=true)
    private Output<List<EntityTagsTagArgs>> tags;

    /**
     * @return A nested block that describes an entity tag. See Nested tag blocks below for details.
     * 
     */
    public Output<List<EntityTagsTagArgs>> tags() {
        return this.tags;
    }

    private EntityTagsArgs() {}

    private EntityTagsArgs(EntityTagsArgs $) {
        this.guid = $.guid;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EntityTagsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EntityTagsArgs $;

        public Builder() {
            $ = new EntityTagsArgs();
        }

        public Builder(EntityTagsArgs defaults) {
            $ = new EntityTagsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param guid The guid of the entity to tag.
         * 
         * @return builder
         * 
         */
        public Builder guid(Output<String> guid) {
            $.guid = guid;
            return this;
        }

        /**
         * @param guid The guid of the entity to tag.
         * 
         * @return builder
         * 
         */
        public Builder guid(String guid) {
            return guid(Output.of(guid));
        }

        /**
         * @param tags A nested block that describes an entity tag. See Nested tag blocks below for details.
         * 
         * @return builder
         * 
         */
        public Builder tags(Output<List<EntityTagsTagArgs>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A nested block that describes an entity tag. See Nested tag blocks below for details.
         * 
         * @return builder
         * 
         */
        public Builder tags(List<EntityTagsTagArgs> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags A nested block that describes an entity tag. See Nested tag blocks below for details.
         * 
         * @return builder
         * 
         */
        public Builder tags(EntityTagsTagArgs... tags) {
            return tags(List.of(tags));
        }

        public EntityTagsArgs build() {
            $.guid = Objects.requireNonNull($.guid, "expected parameter 'guid' to be non-null");
            $.tags = Objects.requireNonNull($.tags, "expected parameter 'tags' to be non-null");
            return $;
        }
    }

}
