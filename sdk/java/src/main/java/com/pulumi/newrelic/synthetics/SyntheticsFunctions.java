// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.synthetics;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.newrelic.Utilities;
import com.pulumi.newrelic.synthetics.inputs.GetMonitorArgs;
import com.pulumi.newrelic.synthetics.inputs.GetMonitorLocationArgs;
import com.pulumi.newrelic.synthetics.inputs.GetMonitorLocationPlainArgs;
import com.pulumi.newrelic.synthetics.inputs.GetMonitorPlainArgs;
import com.pulumi.newrelic.synthetics.inputs.GetSecureCredentialArgs;
import com.pulumi.newrelic.synthetics.inputs.GetSecureCredentialPlainArgs;
import com.pulumi.newrelic.synthetics.outputs.GetMonitorLocationResult;
import com.pulumi.newrelic.synthetics.outputs.GetMonitorResult;
import com.pulumi.newrelic.synthetics.outputs.GetSecureCredentialResult;
import java.util.concurrent.CompletableFuture;

public final class SyntheticsFunctions {
    /**
     * Use this data source to get information about a specific synthetics monitor in New Relic that already exists. This can be used to set up a Synthetics alert condition.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorArgs;
     * import com.pulumi.newrelic.synthetics.AlertCondition;
     * import com.pulumi.newrelic.synthetics.AlertConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitor(GetMonitorArgs.builder()
     *             .name(&#34;bar&#34;)
     *             .build());
     * 
     *         var baz = new AlertCondition(&#34;baz&#34;, AlertConditionArgs.builder()        
     *             .policyId(newrelic_alert_policy.foo().id())
     *             .monitorId(bar.applyValue(getMonitorResult -&gt; getMonitorResult.id()))
     *             .runbookUrl(&#34;https://www.example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMonitorResult> getMonitor(GetMonitorArgs args) {
        return getMonitor(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific synthetics monitor in New Relic that already exists. This can be used to set up a Synthetics alert condition.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorArgs;
     * import com.pulumi.newrelic.synthetics.AlertCondition;
     * import com.pulumi.newrelic.synthetics.AlertConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitor(GetMonitorArgs.builder()
     *             .name(&#34;bar&#34;)
     *             .build());
     * 
     *         var baz = new AlertCondition(&#34;baz&#34;, AlertConditionArgs.builder()        
     *             .policyId(newrelic_alert_policy.foo().id())
     *             .monitorId(bar.applyValue(getMonitorResult -&gt; getMonitorResult.id()))
     *             .runbookUrl(&#34;https://www.example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMonitorResult> getMonitorPlain(GetMonitorPlainArgs args) {
        return getMonitorPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific synthetics monitor in New Relic that already exists. This can be used to set up a Synthetics alert condition.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorArgs;
     * import com.pulumi.newrelic.synthetics.AlertCondition;
     * import com.pulumi.newrelic.synthetics.AlertConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitor(GetMonitorArgs.builder()
     *             .name(&#34;bar&#34;)
     *             .build());
     * 
     *         var baz = new AlertCondition(&#34;baz&#34;, AlertConditionArgs.builder()        
     *             .policyId(newrelic_alert_policy.foo().id())
     *             .monitorId(bar.applyValue(getMonitorResult -&gt; getMonitorResult.id()))
     *             .runbookUrl(&#34;https://www.example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMonitorResult> getMonitor(GetMonitorArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("newrelic:synthetics/getMonitor:getMonitor", TypeShape.of(GetMonitorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific synthetics monitor in New Relic that already exists. This can be used to set up a Synthetics alert condition.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorArgs;
     * import com.pulumi.newrelic.synthetics.AlertCondition;
     * import com.pulumi.newrelic.synthetics.AlertConditionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitor(GetMonitorArgs.builder()
     *             .name(&#34;bar&#34;)
     *             .build());
     * 
     *         var baz = new AlertCondition(&#34;baz&#34;, AlertConditionArgs.builder()        
     *             .policyId(newrelic_alert_policy.foo().id())
     *             .monitorId(bar.applyValue(getMonitorResult -&gt; getMonitorResult.id()))
     *             .runbookUrl(&#34;https://www.example.com&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMonitorResult> getMonitorPlain(GetMonitorPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("newrelic:synthetics/getMonitor:getMonitor", TypeShape.of(GetMonitorResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific Synthetics monitor location in New Relic that already exists.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorLocationArgs;
     * import com.pulumi.newrelic.synthetics.Monitor;
     * import com.pulumi.newrelic.synthetics.MonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitorLocation(GetMonitorLocationArgs.builder()
     *             .label(&#34;My private location&#34;)
     *             .build());
     * 
     *         var foo = new Monitor(&#34;foo&#34;, MonitorArgs.builder()        
     *             .type(&#34;SIMPLE&#34;)
     *             .frequency(5)
     *             .status(&#34;ENABLED&#34;)
     *             .locations(bar.applyValue(getMonitorLocationResult -&gt; getMonitorLocationResult.name()))
     *             .uri(&#34;https://example.com&#34;)
     *             .validationString(&#34;add example validation check here&#34;)
     *             .verifySsl(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMonitorLocationResult> getMonitorLocation(GetMonitorLocationArgs args) {
        return getMonitorLocation(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific Synthetics monitor location in New Relic that already exists.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorLocationArgs;
     * import com.pulumi.newrelic.synthetics.Monitor;
     * import com.pulumi.newrelic.synthetics.MonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitorLocation(GetMonitorLocationArgs.builder()
     *             .label(&#34;My private location&#34;)
     *             .build());
     * 
     *         var foo = new Monitor(&#34;foo&#34;, MonitorArgs.builder()        
     *             .type(&#34;SIMPLE&#34;)
     *             .frequency(5)
     *             .status(&#34;ENABLED&#34;)
     *             .locations(bar.applyValue(getMonitorLocationResult -&gt; getMonitorLocationResult.name()))
     *             .uri(&#34;https://example.com&#34;)
     *             .validationString(&#34;add example validation check here&#34;)
     *             .verifySsl(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMonitorLocationResult> getMonitorLocationPlain(GetMonitorLocationPlainArgs args) {
        return getMonitorLocationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific Synthetics monitor location in New Relic that already exists.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorLocationArgs;
     * import com.pulumi.newrelic.synthetics.Monitor;
     * import com.pulumi.newrelic.synthetics.MonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitorLocation(GetMonitorLocationArgs.builder()
     *             .label(&#34;My private location&#34;)
     *             .build());
     * 
     *         var foo = new Monitor(&#34;foo&#34;, MonitorArgs.builder()        
     *             .type(&#34;SIMPLE&#34;)
     *             .frequency(5)
     *             .status(&#34;ENABLED&#34;)
     *             .locations(bar.applyValue(getMonitorLocationResult -&gt; getMonitorLocationResult.name()))
     *             .uri(&#34;https://example.com&#34;)
     *             .validationString(&#34;add example validation check here&#34;)
     *             .verifySsl(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetMonitorLocationResult> getMonitorLocation(GetMonitorLocationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("newrelic:synthetics/getMonitorLocation:getMonitorLocation", TypeShape.of(GetMonitorLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific Synthetics monitor location in New Relic that already exists.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetMonitorLocationArgs;
     * import com.pulumi.newrelic.synthetics.Monitor;
     * import com.pulumi.newrelic.synthetics.MonitorArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var bar = SyntheticsFunctions.getMonitorLocation(GetMonitorLocationArgs.builder()
     *             .label(&#34;My private location&#34;)
     *             .build());
     * 
     *         var foo = new Monitor(&#34;foo&#34;, MonitorArgs.builder()        
     *             .type(&#34;SIMPLE&#34;)
     *             .frequency(5)
     *             .status(&#34;ENABLED&#34;)
     *             .locations(bar.applyValue(getMonitorLocationResult -&gt; getMonitorLocationResult.name()))
     *             .uri(&#34;https://example.com&#34;)
     *             .validationString(&#34;add example validation check here&#34;)
     *             .verifySsl(true)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetMonitorLocationResult> getMonitorLocationPlain(GetMonitorLocationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("newrelic:synthetics/getMonitorLocation:getMonitorLocation", TypeShape.of(GetMonitorLocationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
     * 
     * Note that the secure credential&#39;s value is not returned as an attribute for security reasons.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetSecureCredentialArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = SyntheticsFunctions.getSecureCredential(GetSecureCredentialArgs.builder()
     *             .key(&#34;MY_KEY&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecureCredentialResult> getSecureCredential(GetSecureCredentialArgs args) {
        return getSecureCredential(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
     * 
     * Note that the secure credential&#39;s value is not returned as an attribute for security reasons.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetSecureCredentialArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = SyntheticsFunctions.getSecureCredential(GetSecureCredentialArgs.builder()
     *             .key(&#34;MY_KEY&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecureCredentialResult> getSecureCredentialPlain(GetSecureCredentialPlainArgs args) {
        return getSecureCredentialPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
     * 
     * Note that the secure credential&#39;s value is not returned as an attribute for security reasons.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetSecureCredentialArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = SyntheticsFunctions.getSecureCredential(GetSecureCredentialArgs.builder()
     *             .key(&#34;MY_KEY&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static Output<GetSecureCredentialResult> getSecureCredential(GetSecureCredentialArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("newrelic:synthetics/getSecureCredential:getSecureCredential", TypeShape.of(GetSecureCredentialResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
     * 
     * Note that the secure credential&#39;s value is not returned as an attribute for security reasons.
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.newrelic.synthetics.SyntheticsFunctions;
     * import com.pulumi.newrelic.synthetics.inputs.GetSecureCredentialArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var foo = SyntheticsFunctions.getSecureCredential(GetSecureCredentialArgs.builder()
     *             .key(&#34;MY_KEY&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * 
     */
    public static CompletableFuture<GetSecureCredentialResult> getSecureCredentialPlain(GetSecureCredentialPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("newrelic:synthetics/getSecureCredential:getSecureCredential", TypeShape.of(GetSecureCredentialResult.class), args, Utilities.withVersion(options));
    }
}
