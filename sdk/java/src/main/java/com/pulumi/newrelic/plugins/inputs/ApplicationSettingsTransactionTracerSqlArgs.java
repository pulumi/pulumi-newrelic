// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.plugins.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class ApplicationSettingsTransactionTracerSqlArgs extends com.pulumi.resources.ResourceArgs {

    public static final ApplicationSettingsTransactionTracerSqlArgs Empty = new ApplicationSettingsTransactionTracerSqlArgs();

    /**
     * The level of SQL recording. Valid values ar `OBFUSCATED`,`OFF`,`RAW` (Mandatory attribute when `sql` block is provided).
     * 
     */
    @Import(name="recordSql", required=true)
    private Output<String> recordSql;

    /**
     * @return The level of SQL recording. Valid values ar `OBFUSCATED`,`OFF`,`RAW` (Mandatory attribute when `sql` block is provided).
     * 
     */
    public Output<String> recordSql() {
        return this.recordSql;
    }

    private ApplicationSettingsTransactionTracerSqlArgs() {}

    private ApplicationSettingsTransactionTracerSqlArgs(ApplicationSettingsTransactionTracerSqlArgs $) {
        this.recordSql = $.recordSql;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ApplicationSettingsTransactionTracerSqlArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ApplicationSettingsTransactionTracerSqlArgs $;

        public Builder() {
            $ = new ApplicationSettingsTransactionTracerSqlArgs();
        }

        public Builder(ApplicationSettingsTransactionTracerSqlArgs defaults) {
            $ = new ApplicationSettingsTransactionTracerSqlArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recordSql The level of SQL recording. Valid values ar `OBFUSCATED`,`OFF`,`RAW` (Mandatory attribute when `sql` block is provided).
         * 
         * @return builder
         * 
         */
        public Builder recordSql(Output<String> recordSql) {
            $.recordSql = recordSql;
            return this;
        }

        /**
         * @param recordSql The level of SQL recording. Valid values ar `OBFUSCATED`,`OFF`,`RAW` (Mandatory attribute when `sql` block is provided).
         * 
         * @return builder
         * 
         */
        public Builder recordSql(String recordSql) {
            return recordSql(Output.of(recordSql));
        }

        public ApplicationSettingsTransactionTracerSqlArgs build() {
            if ($.recordSql == null) {
                throw new MissingRequiredPropertyException("ApplicationSettingsTransactionTracerSqlArgs", "recordSql");
            }
            return $;
        }
    }

}
