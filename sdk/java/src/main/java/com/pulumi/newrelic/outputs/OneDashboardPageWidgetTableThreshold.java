// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class OneDashboardPageWidgetTableThreshold {
    /**
     * @return The name of the column in the table, to which the threshold would need to be applied.
     * 
     */
    private @Nullable String columnName;
    /**
     * @return The value &#39;from&#39; which the threshold would need to be applied.
     * 
     */
    private @Nullable String from;
    /**
     * @return The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
     * 
     */
    private @Nullable String severity;
    /**
     * @return The value until which the threshold would need to be applied.
     * 
     */
    private @Nullable String to;

    private OneDashboardPageWidgetTableThreshold() {}
    /**
     * @return The name of the column in the table, to which the threshold would need to be applied.
     * 
     */
    public Optional<String> columnName() {
        return Optional.ofNullable(this.columnName);
    }
    /**
     * @return The value &#39;from&#39; which the threshold would need to be applied.
     * 
     */
    public Optional<String> from() {
        return Optional.ofNullable(this.from);
    }
    /**
     * @return The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
     * 
     */
    public Optional<String> severity() {
        return Optional.ofNullable(this.severity);
    }
    /**
     * @return The value until which the threshold would need to be applied.
     * 
     */
    public Optional<String> to() {
        return Optional.ofNullable(this.to);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(OneDashboardPageWidgetTableThreshold defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String columnName;
        private @Nullable String from;
        private @Nullable String severity;
        private @Nullable String to;
        public Builder() {}
        public Builder(OneDashboardPageWidgetTableThreshold defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.columnName = defaults.columnName;
    	      this.from = defaults.from;
    	      this.severity = defaults.severity;
    	      this.to = defaults.to;
        }

        @CustomType.Setter
        public Builder columnName(@Nullable String columnName) {

            this.columnName = columnName;
            return this;
        }
        @CustomType.Setter
        public Builder from(@Nullable String from) {

            this.from = from;
            return this;
        }
        @CustomType.Setter
        public Builder severity(@Nullable String severity) {

            this.severity = severity;
            return this;
        }
        @CustomType.Setter
        public Builder to(@Nullable String to) {

            this.to = to;
            return this;
        }
        public OneDashboardPageWidgetTableThreshold build() {
            final var _resultValue = new OneDashboardPageWidgetTableThreshold();
            _resultValue.columnName = columnName;
            _resultValue.from = from;
            _resultValue.severity = severity;
            _resultValue.to = to;
            return _resultValue;
        }
    }
}
