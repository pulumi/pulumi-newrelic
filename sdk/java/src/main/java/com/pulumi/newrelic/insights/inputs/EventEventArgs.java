// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.insights.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.newrelic.insights.inputs.EventEventAttributeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventEventArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventEventArgs Empty = new EventEventArgs();

    @Import(name="attributes", required=true)
    private Output<List<EventEventAttributeArgs>> attributes;

    public Output<List<EventEventAttributeArgs>> attributes() {
        return this.attributes;
    }

    @Import(name="timestamp")
    private @Nullable Output<Integer> timestamp;

    public Optional<Output<Integer>> timestamp() {
        return Optional.ofNullable(this.timestamp);
    }

    @Import(name="type", required=true)
    private Output<String> type;

    public Output<String> type() {
        return this.type;
    }

    private EventEventArgs() {}

    private EventEventArgs(EventEventArgs $) {
        this.attributes = $.attributes;
        this.timestamp = $.timestamp;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventEventArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventEventArgs $;

        public Builder() {
            $ = new EventEventArgs();
        }

        public Builder(EventEventArgs defaults) {
            $ = new EventEventArgs(Objects.requireNonNull(defaults));
        }

        public Builder attributes(Output<List<EventEventAttributeArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        public Builder attributes(List<EventEventAttributeArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        public Builder attributes(EventEventAttributeArgs... attributes) {
            return attributes(List.of(attributes));
        }

        public Builder timestamp(@Nullable Output<Integer> timestamp) {
            $.timestamp = timestamp;
            return this;
        }

        public Builder timestamp(Integer timestamp) {
            return timestamp(Output.of(timestamp));
        }

        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        public Builder type(String type) {
            return type(Output.of(type));
        }

        public EventEventArgs build() {
            $.attributes = Objects.requireNonNull($.attributes, "expected parameter 'attributes' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
