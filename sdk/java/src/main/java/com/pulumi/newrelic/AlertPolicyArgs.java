// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AlertPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final AlertPolicyArgs Empty = new AlertPolicyArgs();

    /**
     * The New Relic account ID to operate on.
     * 
     */
    @Import(name="accountId")
    private @Nullable Output<String> accountId;

    /**
     * @return The New Relic account ID to operate on.
     * 
     */
    public Optional<Output<String>> accountId() {
        return Optional.ofNullable(this.accountId);
    }

    /**
     * @deprecated
     * The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider.
     * 
     */
    @Deprecated /* The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider. */
    @Import(name="channelIds")
    private @Nullable Output<List<String>> channelIds;

    /**
     * @deprecated
     * The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider.
     * 
     */
    @Deprecated /* The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider. */
    public Optional<Output<List<String>>> channelIds() {
        return Optional.ofNullable(this.channelIds);
    }

    /**
     * The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default
     * is PER_POLICY.
     * 
     */
    @Import(name="incidentPreference")
    private @Nullable Output<String> incidentPreference;

    /**
     * @return The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default
     * is PER_POLICY.
     * 
     */
    public Optional<Output<String>> incidentPreference() {
        return Optional.ofNullable(this.incidentPreference);
    }

    /**
     * The name of the policy.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the policy.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private AlertPolicyArgs() {}

    private AlertPolicyArgs(AlertPolicyArgs $) {
        this.accountId = $.accountId;
        this.channelIds = $.channelIds;
        this.incidentPreference = $.incidentPreference;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AlertPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AlertPolicyArgs $;

        public Builder() {
            $ = new AlertPolicyArgs();
        }

        public Builder(AlertPolicyArgs defaults) {
            $ = new AlertPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountId The New Relic account ID to operate on.
         * 
         * @return builder
         * 
         */
        public Builder accountId(@Nullable Output<String> accountId) {
            $.accountId = accountId;
            return this;
        }

        /**
         * @param accountId The New Relic account ID to operate on.
         * 
         * @return builder
         * 
         */
        public Builder accountId(String accountId) {
            return accountId(Output.of(accountId));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider.
         * 
         */
        @Deprecated /* The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider. */
        public Builder channelIds(@Nullable Output<List<String>> channelIds) {
            $.channelIds = channelIds;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider.
         * 
         */
        @Deprecated /* The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider. */
        public Builder channelIds(List<String> channelIds) {
            return channelIds(Output.of(channelIds));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider.
         * 
         */
        @Deprecated /* The `channel_ids` attribute is deprecated and will be removed in the next major release of the provider. */
        public Builder channelIds(String... channelIds) {
            return channelIds(List.of(channelIds));
        }

        /**
         * @param incidentPreference The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default
         * is PER_POLICY.
         * 
         * @return builder
         * 
         */
        public Builder incidentPreference(@Nullable Output<String> incidentPreference) {
            $.incidentPreference = incidentPreference;
            return this;
        }

        /**
         * @param incidentPreference The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default
         * is PER_POLICY.
         * 
         * @return builder
         * 
         */
        public Builder incidentPreference(String incidentPreference) {
            return incidentPreference(Output.of(incidentPreference));
        }

        /**
         * @param name The name of the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the policy.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public AlertPolicyArgs build() {
            return $;
        }
    }

}
