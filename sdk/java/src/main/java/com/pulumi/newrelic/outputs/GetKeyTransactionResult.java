// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.newrelic.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetKeyTransactionResult {
    private String accountId;
    /**
     * @return Domain of the key transaction in New Relic.
     * 
     */
    private String domain;
    /**
     * @return GUID of the key transaction in New Relic.
     * 
     */
    private String guid;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return Type of the key transaction in New Relic.
     * 
     */
    private String type;

    private GetKeyTransactionResult() {}
    public String accountId() {
        return this.accountId;
    }
    /**
     * @return Domain of the key transaction in New Relic.
     * 
     */
    public String domain() {
        return this.domain;
    }
    /**
     * @return GUID of the key transaction in New Relic.
     * 
     */
    public String guid() {
        return this.guid;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Type of the key transaction in New Relic.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetKeyTransactionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountId;
        private String domain;
        private String guid;
        private String id;
        private String name;
        private String type;
        public Builder() {}
        public Builder(GetKeyTransactionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountId = defaults.accountId;
    	      this.domain = defaults.domain;
    	      this.guid = defaults.guid;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accountId(String accountId) {
            if (accountId == null) {
              throw new MissingRequiredPropertyException("GetKeyTransactionResult", "accountId");
            }
            this.accountId = accountId;
            return this;
        }
        @CustomType.Setter
        public Builder domain(String domain) {
            if (domain == null) {
              throw new MissingRequiredPropertyException("GetKeyTransactionResult", "domain");
            }
            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder guid(String guid) {
            if (guid == null) {
              throw new MissingRequiredPropertyException("GetKeyTransactionResult", "guid");
            }
            this.guid = guid;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetKeyTransactionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetKeyTransactionResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetKeyTransactionResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetKeyTransactionResult build() {
            final var _resultValue = new GetKeyTransactionResult();
            _resultValue.accountId = accountId;
            _resultValue.domain = domain;
            _resultValue.guid = guid;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
