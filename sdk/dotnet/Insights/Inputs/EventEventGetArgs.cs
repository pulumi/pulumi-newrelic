// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Insights.Inputs
{

    public sealed class EventEventGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("attributes", required: true)]
        private InputList<Inputs.EventEventAttributeGetArgs>? _attributes;

        /// <summary>
        /// An attribute to include in your event payload. Multiple attribute blocks can be defined for an event.
        /// </summary>
        public InputList<Inputs.EventEventAttributeGetArgs> Attributes
        {
            get => _attributes ?? (_attributes = new InputList<Inputs.EventEventAttributeGetArgs>());
            set => _attributes = value;
        }

        /// <summary>
        /// Must be a Unix epoch timestamp. You can define timestamps either in seconds or in milliseconds.
        /// </summary>
        [Input("timestamp")]
        public Input<int>? Timestamp { get; set; }

        /// <summary>
        /// The event's name. Can be a combination of alphanumeric characters, underscores, and colons.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public EventEventGetArgs()
        {
        }
        public static new EventEventGetArgs Empty => new EventEventGetArgs();
    }
}
