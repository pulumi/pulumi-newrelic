// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Synthetics
{
    public static class GetMonitor
    {
        /// <summary>
        /// Use this data source to get information about a specific synthetics monitor in New Relic that already exists. This can be used to set up a Synthetics alert condition.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using NewRelic = Pulumi.NewRelic;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var bar = Output.Create(NewRelic.Synthetics.GetMonitor.InvokeAsync(new NewRelic.Synthetics.GetMonitorArgs
        ///         {
        ///             Name = "bar",
        ///         }));
        ///         var baz = new NewRelic.Synthetics.AlertCondition("baz", new NewRelic.Synthetics.AlertConditionArgs
        ///         {
        ///             PolicyId = newrelic_alert_policy.Foo.Id,
        ///             MonitorId = bar.Apply(bar =&gt; bar.Id),
        ///             RunbookUrl = "https://www.example.com",
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetMonitorResult> InvokeAsync(GetMonitorArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetMonitorResult>("newrelic:synthetics/getMonitor:getMonitor", args ?? new GetMonitorArgs(), options.WithVersion());
    }


    public sealed class GetMonitorArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the synthetics monitor in New Relic.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetMonitorArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetMonitorResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The ID of the synthetics monitor.
        /// </summary>
        public readonly string MonitorId;
        public readonly string Name;

        [OutputConstructor]
        private GetMonitorResult(
            string id,

            string monitorId,

            string name)
        {
            Id = id;
            MonitorId = monitorId;
            Name = name;
        }
    }
}
