// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Synthetics
{
    public static class GetSecureCredential
    {
        /// <summary>
        /// Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
        /// 
        /// Note that the secure credential's value is not returned as an attribute for security reasons.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using NewRelic = Pulumi.NewRelic;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var foo = Output.Create(NewRelic.Synthetics.GetSecureCredential.InvokeAsync(new NewRelic.Synthetics.GetSecureCredentialArgs
        ///         {
        ///             Key = "MY_KEY",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// 
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSecureCredentialResult> InvokeAsync(GetSecureCredentialArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSecureCredentialResult>("newrelic:synthetics/getSecureCredential:getSecureCredential", args ?? new GetSecureCredentialArgs(), options.WithVersion());
    }


    public sealed class GetSecureCredentialArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The secure credential's key name.  Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        public GetSecureCredentialArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSecureCredentialResult
    {
        /// <summary>
        /// The time the secure credential was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The secure credential's description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Key;
        /// <summary>
        /// The time the secure credential was last updated.
        /// </summary>
        public readonly string LastUpdated;

        [OutputConstructor]
        private GetSecureCredentialResult(
            string createdAt,

            string description,

            string id,

            string key,

            string lastUpdated)
        {
            CreatedAt = createdAt;
            Description = description;
            Id = id;
            Key = key;
            LastUpdated = lastUpdated;
        }
    }
}
