// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Plugins.Inputs
{

    public sealed class ApplicationSettingsTransactionTracerArgs : global::Pulumi.ResourceArgs
    {
        [Input("explainQueryPlans")]
        private InputList<Inputs.ApplicationSettingsTransactionTracerExplainQueryPlanArgs>? _explainQueryPlans;

        /// <summary>
        /// Configuration block for query plans. Including this block enables the capture of query plans. The following arguments are supported:
        /// </summary>
        public InputList<Inputs.ApplicationSettingsTransactionTracerExplainQueryPlanArgs> ExplainQueryPlans
        {
            get => _explainQueryPlans ?? (_explainQueryPlans = new InputList<Inputs.ApplicationSettingsTransactionTracerExplainQueryPlanArgs>());
            set => _explainQueryPlans = value;
        }

        /// <summary>
        /// Configuration block for SQL logging.  Including this block enables SQL logging. The following arguments are supported:
        /// </summary>
        [Input("sql")]
        public Input<Inputs.ApplicationSettingsTransactionTracerSqlArgs>? Sql { get; set; }

        /// <summary>
        /// The response time threshold for collecting stack traces.
        /// </summary>
        [Input("stackTraceThresholdValue")]
        public Input<double>? StackTraceThresholdValue { get; set; }

        /// <summary>
        /// The type of threshold for transactions. Valid values are `VALUE`,`APDEX_F`(4 times your apdex target)
        /// </summary>
        [Input("transactionThresholdType")]
        public Input<string>? TransactionThresholdType { get; set; }

        /// <summary>
        /// The threshold value for transactions(in seconds).
        /// </summary>
        [Input("transactionThresholdValue")]
        public Input<double>? TransactionThresholdValue { get; set; }

        public ApplicationSettingsTransactionTracerArgs()
        {
        }
        public static new ApplicationSettingsTransactionTracerArgs Empty => new ApplicationSettingsTransactionTracerArgs();
    }
}
