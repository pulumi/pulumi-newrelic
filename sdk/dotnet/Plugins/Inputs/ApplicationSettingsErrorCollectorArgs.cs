// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Plugins.Inputs
{

    public sealed class ApplicationSettingsErrorCollectorArgs : global::Pulumi.ResourceArgs
    {
        [Input("expectedErrorClasses")]
        private InputList<string>? _expectedErrorClasses;

        /// <summary>
        /// A list of expected error classes.
        /// </summary>
        public InputList<string> ExpectedErrorClasses
        {
            get => _expectedErrorClasses ?? (_expectedErrorClasses = new InputList<string>());
            set => _expectedErrorClasses = value;
        }

        [Input("expectedErrorCodes")]
        private InputList<string>? _expectedErrorCodes;

        /// <summary>
        /// A list of expected error codes(any status code between 100-900).
        /// </summary>
        public InputList<string> ExpectedErrorCodes
        {
            get => _expectedErrorCodes ?? (_expectedErrorCodes = new InputList<string>());
            set => _expectedErrorCodes = value;
        }

        [Input("ignoredErrorClasses")]
        private InputList<string>? _ignoredErrorClasses;

        /// <summary>
        /// A list of ignored error classes.
        /// </summary>
        public InputList<string> IgnoredErrorClasses
        {
            get => _ignoredErrorClasses ?? (_ignoredErrorClasses = new InputList<string>());
            set => _ignoredErrorClasses = value;
        }

        [Input("ignoredErrorCodes")]
        private InputList<string>? _ignoredErrorCodes;

        /// <summary>
        /// A list of ignored error codes(any status code between 100-900).
        /// </summary>
        public InputList<string> IgnoredErrorCodes
        {
            get => _ignoredErrorCodes ?? (_ignoredErrorCodes = new InputList<string>());
            set => _ignoredErrorCodes = value;
        }

        public ApplicationSettingsErrorCollectorArgs()
        {
        }
        public static new ApplicationSettingsErrorCollectorArgs Empty => new ApplicationSettingsErrorCollectorArgs();
    }
}
