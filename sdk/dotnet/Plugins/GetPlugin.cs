// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Plugins
{
    public static class GetPlugin
    {
        /// <summary>
        /// New Relic Plugins reached end of life Wednesday June 16, 2021.
        /// 
        /// **This data source has been removed.**
        /// 
        /// For more information, [click here](https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267)
        /// </summary>
        public static Task<GetPluginResult> InvokeAsync(GetPluginArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPluginResult>("newrelic:plugins/getPlugin:getPlugin", args ?? new GetPluginArgs(), options.WithDefaults());

        /// <summary>
        /// New Relic Plugins reached end of life Wednesday June 16, 2021.
        /// 
        /// **This data source has been removed.**
        /// 
        /// For more information, [click here](https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267)
        /// </summary>
        public static Output<GetPluginResult> Invoke(GetPluginInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetPluginResult>("newrelic:plugins/getPlugin:getPlugin", args ?? new GetPluginInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPluginArgs : global::Pulumi.InvokeArgs
    {
        [Input("guid", required: true)]
        public string Guid { get; set; } = null!;

        public GetPluginArgs()
        {
        }
        public static new GetPluginArgs Empty => new GetPluginArgs();
    }

    public sealed class GetPluginInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("guid", required: true)]
        public Input<string> Guid { get; set; } = null!;

        public GetPluginInvokeArgs()
        {
        }
        public static new GetPluginInvokeArgs Empty => new GetPluginInvokeArgs();
    }


    [OutputType]
    public sealed class GetPluginResult
    {
        public readonly string Guid;
        public readonly string Id;

        [OutputConstructor]
        private GetPluginResult(
            string guid,

            string id)
        {
            Guid = guid;
            Id = id;
        }
    }
}
