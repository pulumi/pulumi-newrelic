// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Plugins
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get information about a single plugin component in New Relic.
        /// 
        /// Each plugin component reporting into to New Relic is assigned a unique ID. Once you have a plugin component reporting data into your account, its component ID can be used to create Plugins Alert Conditions.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/d/plugin_component.html.markdown.
        /// </summary>
        public static Task<GetPluginComponentResult> GetPluginComponent(GetPluginComponentArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetPluginComponentResult>("newrelic:plugins/getPluginComponent:getPluginComponent", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetPluginComponentArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The name of the plugin component.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The ID of the plugin instance this component belongs to.
        /// </summary>
        [Input("pluginId", required: true)]
        public Input<int> PluginId { get; set; } = null!;

        public GetPluginComponentArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetPluginComponentResult
    {
        /// <summary>
        /// The health status of the plugin component.
        /// </summary>
        public readonly string HealthStatus;
        /// <summary>
        /// The ID of the plugin component.
        /// </summary>
        public readonly string Id;
        public readonly string Name;
        public readonly int PluginId;

        [OutputConstructor]
        private GetPluginComponentResult(
            string healthStatus,
            string id,
            string name,
            int pluginId)
        {
            HealthStatus = healthStatus;
            Id = id;
            Name = name;
            PluginId = pluginId;
        }
    }
}
