// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Inputs
{

    public sealed class NrqlAlertConditionCriticalPredictionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// BETA PREVIEW: the `predict_by` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
        /// </summary>
        [Input("predictBy")]
        public Input<int>? PredictBy { get; set; }

        /// <summary>
        /// BETA PREVIEW: the `prefer_prediction_violation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `prefer_prediction_violation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
        /// </summary>
        [Input("preferPredictionViolation")]
        public Input<bool>? PreferPredictionViolation { get; set; }

        public NrqlAlertConditionCriticalPredictionArgs()
        {
        }
        public static new NrqlAlertConditionCriticalPredictionArgs Empty => new NrqlAlertConditionCriticalPredictionArgs();
    }
}
