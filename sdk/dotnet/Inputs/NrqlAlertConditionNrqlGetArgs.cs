// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Inputs
{

    public sealed class NrqlAlertConditionNrqlGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to `account_id` if unspecified.
        /// </summary>
        [Input("dataAccountId")]
        public Input<string>? DataAccountId { get; set; }

        /// <summary>
        /// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluation_offset`.
        /// </summary>
        [Input("evaluationOffset")]
        public Input<int>? EvaluationOffset { get; set; }

        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        /// <summary>
        /// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `since_value`.
        /// </summary>
        [Input("sinceValue")]
        public Input<string>? SinceValue { get; set; }

        public NrqlAlertConditionNrqlGetArgs()
        {
        }
        public static new NrqlAlertConditionNrqlGetArgs Empty => new NrqlAlertConditionNrqlGetArgs();
    }
}
