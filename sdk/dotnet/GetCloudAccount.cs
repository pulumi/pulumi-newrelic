// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic
{
    public static class GetCloudAccount
    {
        /// <summary>
        /// Use this data source to get information about a specific cloud account linked to New Relic.
        /// Accounts can be located by a combination of New Relic Account ID, name and cloud provider (aws, gcp, azure, etc). Name and cloud provider are required attributes. If no account_id is specified on the resource the provider level account_id will be used. 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using NewRelic = Pulumi.NewRelic;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var account = Output.Create(NewRelic.GetCloudAccount.InvokeAsync(new NewRelic.GetCloudAccountArgs
        ///         {
        ///             AccountId = 12345,
        ///             CloudProvider = "aws",
        ///             Name = "my aws account",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetCloudAccountResult> InvokeAsync(GetCloudAccountArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetCloudAccountResult>("newrelic:index/getCloudAccount:getCloudAccount", args ?? new GetCloudAccountArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to get information about a specific cloud account linked to New Relic.
        /// Accounts can be located by a combination of New Relic Account ID, name and cloud provider (aws, gcp, azure, etc). Name and cloud provider are required attributes. If no account_id is specified on the resource the provider level account_id will be used. 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using NewRelic = Pulumi.NewRelic;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var account = Output.Create(NewRelic.GetCloudAccount.InvokeAsync(new NewRelic.GetCloudAccountArgs
        ///         {
        ///             AccountId = 12345,
        ///             CloudProvider = "aws",
        ///             Name = "my aws account",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetCloudAccountResult> Invoke(GetCloudAccountInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetCloudAccountResult>("newrelic:index/getCloudAccount:getCloudAccount", args ?? new GetCloudAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudAccountArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account ID in New Relic.
        /// </summary>
        [Input("accountId")]
        public int? AccountId { get; set; }

        /// <summary>
        /// The cloud provider of the account (aws, gcp, azure, etc)
        /// </summary>
        [Input("cloudProvider", required: true)]
        public string CloudProvider { get; set; } = null!;

        /// <summary>
        /// The cloud account name in New Relic.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetCloudAccountArgs()
        {
        }
    }

    public sealed class GetCloudAccountInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The account ID in New Relic.
        /// </summary>
        [Input("accountId")]
        public Input<int>? AccountId { get; set; }

        /// <summary>
        /// The cloud provider of the account (aws, gcp, azure, etc)
        /// </summary>
        [Input("cloudProvider", required: true)]
        public Input<string> CloudProvider { get; set; } = null!;

        /// <summary>
        /// The cloud account name in New Relic.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetCloudAccountInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetCloudAccountResult
    {
        public readonly int? AccountId;
        public readonly string CloudProvider;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Name;

        [OutputConstructor]
        private GetCloudAccountResult(
            int? accountId,

            string cloudProvider,

            string id,

            string name)
        {
            AccountId = accountId;
            CloudProvider = cloudProvider;
            Id = id;
            Name = name;
        }
    }
}
