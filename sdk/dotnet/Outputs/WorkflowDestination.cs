// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Outputs
{

    [OutputType]
    public sealed class WorkflowDestination
    {
        /// <summary>
        /// (Required) Destination's channel id.
        /// </summary>
        public readonly string ChannelId;
        /// <summary>
        /// The name of the workflow.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// List of triggers to notify about in this destination configuration.
        /// </summary>
        public readonly ImmutableArray<string> NotificationTriggers;
        /// <summary>
        /// (Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, SERVICE_NOW_APP, WEBHOOK, MOBILE_PUSH, SLACK, JIRA, MICROSOFT_TEAMS, WORKFLOW_AUTOMATION).
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// Update original notification message (Slack channels only)
        /// </summary>
        public readonly bool? UpdateOriginalMessage;

        [OutputConstructor]
        private WorkflowDestination(
            string channelId,

            string? name,

            ImmutableArray<string> notificationTriggers,

            string? type,

            bool? updateOriginalMessage)
        {
            ChannelId = channelId;
            Name = name;
            NotificationTriggers = notificationTriggers;
            Type = type;
            UpdateOriginalMessage = updateOriginalMessage;
        }
    }
}
