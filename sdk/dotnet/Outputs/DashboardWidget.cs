// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Outputs
{

    [OutputType]
    public sealed class DashboardWidget
    {
        public readonly int Column;
        public readonly ImmutableArray<Outputs.DashboardWidgetCompareWith> CompareWiths;
        public readonly int? DrilldownDashboardId;
        public readonly int? Duration;
        public readonly int? EndTime;
        public readonly ImmutableArray<int> EntityIds;
        public readonly string? Facet;
        public readonly int? Height;
        public readonly int? Limit;
        public readonly ImmutableArray<Outputs.DashboardWidgetMetric> Metrics;
        public readonly string? Notes;
        public readonly string? Nrql;
        public readonly string? OrderBy;
        public readonly string? RawMetricName;
        public readonly int Row;
        public readonly string? Source;
        public readonly double? ThresholdRed;
        public readonly double? ThresholdYellow;
        /// <summary>
        /// The title of the dashboard.
        /// </summary>
        public readonly string Title;
        public readonly string Visualization;
        public readonly int? WidgetId;
        public readonly int? Width;

        [OutputConstructor]
        private DashboardWidget(
            int column,

            ImmutableArray<Outputs.DashboardWidgetCompareWith> compareWiths,

            int? drilldownDashboardId,

            int? duration,

            int? endTime,

            ImmutableArray<int> entityIds,

            string? facet,

            int? height,

            int? limit,

            ImmutableArray<Outputs.DashboardWidgetMetric> metrics,

            string? notes,

            string? nrql,

            string? orderBy,

            string? rawMetricName,

            int row,

            string? source,

            double? thresholdRed,

            double? thresholdYellow,

            string title,

            string visualization,

            int? widgetId,

            int? width)
        {
            Column = column;
            CompareWiths = compareWiths;
            DrilldownDashboardId = drilldownDashboardId;
            Duration = duration;
            EndTime = endTime;
            EntityIds = entityIds;
            Facet = facet;
            Height = height;
            Limit = limit;
            Metrics = metrics;
            Notes = notes;
            Nrql = nrql;
            OrderBy = orderBy;
            RawMetricName = rawMetricName;
            Row = row;
            Source = source;
            ThresholdRed = thresholdRed;
            ThresholdYellow = thresholdYellow;
            Title = title;
            Visualization = visualization;
            WidgetId = widgetId;
            Width = width;
        }
    }
}
