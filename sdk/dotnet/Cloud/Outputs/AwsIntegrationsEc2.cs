// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Cloud.Outputs
{

    [OutputType]
    public sealed class AwsIntegrationsEc2
    {
        /// <summary>
        /// Specify each AWS region that includes the resources that you want to monitor.  
        /// &lt;/details&gt;
        /// </summary>
        public readonly ImmutableArray<string> AwsRegions;
        /// <summary>
        /// Specify if the old legacy metadata and tag names have to be kept, it will consume more ingest data size.
        /// </summary>
        public readonly bool? DuplicateEc2Tags;
        /// <summary>
        /// Specify if IP addresses of ec2 instance should be collected.
        /// </summary>
        public readonly bool? FetchIpAddresses;
        /// <summary>
        /// The data polling interval in seconds.
        /// 
        /// &lt;details&gt;
        /// &lt;summary&gt; Some integration types support an additional set of arguments. Expand this section to take a look at these supported arguments. &lt;/summary&gt;
        /// </summary>
        public readonly int? MetricsPollingInterval;
        /// <summary>
        /// Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.
        /// </summary>
        public readonly string? TagKey;
        /// <summary>
        /// Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.
        /// </summary>
        public readonly string? TagValue;

        [OutputConstructor]
        private AwsIntegrationsEc2(
            ImmutableArray<string> awsRegions,

            bool? duplicateEc2Tags,

            bool? fetchIpAddresses,

            int? metricsPollingInterval,

            string? tagKey,

            string? tagValue)
        {
            AwsRegions = awsRegions;
            DuplicateEc2Tags = duplicateEc2Tags;
            FetchIpAddresses = fetchIpAddresses;
            MetricsPollingInterval = metricsPollingInterval;
            TagKey = tagKey;
            TagValue = tagValue;
        }
    }
}
