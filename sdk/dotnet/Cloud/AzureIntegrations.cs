// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Cloud
{
    /// <summary>
    /// Use this resource to integrate Azure services with New Relic.
    /// 
    /// ## Prerequisite
    /// 
    /// To start receiving Azure data with New Relic Azure integrations, connect your Azure account to New Relic infrastructure monitoring. If you don't have one already, create a New Relic account. It's free, forever.
    /// 
    /// Setup is required for this resource to work properly. This resource assumes you have linked an Azure account to New Relic.
    /// 
    /// You can find instructions on how to set up Azure on [our documentation](https://docs.newrelic.com/docs/infrastructure/microsoft-azure-integrations/get-started/activate-azure-integrations/).
    /// 
    /// ## Example Usage
    /// 
    /// Leave an integration block empty to use its default configuration. You can also use the full example, including the Azure set up, found in our guides.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using NewRelic = Pulumi.NewRelic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new NewRelic.Cloud.AzureLinkAccount("foo", new()
    ///     {
    ///         AccountId = "The New Relic account ID where you want to link the Azure account",
    ///         ApplicationId = "ID of the application",
    ///         ClientSecret = "Secret value of client's Azure account",
    ///         SubscriptionId = "Subscription ID of Azure",
    ///         TenantId = "Tenant ID of the Azure",
    ///         Name = "Name of the linked account",
    ///     });
    /// 
    ///     var fooAzureIntegrations = new NewRelic.Cloud.AzureIntegrations("foo", new()
    ///     {
    ///         LinkedAccountId = foo.Id,
    ///         AccountId = "The New Relic account ID",
    ///         ApiManagement = new NewRelic.Cloud.Inputs.AzureIntegrationsApiManagementArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         AppGateway = new NewRelic.Cloud.Inputs.AzureIntegrationsAppGatewayArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         AppService = new NewRelic.Cloud.Inputs.AzureIntegrationsAppServiceArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Containers = new NewRelic.Cloud.Inputs.AzureIntegrationsContainersArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         CosmosDb = new NewRelic.Cloud.Inputs.AzureIntegrationsCosmosDbArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         CostManagement = new NewRelic.Cloud.Inputs.AzureIntegrationsCostManagementArgs
    ///         {
    ///             MetricsPollingInterval = 3600,
    ///             TagKeys = new[]
    ///             {
    ///                 "tag_keys",
    ///             },
    ///         },
    ///         DataFactory = new NewRelic.Cloud.Inputs.AzureIntegrationsDataFactoryArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         EventHub = new NewRelic.Cloud.Inputs.AzureIntegrationsEventHubArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         ExpressRoute = new NewRelic.Cloud.Inputs.AzureIntegrationsExpressRouteArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Firewalls = new NewRelic.Cloud.Inputs.AzureIntegrationsFirewallsArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         FrontDoor = new NewRelic.Cloud.Inputs.AzureIntegrationsFrontDoorArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Functions = new NewRelic.Cloud.Inputs.AzureIntegrationsFunctionsArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         KeyVault = new NewRelic.Cloud.Inputs.AzureIntegrationsKeyVaultArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         LoadBalancer = new NewRelic.Cloud.Inputs.AzureIntegrationsLoadBalancerArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         LogicApps = new NewRelic.Cloud.Inputs.AzureIntegrationsLogicAppsArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         MachineLearning = new NewRelic.Cloud.Inputs.AzureIntegrationsMachineLearningArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         MariaDb = new NewRelic.Cloud.Inputs.AzureIntegrationsMariaDbArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Monitor = new NewRelic.Cloud.Inputs.AzureIntegrationsMonitorArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///             IncludeTags = new[]
    ///             {
    ///                 "env:production",
    ///             },
    ///             ExcludeTags = new[]
    ///             {
    ///                 "env:staging",
    ///                 "env:testing",
    ///             },
    ///             Enabled = true,
    ///             ResourceTypes = new[]
    ///             {
    ///                 "microsoft.datashare/accounts",
    ///             },
    ///         },
    ///         Mysql = new NewRelic.Cloud.Inputs.AzureIntegrationsMysqlArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         MysqlFlexible = new NewRelic.Cloud.Inputs.AzureIntegrationsMysqlFlexibleArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Postgresql = new NewRelic.Cloud.Inputs.AzureIntegrationsPostgresqlArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         PostgresqlFlexible = new NewRelic.Cloud.Inputs.AzureIntegrationsPostgresqlFlexibleArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         PowerBiDedicated = new NewRelic.Cloud.Inputs.AzureIntegrationsPowerBiDedicatedArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         RedisCache = new NewRelic.Cloud.Inputs.AzureIntegrationsRedisCacheArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         ServiceBus = new NewRelic.Cloud.Inputs.AzureIntegrationsServiceBusArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Sql = new NewRelic.Cloud.Inputs.AzureIntegrationsSqlArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         SqlManaged = new NewRelic.Cloud.Inputs.AzureIntegrationsSqlManagedArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Storage = new NewRelic.Cloud.Inputs.AzureIntegrationsStorageArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         VirtualMachine = new NewRelic.Cloud.Inputs.AzureIntegrationsVirtualMachineArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         VirtualNetworks = new NewRelic.Cloud.Inputs.AzureIntegrationsVirtualNetworksArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         Vms = new NewRelic.Cloud.Inputs.AzureIntegrationsVmsArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///         VpnGateway = new NewRelic.Cloud.Inputs.AzureIntegrationsVpnGatewayArgs
    ///         {
    ///             MetricsPollingInterval = 1200,
    ///             ResourceGroups = new[]
    ///             {
    ///                 "resource_groups",
    ///             },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Linked Azure accounts can be imported using `id`, you can find the `id` of existing Azure linked accounts in Azure dashboard under Infrastructure in NewRelic.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import newrelic:cloud/azureIntegrations:AzureIntegrations foo &lt;id&gt;
    /// ```
    /// </summary>
    [NewRelicResourceType("newrelic:cloud/azureIntegrations:AzureIntegrations")]
    public partial class AzureIntegrations : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
        /// </summary>
        [Output("accountId")]
        public Output<int> AccountId { get; private set; } = null!;

        /// <summary>
        /// Azure API Management. See Integration blocks below for details.
        /// </summary>
        [Output("apiManagement")]
        public Output<Outputs.AzureIntegrationsApiManagement?> ApiManagement { get; private set; } = null!;

        /// <summary>
        /// Azure App Gateway. See Integration blocks below for details.
        /// </summary>
        [Output("appGateway")]
        public Output<Outputs.AzureIntegrationsAppGateway?> AppGateway { get; private set; } = null!;

        /// <summary>
        /// Azure App Service. See Integration blocks below for details.
        /// </summary>
        [Output("appService")]
        public Output<Outputs.AzureIntegrationsAppService?> AppService { get; private set; } = null!;

        /// <summary>
        /// Azure Containers. See Integration blocks below for details.
        /// </summary>
        [Output("containers")]
        public Output<Outputs.AzureIntegrationsContainers?> Containers { get; private set; } = null!;

        /// <summary>
        /// Azure CosmosDB. See Integration blocks below for details.
        /// </summary>
        [Output("cosmosDb")]
        public Output<Outputs.AzureIntegrationsCosmosDb?> CosmosDb { get; private set; } = null!;

        /// <summary>
        /// Azure Cost Management. See Integration blocks below for details.
        /// </summary>
        [Output("costManagement")]
        public Output<Outputs.AzureIntegrationsCostManagement?> CostManagement { get; private set; } = null!;

        /// <summary>
        /// Azure Data Factory. See Integration blocks below for details.
        /// </summary>
        [Output("dataFactory")]
        public Output<Outputs.AzureIntegrationsDataFactory?> DataFactory { get; private set; } = null!;

        /// <summary>
        /// Azure Event Hub. See Integration blocks below for details.
        /// </summary>
        [Output("eventHub")]
        public Output<Outputs.AzureIntegrationsEventHub?> EventHub { get; private set; } = null!;

        /// <summary>
        /// Azure Express Route. See Integration blocks below for details.
        /// </summary>
        [Output("expressRoute")]
        public Output<Outputs.AzureIntegrationsExpressRoute?> ExpressRoute { get; private set; } = null!;

        /// <summary>
        /// Azure Firewalls. See Integration blocks below for details.
        /// </summary>
        [Output("firewalls")]
        public Output<Outputs.AzureIntegrationsFirewalls?> Firewalls { get; private set; } = null!;

        /// <summary>
        /// Azure Front Door. See Integration blocks below for details.
        /// </summary>
        [Output("frontDoor")]
        public Output<Outputs.AzureIntegrationsFrontDoor?> FrontDoor { get; private set; } = null!;

        /// <summary>
        /// Azure Functions. See Integration blocks below for details.
        /// </summary>
        [Output("functions")]
        public Output<Outputs.AzureIntegrationsFunctions?> Functions { get; private set; } = null!;

        /// <summary>
        /// Azure Key Vault. See Integration blocks below for details.
        /// </summary>
        [Output("keyVault")]
        public Output<Outputs.AzureIntegrationsKeyVault?> KeyVault { get; private set; } = null!;

        /// <summary>
        /// The ID of the linked Azure account in New Relic.
        /// </summary>
        [Output("linkedAccountId")]
        public Output<int> LinkedAccountId { get; private set; } = null!;

        /// <summary>
        /// Azure Load Balancer. See Integration blocks below for details.
        /// </summary>
        [Output("loadBalancer")]
        public Output<Outputs.AzureIntegrationsLoadBalancer?> LoadBalancer { get; private set; } = null!;

        /// <summary>
        /// Azure Logic Apps. See Integration blocks below for details.
        /// </summary>
        [Output("logicApps")]
        public Output<Outputs.AzureIntegrationsLogicApps?> LogicApps { get; private set; } = null!;

        /// <summary>
        /// Azure Machine Learning. See Integration blocks below for details.
        /// </summary>
        [Output("machineLearning")]
        public Output<Outputs.AzureIntegrationsMachineLearning?> MachineLearning { get; private set; } = null!;

        /// <summary>
        /// Azure MariaDB. See Integration blocks below for details.
        /// </summary>
        [Output("mariaDb")]
        public Output<Outputs.AzureIntegrationsMariaDb?> MariaDb { get; private set; } = null!;

        /// <summary>
        /// Azure Monitor. See Integration blocks below for details.
        /// </summary>
        [Output("monitor")]
        public Output<Outputs.AzureIntegrationsMonitor?> Monitor { get; private set; } = null!;

        /// <summary>
        /// Azure MySQL. See Integration blocks below for details.
        /// </summary>
        [Output("mysql")]
        public Output<Outputs.AzureIntegrationsMysql?> Mysql { get; private set; } = null!;

        /// <summary>
        /// Azure MySQL Flexible Server. See Integration blocks below for details.
        /// </summary>
        [Output("mysqlFlexible")]
        public Output<Outputs.AzureIntegrationsMysqlFlexible?> MysqlFlexible { get; private set; } = null!;

        /// <summary>
        /// Azure PostgreSQL. See Integration blocks below for details.
        /// </summary>
        [Output("postgresql")]
        public Output<Outputs.AzureIntegrationsPostgresql?> Postgresql { get; private set; } = null!;

        /// <summary>
        /// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
        /// </summary>
        [Output("postgresqlFlexible")]
        public Output<Outputs.AzureIntegrationsPostgresqlFlexible?> PostgresqlFlexible { get; private set; } = null!;

        /// <summary>
        /// Azure Power BI Dedicated. See Integration blocks below for details.
        /// </summary>
        [Output("powerBiDedicated")]
        public Output<Outputs.AzureIntegrationsPowerBiDedicated?> PowerBiDedicated { get; private set; } = null!;

        /// <summary>
        /// Azure Redis Cache. See Integration blocks below for details.
        /// </summary>
        [Output("redisCache")]
        public Output<Outputs.AzureIntegrationsRedisCache?> RedisCache { get; private set; } = null!;

        /// <summary>
        /// Azure Service Bus. See Integration blocks below for details.
        /// </summary>
        [Output("serviceBus")]
        public Output<Outputs.AzureIntegrationsServiceBus?> ServiceBus { get; private set; } = null!;

        /// <summary>
        /// Azure SQL. See Integration blocks below for details.
        /// </summary>
        [Output("sql")]
        public Output<Outputs.AzureIntegrationsSql?> Sql { get; private set; } = null!;

        /// <summary>
        /// Azure SQL Managed. See Integration blocks below for details.
        /// </summary>
        [Output("sqlManaged")]
        public Output<Outputs.AzureIntegrationsSqlManaged?> SqlManaged { get; private set; } = null!;

        /// <summary>
        /// for Azure Storage. See Integration blocks below for details.
        /// </summary>
        [Output("storage")]
        public Output<Outputs.AzureIntegrationsStorage?> Storage { get; private set; } = null!;

        /// <summary>
        /// Azure Virtual machine. See Integration blocks below for details.
        /// </summary>
        [Output("virtualMachine")]
        public Output<Outputs.AzureIntegrationsVirtualMachine?> VirtualMachine { get; private set; } = null!;

        /// <summary>
        /// for Azure Virtual networks. See Integration blocks below for details.
        /// 
        /// Below argument supports the minimum metric polling interval of 3600 seconds
        /// </summary>
        [Output("virtualNetworks")]
        public Output<Outputs.AzureIntegrationsVirtualNetworks?> VirtualNetworks { get; private set; } = null!;

        /// <summary>
        /// Azure VMs. See Integration blocks below for details.
        /// </summary>
        [Output("vms")]
        public Output<Outputs.AzureIntegrationsVms?> Vms { get; private set; } = null!;

        /// <summary>
        /// Azure VPN Gateway. See Integration blocks below for details.
        /// 
        /// Below arguments supports the minimum metric polling interval of 900 seconds
        /// </summary>
        [Output("vpnGateway")]
        public Output<Outputs.AzureIntegrationsVpnGateway?> VpnGateway { get; private set; } = null!;


        /// <summary>
        /// Create a AzureIntegrations resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AzureIntegrations(string name, AzureIntegrationsArgs args, CustomResourceOptions? options = null)
            : base("newrelic:cloud/azureIntegrations:AzureIntegrations", name, args ?? new AzureIntegrationsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AzureIntegrations(string name, Input<string> id, AzureIntegrationsState? state = null, CustomResourceOptions? options = null)
            : base("newrelic:cloud/azureIntegrations:AzureIntegrations", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AzureIntegrations resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AzureIntegrations Get(string name, Input<string> id, AzureIntegrationsState? state = null, CustomResourceOptions? options = null)
        {
            return new AzureIntegrations(name, id, state, options);
        }
    }

    public sealed class AzureIntegrationsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
        /// </summary>
        [Input("accountId")]
        public Input<int>? AccountId { get; set; }

        /// <summary>
        /// Azure API Management. See Integration blocks below for details.
        /// </summary>
        [Input("apiManagement")]
        public Input<Inputs.AzureIntegrationsApiManagementArgs>? ApiManagement { get; set; }

        /// <summary>
        /// Azure App Gateway. See Integration blocks below for details.
        /// </summary>
        [Input("appGateway")]
        public Input<Inputs.AzureIntegrationsAppGatewayArgs>? AppGateway { get; set; }

        /// <summary>
        /// Azure App Service. See Integration blocks below for details.
        /// </summary>
        [Input("appService")]
        public Input<Inputs.AzureIntegrationsAppServiceArgs>? AppService { get; set; }

        /// <summary>
        /// Azure Containers. See Integration blocks below for details.
        /// </summary>
        [Input("containers")]
        public Input<Inputs.AzureIntegrationsContainersArgs>? Containers { get; set; }

        /// <summary>
        /// Azure CosmosDB. See Integration blocks below for details.
        /// </summary>
        [Input("cosmosDb")]
        public Input<Inputs.AzureIntegrationsCosmosDbArgs>? CosmosDb { get; set; }

        /// <summary>
        /// Azure Cost Management. See Integration blocks below for details.
        /// </summary>
        [Input("costManagement")]
        public Input<Inputs.AzureIntegrationsCostManagementArgs>? CostManagement { get; set; }

        /// <summary>
        /// Azure Data Factory. See Integration blocks below for details.
        /// </summary>
        [Input("dataFactory")]
        public Input<Inputs.AzureIntegrationsDataFactoryArgs>? DataFactory { get; set; }

        /// <summary>
        /// Azure Event Hub. See Integration blocks below for details.
        /// </summary>
        [Input("eventHub")]
        public Input<Inputs.AzureIntegrationsEventHubArgs>? EventHub { get; set; }

        /// <summary>
        /// Azure Express Route. See Integration blocks below for details.
        /// </summary>
        [Input("expressRoute")]
        public Input<Inputs.AzureIntegrationsExpressRouteArgs>? ExpressRoute { get; set; }

        /// <summary>
        /// Azure Firewalls. See Integration blocks below for details.
        /// </summary>
        [Input("firewalls")]
        public Input<Inputs.AzureIntegrationsFirewallsArgs>? Firewalls { get; set; }

        /// <summary>
        /// Azure Front Door. See Integration blocks below for details.
        /// </summary>
        [Input("frontDoor")]
        public Input<Inputs.AzureIntegrationsFrontDoorArgs>? FrontDoor { get; set; }

        /// <summary>
        /// Azure Functions. See Integration blocks below for details.
        /// </summary>
        [Input("functions")]
        public Input<Inputs.AzureIntegrationsFunctionsArgs>? Functions { get; set; }

        /// <summary>
        /// Azure Key Vault. See Integration blocks below for details.
        /// </summary>
        [Input("keyVault")]
        public Input<Inputs.AzureIntegrationsKeyVaultArgs>? KeyVault { get; set; }

        /// <summary>
        /// The ID of the linked Azure account in New Relic.
        /// </summary>
        [Input("linkedAccountId", required: true)]
        public Input<int> LinkedAccountId { get; set; } = null!;

        /// <summary>
        /// Azure Load Balancer. See Integration blocks below for details.
        /// </summary>
        [Input("loadBalancer")]
        public Input<Inputs.AzureIntegrationsLoadBalancerArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// Azure Logic Apps. See Integration blocks below for details.
        /// </summary>
        [Input("logicApps")]
        public Input<Inputs.AzureIntegrationsLogicAppsArgs>? LogicApps { get; set; }

        /// <summary>
        /// Azure Machine Learning. See Integration blocks below for details.
        /// </summary>
        [Input("machineLearning")]
        public Input<Inputs.AzureIntegrationsMachineLearningArgs>? MachineLearning { get; set; }

        /// <summary>
        /// Azure MariaDB. See Integration blocks below for details.
        /// </summary>
        [Input("mariaDb")]
        public Input<Inputs.AzureIntegrationsMariaDbArgs>? MariaDb { get; set; }

        /// <summary>
        /// Azure Monitor. See Integration blocks below for details.
        /// </summary>
        [Input("monitor")]
        public Input<Inputs.AzureIntegrationsMonitorArgs>? Monitor { get; set; }

        /// <summary>
        /// Azure MySQL. See Integration blocks below for details.
        /// </summary>
        [Input("mysql")]
        public Input<Inputs.AzureIntegrationsMysqlArgs>? Mysql { get; set; }

        /// <summary>
        /// Azure MySQL Flexible Server. See Integration blocks below for details.
        /// </summary>
        [Input("mysqlFlexible")]
        public Input<Inputs.AzureIntegrationsMysqlFlexibleArgs>? MysqlFlexible { get; set; }

        /// <summary>
        /// Azure PostgreSQL. See Integration blocks below for details.
        /// </summary>
        [Input("postgresql")]
        public Input<Inputs.AzureIntegrationsPostgresqlArgs>? Postgresql { get; set; }

        /// <summary>
        /// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
        /// </summary>
        [Input("postgresqlFlexible")]
        public Input<Inputs.AzureIntegrationsPostgresqlFlexibleArgs>? PostgresqlFlexible { get; set; }

        /// <summary>
        /// Azure Power BI Dedicated. See Integration blocks below for details.
        /// </summary>
        [Input("powerBiDedicated")]
        public Input<Inputs.AzureIntegrationsPowerBiDedicatedArgs>? PowerBiDedicated { get; set; }

        /// <summary>
        /// Azure Redis Cache. See Integration blocks below for details.
        /// </summary>
        [Input("redisCache")]
        public Input<Inputs.AzureIntegrationsRedisCacheArgs>? RedisCache { get; set; }

        /// <summary>
        /// Azure Service Bus. See Integration blocks below for details.
        /// </summary>
        [Input("serviceBus")]
        public Input<Inputs.AzureIntegrationsServiceBusArgs>? ServiceBus { get; set; }

        /// <summary>
        /// Azure SQL. See Integration blocks below for details.
        /// </summary>
        [Input("sql")]
        public Input<Inputs.AzureIntegrationsSqlArgs>? Sql { get; set; }

        /// <summary>
        /// Azure SQL Managed. See Integration blocks below for details.
        /// </summary>
        [Input("sqlManaged")]
        public Input<Inputs.AzureIntegrationsSqlManagedArgs>? SqlManaged { get; set; }

        /// <summary>
        /// for Azure Storage. See Integration blocks below for details.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.AzureIntegrationsStorageArgs>? Storage { get; set; }

        /// <summary>
        /// Azure Virtual machine. See Integration blocks below for details.
        /// </summary>
        [Input("virtualMachine")]
        public Input<Inputs.AzureIntegrationsVirtualMachineArgs>? VirtualMachine { get; set; }

        /// <summary>
        /// for Azure Virtual networks. See Integration blocks below for details.
        /// 
        /// Below argument supports the minimum metric polling interval of 3600 seconds
        /// </summary>
        [Input("virtualNetworks")]
        public Input<Inputs.AzureIntegrationsVirtualNetworksArgs>? VirtualNetworks { get; set; }

        /// <summary>
        /// Azure VMs. See Integration blocks below for details.
        /// </summary>
        [Input("vms")]
        public Input<Inputs.AzureIntegrationsVmsArgs>? Vms { get; set; }

        /// <summary>
        /// Azure VPN Gateway. See Integration blocks below for details.
        /// 
        /// Below arguments supports the minimum metric polling interval of 900 seconds
        /// </summary>
        [Input("vpnGateway")]
        public Input<Inputs.AzureIntegrationsVpnGatewayArgs>? VpnGateway { get; set; }

        public AzureIntegrationsArgs()
        {
        }
        public static new AzureIntegrationsArgs Empty => new AzureIntegrationsArgs();
    }

    public sealed class AzureIntegrationsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
        /// </summary>
        [Input("accountId")]
        public Input<int>? AccountId { get; set; }

        /// <summary>
        /// Azure API Management. See Integration blocks below for details.
        /// </summary>
        [Input("apiManagement")]
        public Input<Inputs.AzureIntegrationsApiManagementGetArgs>? ApiManagement { get; set; }

        /// <summary>
        /// Azure App Gateway. See Integration blocks below for details.
        /// </summary>
        [Input("appGateway")]
        public Input<Inputs.AzureIntegrationsAppGatewayGetArgs>? AppGateway { get; set; }

        /// <summary>
        /// Azure App Service. See Integration blocks below for details.
        /// </summary>
        [Input("appService")]
        public Input<Inputs.AzureIntegrationsAppServiceGetArgs>? AppService { get; set; }

        /// <summary>
        /// Azure Containers. See Integration blocks below for details.
        /// </summary>
        [Input("containers")]
        public Input<Inputs.AzureIntegrationsContainersGetArgs>? Containers { get; set; }

        /// <summary>
        /// Azure CosmosDB. See Integration blocks below for details.
        /// </summary>
        [Input("cosmosDb")]
        public Input<Inputs.AzureIntegrationsCosmosDbGetArgs>? CosmosDb { get; set; }

        /// <summary>
        /// Azure Cost Management. See Integration blocks below for details.
        /// </summary>
        [Input("costManagement")]
        public Input<Inputs.AzureIntegrationsCostManagementGetArgs>? CostManagement { get; set; }

        /// <summary>
        /// Azure Data Factory. See Integration blocks below for details.
        /// </summary>
        [Input("dataFactory")]
        public Input<Inputs.AzureIntegrationsDataFactoryGetArgs>? DataFactory { get; set; }

        /// <summary>
        /// Azure Event Hub. See Integration blocks below for details.
        /// </summary>
        [Input("eventHub")]
        public Input<Inputs.AzureIntegrationsEventHubGetArgs>? EventHub { get; set; }

        /// <summary>
        /// Azure Express Route. See Integration blocks below for details.
        /// </summary>
        [Input("expressRoute")]
        public Input<Inputs.AzureIntegrationsExpressRouteGetArgs>? ExpressRoute { get; set; }

        /// <summary>
        /// Azure Firewalls. See Integration blocks below for details.
        /// </summary>
        [Input("firewalls")]
        public Input<Inputs.AzureIntegrationsFirewallsGetArgs>? Firewalls { get; set; }

        /// <summary>
        /// Azure Front Door. See Integration blocks below for details.
        /// </summary>
        [Input("frontDoor")]
        public Input<Inputs.AzureIntegrationsFrontDoorGetArgs>? FrontDoor { get; set; }

        /// <summary>
        /// Azure Functions. See Integration blocks below for details.
        /// </summary>
        [Input("functions")]
        public Input<Inputs.AzureIntegrationsFunctionsGetArgs>? Functions { get; set; }

        /// <summary>
        /// Azure Key Vault. See Integration blocks below for details.
        /// </summary>
        [Input("keyVault")]
        public Input<Inputs.AzureIntegrationsKeyVaultGetArgs>? KeyVault { get; set; }

        /// <summary>
        /// The ID of the linked Azure account in New Relic.
        /// </summary>
        [Input("linkedAccountId")]
        public Input<int>? LinkedAccountId { get; set; }

        /// <summary>
        /// Azure Load Balancer. See Integration blocks below for details.
        /// </summary>
        [Input("loadBalancer")]
        public Input<Inputs.AzureIntegrationsLoadBalancerGetArgs>? LoadBalancer { get; set; }

        /// <summary>
        /// Azure Logic Apps. See Integration blocks below for details.
        /// </summary>
        [Input("logicApps")]
        public Input<Inputs.AzureIntegrationsLogicAppsGetArgs>? LogicApps { get; set; }

        /// <summary>
        /// Azure Machine Learning. See Integration blocks below for details.
        /// </summary>
        [Input("machineLearning")]
        public Input<Inputs.AzureIntegrationsMachineLearningGetArgs>? MachineLearning { get; set; }

        /// <summary>
        /// Azure MariaDB. See Integration blocks below for details.
        /// </summary>
        [Input("mariaDb")]
        public Input<Inputs.AzureIntegrationsMariaDbGetArgs>? MariaDb { get; set; }

        /// <summary>
        /// Azure Monitor. See Integration blocks below for details.
        /// </summary>
        [Input("monitor")]
        public Input<Inputs.AzureIntegrationsMonitorGetArgs>? Monitor { get; set; }

        /// <summary>
        /// Azure MySQL. See Integration blocks below for details.
        /// </summary>
        [Input("mysql")]
        public Input<Inputs.AzureIntegrationsMysqlGetArgs>? Mysql { get; set; }

        /// <summary>
        /// Azure MySQL Flexible Server. See Integration blocks below for details.
        /// </summary>
        [Input("mysqlFlexible")]
        public Input<Inputs.AzureIntegrationsMysqlFlexibleGetArgs>? MysqlFlexible { get; set; }

        /// <summary>
        /// Azure PostgreSQL. See Integration blocks below for details.
        /// </summary>
        [Input("postgresql")]
        public Input<Inputs.AzureIntegrationsPostgresqlGetArgs>? Postgresql { get; set; }

        /// <summary>
        /// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
        /// </summary>
        [Input("postgresqlFlexible")]
        public Input<Inputs.AzureIntegrationsPostgresqlFlexibleGetArgs>? PostgresqlFlexible { get; set; }

        /// <summary>
        /// Azure Power BI Dedicated. See Integration blocks below for details.
        /// </summary>
        [Input("powerBiDedicated")]
        public Input<Inputs.AzureIntegrationsPowerBiDedicatedGetArgs>? PowerBiDedicated { get; set; }

        /// <summary>
        /// Azure Redis Cache. See Integration blocks below for details.
        /// </summary>
        [Input("redisCache")]
        public Input<Inputs.AzureIntegrationsRedisCacheGetArgs>? RedisCache { get; set; }

        /// <summary>
        /// Azure Service Bus. See Integration blocks below for details.
        /// </summary>
        [Input("serviceBus")]
        public Input<Inputs.AzureIntegrationsServiceBusGetArgs>? ServiceBus { get; set; }

        /// <summary>
        /// Azure SQL. See Integration blocks below for details.
        /// </summary>
        [Input("sql")]
        public Input<Inputs.AzureIntegrationsSqlGetArgs>? Sql { get; set; }

        /// <summary>
        /// Azure SQL Managed. See Integration blocks below for details.
        /// </summary>
        [Input("sqlManaged")]
        public Input<Inputs.AzureIntegrationsSqlManagedGetArgs>? SqlManaged { get; set; }

        /// <summary>
        /// for Azure Storage. See Integration blocks below for details.
        /// </summary>
        [Input("storage")]
        public Input<Inputs.AzureIntegrationsStorageGetArgs>? Storage { get; set; }

        /// <summary>
        /// Azure Virtual machine. See Integration blocks below for details.
        /// </summary>
        [Input("virtualMachine")]
        public Input<Inputs.AzureIntegrationsVirtualMachineGetArgs>? VirtualMachine { get; set; }

        /// <summary>
        /// for Azure Virtual networks. See Integration blocks below for details.
        /// 
        /// Below argument supports the minimum metric polling interval of 3600 seconds
        /// </summary>
        [Input("virtualNetworks")]
        public Input<Inputs.AzureIntegrationsVirtualNetworksGetArgs>? VirtualNetworks { get; set; }

        /// <summary>
        /// Azure VMs. See Integration blocks below for details.
        /// </summary>
        [Input("vms")]
        public Input<Inputs.AzureIntegrationsVmsGetArgs>? Vms { get; set; }

        /// <summary>
        /// Azure VPN Gateway. See Integration blocks below for details.
        /// 
        /// Below arguments supports the minimum metric polling interval of 900 seconds
        /// </summary>
        [Input("vpnGateway")]
        public Input<Inputs.AzureIntegrationsVpnGatewayGetArgs>? VpnGateway { get; set; }

        public AzureIntegrationsState()
        {
        }
        public static new AzureIntegrationsState Empty => new AzureIntegrationsState();
    }
}
