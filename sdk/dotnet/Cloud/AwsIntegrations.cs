// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic.Cloud
{
    /// <summary>
    /// Use this resource to integrate AWS services with New Relic.
    /// 
    /// ## Prerequisite
    /// 
    /// Setup is required for this resource to work properly. This resource assumes you have linked an AWS account to New Relic and configured it to push metrics using CloudWatch Metric Streams.
    /// 
    /// New Relic doesn't automatically receive metrics from AWS for some services so this resource can be used to configure integrations to those services.
    /// 
    /// Using a metric stream to New Relic is the preferred way to integrate with AWS. Follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#set-up-metric-stream) to set up a metric stream. This resource supports any integration that's not available through AWS metric stream.
    /// 
    /// ## Example Usage
    /// 
    /// Leave an integration block empty to use its default configuration. You can also use the full example, including the AWS set up, found in our guides.
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using NewRelic = Pulumi.NewRelic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new NewRelic.Cloud.AwsLinkAccount("foo", new()
    ///     {
    ///         Arn = newrelicAwsRole.Arn,
    ///         MetricCollectionMode = "PULL",
    ///         Name = "foo",
    ///     });
    /// 
    ///     var bar = new NewRelic.Cloud.AwsIntegrations("bar", new()
    ///     {
    ///         LinkedAccountId = foo.Id,
    ///         Billing = new NewRelic.Cloud.Inputs.AwsIntegrationsBillingArgs
    ///         {
    ///             MetricsPollingInterval = 3600,
    ///         },
    ///         Cloudtrail = new NewRelic.Cloud.Inputs.AwsIntegrationsCloudtrailArgs
    ///         {
    ///             MetricsPollingInterval = 300,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///                 "us-east-2",
    ///             },
    ///         },
    ///         Health = new NewRelic.Cloud.Inputs.AwsIntegrationsHealthArgs
    ///         {
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         TrustedAdvisor = new NewRelic.Cloud.Inputs.AwsIntegrationsTrustedAdvisorArgs
    ///         {
    ///             MetricsPollingInterval = 3600,
    ///         },
    ///         Vpc = new NewRelic.Cloud.Inputs.AwsIntegrationsVpcArgs
    ///         {
    ///             MetricsPollingInterval = 900,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///                 "us-east-2",
    ///             },
    ///             FetchNatGateway = true,
    ///             FetchVpn = false,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         XRay = new NewRelic.Cloud.Inputs.AwsIntegrationsXRayArgs
    ///         {
    ///             MetricsPollingInterval = 300,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///                 "us-east-2",
    ///             },
    ///         },
    ///         S3 = new NewRelic.Cloud.Inputs.AwsIntegrationsS3Args
    ///         {
    ///             MetricsPollingInterval = 3600,
    ///         },
    ///         DocDb = new NewRelic.Cloud.Inputs.AwsIntegrationsDocDbArgs
    ///         {
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Sqs = new NewRelic.Cloud.Inputs.AwsIntegrationsSqsArgs
    ///         {
    ///             FetchExtendedInventory = true,
    ///             FetchTags = true,
    ///             QueuePrefixes = new[]
    ///             {
    ///                 "queue prefix",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Ebs = new NewRelic.Cloud.Inputs.AwsIntegrationsEbsArgs
    ///         {
    ///             MetricsPollingInterval = 900,
    ///             FetchExtendedInventory = true,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Alb = new NewRelic.Cloud.Inputs.AwsIntegrationsAlbArgs
    ///         {
    ///             FetchExtendedInventory = true,
    ///             FetchTags = true,
    ///             LoadBalancerPrefixes = new[]
    ///             {
    ///                 "load balancer prefix",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Elasticache = new NewRelic.Cloud.Inputs.AwsIntegrationsElasticacheArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         ApiGateway = new NewRelic.Cloud.Inputs.AwsIntegrationsApiGatewayArgs
    ///         {
    ///             MetricsPollingInterval = 300,
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             StagePrefixes = new[]
    ///             {
    ///                 "stage prefix",
    ///             },
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         AutoScaling = new NewRelic.Cloud.Inputs.AwsIntegrationsAutoScalingArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsAppSync = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsAppSyncArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsAthena = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsAthenaArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsCognito = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsCognitoArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsConnect = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsConnectArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsDirectConnect = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsDirectConnectArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsFsx = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsFsxArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsGlue = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsGlueArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsKinesisAnalytics = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsKinesisAnalyticsArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsMediaConvert = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsMediaConvertArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsMediaPackageVod = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsMediaPackageVodArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsMq = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsMqArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsMsk = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsMskArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsNeptune = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsNeptuneArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsQldb = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsQldbArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsRoute53resolver = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsRoute53resolverArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsStates = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsStatesArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsTransitGateway = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsTransitGatewayArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsWaf = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsWafArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         AwsWafv2 = new NewRelic.Cloud.Inputs.AwsIntegrationsAwsWafv2Args
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Cloudfront = new NewRelic.Cloud.Inputs.AwsIntegrationsCloudfrontArgs
    ///         {
    ///             FetchLambdasAtEdge = true,
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Dynamodb = new NewRelic.Cloud.Inputs.AwsIntegrationsDynamodbArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchExtendedInventory = true,
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Ec2 = new NewRelic.Cloud.Inputs.AwsIntegrationsEc2Args
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             DuplicateEc2Tags = true,
    ///             FetchIpAddresses = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Ecs = new NewRelic.Cloud.Inputs.AwsIntegrationsEcsArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Efs = new NewRelic.Cloud.Inputs.AwsIntegrationsEfsArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Elasticbeanstalk = new NewRelic.Cloud.Inputs.AwsIntegrationsElasticbeanstalkArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchExtendedInventory = true,
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Elasticsearch = new NewRelic.Cloud.Inputs.AwsIntegrationsElasticsearchArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchNodes = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Elb = new NewRelic.Cloud.Inputs.AwsIntegrationsElbArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchExtendedInventory = true,
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Emr = new NewRelic.Cloud.Inputs.AwsIntegrationsEmrArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Iam = new NewRelic.Cloud.Inputs.AwsIntegrationsIamArgs
    ///         {
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Iot = new NewRelic.Cloud.Inputs.AwsIntegrationsIotArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Kinesis = new NewRelic.Cloud.Inputs.AwsIntegrationsKinesisArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchShards = true,
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 900,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         KinesisFirehose = new NewRelic.Cloud.Inputs.AwsIntegrationsKinesisFirehoseArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Lambda = new NewRelic.Cloud.Inputs.AwsIntegrationsLambdaArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Rds = new NewRelic.Cloud.Inputs.AwsIntegrationsRdsArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchTags = true,
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Redshift = new NewRelic.Cloud.Inputs.AwsIntegrationsRedshiftArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///             TagKey = "tag key",
    ///             TagValue = "tag value",
    ///         },
    ///         Route53 = new NewRelic.Cloud.Inputs.AwsIntegrationsRoute53Args
    ///         {
    ///             FetchExtendedInventory = true,
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Ses = new NewRelic.Cloud.Inputs.AwsIntegrationsSesArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             MetricsPollingInterval = 300,
    ///         },
    ///         Sns = new NewRelic.Cloud.Inputs.AwsIntegrationsSnsArgs
    ///         {
    ///             AwsRegions = new[]
    ///             {
    ///                 "us-east-1",
    ///             },
    ///             FetchExtendedInventory = true,
    ///             MetricsPollingInterval = 300,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Supported AWS Integrations
    /// 
    /// &lt;details&gt;
    ///   &lt;summary&gt;Expand this section to view all supported AWS services supported, that may be integrated via this resource.&lt;/summary&gt;
    /// 
    /// |          Block          |    Description    |
    /// |-------------------------|-------------------|
    /// | `alb`                   | ALB               |
    /// | `api_gateway`           | API Gateway       |
    /// | `auto_scaling`          | Auto Scaling      |
    /// | `aws_app_sync`          | AppSync           |
    /// | `aws_athena`            | Athena            |
    /// | `aws_cognito`           | Cognito           |
    /// | `aws_connect`           | Connect           |
    /// | `aws_direct_connect`    | Direct Connect    |
    /// | `aws_fsx`               | FSx               |
    /// | `aws_glue`              | Glue              |
    /// | `aws_kinesis_analytics` | Kinesis Analytics |
    /// | `aws_media_convert`     | MediaConvert      |
    /// | `aws_media_package_vod` | Media Package VOD |
    /// | `aws_mq`                | MQ                |
    /// | `aws_msk`               | MSK               |
    /// | `aws_neptune`           | Neptune           |
    /// | `aws_qldb`              | QLDB              |
    /// | `aws_route53resolver`   | Route53 Resolver  |
    /// | `aws_states`            | States            |
    /// | `aws_transit_gateway`   | Transit Gateway   |
    /// | `aws_waf`               | WAF               |
    /// | `aws_wafv2`             | WAFv2             |
    /// | `billing`               | Billing           |
    /// | `cloudfront`            | CloudFront        |
    /// | `cloudtrail`            | CloudTrail        |
    /// | `doc_db`                | DocumentDB        |
    /// | `dynamodb`              | DynamoDB          |
    /// | `ebs`                   | EBS               |
    /// | `ec2`                   | EC2               |
    /// | `ecs`                   | ECS               |
    /// | `efs`                   | EFS               |
    /// | `elasticache`           | ElastiCache       |
    /// | `elasticbeanstalk`      | Elastic Beanstalk |
    /// | `elasticsearch`         | Elasticsearch     |
    /// | `elb`                   | ELB               |
    /// | `emr`                   | EMR               |
    /// | `health`                | Health            |
    /// | `iam`                   | IAM               |
    /// | `iot`                   | IoT               |
    /// | `kinesis`               | Kinesis           |
    /// | `kinesis_firehose`      | Kinesis Firehose  |
    /// | `lambda`                | Lambda            |
    /// | `rds`                   | RDS               |
    /// | `redshift`              | Redshift          |
    /// | `route53`               | Route53           |
    /// | `s3`                    | S3                |
    /// | `ses`                   | SES               |
    /// | `sns`                   | SNS               |
    /// | `sqs`                   | SQS               |
    /// | `trusted_advisor`       | Trusted Advisor   |
    /// | `vpc`                   | VPC               |
    /// | `x_ray`                 | X-Ray             |
    /// </summary>
    [NewRelicResourceType("newrelic:cloud/awsIntegrations:AwsIntegrations")]
    public partial class AwsIntegrations : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the account in New Relic.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// ALB integration
        /// </summary>
        [Output("alb")]
        public Output<Outputs.AwsIntegrationsAlb?> Alb { get; private set; } = null!;

        /// <summary>
        /// API Gateway integration
        /// </summary>
        [Output("apiGateway")]
        public Output<Outputs.AwsIntegrationsApiGateway?> ApiGateway { get; private set; } = null!;

        /// <summary>
        /// AutoScaling integration
        /// </summary>
        [Output("autoScaling")]
        public Output<Outputs.AwsIntegrationsAutoScaling?> AutoScaling { get; private set; } = null!;

        /// <summary>
        /// Aws Appsync integration
        /// </summary>
        [Output("awsAppSync")]
        public Output<Outputs.AwsIntegrationsAwsAppSync?> AwsAppSync { get; private set; } = null!;

        /// <summary>
        /// Aws Athena integration
        /// </summary>
        [Output("awsAthena")]
        public Output<Outputs.AwsIntegrationsAwsAthena?> AwsAthena { get; private set; } = null!;

        /// <summary>
        /// Aws Cognito integration
        /// </summary>
        [Output("awsCognito")]
        public Output<Outputs.AwsIntegrationsAwsCognito?> AwsCognito { get; private set; } = null!;

        /// <summary>
        /// Aws Connect integration
        /// </summary>
        [Output("awsConnect")]
        public Output<Outputs.AwsIntegrationsAwsConnect?> AwsConnect { get; private set; } = null!;

        /// <summary>
        /// Aws Direct Connect integration
        /// </summary>
        [Output("awsDirectConnect")]
        public Output<Outputs.AwsIntegrationsAwsDirectConnect?> AwsDirectConnect { get; private set; } = null!;

        /// <summary>
        /// Aws Fsx integration
        /// </summary>
        [Output("awsFsx")]
        public Output<Outputs.AwsIntegrationsAwsFsx?> AwsFsx { get; private set; } = null!;

        /// <summary>
        /// Aws Glue integration
        /// </summary>
        [Output("awsGlue")]
        public Output<Outputs.AwsIntegrationsAwsGlue?> AwsGlue { get; private set; } = null!;

        /// <summary>
        /// Aws Kinesis Analytics integration
        /// </summary>
        [Output("awsKinesisAnalytics")]
        public Output<Outputs.AwsIntegrationsAwsKinesisAnalytics?> AwsKinesisAnalytics { get; private set; } = null!;

        /// <summary>
        /// Aws Media Convert integration
        /// </summary>
        [Output("awsMediaConvert")]
        public Output<Outputs.AwsIntegrationsAwsMediaConvert?> AwsMediaConvert { get; private set; } = null!;

        /// <summary>
        /// Aws Media PackageVod integration
        /// </summary>
        [Output("awsMediaPackageVod")]
        public Output<Outputs.AwsIntegrationsAwsMediaPackageVod?> AwsMediaPackageVod { get; private set; } = null!;

        /// <summary>
        /// Aws Mq integration
        /// </summary>
        [Output("awsMq")]
        public Output<Outputs.AwsIntegrationsAwsMq?> AwsMq { get; private set; } = null!;

        /// <summary>
        /// Aws Msk integration
        /// </summary>
        [Output("awsMsk")]
        public Output<Outputs.AwsIntegrationsAwsMsk?> AwsMsk { get; private set; } = null!;

        /// <summary>
        /// Aws Neptune integration
        /// </summary>
        [Output("awsNeptune")]
        public Output<Outputs.AwsIntegrationsAwsNeptune?> AwsNeptune { get; private set; } = null!;

        /// <summary>
        /// Aws Qldb integration
        /// </summary>
        [Output("awsQldb")]
        public Output<Outputs.AwsIntegrationsAwsQldb?> AwsQldb { get; private set; } = null!;

        /// <summary>
        /// Aws Route53resolver integration
        /// </summary>
        [Output("awsRoute53resolver")]
        public Output<Outputs.AwsIntegrationsAwsRoute53resolver?> AwsRoute53resolver { get; private set; } = null!;

        /// <summary>
        /// Aws states integration
        /// </summary>
        [Output("awsStates")]
        public Output<Outputs.AwsIntegrationsAwsStates?> AwsStates { get; private set; } = null!;

        /// <summary>
        /// Aws Transit Gateway integration
        /// </summary>
        [Output("awsTransitGateway")]
        public Output<Outputs.AwsIntegrationsAwsTransitGateway?> AwsTransitGateway { get; private set; } = null!;

        /// <summary>
        /// Aws Waf integration
        /// </summary>
        [Output("awsWaf")]
        public Output<Outputs.AwsIntegrationsAwsWaf?> AwsWaf { get; private set; } = null!;

        /// <summary>
        /// Aws Wafv2 integration
        /// </summary>
        [Output("awsWafv2")]
        public Output<Outputs.AwsIntegrationsAwsWafv2?> AwsWafv2 { get; private set; } = null!;

        /// <summary>
        /// Billing integration
        /// </summary>
        [Output("billing")]
        public Output<Outputs.AwsIntegrationsBilling?> Billing { get; private set; } = null!;

        /// <summary>
        /// Cloudfront integration
        /// </summary>
        [Output("cloudfront")]
        public Output<Outputs.AwsIntegrationsCloudfront?> Cloudfront { get; private set; } = null!;

        /// <summary>
        /// CloudTrail integration
        /// </summary>
        [Output("cloudtrail")]
        public Output<Outputs.AwsIntegrationsCloudtrail?> Cloudtrail { get; private set; } = null!;

        /// <summary>
        /// Doc DB integration
        /// </summary>
        [Output("docDb")]
        public Output<Outputs.AwsIntegrationsDocDb?> DocDb { get; private set; } = null!;

        /// <summary>
        /// Dynamo DB integration
        /// </summary>
        [Output("dynamodb")]
        public Output<Outputs.AwsIntegrationsDynamodb?> Dynamodb { get; private set; } = null!;

        /// <summary>
        /// EBS integration
        /// </summary>
        [Output("ebs")]
        public Output<Outputs.AwsIntegrationsEbs?> Ebs { get; private set; } = null!;

        /// <summary>
        /// Ec2 integration
        /// </summary>
        [Output("ec2")]
        public Output<Outputs.AwsIntegrationsEc2?> Ec2 { get; private set; } = null!;

        /// <summary>
        /// Ecs integration
        /// </summary>
        [Output("ecs")]
        public Output<Outputs.AwsIntegrationsEcs?> Ecs { get; private set; } = null!;

        /// <summary>
        /// Efs integration
        /// </summary>
        [Output("efs")]
        public Output<Outputs.AwsIntegrationsEfs?> Efs { get; private set; } = null!;

        /// <summary>
        /// Elasticache integration
        /// </summary>
        [Output("elasticache")]
        public Output<Outputs.AwsIntegrationsElasticache?> Elasticache { get; private set; } = null!;

        /// <summary>
        /// Elastic Bean Stalk integration
        /// </summary>
        [Output("elasticbeanstalk")]
        public Output<Outputs.AwsIntegrationsElasticbeanstalk?> Elasticbeanstalk { get; private set; } = null!;

        /// <summary>
        /// Elastic Search integration
        /// </summary>
        [Output("elasticsearch")]
        public Output<Outputs.AwsIntegrationsElasticsearch?> Elasticsearch { get; private set; } = null!;

        /// <summary>
        /// Elb integration
        /// </summary>
        [Output("elb")]
        public Output<Outputs.AwsIntegrationsElb?> Elb { get; private set; } = null!;

        /// <summary>
        /// Emr integration
        /// </summary>
        [Output("emr")]
        public Output<Outputs.AwsIntegrationsEmr?> Emr { get; private set; } = null!;

        /// <summary>
        /// Health integration
        /// </summary>
        [Output("health")]
        public Output<Outputs.AwsIntegrationsHealth?> Health { get; private set; } = null!;

        /// <summary>
        /// Iam integration
        /// </summary>
        [Output("iam")]
        public Output<Outputs.AwsIntegrationsIam?> Iam { get; private set; } = null!;

        /// <summary>
        /// Iot integration
        /// </summary>
        [Output("iot")]
        public Output<Outputs.AwsIntegrationsIot?> Iot { get; private set; } = null!;

        /// <summary>
        /// Kinesis integration
        /// </summary>
        [Output("kinesis")]
        public Output<Outputs.AwsIntegrationsKinesis?> Kinesis { get; private set; } = null!;

        /// <summary>
        /// Kinesis Firehose integration
        /// </summary>
        [Output("kinesisFirehose")]
        public Output<Outputs.AwsIntegrationsKinesisFirehose?> KinesisFirehose { get; private set; } = null!;

        /// <summary>
        /// Lambda integration
        /// </summary>
        [Output("lambda")]
        public Output<Outputs.AwsIntegrationsLambda?> Lambda { get; private set; } = null!;

        /// <summary>
        /// The ID of the linked AWS account in New Relic
        /// </summary>
        [Output("linkedAccountId")]
        public Output<string> LinkedAccountId { get; private set; } = null!;

        /// <summary>
        /// Rds integration
        /// </summary>
        [Output("rds")]
        public Output<Outputs.AwsIntegrationsRds?> Rds { get; private set; } = null!;

        /// <summary>
        /// Redshift integration
        /// </summary>
        [Output("redshift")]
        public Output<Outputs.AwsIntegrationsRedshift?> Redshift { get; private set; } = null!;

        /// <summary>
        /// Route53 integration
        /// </summary>
        [Output("route53")]
        public Output<Outputs.AwsIntegrationsRoute53?> Route53 { get; private set; } = null!;

        /// <summary>
        /// S3 integration
        /// </summary>
        [Output("s3")]
        public Output<Outputs.AwsIntegrationsS3?> S3 { get; private set; } = null!;

        /// <summary>
        /// Ses integration
        /// </summary>
        [Output("ses")]
        public Output<Outputs.AwsIntegrationsSes?> Ses { get; private set; } = null!;

        /// <summary>
        /// Sns integration
        /// </summary>
        [Output("sns")]
        public Output<Outputs.AwsIntegrationsSns?> Sns { get; private set; } = null!;

        /// <summary>
        /// SQS integration
        /// </summary>
        [Output("sqs")]
        public Output<Outputs.AwsIntegrationsSqs?> Sqs { get; private set; } = null!;

        /// <summary>
        /// Trusted Advisor integration
        /// </summary>
        [Output("trustedAdvisor")]
        public Output<Outputs.AwsIntegrationsTrustedAdvisor?> TrustedAdvisor { get; private set; } = null!;

        /// <summary>
        /// VPC integration
        /// </summary>
        [Output("vpc")]
        public Output<Outputs.AwsIntegrationsVpc?> Vpc { get; private set; } = null!;

        /// <summary>
        /// X-Ray integration
        /// </summary>
        [Output("xRay")]
        public Output<Outputs.AwsIntegrationsXRay?> XRay { get; private set; } = null!;


        /// <summary>
        /// Create a AwsIntegrations resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AwsIntegrations(string name, AwsIntegrationsArgs args, CustomResourceOptions? options = null)
            : base("newrelic:cloud/awsIntegrations:AwsIntegrations", name, args ?? new AwsIntegrationsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AwsIntegrations(string name, Input<string> id, AwsIntegrationsState? state = null, CustomResourceOptions? options = null)
            : base("newrelic:cloud/awsIntegrations:AwsIntegrations", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AwsIntegrations resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AwsIntegrations Get(string name, Input<string> id, AwsIntegrationsState? state = null, CustomResourceOptions? options = null)
        {
            return new AwsIntegrations(name, id, state, options);
        }
    }

    public sealed class AwsIntegrationsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account in New Relic.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// ALB integration
        /// </summary>
        [Input("alb")]
        public Input<Inputs.AwsIntegrationsAlbArgs>? Alb { get; set; }

        /// <summary>
        /// API Gateway integration
        /// </summary>
        [Input("apiGateway")]
        public Input<Inputs.AwsIntegrationsApiGatewayArgs>? ApiGateway { get; set; }

        /// <summary>
        /// AutoScaling integration
        /// </summary>
        [Input("autoScaling")]
        public Input<Inputs.AwsIntegrationsAutoScalingArgs>? AutoScaling { get; set; }

        /// <summary>
        /// Aws Appsync integration
        /// </summary>
        [Input("awsAppSync")]
        public Input<Inputs.AwsIntegrationsAwsAppSyncArgs>? AwsAppSync { get; set; }

        /// <summary>
        /// Aws Athena integration
        /// </summary>
        [Input("awsAthena")]
        public Input<Inputs.AwsIntegrationsAwsAthenaArgs>? AwsAthena { get; set; }

        /// <summary>
        /// Aws Cognito integration
        /// </summary>
        [Input("awsCognito")]
        public Input<Inputs.AwsIntegrationsAwsCognitoArgs>? AwsCognito { get; set; }

        /// <summary>
        /// Aws Connect integration
        /// </summary>
        [Input("awsConnect")]
        public Input<Inputs.AwsIntegrationsAwsConnectArgs>? AwsConnect { get; set; }

        /// <summary>
        /// Aws Direct Connect integration
        /// </summary>
        [Input("awsDirectConnect")]
        public Input<Inputs.AwsIntegrationsAwsDirectConnectArgs>? AwsDirectConnect { get; set; }

        /// <summary>
        /// Aws Fsx integration
        /// </summary>
        [Input("awsFsx")]
        public Input<Inputs.AwsIntegrationsAwsFsxArgs>? AwsFsx { get; set; }

        /// <summary>
        /// Aws Glue integration
        /// </summary>
        [Input("awsGlue")]
        public Input<Inputs.AwsIntegrationsAwsGlueArgs>? AwsGlue { get; set; }

        /// <summary>
        /// Aws Kinesis Analytics integration
        /// </summary>
        [Input("awsKinesisAnalytics")]
        public Input<Inputs.AwsIntegrationsAwsKinesisAnalyticsArgs>? AwsKinesisAnalytics { get; set; }

        /// <summary>
        /// Aws Media Convert integration
        /// </summary>
        [Input("awsMediaConvert")]
        public Input<Inputs.AwsIntegrationsAwsMediaConvertArgs>? AwsMediaConvert { get; set; }

        /// <summary>
        /// Aws Media PackageVod integration
        /// </summary>
        [Input("awsMediaPackageVod")]
        public Input<Inputs.AwsIntegrationsAwsMediaPackageVodArgs>? AwsMediaPackageVod { get; set; }

        /// <summary>
        /// Aws Mq integration
        /// </summary>
        [Input("awsMq")]
        public Input<Inputs.AwsIntegrationsAwsMqArgs>? AwsMq { get; set; }

        /// <summary>
        /// Aws Msk integration
        /// </summary>
        [Input("awsMsk")]
        public Input<Inputs.AwsIntegrationsAwsMskArgs>? AwsMsk { get; set; }

        /// <summary>
        /// Aws Neptune integration
        /// </summary>
        [Input("awsNeptune")]
        public Input<Inputs.AwsIntegrationsAwsNeptuneArgs>? AwsNeptune { get; set; }

        /// <summary>
        /// Aws Qldb integration
        /// </summary>
        [Input("awsQldb")]
        public Input<Inputs.AwsIntegrationsAwsQldbArgs>? AwsQldb { get; set; }

        /// <summary>
        /// Aws Route53resolver integration
        /// </summary>
        [Input("awsRoute53resolver")]
        public Input<Inputs.AwsIntegrationsAwsRoute53resolverArgs>? AwsRoute53resolver { get; set; }

        /// <summary>
        /// Aws states integration
        /// </summary>
        [Input("awsStates")]
        public Input<Inputs.AwsIntegrationsAwsStatesArgs>? AwsStates { get; set; }

        /// <summary>
        /// Aws Transit Gateway integration
        /// </summary>
        [Input("awsTransitGateway")]
        public Input<Inputs.AwsIntegrationsAwsTransitGatewayArgs>? AwsTransitGateway { get; set; }

        /// <summary>
        /// Aws Waf integration
        /// </summary>
        [Input("awsWaf")]
        public Input<Inputs.AwsIntegrationsAwsWafArgs>? AwsWaf { get; set; }

        /// <summary>
        /// Aws Wafv2 integration
        /// </summary>
        [Input("awsWafv2")]
        public Input<Inputs.AwsIntegrationsAwsWafv2Args>? AwsWafv2 { get; set; }

        /// <summary>
        /// Billing integration
        /// </summary>
        [Input("billing")]
        public Input<Inputs.AwsIntegrationsBillingArgs>? Billing { get; set; }

        /// <summary>
        /// Cloudfront integration
        /// </summary>
        [Input("cloudfront")]
        public Input<Inputs.AwsIntegrationsCloudfrontArgs>? Cloudfront { get; set; }

        /// <summary>
        /// CloudTrail integration
        /// </summary>
        [Input("cloudtrail")]
        public Input<Inputs.AwsIntegrationsCloudtrailArgs>? Cloudtrail { get; set; }

        /// <summary>
        /// Doc DB integration
        /// </summary>
        [Input("docDb")]
        public Input<Inputs.AwsIntegrationsDocDbArgs>? DocDb { get; set; }

        /// <summary>
        /// Dynamo DB integration
        /// </summary>
        [Input("dynamodb")]
        public Input<Inputs.AwsIntegrationsDynamodbArgs>? Dynamodb { get; set; }

        /// <summary>
        /// EBS integration
        /// </summary>
        [Input("ebs")]
        public Input<Inputs.AwsIntegrationsEbsArgs>? Ebs { get; set; }

        /// <summary>
        /// Ec2 integration
        /// </summary>
        [Input("ec2")]
        public Input<Inputs.AwsIntegrationsEc2Args>? Ec2 { get; set; }

        /// <summary>
        /// Ecs integration
        /// </summary>
        [Input("ecs")]
        public Input<Inputs.AwsIntegrationsEcsArgs>? Ecs { get; set; }

        /// <summary>
        /// Efs integration
        /// </summary>
        [Input("efs")]
        public Input<Inputs.AwsIntegrationsEfsArgs>? Efs { get; set; }

        /// <summary>
        /// Elasticache integration
        /// </summary>
        [Input("elasticache")]
        public Input<Inputs.AwsIntegrationsElasticacheArgs>? Elasticache { get; set; }

        /// <summary>
        /// Elastic Bean Stalk integration
        /// </summary>
        [Input("elasticbeanstalk")]
        public Input<Inputs.AwsIntegrationsElasticbeanstalkArgs>? Elasticbeanstalk { get; set; }

        /// <summary>
        /// Elastic Search integration
        /// </summary>
        [Input("elasticsearch")]
        public Input<Inputs.AwsIntegrationsElasticsearchArgs>? Elasticsearch { get; set; }

        /// <summary>
        /// Elb integration
        /// </summary>
        [Input("elb")]
        public Input<Inputs.AwsIntegrationsElbArgs>? Elb { get; set; }

        /// <summary>
        /// Emr integration
        /// </summary>
        [Input("emr")]
        public Input<Inputs.AwsIntegrationsEmrArgs>? Emr { get; set; }

        /// <summary>
        /// Health integration
        /// </summary>
        [Input("health")]
        public Input<Inputs.AwsIntegrationsHealthArgs>? Health { get; set; }

        /// <summary>
        /// Iam integration
        /// </summary>
        [Input("iam")]
        public Input<Inputs.AwsIntegrationsIamArgs>? Iam { get; set; }

        /// <summary>
        /// Iot integration
        /// </summary>
        [Input("iot")]
        public Input<Inputs.AwsIntegrationsIotArgs>? Iot { get; set; }

        /// <summary>
        /// Kinesis integration
        /// </summary>
        [Input("kinesis")]
        public Input<Inputs.AwsIntegrationsKinesisArgs>? Kinesis { get; set; }

        /// <summary>
        /// Kinesis Firehose integration
        /// </summary>
        [Input("kinesisFirehose")]
        public Input<Inputs.AwsIntegrationsKinesisFirehoseArgs>? KinesisFirehose { get; set; }

        /// <summary>
        /// Lambda integration
        /// </summary>
        [Input("lambda")]
        public Input<Inputs.AwsIntegrationsLambdaArgs>? Lambda { get; set; }

        /// <summary>
        /// The ID of the linked AWS account in New Relic
        /// </summary>
        [Input("linkedAccountId", required: true)]
        public Input<string> LinkedAccountId { get; set; } = null!;

        /// <summary>
        /// Rds integration
        /// </summary>
        [Input("rds")]
        public Input<Inputs.AwsIntegrationsRdsArgs>? Rds { get; set; }

        /// <summary>
        /// Redshift integration
        /// </summary>
        [Input("redshift")]
        public Input<Inputs.AwsIntegrationsRedshiftArgs>? Redshift { get; set; }

        /// <summary>
        /// Route53 integration
        /// </summary>
        [Input("route53")]
        public Input<Inputs.AwsIntegrationsRoute53Args>? Route53 { get; set; }

        /// <summary>
        /// S3 integration
        /// </summary>
        [Input("s3")]
        public Input<Inputs.AwsIntegrationsS3Args>? S3 { get; set; }

        /// <summary>
        /// Ses integration
        /// </summary>
        [Input("ses")]
        public Input<Inputs.AwsIntegrationsSesArgs>? Ses { get; set; }

        /// <summary>
        /// Sns integration
        /// </summary>
        [Input("sns")]
        public Input<Inputs.AwsIntegrationsSnsArgs>? Sns { get; set; }

        /// <summary>
        /// SQS integration
        /// </summary>
        [Input("sqs")]
        public Input<Inputs.AwsIntegrationsSqsArgs>? Sqs { get; set; }

        /// <summary>
        /// Trusted Advisor integration
        /// </summary>
        [Input("trustedAdvisor")]
        public Input<Inputs.AwsIntegrationsTrustedAdvisorArgs>? TrustedAdvisor { get; set; }

        /// <summary>
        /// VPC integration
        /// </summary>
        [Input("vpc")]
        public Input<Inputs.AwsIntegrationsVpcArgs>? Vpc { get; set; }

        /// <summary>
        /// X-Ray integration
        /// </summary>
        [Input("xRay")]
        public Input<Inputs.AwsIntegrationsXRayArgs>? XRay { get; set; }

        public AwsIntegrationsArgs()
        {
        }
        public static new AwsIntegrationsArgs Empty => new AwsIntegrationsArgs();
    }

    public sealed class AwsIntegrationsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the account in New Relic.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// ALB integration
        /// </summary>
        [Input("alb")]
        public Input<Inputs.AwsIntegrationsAlbGetArgs>? Alb { get; set; }

        /// <summary>
        /// API Gateway integration
        /// </summary>
        [Input("apiGateway")]
        public Input<Inputs.AwsIntegrationsApiGatewayGetArgs>? ApiGateway { get; set; }

        /// <summary>
        /// AutoScaling integration
        /// </summary>
        [Input("autoScaling")]
        public Input<Inputs.AwsIntegrationsAutoScalingGetArgs>? AutoScaling { get; set; }

        /// <summary>
        /// Aws Appsync integration
        /// </summary>
        [Input("awsAppSync")]
        public Input<Inputs.AwsIntegrationsAwsAppSyncGetArgs>? AwsAppSync { get; set; }

        /// <summary>
        /// Aws Athena integration
        /// </summary>
        [Input("awsAthena")]
        public Input<Inputs.AwsIntegrationsAwsAthenaGetArgs>? AwsAthena { get; set; }

        /// <summary>
        /// Aws Cognito integration
        /// </summary>
        [Input("awsCognito")]
        public Input<Inputs.AwsIntegrationsAwsCognitoGetArgs>? AwsCognito { get; set; }

        /// <summary>
        /// Aws Connect integration
        /// </summary>
        [Input("awsConnect")]
        public Input<Inputs.AwsIntegrationsAwsConnectGetArgs>? AwsConnect { get; set; }

        /// <summary>
        /// Aws Direct Connect integration
        /// </summary>
        [Input("awsDirectConnect")]
        public Input<Inputs.AwsIntegrationsAwsDirectConnectGetArgs>? AwsDirectConnect { get; set; }

        /// <summary>
        /// Aws Fsx integration
        /// </summary>
        [Input("awsFsx")]
        public Input<Inputs.AwsIntegrationsAwsFsxGetArgs>? AwsFsx { get; set; }

        /// <summary>
        /// Aws Glue integration
        /// </summary>
        [Input("awsGlue")]
        public Input<Inputs.AwsIntegrationsAwsGlueGetArgs>? AwsGlue { get; set; }

        /// <summary>
        /// Aws Kinesis Analytics integration
        /// </summary>
        [Input("awsKinesisAnalytics")]
        public Input<Inputs.AwsIntegrationsAwsKinesisAnalyticsGetArgs>? AwsKinesisAnalytics { get; set; }

        /// <summary>
        /// Aws Media Convert integration
        /// </summary>
        [Input("awsMediaConvert")]
        public Input<Inputs.AwsIntegrationsAwsMediaConvertGetArgs>? AwsMediaConvert { get; set; }

        /// <summary>
        /// Aws Media PackageVod integration
        /// </summary>
        [Input("awsMediaPackageVod")]
        public Input<Inputs.AwsIntegrationsAwsMediaPackageVodGetArgs>? AwsMediaPackageVod { get; set; }

        /// <summary>
        /// Aws Mq integration
        /// </summary>
        [Input("awsMq")]
        public Input<Inputs.AwsIntegrationsAwsMqGetArgs>? AwsMq { get; set; }

        /// <summary>
        /// Aws Msk integration
        /// </summary>
        [Input("awsMsk")]
        public Input<Inputs.AwsIntegrationsAwsMskGetArgs>? AwsMsk { get; set; }

        /// <summary>
        /// Aws Neptune integration
        /// </summary>
        [Input("awsNeptune")]
        public Input<Inputs.AwsIntegrationsAwsNeptuneGetArgs>? AwsNeptune { get; set; }

        /// <summary>
        /// Aws Qldb integration
        /// </summary>
        [Input("awsQldb")]
        public Input<Inputs.AwsIntegrationsAwsQldbGetArgs>? AwsQldb { get; set; }

        /// <summary>
        /// Aws Route53resolver integration
        /// </summary>
        [Input("awsRoute53resolver")]
        public Input<Inputs.AwsIntegrationsAwsRoute53resolverGetArgs>? AwsRoute53resolver { get; set; }

        /// <summary>
        /// Aws states integration
        /// </summary>
        [Input("awsStates")]
        public Input<Inputs.AwsIntegrationsAwsStatesGetArgs>? AwsStates { get; set; }

        /// <summary>
        /// Aws Transit Gateway integration
        /// </summary>
        [Input("awsTransitGateway")]
        public Input<Inputs.AwsIntegrationsAwsTransitGatewayGetArgs>? AwsTransitGateway { get; set; }

        /// <summary>
        /// Aws Waf integration
        /// </summary>
        [Input("awsWaf")]
        public Input<Inputs.AwsIntegrationsAwsWafGetArgs>? AwsWaf { get; set; }

        /// <summary>
        /// Aws Wafv2 integration
        /// </summary>
        [Input("awsWafv2")]
        public Input<Inputs.AwsIntegrationsAwsWafv2GetArgs>? AwsWafv2 { get; set; }

        /// <summary>
        /// Billing integration
        /// </summary>
        [Input("billing")]
        public Input<Inputs.AwsIntegrationsBillingGetArgs>? Billing { get; set; }

        /// <summary>
        /// Cloudfront integration
        /// </summary>
        [Input("cloudfront")]
        public Input<Inputs.AwsIntegrationsCloudfrontGetArgs>? Cloudfront { get; set; }

        /// <summary>
        /// CloudTrail integration
        /// </summary>
        [Input("cloudtrail")]
        public Input<Inputs.AwsIntegrationsCloudtrailGetArgs>? Cloudtrail { get; set; }

        /// <summary>
        /// Doc DB integration
        /// </summary>
        [Input("docDb")]
        public Input<Inputs.AwsIntegrationsDocDbGetArgs>? DocDb { get; set; }

        /// <summary>
        /// Dynamo DB integration
        /// </summary>
        [Input("dynamodb")]
        public Input<Inputs.AwsIntegrationsDynamodbGetArgs>? Dynamodb { get; set; }

        /// <summary>
        /// EBS integration
        /// </summary>
        [Input("ebs")]
        public Input<Inputs.AwsIntegrationsEbsGetArgs>? Ebs { get; set; }

        /// <summary>
        /// Ec2 integration
        /// </summary>
        [Input("ec2")]
        public Input<Inputs.AwsIntegrationsEc2GetArgs>? Ec2 { get; set; }

        /// <summary>
        /// Ecs integration
        /// </summary>
        [Input("ecs")]
        public Input<Inputs.AwsIntegrationsEcsGetArgs>? Ecs { get; set; }

        /// <summary>
        /// Efs integration
        /// </summary>
        [Input("efs")]
        public Input<Inputs.AwsIntegrationsEfsGetArgs>? Efs { get; set; }

        /// <summary>
        /// Elasticache integration
        /// </summary>
        [Input("elasticache")]
        public Input<Inputs.AwsIntegrationsElasticacheGetArgs>? Elasticache { get; set; }

        /// <summary>
        /// Elastic Bean Stalk integration
        /// </summary>
        [Input("elasticbeanstalk")]
        public Input<Inputs.AwsIntegrationsElasticbeanstalkGetArgs>? Elasticbeanstalk { get; set; }

        /// <summary>
        /// Elastic Search integration
        /// </summary>
        [Input("elasticsearch")]
        public Input<Inputs.AwsIntegrationsElasticsearchGetArgs>? Elasticsearch { get; set; }

        /// <summary>
        /// Elb integration
        /// </summary>
        [Input("elb")]
        public Input<Inputs.AwsIntegrationsElbGetArgs>? Elb { get; set; }

        /// <summary>
        /// Emr integration
        /// </summary>
        [Input("emr")]
        public Input<Inputs.AwsIntegrationsEmrGetArgs>? Emr { get; set; }

        /// <summary>
        /// Health integration
        /// </summary>
        [Input("health")]
        public Input<Inputs.AwsIntegrationsHealthGetArgs>? Health { get; set; }

        /// <summary>
        /// Iam integration
        /// </summary>
        [Input("iam")]
        public Input<Inputs.AwsIntegrationsIamGetArgs>? Iam { get; set; }

        /// <summary>
        /// Iot integration
        /// </summary>
        [Input("iot")]
        public Input<Inputs.AwsIntegrationsIotGetArgs>? Iot { get; set; }

        /// <summary>
        /// Kinesis integration
        /// </summary>
        [Input("kinesis")]
        public Input<Inputs.AwsIntegrationsKinesisGetArgs>? Kinesis { get; set; }

        /// <summary>
        /// Kinesis Firehose integration
        /// </summary>
        [Input("kinesisFirehose")]
        public Input<Inputs.AwsIntegrationsKinesisFirehoseGetArgs>? KinesisFirehose { get; set; }

        /// <summary>
        /// Lambda integration
        /// </summary>
        [Input("lambda")]
        public Input<Inputs.AwsIntegrationsLambdaGetArgs>? Lambda { get; set; }

        /// <summary>
        /// The ID of the linked AWS account in New Relic
        /// </summary>
        [Input("linkedAccountId")]
        public Input<string>? LinkedAccountId { get; set; }

        /// <summary>
        /// Rds integration
        /// </summary>
        [Input("rds")]
        public Input<Inputs.AwsIntegrationsRdsGetArgs>? Rds { get; set; }

        /// <summary>
        /// Redshift integration
        /// </summary>
        [Input("redshift")]
        public Input<Inputs.AwsIntegrationsRedshiftGetArgs>? Redshift { get; set; }

        /// <summary>
        /// Route53 integration
        /// </summary>
        [Input("route53")]
        public Input<Inputs.AwsIntegrationsRoute53GetArgs>? Route53 { get; set; }

        /// <summary>
        /// S3 integration
        /// </summary>
        [Input("s3")]
        public Input<Inputs.AwsIntegrationsS3GetArgs>? S3 { get; set; }

        /// <summary>
        /// Ses integration
        /// </summary>
        [Input("ses")]
        public Input<Inputs.AwsIntegrationsSesGetArgs>? Ses { get; set; }

        /// <summary>
        /// Sns integration
        /// </summary>
        [Input("sns")]
        public Input<Inputs.AwsIntegrationsSnsGetArgs>? Sns { get; set; }

        /// <summary>
        /// SQS integration
        /// </summary>
        [Input("sqs")]
        public Input<Inputs.AwsIntegrationsSqsGetArgs>? Sqs { get; set; }

        /// <summary>
        /// Trusted Advisor integration
        /// </summary>
        [Input("trustedAdvisor")]
        public Input<Inputs.AwsIntegrationsTrustedAdvisorGetArgs>? TrustedAdvisor { get; set; }

        /// <summary>
        /// VPC integration
        /// </summary>
        [Input("vpc")]
        public Input<Inputs.AwsIntegrationsVpcGetArgs>? Vpc { get; set; }

        /// <summary>
        /// X-Ray integration
        /// </summary>
        [Input("xRay")]
        public Input<Inputs.AwsIntegrationsXRayGetArgs>? XRay { get; set; }

        public AwsIntegrationsState()
        {
        }
        public static new AwsIntegrationsState Empty => new AwsIntegrationsState();
    }
}
