// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using NewRelic = Pulumi.NewRelic;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo = new NewRelic.PipelineCloudRule("foo", new()
    ///     {
    ///         AccountId = "1000100",
    ///         Name = "Test Pipeline Cloud Rule",
    ///         Description = "This rule deletes all DEBUG logs from the dev environment.",
    ///         Nrql = "DELETE FROM Log WHERE logLevel = 'DEBUG' AND environment = 'dev'",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Pipeline Cloud Rules can be imported using the `id`. For example:
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import newrelic:index/pipelineCloudRule:PipelineCloudRule foo &lt;id&gt;
    /// ```
    /// </summary>
    [NewRelicResourceType("newrelic:index/pipelineCloudRule:PipelineCloudRule")]
    public partial class PipelineCloudRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The account ID where the Pipeline Cloud Rule will be created.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// Additional information about the rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the rule. This must be unique within an account.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The NRQL query that defines the data to be processed by this Pipeline Cloud Rule.
        /// </summary>
        [Output("nrql")]
        public Output<string> Nrql { get; private set; } = null!;


        /// <summary>
        /// Create a PipelineCloudRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PipelineCloudRule(string name, PipelineCloudRuleArgs args, CustomResourceOptions? options = null)
            : base("newrelic:index/pipelineCloudRule:PipelineCloudRule", name, args ?? new PipelineCloudRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PipelineCloudRule(string name, Input<string> id, PipelineCloudRuleState? state = null, CustomResourceOptions? options = null)
            : base("newrelic:index/pipelineCloudRule:PipelineCloudRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PipelineCloudRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PipelineCloudRule Get(string name, Input<string> id, PipelineCloudRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new PipelineCloudRule(name, id, state, options);
        }
    }

    public sealed class PipelineCloudRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account ID where the Pipeline Cloud Rule will be created.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Additional information about the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the rule. This must be unique within an account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NRQL query that defines the data to be processed by this Pipeline Cloud Rule.
        /// </summary>
        [Input("nrql", required: true)]
        public Input<string> Nrql { get; set; } = null!;

        public PipelineCloudRuleArgs()
        {
        }
        public static new PipelineCloudRuleArgs Empty => new PipelineCloudRuleArgs();
    }

    public sealed class PipelineCloudRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The account ID where the Pipeline Cloud Rule will be created.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// Additional information about the rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the rule. This must be unique within an account.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The NRQL query that defines the data to be processed by this Pipeline Cloud Rule.
        /// </summary>
        [Input("nrql")]
        public Input<string>? Nrql { get; set; }

        public PipelineCloudRuleState()
        {
        }
        public static new PipelineCloudRuleState Empty => new PipelineCloudRuleState();
    }
}
