// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic
{
    public static partial class Invokes
    {
        /// <summary>
        /// Use this data source to get information about an specific alert policy in New Relic which already exists.
        /// 
        /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-newrelic/blob/master/website/docs/d/alert_policy.html.markdown.
        /// </summary>
        public static Task<GetAlertPolicyResult> GetAlertPolicy(GetAlertPolicyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetAlertPolicyResult>("newrelic:index/getAlertPolicy:getAlertPolicy", args ?? ResourceArgs.Empty, options.WithVersion());
    }

    public sealed class GetAlertPolicyArgs : Pulumi.ResourceArgs
    {
        [Input("incidentPreference")]
        public Input<string>? IncidentPreference { get; set; }

        /// <summary>
        /// The name of the alert policy in New Relic.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAlertPolicyArgs()
        {
        }
    }

    [OutputType]
    public sealed class GetAlertPolicyResult
    {
        /// <summary>
        /// The time the policy was created.
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The rollup strategy for the policy. Options include: PER_POLICY, PER_CONDITION, or PER_CONDITION_AND_TARGET. The default is PER_POLICY.
        /// </summary>
        public readonly string? IncidentPreference;
        public readonly string Name;
        /// <summary>
        /// The time the policy was last updated.
        /// </summary>
        public readonly string UpdatedAt;
        /// <summary>
        /// id is the provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetAlertPolicyResult(
            string createdAt,
            string? incidentPreference,
            string name,
            string updatedAt,
            string id)
        {
            CreatedAt = createdAt;
            IncidentPreference = incidentPreference;
            Name = name;
            UpdatedAt = updatedAt;
            Id = id;
        }
    }
}
