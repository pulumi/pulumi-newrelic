// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.NewRelic
{
    /// <summary>
    /// ## Import
    /// 
    /// New Relic NRQL drop rules can be imported using a concatenated string of the format
    /// 
    ///  `&lt;account_id&gt;:&lt;rule_id&gt;`, e.g.
    /// 
    /// bash
    /// 
    /// ```sh
    /// $ pulumi import newrelic:index/nrqlDropRule:NrqlDropRule foo 12345:34567
    /// ```
    /// </summary>
    [NewRelicResourceType("newrelic:index/nrqlDropRule:NrqlDropRule")]
    public partial class NrqlDropRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account where the drop rule will be put. Defaults to the account associated with the API key used.
        /// </summary>
        [Output("accountId")]
        public Output<string> AccountId { get; private set; } = null!;

        /// <summary>
        /// An action type specifying how to apply the NRQL string (either `drop_data`, `drop_attributes`, or ` drop_attributes_from_metric_aggregates`).
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// The description of the drop rule.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A NRQL string that specifies what data types to drop.
        /// </summary>
        [Output("nrql")]
        public Output<string> Nrql { get; private set; } = null!;

        /// <summary>
        /// The ID (GUID) of the corresponding Pipeline Cloud Rule, (migrated upstream by New Relic, in light of the upcoming EOL, as stated in the Deprecation Warning above). This can be used to import the corresponding Pipeline Cloud Rule as a [`newrelic.PipelineCloudRule`](https://www.terraform.io/providers/newrelic/newrelic/latest/docs/resources/pipeline_cloud_rule) resource, as explained in our Drop Rules EOL Migration Guide.
        /// </summary>
        [Output("pipelineCloudRuleEntityId")]
        public Output<string> PipelineCloudRuleEntityId { get; private set; } = null!;

        /// <summary>
        /// The id, uniquely identifying the rule.
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;


        /// <summary>
        /// Create a NrqlDropRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public NrqlDropRule(string name, NrqlDropRuleArgs args, CustomResourceOptions? options = null)
            : base("newrelic:index/nrqlDropRule:NrqlDropRule", name, args ?? new NrqlDropRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private NrqlDropRule(string name, Input<string> id, NrqlDropRuleState? state = null, CustomResourceOptions? options = null)
            : base("newrelic:index/nrqlDropRule:NrqlDropRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing NrqlDropRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static NrqlDropRule Get(string name, Input<string> id, NrqlDropRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new NrqlDropRule(name, id, state, options);
        }
    }

    public sealed class NrqlDropRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account where the drop rule will be put. Defaults to the account associated with the API key used.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// An action type specifying how to apply the NRQL string (either `drop_data`, `drop_attributes`, or ` drop_attributes_from_metric_aggregates`).
        /// </summary>
        [Input("action", required: true)]
        public Input<string> Action { get; set; } = null!;

        /// <summary>
        /// The description of the drop rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A NRQL string that specifies what data types to drop.
        /// </summary>
        [Input("nrql", required: true)]
        public Input<string> Nrql { get; set; } = null!;

        public NrqlDropRuleArgs()
        {
        }
        public static new NrqlDropRuleArgs Empty => new NrqlDropRuleArgs();
    }

    public sealed class NrqlDropRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account where the drop rule will be put. Defaults to the account associated with the API key used.
        /// </summary>
        [Input("accountId")]
        public Input<string>? AccountId { get; set; }

        /// <summary>
        /// An action type specifying how to apply the NRQL string (either `drop_data`, `drop_attributes`, or ` drop_attributes_from_metric_aggregates`).
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// The description of the drop rule.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A NRQL string that specifies what data types to drop.
        /// </summary>
        [Input("nrql")]
        public Input<string>? Nrql { get; set; }

        /// <summary>
        /// The ID (GUID) of the corresponding Pipeline Cloud Rule, (migrated upstream by New Relic, in light of the upcoming EOL, as stated in the Deprecation Warning above). This can be used to import the corresponding Pipeline Cloud Rule as a [`newrelic.PipelineCloudRule`](https://www.terraform.io/providers/newrelic/newrelic/latest/docs/resources/pipeline_cloud_rule) resource, as explained in our Drop Rules EOL Migration Guide.
        /// </summary>
        [Input("pipelineCloudRuleEntityId")]
        public Input<string>? PipelineCloudRuleEntityId { get; set; }

        /// <summary>
        /// The id, uniquely identifying the rule.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        public NrqlDropRuleState()
        {
        }
        public static new NrqlDropRuleState Empty => new NrqlDropRuleState();
    }
}
