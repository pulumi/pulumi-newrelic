// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Use this data source to get information about a specific alert channel in New Relic that already exists.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const fooAlertChannel = newrelic.getAlertChannel({
 *     name: "foo@example.com",
 * });
 * // Resource
 * const fooAlertPolicy = new newrelic.AlertPolicy("fooAlertPolicy", {});
 * // Using the data source and resource together
 * const fooAlertPolicyChannel = new newrelic.AlertPolicyChannel("fooAlertPolicyChannel", {
 *     policyId: fooAlertPolicy.id,
 *     channelId: fooAlertChannel.then(fooAlertChannel => fooAlertChannel.id),
 * });
 * ```
 */
export function getAlertChannel(args: GetAlertChannelArgs, opts?: pulumi.InvokeOptions): Promise<GetAlertChannelResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("newrelic:index/getAlertChannel:getAlertChannel", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAlertChannel.
 */
export interface GetAlertChannelArgs {
    /**
     * The name of the alert channel in New Relic.
     */
    readonly name: string;
}

/**
 * A collection of values returned by getAlertChannel.
 */
export interface GetAlertChannelResult {
    /**
     * Alert channel configuration.
     */
    readonly config: outputs.GetAlertChannelConfig;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * A list of policy IDs associated with the alert channel.
     */
    readonly policyIds: number[];
    /**
     * Alert channel type, either: `email`, `opsgenie`, `pagerduty`, `slack`, `victorops`, or `webhook`.
     */
    readonly type: string;
}
