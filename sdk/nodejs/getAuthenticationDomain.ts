// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to fetch the ID of an authentication domain belonging to your account, matching the specified name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * export = async () => {
 *     const foo = await newrelic.getAuthenticationDomain({
 *         name: "Test Authentication Domain",
 *     });
 *     return {
 *         foo: foo.id,
 *     };
 * }
 * ```
 */
export function getAuthenticationDomain(args: GetAuthenticationDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthenticationDomainResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("newrelic:index/getAuthenticationDomain:getAuthenticationDomain", {
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthenticationDomain.
 */
export interface GetAuthenticationDomainArgs {
    /**
     * The name of the authentication domain to be searched for. An error is thrown, if no authentication domain is found with the specified name.
     */
    name: string;
}

/**
 * A collection of values returned by getAuthenticationDomain.
 */
export interface GetAuthenticationDomainResult {
    /**
     * The ID of the matching authentication domain fetched.
     */
    readonly id: string;
    readonly name: string;
}
/**
 * Use this data source to fetch the ID of an authentication domain belonging to your account, matching the specified name.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * export = async () => {
 *     const foo = await newrelic.getAuthenticationDomain({
 *         name: "Test Authentication Domain",
 *     });
 *     return {
 *         foo: foo.id,
 *     };
 * }
 * ```
 */
export function getAuthenticationDomainOutput(args: GetAuthenticationDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthenticationDomainResult> {
    return pulumi.output(args).apply((a: any) => getAuthenticationDomain(a, opts))
}

/**
 * A collection of arguments for invoking getAuthenticationDomain.
 */
export interface GetAuthenticationDomainOutputArgs {
    /**
     * The name of the authentication domain to be searched for. An error is thrown, if no authentication domain is found with the specified name.
     */
    name: pulumi.Input<string>;
}
