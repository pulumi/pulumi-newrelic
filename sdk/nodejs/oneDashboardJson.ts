// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class OneDashboardJson extends pulumi.CustomResource {
    /**
     * Get an existing OneDashboardJson resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OneDashboardJsonState, opts?: pulumi.CustomResourceOptions): OneDashboardJson {
        return new OneDashboardJson(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:index/oneDashboardJson:OneDashboardJson';

    /**
     * Returns true if the given object is an instance of OneDashboardJson.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OneDashboardJson {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OneDashboardJson.__pulumiType;
    }

    /**
     * The New Relic account ID where you want to create the dashboard.
     */
    public readonly accountId!: pulumi.Output<number>;
    /**
     * The unique entity identifier of the dashboard in New Relic.
     */
    public /*out*/ readonly guid!: pulumi.Output<string>;
    /**
     * The JSON export of a dashboard. [The JSON can be exported from the UI](https://docs.newrelic.com/docs/query-your-data/explore-query-data/dashboards/dashboards-charts-import-export-data/#dashboards)
     */
    public readonly json!: pulumi.Output<string>;
    /**
     * The URL for viewing the dashboard.
     */
    public /*out*/ readonly permalink!: pulumi.Output<string>;
    /**
     * The date and time when the dashboard was last updated.
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;

    /**
     * Create a OneDashboardJson resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OneDashboardJsonArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OneDashboardJsonArgs | OneDashboardJsonState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OneDashboardJsonState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["guid"] = state ? state.guid : undefined;
            resourceInputs["json"] = state ? state.json : undefined;
            resourceInputs["permalink"] = state ? state.permalink : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
        } else {
            const args = argsOrState as OneDashboardJsonArgs | undefined;
            if ((!args || args.json === undefined) && !opts.urn) {
                throw new Error("Missing required property 'json'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["json"] = args ? args.json : undefined;
            resourceInputs["guid"] = undefined /*out*/;
            resourceInputs["permalink"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OneDashboardJson.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OneDashboardJson resources.
 */
export interface OneDashboardJsonState {
    /**
     * The New Relic account ID where you want to create the dashboard.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The unique entity identifier of the dashboard in New Relic.
     */
    guid?: pulumi.Input<string>;
    /**
     * The JSON export of a dashboard. [The JSON can be exported from the UI](https://docs.newrelic.com/docs/query-your-data/explore-query-data/dashboards/dashboards-charts-import-export-data/#dashboards)
     */
    json?: pulumi.Input<string>;
    /**
     * The URL for viewing the dashboard.
     */
    permalink?: pulumi.Input<string>;
    /**
     * The date and time when the dashboard was last updated.
     */
    updatedAt?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OneDashboardJson resource.
 */
export interface OneDashboardJsonArgs {
    /**
     * The New Relic account ID where you want to create the dashboard.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The JSON export of a dashboard. [The JSON can be exported from the UI](https://docs.newrelic.com/docs/query-your-data/explore-query-data/dashboards/dashboards-charts-import-export-data/#dashboards)
     */
    json: pulumi.Input<string>;
}
