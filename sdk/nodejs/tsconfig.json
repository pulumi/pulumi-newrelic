{
    "compilerOptions": {
        "outDir": "bin",
        "target": "es2016",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accountManagement.ts",
        "alertChannel.ts",
        "alertCondition.ts",
        "alertMutingRule.ts",
        "alertPolicy.ts",
        "alertPolicyChannel.ts",
        "apiAccessKey.ts",
        "browserApplication.ts",
        "cloud/awsGovcloudIntegrations.ts",
        "cloud/awsGovcloudLinkAccount.ts",
        "cloud/awsIntegrations.ts",
        "cloud/awsLinkAccount.ts",
        "cloud/azureIntegrations.ts",
        "cloud/azureLinkAccount.ts",
        "cloud/gcpIntegrations.ts",
        "cloud/gcpLinkAccount.ts",
        "cloud/index.ts",
        "config/index.ts",
        "config/vars.ts",
        "dataPartitionRule.ts",
        "entityTags.ts",
        "eventsToMetricsRule.ts",
        "getAccount.ts",
        "getAlertChannel.ts",
        "getAlertPolicy.ts",
        "getApplication.ts",
        "getCloudAccount.ts",
        "getEntity.ts",
        "getKeyTransaction.ts",
        "getNotificationDestination.ts",
        "getObfuscationExpression.ts",
        "getServiceLevelAlertHelper.ts",
        "getTestGrokPattern.ts",
        "index.ts",
        "infraAlertCondition.ts",
        "insights/event.ts",
        "insights/index.ts",
        "logParsingRule.ts",
        "notificationChannel.ts",
        "notificationDestination.ts",
        "nrqlAlertCondition.ts",
        "nrqlDropRule.ts",
        "obfuscationExpression.ts",
        "obfuscationRule.ts",
        "oneDashboard.ts",
        "oneDashboardJson.ts",
        "oneDashboardRaw.ts",
        "plugins/applicationSettings.ts",
        "plugins/index.ts",
        "plugins/workload.ts",
        "provider.ts",
        "serviceLevel.ts",
        "synthetics/alertCondition.ts",
        "synthetics/brokenLinksMonitor.ts",
        "synthetics/certCheckMonitor.ts",
        "synthetics/getPrivateLocation.ts",
        "synthetics/getSecureCredential.ts",
        "synthetics/index.ts",
        "synthetics/monitor.ts",
        "synthetics/multiLocationAlertCondition.ts",
        "synthetics/privateLocation.ts",
        "synthetics/scriptMonitor.ts",
        "synthetics/secureCredential.ts",
        "synthetics/stepMonitor.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "utilities.ts",
        "workflow.ts"
    ]
}
