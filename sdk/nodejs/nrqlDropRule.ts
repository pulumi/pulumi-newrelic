// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Import
 *
 * New Relic NRQL drop rules can be imported using a concatenated string of the format
 *
 *  `<account_id>:<rule_id>`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import newrelic:index/nrqlDropRule:NrqlDropRule foo 12345:34567
 * ```
 */
export class NrqlDropRule extends pulumi.CustomResource {
    /**
     * Get an existing NrqlDropRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NrqlDropRuleState, opts?: pulumi.CustomResourceOptions): NrqlDropRule {
        return new NrqlDropRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:index/nrqlDropRule:NrqlDropRule';

    /**
     * Returns true if the given object is an instance of NrqlDropRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NrqlDropRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NrqlDropRule.__pulumiType;
    }

    /**
     * Account where the drop rule will be put. Defaults to the account associated with the API key used.
     */
    declare public readonly accountId: pulumi.Output<string>;
    /**
     * An action type specifying how to apply the NRQL string (either `dropData`, `dropAttributes`, or ` dropAttributesFromMetricAggregates`).
     */
    declare public readonly action: pulumi.Output<string>;
    /**
     * The description of the drop rule.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * A NRQL string that specifies what data types to drop.
     */
    declare public readonly nrql: pulumi.Output<string>;
    /**
     * The ID (GUID) of the corresponding Pipeline Cloud Rule, (migrated upstream by New Relic, in light of the upcoming EOL, as stated in the Deprecation Warning above). This can be used to import the corresponding Pipeline Cloud Rule as a [`newrelic.PipelineCloudRule`](https://www.terraform.io/providers/newrelic/newrelic/latest/docs/resources/pipeline_cloud_rule) resource, as explained in our Drop Rules EOL Migration Guide.
     */
    declare public /*out*/ readonly pipelineCloudRuleEntityId: pulumi.Output<string>;
    /**
     * The id, uniquely identifying the rule.
     */
    declare public /*out*/ readonly ruleId: pulumi.Output<string>;

    /**
     * Create a NrqlDropRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NrqlDropRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NrqlDropRuleArgs | NrqlDropRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NrqlDropRuleState | undefined;
            resourceInputs["accountId"] = state?.accountId;
            resourceInputs["action"] = state?.action;
            resourceInputs["description"] = state?.description;
            resourceInputs["nrql"] = state?.nrql;
            resourceInputs["pipelineCloudRuleEntityId"] = state?.pipelineCloudRuleEntityId;
            resourceInputs["ruleId"] = state?.ruleId;
        } else {
            const args = argsOrState as NrqlDropRuleArgs | undefined;
            if (args?.action === undefined && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if (args?.nrql === undefined && !opts.urn) {
                throw new Error("Missing required property 'nrql'");
            }
            resourceInputs["accountId"] = args?.accountId;
            resourceInputs["action"] = args?.action;
            resourceInputs["description"] = args?.description;
            resourceInputs["nrql"] = args?.nrql;
            resourceInputs["pipelineCloudRuleEntityId"] = undefined /*out*/;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NrqlDropRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NrqlDropRule resources.
 */
export interface NrqlDropRuleState {
    /**
     * Account where the drop rule will be put. Defaults to the account associated with the API key used.
     */
    accountId?: pulumi.Input<string>;
    /**
     * An action type specifying how to apply the NRQL string (either `dropData`, `dropAttributes`, or ` dropAttributesFromMetricAggregates`).
     */
    action?: pulumi.Input<string>;
    /**
     * The description of the drop rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A NRQL string that specifies what data types to drop.
     */
    nrql?: pulumi.Input<string>;
    /**
     * The ID (GUID) of the corresponding Pipeline Cloud Rule, (migrated upstream by New Relic, in light of the upcoming EOL, as stated in the Deprecation Warning above). This can be used to import the corresponding Pipeline Cloud Rule as a [`newrelic.PipelineCloudRule`](https://www.terraform.io/providers/newrelic/newrelic/latest/docs/resources/pipeline_cloud_rule) resource, as explained in our Drop Rules EOL Migration Guide.
     */
    pipelineCloudRuleEntityId?: pulumi.Input<string>;
    /**
     * The id, uniquely identifying the rule.
     */
    ruleId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NrqlDropRule resource.
 */
export interface NrqlDropRuleArgs {
    /**
     * Account where the drop rule will be put. Defaults to the account associated with the API key used.
     */
    accountId?: pulumi.Input<string>;
    /**
     * An action type specifying how to apply the NRQL string (either `dropData`, `dropAttributes`, or ` dropAttributesFromMetricAggregates`).
     */
    action: pulumi.Input<string>;
    /**
     * The description of the drop rule.
     */
    description?: pulumi.Input<string>;
    /**
     * A NRQL string that specifies what data types to drop.
     */
    nrql: pulumi.Input<string>;
}
