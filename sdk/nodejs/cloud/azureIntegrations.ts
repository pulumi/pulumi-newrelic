// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this resource to integrate Azure services with New Relic.
 *
 * ## Prerequisite
 *
 * To start receiving Azure data with New Relic Azure integrations, connect your Azure account to New Relic infrastructure monitoring. If you don't have one already, create a New Relic account. It's free, forever.
 *
 * Setup is required for this resource to work properly. This resource assumes you have linked an Azure account to New Relic.
 *
 * You can find instructions on how to set up Azure on [our documentation](https://docs.newrelic.com/docs/infrastructure/microsoft-azure-integrations/get-started/activate-azure-integrations/).
 *
 * ## Example Usage
 *
 * Leave an integration block empty to use its default configuration. You can also use the full example, including the Azure set up, found in our guides.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const foo = new newrelic.cloud.AzureLinkAccount("foo", {
 *     accountId: "The New Relic account ID where you want to link the Azure account",
 *     applicationId: "ID of the application",
 *     clientSecret: "Secret value of client's Azure account",
 *     subscriptionId: "Subscription ID of Azure",
 *     tenantId: "Tenant ID of the Azure",
 *     name: "Name of the linked account",
 * });
 * const fooAzureIntegrations = new newrelic.cloud.AzureIntegrations("foo", {
 *     linkedAccountId: foo.id,
 *     accountId: "The New Relic account ID",
 *     apiManagement: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     appGateway: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     appService: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     containers: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     cosmosDb: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     costManagement: {
 *         metricsPollingInterval: 3600,
 *         tagKeys: ["tag_keys"],
 *     },
 *     dataFactory: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     eventHub: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     expressRoute: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     firewalls: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     frontDoor: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     functions: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     keyVault: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     loadBalancer: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     logicApps: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     machineLearning: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     mariaDb: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     monitor: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *         includeTags: ["env:production"],
 *         excludeTags: [
 *             "env:staging",
 *             "env:testing",
 *         ],
 *         enabled: true,
 *         resourceTypes: ["microsoft.datashare/accounts"],
 *     },
 *     mysql: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     mysqlFlexible: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     postgresql: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     postgresqlFlexible: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     powerBiDedicated: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     redisCache: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     serviceBus: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     sql: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     sqlManaged: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     storage: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     virtualMachine: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     virtualNetworks: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     vms: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 *     vpnGateway: {
 *         metricsPollingInterval: 1200,
 *         resourceGroups: ["resource_groups"],
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * Linked Azure accounts can be imported using `id`, you can find the `id` of existing Azure linked accounts in Azure dashboard under Infrastructure in NewRelic.
 *
 * bash
 *
 * ```sh
 * $ pulumi import newrelic:cloud/azureIntegrations:AzureIntegrations foo <id>
 * ```
 */
export class AzureIntegrations extends pulumi.CustomResource {
    /**
     * Get an existing AzureIntegrations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AzureIntegrationsState, opts?: pulumi.CustomResourceOptions): AzureIntegrations {
        return new AzureIntegrations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:cloud/azureIntegrations:AzureIntegrations';

    /**
     * Returns true if the given object is an instance of AzureIntegrations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AzureIntegrations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AzureIntegrations.__pulumiType;
    }

    /**
     * The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     */
    public readonly accountId!: pulumi.Output<number>;
    /**
     * Azure API Management. See Integration blocks below for details.
     */
    public readonly apiManagement!: pulumi.Output<outputs.cloud.AzureIntegrationsApiManagement | undefined>;
    /**
     * Azure App Gateway. See Integration blocks below for details.
     */
    public readonly appGateway!: pulumi.Output<outputs.cloud.AzureIntegrationsAppGateway | undefined>;
    /**
     * Azure App Service. See Integration blocks below for details.
     */
    public readonly appService!: pulumi.Output<outputs.cloud.AzureIntegrationsAppService | undefined>;
    /**
     * Azure Containers. See Integration blocks below for details.
     */
    public readonly containers!: pulumi.Output<outputs.cloud.AzureIntegrationsContainers | undefined>;
    /**
     * Azure CosmosDB. See Integration blocks below for details.
     */
    public readonly cosmosDb!: pulumi.Output<outputs.cloud.AzureIntegrationsCosmosDb | undefined>;
    /**
     * Azure Cost Management. See Integration blocks below for details.
     */
    public readonly costManagement!: pulumi.Output<outputs.cloud.AzureIntegrationsCostManagement | undefined>;
    /**
     * Azure Data Factory. See Integration blocks below for details.
     */
    public readonly dataFactory!: pulumi.Output<outputs.cloud.AzureIntegrationsDataFactory | undefined>;
    /**
     * Azure Event Hub. See Integration blocks below for details.
     */
    public readonly eventHub!: pulumi.Output<outputs.cloud.AzureIntegrationsEventHub | undefined>;
    /**
     * Azure Express Route. See Integration blocks below for details.
     */
    public readonly expressRoute!: pulumi.Output<outputs.cloud.AzureIntegrationsExpressRoute | undefined>;
    /**
     * Azure Firewalls. See Integration blocks below for details.
     */
    public readonly firewalls!: pulumi.Output<outputs.cloud.AzureIntegrationsFirewalls | undefined>;
    /**
     * Azure Front Door. See Integration blocks below for details.
     */
    public readonly frontDoor!: pulumi.Output<outputs.cloud.AzureIntegrationsFrontDoor | undefined>;
    /**
     * Azure Functions. See Integration blocks below for details.
     */
    public readonly functions!: pulumi.Output<outputs.cloud.AzureIntegrationsFunctions | undefined>;
    /**
     * Azure Key Vault. See Integration blocks below for details.
     */
    public readonly keyVault!: pulumi.Output<outputs.cloud.AzureIntegrationsKeyVault | undefined>;
    /**
     * The ID of the linked Azure account in New Relic.
     */
    public readonly linkedAccountId!: pulumi.Output<number>;
    /**
     * Azure Load Balancer. See Integration blocks below for details.
     */
    public readonly loadBalancer!: pulumi.Output<outputs.cloud.AzureIntegrationsLoadBalancer | undefined>;
    /**
     * Azure Logic Apps. See Integration blocks below for details.
     */
    public readonly logicApps!: pulumi.Output<outputs.cloud.AzureIntegrationsLogicApps | undefined>;
    /**
     * Azure Machine Learning. See Integration blocks below for details.
     */
    public readonly machineLearning!: pulumi.Output<outputs.cloud.AzureIntegrationsMachineLearning | undefined>;
    /**
     * Azure MariaDB. See Integration blocks below for details.
     */
    public readonly mariaDb!: pulumi.Output<outputs.cloud.AzureIntegrationsMariaDb | undefined>;
    /**
     * Azure Monitor. See Integration blocks below for details.
     */
    public readonly monitor!: pulumi.Output<outputs.cloud.AzureIntegrationsMonitor | undefined>;
    /**
     * Azure MySQL. See Integration blocks below for details.
     */
    public readonly mysql!: pulumi.Output<outputs.cloud.AzureIntegrationsMysql | undefined>;
    /**
     * Azure MySQL Flexible Server. See Integration blocks below for details.
     */
    public readonly mysqlFlexible!: pulumi.Output<outputs.cloud.AzureIntegrationsMysqlFlexible | undefined>;
    /**
     * Azure PostgreSQL. See Integration blocks below for details.
     */
    public readonly postgresql!: pulumi.Output<outputs.cloud.AzureIntegrationsPostgresql | undefined>;
    /**
     * Azure PostgreSQL Flexible Server. See Integration blocks below for details.
     */
    public readonly postgresqlFlexible!: pulumi.Output<outputs.cloud.AzureIntegrationsPostgresqlFlexible | undefined>;
    /**
     * Azure Power BI Dedicated. See Integration blocks below for details.
     */
    public readonly powerBiDedicated!: pulumi.Output<outputs.cloud.AzureIntegrationsPowerBiDedicated | undefined>;
    /**
     * Azure Redis Cache. See Integration blocks below for details.
     */
    public readonly redisCache!: pulumi.Output<outputs.cloud.AzureIntegrationsRedisCache | undefined>;
    /**
     * Azure Service Bus. See Integration blocks below for details.
     */
    public readonly serviceBus!: pulumi.Output<outputs.cloud.AzureIntegrationsServiceBus | undefined>;
    /**
     * Azure SQL. See Integration blocks below for details.
     */
    public readonly sql!: pulumi.Output<outputs.cloud.AzureIntegrationsSql | undefined>;
    /**
     * Azure SQL Managed. See Integration blocks below for details.
     */
    public readonly sqlManaged!: pulumi.Output<outputs.cloud.AzureIntegrationsSqlManaged | undefined>;
    /**
     * for Azure Storage. See Integration blocks below for details.
     */
    public readonly storage!: pulumi.Output<outputs.cloud.AzureIntegrationsStorage | undefined>;
    /**
     * Azure Virtual machine. See Integration blocks below for details.
     */
    public readonly virtualMachine!: pulumi.Output<outputs.cloud.AzureIntegrationsVirtualMachine | undefined>;
    /**
     * for Azure Virtual networks. See Integration blocks below for details.
     *
     * Below argument supports the minimum metric polling interval of 3600 seconds
     */
    public readonly virtualNetworks!: pulumi.Output<outputs.cloud.AzureIntegrationsVirtualNetworks | undefined>;
    /**
     * Azure VMs. See Integration blocks below for details.
     */
    public readonly vms!: pulumi.Output<outputs.cloud.AzureIntegrationsVms | undefined>;
    /**
     * Azure VPN Gateway. See Integration blocks below for details.
     *
     * Below arguments supports the minimum metric polling interval of 900 seconds
     */
    public readonly vpnGateway!: pulumi.Output<outputs.cloud.AzureIntegrationsVpnGateway | undefined>;

    /**
     * Create a AzureIntegrations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AzureIntegrationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AzureIntegrationsArgs | AzureIntegrationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AzureIntegrationsState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["apiManagement"] = state ? state.apiManagement : undefined;
            resourceInputs["appGateway"] = state ? state.appGateway : undefined;
            resourceInputs["appService"] = state ? state.appService : undefined;
            resourceInputs["containers"] = state ? state.containers : undefined;
            resourceInputs["cosmosDb"] = state ? state.cosmosDb : undefined;
            resourceInputs["costManagement"] = state ? state.costManagement : undefined;
            resourceInputs["dataFactory"] = state ? state.dataFactory : undefined;
            resourceInputs["eventHub"] = state ? state.eventHub : undefined;
            resourceInputs["expressRoute"] = state ? state.expressRoute : undefined;
            resourceInputs["firewalls"] = state ? state.firewalls : undefined;
            resourceInputs["frontDoor"] = state ? state.frontDoor : undefined;
            resourceInputs["functions"] = state ? state.functions : undefined;
            resourceInputs["keyVault"] = state ? state.keyVault : undefined;
            resourceInputs["linkedAccountId"] = state ? state.linkedAccountId : undefined;
            resourceInputs["loadBalancer"] = state ? state.loadBalancer : undefined;
            resourceInputs["logicApps"] = state ? state.logicApps : undefined;
            resourceInputs["machineLearning"] = state ? state.machineLearning : undefined;
            resourceInputs["mariaDb"] = state ? state.mariaDb : undefined;
            resourceInputs["monitor"] = state ? state.monitor : undefined;
            resourceInputs["mysql"] = state ? state.mysql : undefined;
            resourceInputs["mysqlFlexible"] = state ? state.mysqlFlexible : undefined;
            resourceInputs["postgresql"] = state ? state.postgresql : undefined;
            resourceInputs["postgresqlFlexible"] = state ? state.postgresqlFlexible : undefined;
            resourceInputs["powerBiDedicated"] = state ? state.powerBiDedicated : undefined;
            resourceInputs["redisCache"] = state ? state.redisCache : undefined;
            resourceInputs["serviceBus"] = state ? state.serviceBus : undefined;
            resourceInputs["sql"] = state ? state.sql : undefined;
            resourceInputs["sqlManaged"] = state ? state.sqlManaged : undefined;
            resourceInputs["storage"] = state ? state.storage : undefined;
            resourceInputs["virtualMachine"] = state ? state.virtualMachine : undefined;
            resourceInputs["virtualNetworks"] = state ? state.virtualNetworks : undefined;
            resourceInputs["vms"] = state ? state.vms : undefined;
            resourceInputs["vpnGateway"] = state ? state.vpnGateway : undefined;
        } else {
            const args = argsOrState as AzureIntegrationsArgs | undefined;
            if ((!args || args.linkedAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linkedAccountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["apiManagement"] = args ? args.apiManagement : undefined;
            resourceInputs["appGateway"] = args ? args.appGateway : undefined;
            resourceInputs["appService"] = args ? args.appService : undefined;
            resourceInputs["containers"] = args ? args.containers : undefined;
            resourceInputs["cosmosDb"] = args ? args.cosmosDb : undefined;
            resourceInputs["costManagement"] = args ? args.costManagement : undefined;
            resourceInputs["dataFactory"] = args ? args.dataFactory : undefined;
            resourceInputs["eventHub"] = args ? args.eventHub : undefined;
            resourceInputs["expressRoute"] = args ? args.expressRoute : undefined;
            resourceInputs["firewalls"] = args ? args.firewalls : undefined;
            resourceInputs["frontDoor"] = args ? args.frontDoor : undefined;
            resourceInputs["functions"] = args ? args.functions : undefined;
            resourceInputs["keyVault"] = args ? args.keyVault : undefined;
            resourceInputs["linkedAccountId"] = args ? args.linkedAccountId : undefined;
            resourceInputs["loadBalancer"] = args ? args.loadBalancer : undefined;
            resourceInputs["logicApps"] = args ? args.logicApps : undefined;
            resourceInputs["machineLearning"] = args ? args.machineLearning : undefined;
            resourceInputs["mariaDb"] = args ? args.mariaDb : undefined;
            resourceInputs["monitor"] = args ? args.monitor : undefined;
            resourceInputs["mysql"] = args ? args.mysql : undefined;
            resourceInputs["mysqlFlexible"] = args ? args.mysqlFlexible : undefined;
            resourceInputs["postgresql"] = args ? args.postgresql : undefined;
            resourceInputs["postgresqlFlexible"] = args ? args.postgresqlFlexible : undefined;
            resourceInputs["powerBiDedicated"] = args ? args.powerBiDedicated : undefined;
            resourceInputs["redisCache"] = args ? args.redisCache : undefined;
            resourceInputs["serviceBus"] = args ? args.serviceBus : undefined;
            resourceInputs["sql"] = args ? args.sql : undefined;
            resourceInputs["sqlManaged"] = args ? args.sqlManaged : undefined;
            resourceInputs["storage"] = args ? args.storage : undefined;
            resourceInputs["virtualMachine"] = args ? args.virtualMachine : undefined;
            resourceInputs["virtualNetworks"] = args ? args.virtualNetworks : undefined;
            resourceInputs["vms"] = args ? args.vms : undefined;
            resourceInputs["vpnGateway"] = args ? args.vpnGateway : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AzureIntegrations.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AzureIntegrations resources.
 */
export interface AzureIntegrationsState {
    /**
     * The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     */
    accountId?: pulumi.Input<number>;
    /**
     * Azure API Management. See Integration blocks below for details.
     */
    apiManagement?: pulumi.Input<inputs.cloud.AzureIntegrationsApiManagement>;
    /**
     * Azure App Gateway. See Integration blocks below for details.
     */
    appGateway?: pulumi.Input<inputs.cloud.AzureIntegrationsAppGateway>;
    /**
     * Azure App Service. See Integration blocks below for details.
     */
    appService?: pulumi.Input<inputs.cloud.AzureIntegrationsAppService>;
    /**
     * Azure Containers. See Integration blocks below for details.
     */
    containers?: pulumi.Input<inputs.cloud.AzureIntegrationsContainers>;
    /**
     * Azure CosmosDB. See Integration blocks below for details.
     */
    cosmosDb?: pulumi.Input<inputs.cloud.AzureIntegrationsCosmosDb>;
    /**
     * Azure Cost Management. See Integration blocks below for details.
     */
    costManagement?: pulumi.Input<inputs.cloud.AzureIntegrationsCostManagement>;
    /**
     * Azure Data Factory. See Integration blocks below for details.
     */
    dataFactory?: pulumi.Input<inputs.cloud.AzureIntegrationsDataFactory>;
    /**
     * Azure Event Hub. See Integration blocks below for details.
     */
    eventHub?: pulumi.Input<inputs.cloud.AzureIntegrationsEventHub>;
    /**
     * Azure Express Route. See Integration blocks below for details.
     */
    expressRoute?: pulumi.Input<inputs.cloud.AzureIntegrationsExpressRoute>;
    /**
     * Azure Firewalls. See Integration blocks below for details.
     */
    firewalls?: pulumi.Input<inputs.cloud.AzureIntegrationsFirewalls>;
    /**
     * Azure Front Door. See Integration blocks below for details.
     */
    frontDoor?: pulumi.Input<inputs.cloud.AzureIntegrationsFrontDoor>;
    /**
     * Azure Functions. See Integration blocks below for details.
     */
    functions?: pulumi.Input<inputs.cloud.AzureIntegrationsFunctions>;
    /**
     * Azure Key Vault. See Integration blocks below for details.
     */
    keyVault?: pulumi.Input<inputs.cloud.AzureIntegrationsKeyVault>;
    /**
     * The ID of the linked Azure account in New Relic.
     */
    linkedAccountId?: pulumi.Input<number>;
    /**
     * Azure Load Balancer. See Integration blocks below for details.
     */
    loadBalancer?: pulumi.Input<inputs.cloud.AzureIntegrationsLoadBalancer>;
    /**
     * Azure Logic Apps. See Integration blocks below for details.
     */
    logicApps?: pulumi.Input<inputs.cloud.AzureIntegrationsLogicApps>;
    /**
     * Azure Machine Learning. See Integration blocks below for details.
     */
    machineLearning?: pulumi.Input<inputs.cloud.AzureIntegrationsMachineLearning>;
    /**
     * Azure MariaDB. See Integration blocks below for details.
     */
    mariaDb?: pulumi.Input<inputs.cloud.AzureIntegrationsMariaDb>;
    /**
     * Azure Monitor. See Integration blocks below for details.
     */
    monitor?: pulumi.Input<inputs.cloud.AzureIntegrationsMonitor>;
    /**
     * Azure MySQL. See Integration blocks below for details.
     */
    mysql?: pulumi.Input<inputs.cloud.AzureIntegrationsMysql>;
    /**
     * Azure MySQL Flexible Server. See Integration blocks below for details.
     */
    mysqlFlexible?: pulumi.Input<inputs.cloud.AzureIntegrationsMysqlFlexible>;
    /**
     * Azure PostgreSQL. See Integration blocks below for details.
     */
    postgresql?: pulumi.Input<inputs.cloud.AzureIntegrationsPostgresql>;
    /**
     * Azure PostgreSQL Flexible Server. See Integration blocks below for details.
     */
    postgresqlFlexible?: pulumi.Input<inputs.cloud.AzureIntegrationsPostgresqlFlexible>;
    /**
     * Azure Power BI Dedicated. See Integration blocks below for details.
     */
    powerBiDedicated?: pulumi.Input<inputs.cloud.AzureIntegrationsPowerBiDedicated>;
    /**
     * Azure Redis Cache. See Integration blocks below for details.
     */
    redisCache?: pulumi.Input<inputs.cloud.AzureIntegrationsRedisCache>;
    /**
     * Azure Service Bus. See Integration blocks below for details.
     */
    serviceBus?: pulumi.Input<inputs.cloud.AzureIntegrationsServiceBus>;
    /**
     * Azure SQL. See Integration blocks below for details.
     */
    sql?: pulumi.Input<inputs.cloud.AzureIntegrationsSql>;
    /**
     * Azure SQL Managed. See Integration blocks below for details.
     */
    sqlManaged?: pulumi.Input<inputs.cloud.AzureIntegrationsSqlManaged>;
    /**
     * for Azure Storage. See Integration blocks below for details.
     */
    storage?: pulumi.Input<inputs.cloud.AzureIntegrationsStorage>;
    /**
     * Azure Virtual machine. See Integration blocks below for details.
     */
    virtualMachine?: pulumi.Input<inputs.cloud.AzureIntegrationsVirtualMachine>;
    /**
     * for Azure Virtual networks. See Integration blocks below for details.
     *
     * Below argument supports the minimum metric polling interval of 3600 seconds
     */
    virtualNetworks?: pulumi.Input<inputs.cloud.AzureIntegrationsVirtualNetworks>;
    /**
     * Azure VMs. See Integration blocks below for details.
     */
    vms?: pulumi.Input<inputs.cloud.AzureIntegrationsVms>;
    /**
     * Azure VPN Gateway. See Integration blocks below for details.
     *
     * Below arguments supports the minimum metric polling interval of 900 seconds
     */
    vpnGateway?: pulumi.Input<inputs.cloud.AzureIntegrationsVpnGateway>;
}

/**
 * The set of arguments for constructing a AzureIntegrations resource.
 */
export interface AzureIntegrationsArgs {
    /**
     * The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     */
    accountId?: pulumi.Input<number>;
    /**
     * Azure API Management. See Integration blocks below for details.
     */
    apiManagement?: pulumi.Input<inputs.cloud.AzureIntegrationsApiManagement>;
    /**
     * Azure App Gateway. See Integration blocks below for details.
     */
    appGateway?: pulumi.Input<inputs.cloud.AzureIntegrationsAppGateway>;
    /**
     * Azure App Service. See Integration blocks below for details.
     */
    appService?: pulumi.Input<inputs.cloud.AzureIntegrationsAppService>;
    /**
     * Azure Containers. See Integration blocks below for details.
     */
    containers?: pulumi.Input<inputs.cloud.AzureIntegrationsContainers>;
    /**
     * Azure CosmosDB. See Integration blocks below for details.
     */
    cosmosDb?: pulumi.Input<inputs.cloud.AzureIntegrationsCosmosDb>;
    /**
     * Azure Cost Management. See Integration blocks below for details.
     */
    costManagement?: pulumi.Input<inputs.cloud.AzureIntegrationsCostManagement>;
    /**
     * Azure Data Factory. See Integration blocks below for details.
     */
    dataFactory?: pulumi.Input<inputs.cloud.AzureIntegrationsDataFactory>;
    /**
     * Azure Event Hub. See Integration blocks below for details.
     */
    eventHub?: pulumi.Input<inputs.cloud.AzureIntegrationsEventHub>;
    /**
     * Azure Express Route. See Integration blocks below for details.
     */
    expressRoute?: pulumi.Input<inputs.cloud.AzureIntegrationsExpressRoute>;
    /**
     * Azure Firewalls. See Integration blocks below for details.
     */
    firewalls?: pulumi.Input<inputs.cloud.AzureIntegrationsFirewalls>;
    /**
     * Azure Front Door. See Integration blocks below for details.
     */
    frontDoor?: pulumi.Input<inputs.cloud.AzureIntegrationsFrontDoor>;
    /**
     * Azure Functions. See Integration blocks below for details.
     */
    functions?: pulumi.Input<inputs.cloud.AzureIntegrationsFunctions>;
    /**
     * Azure Key Vault. See Integration blocks below for details.
     */
    keyVault?: pulumi.Input<inputs.cloud.AzureIntegrationsKeyVault>;
    /**
     * The ID of the linked Azure account in New Relic.
     */
    linkedAccountId: pulumi.Input<number>;
    /**
     * Azure Load Balancer. See Integration blocks below for details.
     */
    loadBalancer?: pulumi.Input<inputs.cloud.AzureIntegrationsLoadBalancer>;
    /**
     * Azure Logic Apps. See Integration blocks below for details.
     */
    logicApps?: pulumi.Input<inputs.cloud.AzureIntegrationsLogicApps>;
    /**
     * Azure Machine Learning. See Integration blocks below for details.
     */
    machineLearning?: pulumi.Input<inputs.cloud.AzureIntegrationsMachineLearning>;
    /**
     * Azure MariaDB. See Integration blocks below for details.
     */
    mariaDb?: pulumi.Input<inputs.cloud.AzureIntegrationsMariaDb>;
    /**
     * Azure Monitor. See Integration blocks below for details.
     */
    monitor?: pulumi.Input<inputs.cloud.AzureIntegrationsMonitor>;
    /**
     * Azure MySQL. See Integration blocks below for details.
     */
    mysql?: pulumi.Input<inputs.cloud.AzureIntegrationsMysql>;
    /**
     * Azure MySQL Flexible Server. See Integration blocks below for details.
     */
    mysqlFlexible?: pulumi.Input<inputs.cloud.AzureIntegrationsMysqlFlexible>;
    /**
     * Azure PostgreSQL. See Integration blocks below for details.
     */
    postgresql?: pulumi.Input<inputs.cloud.AzureIntegrationsPostgresql>;
    /**
     * Azure PostgreSQL Flexible Server. See Integration blocks below for details.
     */
    postgresqlFlexible?: pulumi.Input<inputs.cloud.AzureIntegrationsPostgresqlFlexible>;
    /**
     * Azure Power BI Dedicated. See Integration blocks below for details.
     */
    powerBiDedicated?: pulumi.Input<inputs.cloud.AzureIntegrationsPowerBiDedicated>;
    /**
     * Azure Redis Cache. See Integration blocks below for details.
     */
    redisCache?: pulumi.Input<inputs.cloud.AzureIntegrationsRedisCache>;
    /**
     * Azure Service Bus. See Integration blocks below for details.
     */
    serviceBus?: pulumi.Input<inputs.cloud.AzureIntegrationsServiceBus>;
    /**
     * Azure SQL. See Integration blocks below for details.
     */
    sql?: pulumi.Input<inputs.cloud.AzureIntegrationsSql>;
    /**
     * Azure SQL Managed. See Integration blocks below for details.
     */
    sqlManaged?: pulumi.Input<inputs.cloud.AzureIntegrationsSqlManaged>;
    /**
     * for Azure Storage. See Integration blocks below for details.
     */
    storage?: pulumi.Input<inputs.cloud.AzureIntegrationsStorage>;
    /**
     * Azure Virtual machine. See Integration blocks below for details.
     */
    virtualMachine?: pulumi.Input<inputs.cloud.AzureIntegrationsVirtualMachine>;
    /**
     * for Azure Virtual networks. See Integration blocks below for details.
     *
     * Below argument supports the minimum metric polling interval of 3600 seconds
     */
    virtualNetworks?: pulumi.Input<inputs.cloud.AzureIntegrationsVirtualNetworks>;
    /**
     * Azure VMs. See Integration blocks below for details.
     */
    vms?: pulumi.Input<inputs.cloud.AzureIntegrationsVms>;
    /**
     * Azure VPN Gateway. See Integration blocks below for details.
     *
     * Below arguments supports the minimum metric polling interval of 900 seconds
     */
    vpnGateway?: pulumi.Input<inputs.cloud.AzureIntegrationsVpnGateway>;
}
