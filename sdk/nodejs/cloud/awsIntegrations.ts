// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this resource to integrate AWS services with New Relic.
 *
 * ## Prerequisite
 *
 * Setup is required for this resource to work properly. This resource assumes you have linked an AWS account to New Relic and configured it to push metrics using CloudWatch Metric Streams.
 *
 * New Relic doesn't automatically receive metrics from AWS for some services so this resource can be used to configure integrations to those services.
 *
 * Using a metric stream to New Relic is the preferred way to integrate with AWS. Follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#set-up-metric-stream) to set up a metric stream. This resource supports any integration that's not available through AWS metric stream.
 *
 * ## Example Usage
 *
 * Leave an integration block empty to use its default configuration. You can also use the full example, including the AWS set up, found in our guides.
 *
 * <!--Start PulumiCodeChooser -->
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const foo = new newrelic.cloud.AwsLinkAccount("foo", {
 *     arn: aws_iam_role.newrelic_aws_role.arn,
 *     metricCollectionMode: "PULL",
 * });
 * const bar = new newrelic.cloud.AwsIntegrations("bar", {
 *     linkedAccountId: foo.id,
 *     billing: {},
 *     cloudtrail: {
 *         metricsPollingInterval: 6000,
 *         awsRegions: [
 *             "us-east-1",
 *             "us-east-2",
 *         ],
 *     },
 *     health: {
 *         metricsPollingInterval: 6000,
 *     },
 *     trustedAdvisor: {
 *         metricsPollingInterval: 6000,
 *     },
 *     vpc: {
 *         metricsPollingInterval: 6000,
 *         awsRegions: [
 *             "us-east-1",
 *             "us-east-2",
 *         ],
 *         fetchNatGateway: true,
 *         fetchVpn: false,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     xRay: {
 *         metricsPollingInterval: 6000,
 *         awsRegions: [
 *             "us-east-1",
 *             "us-east-2",
 *         ],
 *     },
 *     s3: {
 *         metricsPollingInterval: 6000,
 *     },
 *     docDb: {
 *         metricsPollingInterval: 6000,
 *     },
 *     sqs: {
 *         fetchExtendedInventory: true,
 *         fetchTags: true,
 *         queuePrefixes: ["queue prefix"],
 *         metricsPollingInterval: 6000,
 *         awsRegions: ["us-east-1"],
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     ebs: {
 *         metricsPollingInterval: 6000,
 *         fetchExtendedInventory: true,
 *         awsRegions: ["us-east-1"],
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     alb: {
 *         fetchExtendedInventory: true,
 *         fetchTags: true,
 *         loadBalancerPrefixes: ["load balancer prefix"],
 *         metricsPollingInterval: 6000,
 *         awsRegions: ["us-east-1"],
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     elasticache: {
 *         awsRegions: ["us-east-1"],
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     apiGateway: {
 *         metricsPollingInterval: 6000,
 *         awsRegions: ["us-east-1"],
 *         stagePrefixes: ["stage prefix"],
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     autoScaling: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsAppSync: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsAthena: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsCognito: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsConnect: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsDirectConnect: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsFsx: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsGlue: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsKinesisAnalytics: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsMediaConvert: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsMediaPackageVod: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsMq: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsMsk: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsNeptune: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsQldb: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsRoute53resolver: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsStates: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsTransitGateway: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsWaf: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     awsWafv2: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     cloudfront: {
 *         fetchLambdasAtEdge: true,
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     dynamodb: {
 *         awsRegions: ["us-east-1"],
 *         fetchExtendedInventory: true,
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     ec2: {
 *         awsRegions: ["us-east-1"],
 *         duplicateEc2Tags: true,
 *         fetchIpAddresses: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     ecs: {
 *         awsRegions: ["us-east-1"],
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     efs: {
 *         awsRegions: ["us-east-1"],
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     elasticbeanstalk: {
 *         awsRegions: ["us-east-1"],
 *         fetchExtendedInventory: true,
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     elasticsearch: {
 *         awsRegions: ["us-east-1"],
 *         fetchNodes: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     elb: {
 *         awsRegions: ["us-east-1"],
 *         fetchExtendedInventory: true,
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *     },
 *     emr: {
 *         awsRegions: ["us-east-1"],
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     iam: {
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     iot: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     kinesis: {
 *         awsRegions: ["us-east-1"],
 *         fetchShards: true,
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     kinesisFirehose: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     lambda: {
 *         awsRegions: ["us-east-1"],
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     rds: {
 *         awsRegions: ["us-east-1"],
 *         fetchTags: true,
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     redshift: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *         tagKey: "tag key",
 *         tagValue: "tag value",
 *     },
 *     route53: {
 *         fetchExtendedInventory: true,
 *         metricsPollingInterval: 6000,
 *     },
 *     ses: {
 *         awsRegions: ["us-east-1"],
 *         metricsPollingInterval: 6000,
 *     },
 *     sns: {
 *         awsRegions: ["us-east-1"],
 *         fetchExtendedInventory: true,
 *         metricsPollingInterval: 6000,
 *     },
 * });
 * ```
 * <!--End PulumiCodeChooser -->
 *
 * ## Import
 *
 * Linked AWS account integrations can be imported using the `id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import newrelic:cloud/awsIntegrations:AwsIntegrations foo <id>
 * ```
 */
export class AwsIntegrations extends pulumi.CustomResource {
    /**
     * Get an existing AwsIntegrations resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsIntegrationsState, opts?: pulumi.CustomResourceOptions): AwsIntegrations {
        return new AwsIntegrations(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:cloud/awsIntegrations:AwsIntegrations';

    /**
     * Returns true if the given object is an instance of AwsIntegrations.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsIntegrations {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsIntegrations.__pulumiType;
    }

    /**
     * The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * ALB integration
     */
    public readonly alb!: pulumi.Output<outputs.cloud.AwsIntegrationsAlb | undefined>;
    /**
     * API Gateway integration
     */
    public readonly apiGateway!: pulumi.Output<outputs.cloud.AwsIntegrationsApiGateway | undefined>;
    /**
     * ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
     */
    public readonly autoScaling!: pulumi.Output<outputs.cloud.AwsIntegrationsAutoScaling | undefined>;
    /**
     * Aws Appsync integration
     */
    public readonly awsAppSync!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsAppSync | undefined>;
    /**
     * Aws Athena integration
     */
    public readonly awsAthena!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsAthena | undefined>;
    /**
     * Aws Cognito integration
     */
    public readonly awsCognito!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsCognito | undefined>;
    /**
     * Aws Connect integration
     */
    public readonly awsConnect!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsConnect | undefined>;
    /**
     * Aws Direct Connect integration
     */
    public readonly awsDirectConnect!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsDirectConnect | undefined>;
    /**
     * Aws Fsx integration
     */
    public readonly awsFsx!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsFsx | undefined>;
    /**
     * Aws Glue integration
     */
    public readonly awsGlue!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsGlue | undefined>;
    /**
     * Aws Kinesis Analytics integration
     */
    public readonly awsKinesisAnalytics!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsKinesisAnalytics | undefined>;
    /**
     * Aws Media Convert integration
     */
    public readonly awsMediaConvert!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsMediaConvert | undefined>;
    /**
     * Aws Media PackageVod integration
     */
    public readonly awsMediaPackageVod!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsMediaPackageVod | undefined>;
    /**
     * Aws Mq integration
     */
    public readonly awsMq!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsMq | undefined>;
    /**
     * Aws Msk integration
     */
    public readonly awsMsk!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsMsk | undefined>;
    /**
     * Aws Neptune integration
     */
    public readonly awsNeptune!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsNeptune | undefined>;
    /**
     * Aws Qldb integration
     */
    public readonly awsQldb!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsQldb | undefined>;
    /**
     * Aws Route53resolver integration
     */
    public readonly awsRoute53resolver!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsRoute53resolver | undefined>;
    /**
     * Aws states integration
     */
    public readonly awsStates!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsStates | undefined>;
    /**
     * Aws Transit Gateway integration
     */
    public readonly awsTransitGateway!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsTransitGateway | undefined>;
    /**
     * Aws Waf integration
     */
    public readonly awsWaf!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsWaf | undefined>;
    /**
     * Aws Wafv2 integration
     */
    public readonly awsWafv2!: pulumi.Output<outputs.cloud.AwsIntegrationsAwsWafv2 | undefined>;
    /**
     * Billing integration
     */
    public readonly billing!: pulumi.Output<outputs.cloud.AwsIntegrationsBilling | undefined>;
    /**
     * Cloudfront integration
     */
    public readonly cloudfront!: pulumi.Output<outputs.cloud.AwsIntegrationsCloudfront | undefined>;
    /**
     * CloudTrail integration
     */
    public readonly cloudtrail!: pulumi.Output<outputs.cloud.AwsIntegrationsCloudtrail | undefined>;
    /**
     * Doc DB integration
     */
    public readonly docDb!: pulumi.Output<outputs.cloud.AwsIntegrationsDocDb | undefined>;
    /**
     * Dynamo DB integration
     */
    public readonly dynamodb!: pulumi.Output<outputs.cloud.AwsIntegrationsDynamodb | undefined>;
    /**
     * EBS integration
     */
    public readonly ebs!: pulumi.Output<outputs.cloud.AwsIntegrationsEbs | undefined>;
    /**
     * Ec2 integration
     */
    public readonly ec2!: pulumi.Output<outputs.cloud.AwsIntegrationsEc2 | undefined>;
    /**
     * Ecs integration
     */
    public readonly ecs!: pulumi.Output<outputs.cloud.AwsIntegrationsEcs | undefined>;
    /**
     * Efs integration
     */
    public readonly efs!: pulumi.Output<outputs.cloud.AwsIntegrationsEfs | undefined>;
    /**
     * Elasticache integration
     */
    public readonly elasticache!: pulumi.Output<outputs.cloud.AwsIntegrationsElasticache | undefined>;
    /**
     * Elastic Bean Stalk integration
     */
    public readonly elasticbeanstalk!: pulumi.Output<outputs.cloud.AwsIntegrationsElasticbeanstalk | undefined>;
    /**
     * Elastic Search integration
     */
    public readonly elasticsearch!: pulumi.Output<outputs.cloud.AwsIntegrationsElasticsearch | undefined>;
    /**
     * Elb integration
     */
    public readonly elb!: pulumi.Output<outputs.cloud.AwsIntegrationsElb | undefined>;
    /**
     * Emr integration
     */
    public readonly emr!: pulumi.Output<outputs.cloud.AwsIntegrationsEmr | undefined>;
    /**
     * Health integration
     */
    public readonly health!: pulumi.Output<outputs.cloud.AwsIntegrationsHealth | undefined>;
    /**
     * Iam integration
     */
    public readonly iam!: pulumi.Output<outputs.cloud.AwsIntegrationsIam | undefined>;
    /**
     * Iot integration
     */
    public readonly iot!: pulumi.Output<outputs.cloud.AwsIntegrationsIot | undefined>;
    /**
     * Kinesis integration
     */
    public readonly kinesis!: pulumi.Output<outputs.cloud.AwsIntegrationsKinesis | undefined>;
    /**
     * Kinesis Firehose integration
     */
    public readonly kinesisFirehose!: pulumi.Output<outputs.cloud.AwsIntegrationsKinesisFirehose | undefined>;
    /**
     * Lambda integration
     */
    public readonly lambda!: pulumi.Output<outputs.cloud.AwsIntegrationsLambda | undefined>;
    /**
     * The ID of the linked AWS account in New Relic.
     *
     * All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
     * <details>
     * <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
     *
     * | Block                   | Description                   |
     * |-------------------------|-------------------------------|
     * | `alb`                   | ALB Integration               |
     * | `apiGateway`           | API Gateway Integration       |
     * | `autoScaling`          | Auto Scaling Integration      |
     * | `awsAppSync`          | AppSync Integration           |
     * | `awsAthena`            | Athena Integration            |
     * | `awsCognito`           | Cognito Integration           |
     * | `awsConnect`           | Connect Integration           |
     * | `awsDirectConnect`    | Direct Connect Integration    |
     * | `awsFsx`               | FSx Integration               |
     * | `awsGlue`              | Glue Integration              |
     * | `awsKinesisAnalytics` | Kinesis Analytics Integration |
     * | `awsMediaConvert`     | MediaConvert Integration      |
     * | `awsMediaPackageVod` | Media Package VOD Integration |
     * | `awsMq`                | MQ Integration                |
     * | `awsMsk`               | MSK Integration               |
     * | `awsNeptune`           | Neptune Integration           |
     * | `awsQldb`              | QLDB Integration              |
     * | `awsRoute53resolver`   | Route53 Resolver Integration  |
     * | `awsStates`            | States Integration            |
     * | `awsTransitGateway`   | Transit Gateway Integration   |
     * | `awsWaf`               | WAF Integration               |
     * | `awsWafv2`             | WAFv2 Integration             |
     * | `billing`               | Billing Integration           |
     * | `cloudfront`            | CloudFront Integration        |
     * | `cloudtrail`            | CloudTrail Integration        |
     * | `docDb`                | DocumentDB Integration        |
     * | `dynamodb`              | DynamoDB Integration          |
     * | `ebs`                   | EBS Integration               |
     * | `ec2`                   | EC2 Integration               |
     * | `ecs`                   | ECS Integration               |
     * | `efs`                   | EFS Integration               |
     * | `elasticache`           | ElastiCache Integration       |
     * | `elasticbeanstalk`      | Elastic Beanstalk Integration |
     * | `elasticsearch`         | Elasticsearch Integration     |
     * | `elb`                   | ELB Integration               |
     * | `emr`                   | EMR Integration               |
     * | `health`                | Health Integration            |
     * | `iam`                   | IAM Integration               |
     * | `iot`                   | IoT Integration               |
     * | `kinesis`               | Kinesis Integration           |
     * | `kinesisFirehose`      | Kinesis Firehose Integration  |
     * | `lambda`                | Lambda Integration            |
     * | `rds`                   | RDS Integration               |
     * | `redshift`              | Redshift Integration          |
     * | `route53`               | Route53 Integration           |
     * | `s3`                    | S3 Integration                |
     * | `ses`                   | SES Integration               |
     * | `sns`                   | SNS Integration               |
     * | `sqs`                   | SQS Integration               |
     * | `trustedAdvisor`       | Trusted Advisor Integration   |
     * | `vpc`                   | VPC Integration               |
     * | `xRay`                 | X-Ray Integration             |
     *
     * </details>
     */
    public readonly linkedAccountId!: pulumi.Output<string>;
    /**
     * Rds integration
     */
    public readonly rds!: pulumi.Output<outputs.cloud.AwsIntegrationsRds | undefined>;
    /**
     * Redshift integration
     */
    public readonly redshift!: pulumi.Output<outputs.cloud.AwsIntegrationsRedshift | undefined>;
    /**
     * Route53 integration
     */
    public readonly route53!: pulumi.Output<outputs.cloud.AwsIntegrationsRoute53 | undefined>;
    /**
     * S3 integration
     */
    public readonly s3!: pulumi.Output<outputs.cloud.AwsIntegrationsS3 | undefined>;
    /**
     * Ses integration
     */
    public readonly ses!: pulumi.Output<outputs.cloud.AwsIntegrationsSes | undefined>;
    /**
     * Sns integration
     */
    public readonly sns!: pulumi.Output<outputs.cloud.AwsIntegrationsSns | undefined>;
    /**
     * SQS integration
     */
    public readonly sqs!: pulumi.Output<outputs.cloud.AwsIntegrationsSqs | undefined>;
    /**
     * Trusted Advisor integration
     */
    public readonly trustedAdvisor!: pulumi.Output<outputs.cloud.AwsIntegrationsTrustedAdvisor | undefined>;
    /**
     * VPC integration
     */
    public readonly vpc!: pulumi.Output<outputs.cloud.AwsIntegrationsVpc | undefined>;
    /**
     * X-Ray integration
     */
    public readonly xRay!: pulumi.Output<outputs.cloud.AwsIntegrationsXRay | undefined>;

    /**
     * Create a AwsIntegrations resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsIntegrationsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsIntegrationsArgs | AwsIntegrationsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsIntegrationsState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["alb"] = state ? state.alb : undefined;
            resourceInputs["apiGateway"] = state ? state.apiGateway : undefined;
            resourceInputs["autoScaling"] = state ? state.autoScaling : undefined;
            resourceInputs["awsAppSync"] = state ? state.awsAppSync : undefined;
            resourceInputs["awsAthena"] = state ? state.awsAthena : undefined;
            resourceInputs["awsCognito"] = state ? state.awsCognito : undefined;
            resourceInputs["awsConnect"] = state ? state.awsConnect : undefined;
            resourceInputs["awsDirectConnect"] = state ? state.awsDirectConnect : undefined;
            resourceInputs["awsFsx"] = state ? state.awsFsx : undefined;
            resourceInputs["awsGlue"] = state ? state.awsGlue : undefined;
            resourceInputs["awsKinesisAnalytics"] = state ? state.awsKinesisAnalytics : undefined;
            resourceInputs["awsMediaConvert"] = state ? state.awsMediaConvert : undefined;
            resourceInputs["awsMediaPackageVod"] = state ? state.awsMediaPackageVod : undefined;
            resourceInputs["awsMq"] = state ? state.awsMq : undefined;
            resourceInputs["awsMsk"] = state ? state.awsMsk : undefined;
            resourceInputs["awsNeptune"] = state ? state.awsNeptune : undefined;
            resourceInputs["awsQldb"] = state ? state.awsQldb : undefined;
            resourceInputs["awsRoute53resolver"] = state ? state.awsRoute53resolver : undefined;
            resourceInputs["awsStates"] = state ? state.awsStates : undefined;
            resourceInputs["awsTransitGateway"] = state ? state.awsTransitGateway : undefined;
            resourceInputs["awsWaf"] = state ? state.awsWaf : undefined;
            resourceInputs["awsWafv2"] = state ? state.awsWafv2 : undefined;
            resourceInputs["billing"] = state ? state.billing : undefined;
            resourceInputs["cloudfront"] = state ? state.cloudfront : undefined;
            resourceInputs["cloudtrail"] = state ? state.cloudtrail : undefined;
            resourceInputs["docDb"] = state ? state.docDb : undefined;
            resourceInputs["dynamodb"] = state ? state.dynamodb : undefined;
            resourceInputs["ebs"] = state ? state.ebs : undefined;
            resourceInputs["ec2"] = state ? state.ec2 : undefined;
            resourceInputs["ecs"] = state ? state.ecs : undefined;
            resourceInputs["efs"] = state ? state.efs : undefined;
            resourceInputs["elasticache"] = state ? state.elasticache : undefined;
            resourceInputs["elasticbeanstalk"] = state ? state.elasticbeanstalk : undefined;
            resourceInputs["elasticsearch"] = state ? state.elasticsearch : undefined;
            resourceInputs["elb"] = state ? state.elb : undefined;
            resourceInputs["emr"] = state ? state.emr : undefined;
            resourceInputs["health"] = state ? state.health : undefined;
            resourceInputs["iam"] = state ? state.iam : undefined;
            resourceInputs["iot"] = state ? state.iot : undefined;
            resourceInputs["kinesis"] = state ? state.kinesis : undefined;
            resourceInputs["kinesisFirehose"] = state ? state.kinesisFirehose : undefined;
            resourceInputs["lambda"] = state ? state.lambda : undefined;
            resourceInputs["linkedAccountId"] = state ? state.linkedAccountId : undefined;
            resourceInputs["rds"] = state ? state.rds : undefined;
            resourceInputs["redshift"] = state ? state.redshift : undefined;
            resourceInputs["route53"] = state ? state.route53 : undefined;
            resourceInputs["s3"] = state ? state.s3 : undefined;
            resourceInputs["ses"] = state ? state.ses : undefined;
            resourceInputs["sns"] = state ? state.sns : undefined;
            resourceInputs["sqs"] = state ? state.sqs : undefined;
            resourceInputs["trustedAdvisor"] = state ? state.trustedAdvisor : undefined;
            resourceInputs["vpc"] = state ? state.vpc : undefined;
            resourceInputs["xRay"] = state ? state.xRay : undefined;
        } else {
            const args = argsOrState as AwsIntegrationsArgs | undefined;
            if ((!args || args.linkedAccountId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'linkedAccountId'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["alb"] = args ? args.alb : undefined;
            resourceInputs["apiGateway"] = args ? args.apiGateway : undefined;
            resourceInputs["autoScaling"] = args ? args.autoScaling : undefined;
            resourceInputs["awsAppSync"] = args ? args.awsAppSync : undefined;
            resourceInputs["awsAthena"] = args ? args.awsAthena : undefined;
            resourceInputs["awsCognito"] = args ? args.awsCognito : undefined;
            resourceInputs["awsConnect"] = args ? args.awsConnect : undefined;
            resourceInputs["awsDirectConnect"] = args ? args.awsDirectConnect : undefined;
            resourceInputs["awsFsx"] = args ? args.awsFsx : undefined;
            resourceInputs["awsGlue"] = args ? args.awsGlue : undefined;
            resourceInputs["awsKinesisAnalytics"] = args ? args.awsKinesisAnalytics : undefined;
            resourceInputs["awsMediaConvert"] = args ? args.awsMediaConvert : undefined;
            resourceInputs["awsMediaPackageVod"] = args ? args.awsMediaPackageVod : undefined;
            resourceInputs["awsMq"] = args ? args.awsMq : undefined;
            resourceInputs["awsMsk"] = args ? args.awsMsk : undefined;
            resourceInputs["awsNeptune"] = args ? args.awsNeptune : undefined;
            resourceInputs["awsQldb"] = args ? args.awsQldb : undefined;
            resourceInputs["awsRoute53resolver"] = args ? args.awsRoute53resolver : undefined;
            resourceInputs["awsStates"] = args ? args.awsStates : undefined;
            resourceInputs["awsTransitGateway"] = args ? args.awsTransitGateway : undefined;
            resourceInputs["awsWaf"] = args ? args.awsWaf : undefined;
            resourceInputs["awsWafv2"] = args ? args.awsWafv2 : undefined;
            resourceInputs["billing"] = args ? args.billing : undefined;
            resourceInputs["cloudfront"] = args ? args.cloudfront : undefined;
            resourceInputs["cloudtrail"] = args ? args.cloudtrail : undefined;
            resourceInputs["docDb"] = args ? args.docDb : undefined;
            resourceInputs["dynamodb"] = args ? args.dynamodb : undefined;
            resourceInputs["ebs"] = args ? args.ebs : undefined;
            resourceInputs["ec2"] = args ? args.ec2 : undefined;
            resourceInputs["ecs"] = args ? args.ecs : undefined;
            resourceInputs["efs"] = args ? args.efs : undefined;
            resourceInputs["elasticache"] = args ? args.elasticache : undefined;
            resourceInputs["elasticbeanstalk"] = args ? args.elasticbeanstalk : undefined;
            resourceInputs["elasticsearch"] = args ? args.elasticsearch : undefined;
            resourceInputs["elb"] = args ? args.elb : undefined;
            resourceInputs["emr"] = args ? args.emr : undefined;
            resourceInputs["health"] = args ? args.health : undefined;
            resourceInputs["iam"] = args ? args.iam : undefined;
            resourceInputs["iot"] = args ? args.iot : undefined;
            resourceInputs["kinesis"] = args ? args.kinesis : undefined;
            resourceInputs["kinesisFirehose"] = args ? args.kinesisFirehose : undefined;
            resourceInputs["lambda"] = args ? args.lambda : undefined;
            resourceInputs["linkedAccountId"] = args ? args.linkedAccountId : undefined;
            resourceInputs["rds"] = args ? args.rds : undefined;
            resourceInputs["redshift"] = args ? args.redshift : undefined;
            resourceInputs["route53"] = args ? args.route53 : undefined;
            resourceInputs["s3"] = args ? args.s3 : undefined;
            resourceInputs["ses"] = args ? args.ses : undefined;
            resourceInputs["sns"] = args ? args.sns : undefined;
            resourceInputs["sqs"] = args ? args.sqs : undefined;
            resourceInputs["trustedAdvisor"] = args ? args.trustedAdvisor : undefined;
            resourceInputs["vpc"] = args ? args.vpc : undefined;
            resourceInputs["xRay"] = args ? args.xRay : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsIntegrations.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsIntegrations resources.
 */
export interface AwsIntegrationsState {
    /**
     * The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * ALB integration
     */
    alb?: pulumi.Input<inputs.cloud.AwsIntegrationsAlb>;
    /**
     * API Gateway integration
     */
    apiGateway?: pulumi.Input<inputs.cloud.AwsIntegrationsApiGateway>;
    /**
     * ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
     */
    autoScaling?: pulumi.Input<inputs.cloud.AwsIntegrationsAutoScaling>;
    /**
     * Aws Appsync integration
     */
    awsAppSync?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsAppSync>;
    /**
     * Aws Athena integration
     */
    awsAthena?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsAthena>;
    /**
     * Aws Cognito integration
     */
    awsCognito?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsCognito>;
    /**
     * Aws Connect integration
     */
    awsConnect?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsConnect>;
    /**
     * Aws Direct Connect integration
     */
    awsDirectConnect?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsDirectConnect>;
    /**
     * Aws Fsx integration
     */
    awsFsx?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsFsx>;
    /**
     * Aws Glue integration
     */
    awsGlue?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsGlue>;
    /**
     * Aws Kinesis Analytics integration
     */
    awsKinesisAnalytics?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsKinesisAnalytics>;
    /**
     * Aws Media Convert integration
     */
    awsMediaConvert?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMediaConvert>;
    /**
     * Aws Media PackageVod integration
     */
    awsMediaPackageVod?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMediaPackageVod>;
    /**
     * Aws Mq integration
     */
    awsMq?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMq>;
    /**
     * Aws Msk integration
     */
    awsMsk?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMsk>;
    /**
     * Aws Neptune integration
     */
    awsNeptune?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsNeptune>;
    /**
     * Aws Qldb integration
     */
    awsQldb?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsQldb>;
    /**
     * Aws Route53resolver integration
     */
    awsRoute53resolver?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsRoute53resolver>;
    /**
     * Aws states integration
     */
    awsStates?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsStates>;
    /**
     * Aws Transit Gateway integration
     */
    awsTransitGateway?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsTransitGateway>;
    /**
     * Aws Waf integration
     */
    awsWaf?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsWaf>;
    /**
     * Aws Wafv2 integration
     */
    awsWafv2?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsWafv2>;
    /**
     * Billing integration
     */
    billing?: pulumi.Input<inputs.cloud.AwsIntegrationsBilling>;
    /**
     * Cloudfront integration
     */
    cloudfront?: pulumi.Input<inputs.cloud.AwsIntegrationsCloudfront>;
    /**
     * CloudTrail integration
     */
    cloudtrail?: pulumi.Input<inputs.cloud.AwsIntegrationsCloudtrail>;
    /**
     * Doc DB integration
     */
    docDb?: pulumi.Input<inputs.cloud.AwsIntegrationsDocDb>;
    /**
     * Dynamo DB integration
     */
    dynamodb?: pulumi.Input<inputs.cloud.AwsIntegrationsDynamodb>;
    /**
     * EBS integration
     */
    ebs?: pulumi.Input<inputs.cloud.AwsIntegrationsEbs>;
    /**
     * Ec2 integration
     */
    ec2?: pulumi.Input<inputs.cloud.AwsIntegrationsEc2>;
    /**
     * Ecs integration
     */
    ecs?: pulumi.Input<inputs.cloud.AwsIntegrationsEcs>;
    /**
     * Efs integration
     */
    efs?: pulumi.Input<inputs.cloud.AwsIntegrationsEfs>;
    /**
     * Elasticache integration
     */
    elasticache?: pulumi.Input<inputs.cloud.AwsIntegrationsElasticache>;
    /**
     * Elastic Bean Stalk integration
     */
    elasticbeanstalk?: pulumi.Input<inputs.cloud.AwsIntegrationsElasticbeanstalk>;
    /**
     * Elastic Search integration
     */
    elasticsearch?: pulumi.Input<inputs.cloud.AwsIntegrationsElasticsearch>;
    /**
     * Elb integration
     */
    elb?: pulumi.Input<inputs.cloud.AwsIntegrationsElb>;
    /**
     * Emr integration
     */
    emr?: pulumi.Input<inputs.cloud.AwsIntegrationsEmr>;
    /**
     * Health integration
     */
    health?: pulumi.Input<inputs.cloud.AwsIntegrationsHealth>;
    /**
     * Iam integration
     */
    iam?: pulumi.Input<inputs.cloud.AwsIntegrationsIam>;
    /**
     * Iot integration
     */
    iot?: pulumi.Input<inputs.cloud.AwsIntegrationsIot>;
    /**
     * Kinesis integration
     */
    kinesis?: pulumi.Input<inputs.cloud.AwsIntegrationsKinesis>;
    /**
     * Kinesis Firehose integration
     */
    kinesisFirehose?: pulumi.Input<inputs.cloud.AwsIntegrationsKinesisFirehose>;
    /**
     * Lambda integration
     */
    lambda?: pulumi.Input<inputs.cloud.AwsIntegrationsLambda>;
    /**
     * The ID of the linked AWS account in New Relic.
     *
     * All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
     * <details>
     * <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
     *
     * | Block                   | Description                   |
     * |-------------------------|-------------------------------|
     * | `alb`                   | ALB Integration               |
     * | `apiGateway`           | API Gateway Integration       |
     * | `autoScaling`          | Auto Scaling Integration      |
     * | `awsAppSync`          | AppSync Integration           |
     * | `awsAthena`            | Athena Integration            |
     * | `awsCognito`           | Cognito Integration           |
     * | `awsConnect`           | Connect Integration           |
     * | `awsDirectConnect`    | Direct Connect Integration    |
     * | `awsFsx`               | FSx Integration               |
     * | `awsGlue`              | Glue Integration              |
     * | `awsKinesisAnalytics` | Kinesis Analytics Integration |
     * | `awsMediaConvert`     | MediaConvert Integration      |
     * | `awsMediaPackageVod` | Media Package VOD Integration |
     * | `awsMq`                | MQ Integration                |
     * | `awsMsk`               | MSK Integration               |
     * | `awsNeptune`           | Neptune Integration           |
     * | `awsQldb`              | QLDB Integration              |
     * | `awsRoute53resolver`   | Route53 Resolver Integration  |
     * | `awsStates`            | States Integration            |
     * | `awsTransitGateway`   | Transit Gateway Integration   |
     * | `awsWaf`               | WAF Integration               |
     * | `awsWafv2`             | WAFv2 Integration             |
     * | `billing`               | Billing Integration           |
     * | `cloudfront`            | CloudFront Integration        |
     * | `cloudtrail`            | CloudTrail Integration        |
     * | `docDb`                | DocumentDB Integration        |
     * | `dynamodb`              | DynamoDB Integration          |
     * | `ebs`                   | EBS Integration               |
     * | `ec2`                   | EC2 Integration               |
     * | `ecs`                   | ECS Integration               |
     * | `efs`                   | EFS Integration               |
     * | `elasticache`           | ElastiCache Integration       |
     * | `elasticbeanstalk`      | Elastic Beanstalk Integration |
     * | `elasticsearch`         | Elasticsearch Integration     |
     * | `elb`                   | ELB Integration               |
     * | `emr`                   | EMR Integration               |
     * | `health`                | Health Integration            |
     * | `iam`                   | IAM Integration               |
     * | `iot`                   | IoT Integration               |
     * | `kinesis`               | Kinesis Integration           |
     * | `kinesisFirehose`      | Kinesis Firehose Integration  |
     * | `lambda`                | Lambda Integration            |
     * | `rds`                   | RDS Integration               |
     * | `redshift`              | Redshift Integration          |
     * | `route53`               | Route53 Integration           |
     * | `s3`                    | S3 Integration                |
     * | `ses`                   | SES Integration               |
     * | `sns`                   | SNS Integration               |
     * | `sqs`                   | SQS Integration               |
     * | `trustedAdvisor`       | Trusted Advisor Integration   |
     * | `vpc`                   | VPC Integration               |
     * | `xRay`                 | X-Ray Integration             |
     *
     * </details>
     */
    linkedAccountId?: pulumi.Input<string>;
    /**
     * Rds integration
     */
    rds?: pulumi.Input<inputs.cloud.AwsIntegrationsRds>;
    /**
     * Redshift integration
     */
    redshift?: pulumi.Input<inputs.cloud.AwsIntegrationsRedshift>;
    /**
     * Route53 integration
     */
    route53?: pulumi.Input<inputs.cloud.AwsIntegrationsRoute53>;
    /**
     * S3 integration
     */
    s3?: pulumi.Input<inputs.cloud.AwsIntegrationsS3>;
    /**
     * Ses integration
     */
    ses?: pulumi.Input<inputs.cloud.AwsIntegrationsSes>;
    /**
     * Sns integration
     */
    sns?: pulumi.Input<inputs.cloud.AwsIntegrationsSns>;
    /**
     * SQS integration
     */
    sqs?: pulumi.Input<inputs.cloud.AwsIntegrationsSqs>;
    /**
     * Trusted Advisor integration
     */
    trustedAdvisor?: pulumi.Input<inputs.cloud.AwsIntegrationsTrustedAdvisor>;
    /**
     * VPC integration
     */
    vpc?: pulumi.Input<inputs.cloud.AwsIntegrationsVpc>;
    /**
     * X-Ray integration
     */
    xRay?: pulumi.Input<inputs.cloud.AwsIntegrationsXRay>;
}

/**
 * The set of arguments for constructing a AwsIntegrations resource.
 */
export interface AwsIntegrationsArgs {
    /**
     * The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
     */
    accountId?: pulumi.Input<string>;
    /**
     * ALB integration
     */
    alb?: pulumi.Input<inputs.cloud.AwsIntegrationsAlb>;
    /**
     * API Gateway integration
     */
    apiGateway?: pulumi.Input<inputs.cloud.AwsIntegrationsApiGateway>;
    /**
     * ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
     */
    autoScaling?: pulumi.Input<inputs.cloud.AwsIntegrationsAutoScaling>;
    /**
     * Aws Appsync integration
     */
    awsAppSync?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsAppSync>;
    /**
     * Aws Athena integration
     */
    awsAthena?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsAthena>;
    /**
     * Aws Cognito integration
     */
    awsCognito?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsCognito>;
    /**
     * Aws Connect integration
     */
    awsConnect?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsConnect>;
    /**
     * Aws Direct Connect integration
     */
    awsDirectConnect?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsDirectConnect>;
    /**
     * Aws Fsx integration
     */
    awsFsx?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsFsx>;
    /**
     * Aws Glue integration
     */
    awsGlue?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsGlue>;
    /**
     * Aws Kinesis Analytics integration
     */
    awsKinesisAnalytics?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsKinesisAnalytics>;
    /**
     * Aws Media Convert integration
     */
    awsMediaConvert?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMediaConvert>;
    /**
     * Aws Media PackageVod integration
     */
    awsMediaPackageVod?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMediaPackageVod>;
    /**
     * Aws Mq integration
     */
    awsMq?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMq>;
    /**
     * Aws Msk integration
     */
    awsMsk?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsMsk>;
    /**
     * Aws Neptune integration
     */
    awsNeptune?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsNeptune>;
    /**
     * Aws Qldb integration
     */
    awsQldb?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsQldb>;
    /**
     * Aws Route53resolver integration
     */
    awsRoute53resolver?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsRoute53resolver>;
    /**
     * Aws states integration
     */
    awsStates?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsStates>;
    /**
     * Aws Transit Gateway integration
     */
    awsTransitGateway?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsTransitGateway>;
    /**
     * Aws Waf integration
     */
    awsWaf?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsWaf>;
    /**
     * Aws Wafv2 integration
     */
    awsWafv2?: pulumi.Input<inputs.cloud.AwsIntegrationsAwsWafv2>;
    /**
     * Billing integration
     */
    billing?: pulumi.Input<inputs.cloud.AwsIntegrationsBilling>;
    /**
     * Cloudfront integration
     */
    cloudfront?: pulumi.Input<inputs.cloud.AwsIntegrationsCloudfront>;
    /**
     * CloudTrail integration
     */
    cloudtrail?: pulumi.Input<inputs.cloud.AwsIntegrationsCloudtrail>;
    /**
     * Doc DB integration
     */
    docDb?: pulumi.Input<inputs.cloud.AwsIntegrationsDocDb>;
    /**
     * Dynamo DB integration
     */
    dynamodb?: pulumi.Input<inputs.cloud.AwsIntegrationsDynamodb>;
    /**
     * EBS integration
     */
    ebs?: pulumi.Input<inputs.cloud.AwsIntegrationsEbs>;
    /**
     * Ec2 integration
     */
    ec2?: pulumi.Input<inputs.cloud.AwsIntegrationsEc2>;
    /**
     * Ecs integration
     */
    ecs?: pulumi.Input<inputs.cloud.AwsIntegrationsEcs>;
    /**
     * Efs integration
     */
    efs?: pulumi.Input<inputs.cloud.AwsIntegrationsEfs>;
    /**
     * Elasticache integration
     */
    elasticache?: pulumi.Input<inputs.cloud.AwsIntegrationsElasticache>;
    /**
     * Elastic Bean Stalk integration
     */
    elasticbeanstalk?: pulumi.Input<inputs.cloud.AwsIntegrationsElasticbeanstalk>;
    /**
     * Elastic Search integration
     */
    elasticsearch?: pulumi.Input<inputs.cloud.AwsIntegrationsElasticsearch>;
    /**
     * Elb integration
     */
    elb?: pulumi.Input<inputs.cloud.AwsIntegrationsElb>;
    /**
     * Emr integration
     */
    emr?: pulumi.Input<inputs.cloud.AwsIntegrationsEmr>;
    /**
     * Health integration
     */
    health?: pulumi.Input<inputs.cloud.AwsIntegrationsHealth>;
    /**
     * Iam integration
     */
    iam?: pulumi.Input<inputs.cloud.AwsIntegrationsIam>;
    /**
     * Iot integration
     */
    iot?: pulumi.Input<inputs.cloud.AwsIntegrationsIot>;
    /**
     * Kinesis integration
     */
    kinesis?: pulumi.Input<inputs.cloud.AwsIntegrationsKinesis>;
    /**
     * Kinesis Firehose integration
     */
    kinesisFirehose?: pulumi.Input<inputs.cloud.AwsIntegrationsKinesisFirehose>;
    /**
     * Lambda integration
     */
    lambda?: pulumi.Input<inputs.cloud.AwsIntegrationsLambda>;
    /**
     * The ID of the linked AWS account in New Relic.
     *
     * All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
     * <details>
     * <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
     *
     * | Block                   | Description                   |
     * |-------------------------|-------------------------------|
     * | `alb`                   | ALB Integration               |
     * | `apiGateway`           | API Gateway Integration       |
     * | `autoScaling`          | Auto Scaling Integration      |
     * | `awsAppSync`          | AppSync Integration           |
     * | `awsAthena`            | Athena Integration            |
     * | `awsCognito`           | Cognito Integration           |
     * | `awsConnect`           | Connect Integration           |
     * | `awsDirectConnect`    | Direct Connect Integration    |
     * | `awsFsx`               | FSx Integration               |
     * | `awsGlue`              | Glue Integration              |
     * | `awsKinesisAnalytics` | Kinesis Analytics Integration |
     * | `awsMediaConvert`     | MediaConvert Integration      |
     * | `awsMediaPackageVod` | Media Package VOD Integration |
     * | `awsMq`                | MQ Integration                |
     * | `awsMsk`               | MSK Integration               |
     * | `awsNeptune`           | Neptune Integration           |
     * | `awsQldb`              | QLDB Integration              |
     * | `awsRoute53resolver`   | Route53 Resolver Integration  |
     * | `awsStates`            | States Integration            |
     * | `awsTransitGateway`   | Transit Gateway Integration   |
     * | `awsWaf`               | WAF Integration               |
     * | `awsWafv2`             | WAFv2 Integration             |
     * | `billing`               | Billing Integration           |
     * | `cloudfront`            | CloudFront Integration        |
     * | `cloudtrail`            | CloudTrail Integration        |
     * | `docDb`                | DocumentDB Integration        |
     * | `dynamodb`              | DynamoDB Integration          |
     * | `ebs`                   | EBS Integration               |
     * | `ec2`                   | EC2 Integration               |
     * | `ecs`                   | ECS Integration               |
     * | `efs`                   | EFS Integration               |
     * | `elasticache`           | ElastiCache Integration       |
     * | `elasticbeanstalk`      | Elastic Beanstalk Integration |
     * | `elasticsearch`         | Elasticsearch Integration     |
     * | `elb`                   | ELB Integration               |
     * | `emr`                   | EMR Integration               |
     * | `health`                | Health Integration            |
     * | `iam`                   | IAM Integration               |
     * | `iot`                   | IoT Integration               |
     * | `kinesis`               | Kinesis Integration           |
     * | `kinesisFirehose`      | Kinesis Firehose Integration  |
     * | `lambda`                | Lambda Integration            |
     * | `rds`                   | RDS Integration               |
     * | `redshift`              | Redshift Integration          |
     * | `route53`               | Route53 Integration           |
     * | `s3`                    | S3 Integration                |
     * | `ses`                   | SES Integration               |
     * | `sns`                   | SNS Integration               |
     * | `sqs`                   | SQS Integration               |
     * | `trustedAdvisor`       | Trusted Advisor Integration   |
     * | `vpc`                   | VPC Integration               |
     * | `xRay`                 | X-Ray Integration             |
     *
     * </details>
     */
    linkedAccountId: pulumi.Input<string>;
    /**
     * Rds integration
     */
    rds?: pulumi.Input<inputs.cloud.AwsIntegrationsRds>;
    /**
     * Redshift integration
     */
    redshift?: pulumi.Input<inputs.cloud.AwsIntegrationsRedshift>;
    /**
     * Route53 integration
     */
    route53?: pulumi.Input<inputs.cloud.AwsIntegrationsRoute53>;
    /**
     * S3 integration
     */
    s3?: pulumi.Input<inputs.cloud.AwsIntegrationsS3>;
    /**
     * Ses integration
     */
    ses?: pulumi.Input<inputs.cloud.AwsIntegrationsSes>;
    /**
     * Sns integration
     */
    sns?: pulumi.Input<inputs.cloud.AwsIntegrationsSns>;
    /**
     * SQS integration
     */
    sqs?: pulumi.Input<inputs.cloud.AwsIntegrationsSqs>;
    /**
     * Trusted Advisor integration
     */
    trustedAdvisor?: pulumi.Input<inputs.cloud.AwsIntegrationsTrustedAdvisor>;
    /**
     * VPC integration
     */
    vpc?: pulumi.Input<inputs.cloud.AwsIntegrationsVpc>;
    /**
     * X-Ray integration
     */
    xRay?: pulumi.Input<inputs.cloud.AwsIntegrationsXRay>;
}
