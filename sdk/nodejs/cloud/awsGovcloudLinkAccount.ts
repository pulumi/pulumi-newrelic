// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this resource to link an AWS GovCloud account to New Relic.
 *
 * ## Prerequisite
 *
 * To link an AWS GovCloud account to New Relic, you need an AWS GovCloud account. AWS GovCloud is designed to address the specific regulatory needs of United States federal, state, and local agencies, educational institutions, and their supporting ecosystem. It is an isolated AWS region designed to host sensitive data and regulated workloads in the cloud, helping customers support their US government compliance requirements.
 *
 * To pull data from AWS GovCloud, follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/get-started/connect-aws-govcloud-new-relic).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const foo = new newrelic.cloud.AwsGovcloudLinkAccount("foo", {
 *     accountId: "1234567",
 *     name: "My New Relic - AWS GovCloud Linked Account",
 *     metricCollectionMode: "PUSH",
 *     arn: "arn:aws:service:region:account-id:resource-id",
 * });
 * ```
 *
 * ## Import
 *
 * Linked AWS GovCloud accounts can be imported using the `id`, e.g.
 *
 * bash
 *
 * ```sh
 * $ pulumi import newrelic:cloud/awsGovcloudLinkAccount:AwsGovcloudLinkAccount foo <id>
 * ```
 */
export class AwsGovcloudLinkAccount extends pulumi.CustomResource {
    /**
     * Get an existing AwsGovcloudLinkAccount resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AwsGovcloudLinkAccountState, opts?: pulumi.CustomResourceOptions): AwsGovcloudLinkAccount {
        return new AwsGovcloudLinkAccount(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'newrelic:cloud/awsGovcloudLinkAccount:AwsGovcloudLinkAccount';

    /**
     * Returns true if the given object is an instance of AwsGovcloudLinkAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AwsGovcloudLinkAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AwsGovcloudLinkAccount.__pulumiType;
    }

    /**
     * The New Relic account ID to operate on. This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`, if not specified in the configuration.
     */
    public readonly accountId!: pulumi.Output<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role.
     *
     * > **NOTE:** Altering the `accountId` (or) `metricCollectionMode` of an already applied `newrelic.cloud.AwsGovcloudLinkAccount` resource shall trigger a recreation of the resource, instead of an update.
     */
    public readonly arn!: pulumi.Output<string>;
    /**
     * The mode by which metric data is to be collected from the linked AWS GovCloud account. Defaults to `PULL`, if not specified in the configuration.
     * - Use `PUSH` for Metric Streams and `PULL` for API Polling based metric collection respectively.
     */
    public readonly metricCollectionMode!: pulumi.Output<string | undefined>;
    /**
     * The name/identifier of the AWS GovCloud - New Relic 'linked' account.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a AwsGovcloudLinkAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AwsGovcloudLinkAccountArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AwsGovcloudLinkAccountArgs | AwsGovcloudLinkAccountState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AwsGovcloudLinkAccountState | undefined;
            resourceInputs["accountId"] = state ? state.accountId : undefined;
            resourceInputs["arn"] = state ? state.arn : undefined;
            resourceInputs["metricCollectionMode"] = state ? state.metricCollectionMode : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as AwsGovcloudLinkAccountArgs | undefined;
            if ((!args || args.arn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'arn'");
            }
            resourceInputs["accountId"] = args ? args.accountId : undefined;
            resourceInputs["arn"] = args ? args.arn : undefined;
            resourceInputs["metricCollectionMode"] = args ? args.metricCollectionMode : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AwsGovcloudLinkAccount.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AwsGovcloudLinkAccount resources.
 */
export interface AwsGovcloudLinkAccountState {
    /**
     * The New Relic account ID to operate on. This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`, if not specified in the configuration.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role.
     *
     * > **NOTE:** Altering the `accountId` (or) `metricCollectionMode` of an already applied `newrelic.cloud.AwsGovcloudLinkAccount` resource shall trigger a recreation of the resource, instead of an update.
     */
    arn?: pulumi.Input<string>;
    /**
     * The mode by which metric data is to be collected from the linked AWS GovCloud account. Defaults to `PULL`, if not specified in the configuration.
     * - Use `PUSH` for Metric Streams and `PULL` for API Polling based metric collection respectively.
     */
    metricCollectionMode?: pulumi.Input<string>;
    /**
     * The name/identifier of the AWS GovCloud - New Relic 'linked' account.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AwsGovcloudLinkAccount resource.
 */
export interface AwsGovcloudLinkAccountArgs {
    /**
     * The New Relic account ID to operate on. This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`, if not specified in the configuration.
     */
    accountId?: pulumi.Input<string>;
    /**
     * The Amazon Resource Name (ARN) of the IAM role.
     *
     * > **NOTE:** Altering the `accountId` (or) `metricCollectionMode` of an already applied `newrelic.cloud.AwsGovcloudLinkAccount` resource shall trigger a recreation of the resource, instead of an update.
     */
    arn: pulumi.Input<string>;
    /**
     * The mode by which metric data is to be collected from the linked AWS GovCloud account. Defaults to `PULL`, if not specified in the configuration.
     * - Use `PUSH` for Metric Streams and `PULL` for API Polling based metric collection respectively.
     */
    metricCollectionMode?: pulumi.Input<string>;
    /**
     * The name/identifier of the AWS GovCloud - New Relic 'linked' account.
     */
    name?: pulumi.Input<string>;
}
