// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the newrelic package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'newrelic';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Provider.__pulumiType;
    }

    public readonly adminApiKey!: pulumi.Output<string | undefined>;
    public readonly apiKey!: pulumi.Output<string | undefined>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    public readonly apiUrl!: pulumi.Output<string | undefined>;
    public readonly cacertFile!: pulumi.Output<string | undefined>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    public readonly infrastructureApiUrl!: pulumi.Output<string | undefined>;
    public readonly insightsInsertKey!: pulumi.Output<string | undefined>;
    public readonly insightsInsertUrl!: pulumi.Output<string | undefined>;
    public readonly insightsQueryUrl!: pulumi.Output<string | undefined>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    public readonly nerdgraphApiUrl!: pulumi.Output<string | undefined>;
    /**
     * The data center for which your New Relic account is configured. Only one region per provider block is permitted.
     */
    public readonly region!: pulumi.Output<string | undefined>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    public readonly syntheticsApiUrl!: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["accountId"] = pulumi.output((args ? args.accountId : undefined) ?? utilities.getEnvNumber("NEW_RELIC_ACCOUNT_ID")).apply(JSON.stringify);
            resourceInputs["adminApiKey"] = args ? args.adminApiKey : undefined;
            resourceInputs["apiKey"] = args ? args.apiKey : undefined;
            resourceInputs["apiUrl"] = args ? args.apiUrl : undefined;
            resourceInputs["cacertFile"] = args ? args.cacertFile : undefined;
            resourceInputs["infrastructureApiUrl"] = args ? args.infrastructureApiUrl : undefined;
            resourceInputs["insecureSkipVerify"] = pulumi.output(args ? args.insecureSkipVerify : undefined).apply(JSON.stringify);
            resourceInputs["insightsInsertKey"] = args ? args.insightsInsertKey : undefined;
            resourceInputs["insightsInsertUrl"] = args ? args.insightsInsertUrl : undefined;
            resourceInputs["insightsQueryUrl"] = args ? args.insightsQueryUrl : undefined;
            resourceInputs["nerdgraphApiUrl"] = args ? args.nerdgraphApiUrl : undefined;
            resourceInputs["region"] = (args ? args.region : undefined) ?? (utilities.getEnv("NEW_RELIC_REGION") || "US");
            resourceInputs["syntheticsApiUrl"] = args ? args.syntheticsApiUrl : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    accountId?: pulumi.Input<number>;
    adminApiKey?: pulumi.Input<string>;
    apiKey?: pulumi.Input<string>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    apiUrl?: pulumi.Input<string>;
    cacertFile?: pulumi.Input<string>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    infrastructureApiUrl?: pulumi.Input<string>;
    insecureSkipVerify?: pulumi.Input<boolean>;
    insightsInsertKey?: pulumi.Input<string>;
    insightsInsertUrl?: pulumi.Input<string>;
    insightsQueryUrl?: pulumi.Input<string>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    nerdgraphApiUrl?: pulumi.Input<string>;
    /**
     * The data center for which your New Relic account is configured. Only one region per provider block is permitted.
     */
    region?: pulumi.Input<string>;
    /**
     * @deprecated New Relic internal use only. API URLs are now configured based on the configured region.
     */
    syntheticsApiUrl?: pulumi.Input<string>;
}
