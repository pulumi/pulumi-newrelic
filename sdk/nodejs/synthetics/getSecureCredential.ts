// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
 *
 * Note that the secure credential's value is not returned as an attribute for security reasons.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const foo = pulumi.output(newrelic.synthetics.getSecureCredential({
 *     key: "MY_KEY",
 * }, { async: true }));
 * ```
 */
export function getSecureCredential(args: GetSecureCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetSecureCredentialResult> {
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("newrelic:synthetics/getSecureCredential:getSecureCredential", {
        "key": args.key,
    }, opts);
}

/**
 * A collection of arguments for invoking getSecureCredential.
 */
export interface GetSecureCredentialArgs {
    /**
     * The secure credential's key name.  Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API.
     */
    readonly key: string;
}

/**
 * A collection of values returned by getSecureCredential.
 */
export interface GetSecureCredentialResult {
    /**
     * The time the secure credential was created.
     */
    readonly createdAt: string;
    /**
     * The secure credential's description.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key: string;
    /**
     * The time the secure credential was last updated.
     */
    readonly lastUpdated: string;
}
