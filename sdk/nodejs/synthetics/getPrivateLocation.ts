// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source to get information about a specific Synthetics monitor private location in New Relic that already exists.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const example = newrelic.synthetics.getPrivateLocation({
 *     accountId: 123456,
 *     name: "My private location",
 * });
 * const foo = new newrelic.synthetics.Monitor("foo", {locationsPrivates: [data.newrelic_synthetics_monitor_location.example.id]});
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const example = newrelic.synthetics.getPrivateLocation({
 *     accountId: 123456,
 *     name: "My private location",
 * });
 * const foo = new newrelic.synthetics.StepMonitor("foo", {locationPrivates: [{
 *     guid: example.then(example => example.id),
 * }]});
 * ```
 */
export function getPrivateLocation(args: GetPrivateLocationArgs, opts?: pulumi.InvokeOptions): Promise<GetPrivateLocationResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("newrelic:synthetics/getPrivateLocation:getPrivateLocation", {
        "accountId": args.accountId,
        "keys": args.keys,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrivateLocation.
 */
export interface GetPrivateLocationArgs {
    /**
     * The New Relic account ID of the associated private location. If left empty will default to account ID specified in provider level configuration.
     */
    accountId?: number;
    /**
     * The key of the private location.
     */
    keys?: string[];
    /**
     * The name of the Synthetics monitor private location.
     */
    name: string;
}

/**
 * A collection of values returned by getPrivateLocation.
 */
export interface GetPrivateLocationResult {
    readonly accountId?: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The key of the private location.
     */
    readonly keys: string[];
    readonly name: string;
}
/**
 * Use this data source to get information about a specific Synthetics monitor private location in New Relic that already exists.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const example = newrelic.synthetics.getPrivateLocation({
 *     accountId: 123456,
 *     name: "My private location",
 * });
 * const foo = new newrelic.synthetics.Monitor("foo", {locationsPrivates: [data.newrelic_synthetics_monitor_location.example.id]});
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as newrelic from "@pulumi/newrelic";
 *
 * const example = newrelic.synthetics.getPrivateLocation({
 *     accountId: 123456,
 *     name: "My private location",
 * });
 * const foo = new newrelic.synthetics.StepMonitor("foo", {locationPrivates: [{
 *     guid: example.then(example => example.id),
 * }]});
 * ```
 */
export function getPrivateLocationOutput(args: GetPrivateLocationOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPrivateLocationResult> {
    return pulumi.output(args).apply((a: any) => getPrivateLocation(a, opts))
}

/**
 * A collection of arguments for invoking getPrivateLocation.
 */
export interface GetPrivateLocationOutputArgs {
    /**
     * The New Relic account ID of the associated private location. If left empty will default to account ID specified in provider level configuration.
     */
    accountId?: pulumi.Input<number>;
    /**
     * The key of the private location.
     */
    keys?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of the Synthetics monitor private location.
     */
    name: pulumi.Input<string>;
}
