// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about a specific Obfuscation Expression in New Relic that already exists.
func LookupObfuscationExpression(ctx *pulumi.Context, args *LookupObfuscationExpressionArgs, opts ...pulumi.InvokeOption) (*LookupObfuscationExpressionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupObfuscationExpressionResult
	err := ctx.Invoke("newrelic:index/getObfuscationExpression:getObfuscationExpression", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getObfuscationExpression.
type LookupObfuscationExpressionArgs struct {
	// The account id associated with the obfuscation expression. If left empty will default to account ID specified in provider level configuration.
	AccountId *int `pulumi:"accountId"`
	// Name of expression.
	Name string `pulumi:"name"`
}

// A collection of values returned by getObfuscationExpression.
type LookupObfuscationExpressionResult struct {
	AccountId *int `pulumi:"accountId"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupObfuscationExpressionOutput(ctx *pulumi.Context, args LookupObfuscationExpressionOutputArgs, opts ...pulumi.InvokeOption) LookupObfuscationExpressionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupObfuscationExpressionResult, error) {
			args := v.(LookupObfuscationExpressionArgs)
			r, err := LookupObfuscationExpression(ctx, &args, opts...)
			var s LookupObfuscationExpressionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupObfuscationExpressionResultOutput)
}

// A collection of arguments for invoking getObfuscationExpression.
type LookupObfuscationExpressionOutputArgs struct {
	// The account id associated with the obfuscation expression. If left empty will default to account ID specified in provider level configuration.
	AccountId pulumi.IntPtrInput `pulumi:"accountId"`
	// Name of expression.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupObfuscationExpressionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObfuscationExpressionArgs)(nil)).Elem()
}

// A collection of values returned by getObfuscationExpression.
type LookupObfuscationExpressionResultOutput struct{ *pulumi.OutputState }

func (LookupObfuscationExpressionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupObfuscationExpressionResult)(nil)).Elem()
}

func (o LookupObfuscationExpressionResultOutput) ToLookupObfuscationExpressionResultOutput() LookupObfuscationExpressionResultOutput {
	return o
}

func (o LookupObfuscationExpressionResultOutput) ToLookupObfuscationExpressionResultOutputWithContext(ctx context.Context) LookupObfuscationExpressionResultOutput {
	return o
}

func (o LookupObfuscationExpressionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupObfuscationExpressionResult] {
	return pulumix.Output[LookupObfuscationExpressionResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupObfuscationExpressionResultOutput) AccountId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupObfuscationExpressionResult) *int { return v.AccountId }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupObfuscationExpressionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObfuscationExpressionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupObfuscationExpressionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupObfuscationExpressionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupObfuscationExpressionResultOutput{})
}
