// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "newrelic:cloud/awsGovcloudIntegrations:AwsGovcloudIntegrations":
		r = &AwsGovcloudIntegrations{}
	case "newrelic:cloud/awsGovcloudLinkAccount:AwsGovcloudLinkAccount":
		r = &AwsGovcloudLinkAccount{}
	case "newrelic:cloud/awsIntegrations:AwsIntegrations":
		r = &AwsIntegrations{}
	case "newrelic:cloud/awsLinkAccount:AwsLinkAccount":
		r = &AwsLinkAccount{}
	case "newrelic:cloud/azureIntegrations:AzureIntegrations":
		r = &AzureIntegrations{}
	case "newrelic:cloud/azureLinkAccount:AzureLinkAccount":
		r = &AzureLinkAccount{}
	case "newrelic:cloud/gcpIntegrations:GcpIntegrations":
		r = &GcpIntegrations{}
	case "newrelic:cloud/gcpLinkAccount:GcpLinkAccount":
		r = &GcpLinkAccount{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/awsGovcloudIntegrations",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/awsGovcloudLinkAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/awsIntegrations",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/awsLinkAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/azureIntegrations",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/azureLinkAccount",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/gcpIntegrations",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"newrelic",
		"cloud/gcpLinkAccount",
		&module{version},
	)
}
