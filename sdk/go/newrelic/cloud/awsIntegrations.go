// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to integrate AWS services with New Relic.
//
// ## Prerequisite
//
// Setup is required for this resource to work properly. This resource assumes you have linked an AWS account to New Relic and configured it to push metrics using CloudWatch Metric Streams.
//
// New Relic doesn't automatically receive metrics from AWS for some services so this resource can be used to configure integrations to those services.
//
// Using a metric stream to New Relic is the preferred way to integrate with AWS. Follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#set-up-metric-stream) to set up a metric stream. This resource supports any integration that's not available through AWS metric stream.
//
// ## Example Usage
//
// Leave an integration block empty to use its default configuration. You can also use the full example, including the AWS set up, found in our guides.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/cloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := cloud.NewAwsLinkAccount(ctx, "foo", &cloud.AwsLinkAccountArgs{
//				Arn:                  pulumi.Any(aws_iam_role.Newrelic_aws_role.Arn),
//				MetricCollectionMode: pulumi.String("PULL"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud.NewAwsIntegrations(ctx, "bar", &cloud.AwsIntegrationsArgs{
//				LinkedAccountId: foo.ID(),
//				Billing:         nil,
//				Cloudtrail: &cloud.AwsIntegrationsCloudtrailArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//						pulumi.String("us-east-2"),
//					},
//				},
//				Health: &cloud.AwsIntegrationsHealthArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				TrustedAdvisor: &cloud.AwsIntegrationsTrustedAdvisorArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Vpc: &cloud.AwsIntegrationsVpcArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//						pulumi.String("us-east-2"),
//					},
//					FetchNatGateway: pulumi.Bool(true),
//					FetchVpn:        pulumi.Bool(false),
//					TagKey:          pulumi.String("tag key"),
//					TagValue:        pulumi.String("tag value"),
//				},
//				XRay: &cloud.AwsIntegrationsXRayArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//						pulumi.String("us-east-2"),
//					},
//				},
//				S3: &cloud.AwsIntegrationsS3Args{
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				DocDb: &cloud.AwsIntegrationsDocDbArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Sqs: &cloud.AwsIntegrationsSqsArgs{
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					QueuePrefixes: pulumi.StringArray{
//						pulumi.String("queue prefix"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				Ebs: &cloud.AwsIntegrationsEbsArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//					FetchExtendedInventory: pulumi.Bool(true),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				Alb: &cloud.AwsIntegrationsAlbArgs{
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					LoadBalancerPrefixes: pulumi.StringArray{
//						pulumi.String("load balancer prefix"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				Elasticache: &cloud.AwsIntegrationsElasticacheArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				ApiGateway: &cloud.AwsIntegrationsApiGatewayArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					StagePrefixes: pulumi.StringArray{
//						pulumi.String("stage prefix"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				AutoScaling: &cloud.AwsIntegrationsAutoScalingArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsAppSync: &cloud.AwsIntegrationsAwsAppSyncArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsAthena: &cloud.AwsIntegrationsAwsAthenaArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsCognito: &cloud.AwsIntegrationsAwsCognitoArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsConnect: &cloud.AwsIntegrationsAwsConnectArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsDirectConnect: &cloud.AwsIntegrationsAwsDirectConnectArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsFsx: &cloud.AwsIntegrationsAwsFsxArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsGlue: &cloud.AwsIntegrationsAwsGlueArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsKinesisAnalytics: &cloud.AwsIntegrationsAwsKinesisAnalyticsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsMediaConvert: &cloud.AwsIntegrationsAwsMediaConvertArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsMediaPackageVod: &cloud.AwsIntegrationsAwsMediaPackageVodArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsMq: &cloud.AwsIntegrationsAwsMqArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsMsk: &cloud.AwsIntegrationsAwsMskArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsNeptune: &cloud.AwsIntegrationsAwsNeptuneArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsQldb: &cloud.AwsIntegrationsAwsQldbArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsRoute53resolver: &cloud.AwsIntegrationsAwsRoute53resolverArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsStates: &cloud.AwsIntegrationsAwsStatesArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsTransitGateway: &cloud.AwsIntegrationsAwsTransitGatewayArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsWaf: &cloud.AwsIntegrationsAwsWafArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				AwsWafv2: &cloud.AwsIntegrationsAwsWafv2Args{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Cloudfront: &cloud.AwsIntegrationsCloudfrontArgs{
//					FetchLambdasAtEdge:     pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Dynamodb: &cloud.AwsIntegrationsDynamodbArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Ec2: &cloud.AwsIntegrationsEc2Args{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					DuplicateEc2Tags:       pulumi.Bool(true),
//					FetchIpAddresses:       pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Ecs: &cloud.AwsIntegrationsEcsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Efs: &cloud.AwsIntegrationsEfsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Elasticbeanstalk: &cloud.AwsIntegrationsElasticbeanstalkArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Elasticsearch: &cloud.AwsIntegrationsElasticsearchArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchNodes:             pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Elb: &cloud.AwsIntegrationsElbArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Emr: &cloud.AwsIntegrationsEmrArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Iam: &cloud.AwsIntegrationsIamArgs{
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Iot: &cloud.AwsIntegrationsIotArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Kinesis: &cloud.AwsIntegrationsKinesisArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchShards:            pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				KinesisFirehose: &cloud.AwsIntegrationsKinesisFirehoseArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Lambda: &cloud.AwsIntegrationsLambdaArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Rds: &cloud.AwsIntegrationsRdsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Redshift: &cloud.AwsIntegrationsRedshiftArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Route53: &cloud.AwsIntegrationsRoute53Args{
//					FetchExtendedInventory: pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Ses: &cloud.AwsIntegrationsSesArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//				Sns: &cloud.AwsIntegrationsSnsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(6000),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Linked AWS account integrations can be imported using the `id`, e.g. bash
//
// ```sh
//
//	$ pulumi import newrelic:cloud/awsIntegrations:AwsIntegrations foo <id>
//
// ```
type AwsIntegrations struct {
	pulumi.CustomResourceState

	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntOutput `pulumi:"accountId"`
	// ALB integration
	Alb AwsIntegrationsAlbPtrOutput `pulumi:"alb"`
	// API Gateway integration
	ApiGateway AwsIntegrationsApiGatewayPtrOutput `pulumi:"apiGateway"`
	// ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
	AutoScaling AwsIntegrationsAutoScalingPtrOutput `pulumi:"autoScaling"`
	// Aws Appsync integration
	AwsAppSync AwsIntegrationsAwsAppSyncPtrOutput `pulumi:"awsAppSync"`
	// Aws Athena integration
	AwsAthena AwsIntegrationsAwsAthenaPtrOutput `pulumi:"awsAthena"`
	// Aws Cognito integration
	AwsCognito AwsIntegrationsAwsCognitoPtrOutput `pulumi:"awsCognito"`
	// Aws Connect integration
	AwsConnect AwsIntegrationsAwsConnectPtrOutput `pulumi:"awsConnect"`
	// Aws Direct Connect integration
	AwsDirectConnect AwsIntegrationsAwsDirectConnectPtrOutput `pulumi:"awsDirectConnect"`
	// Aws Fsx integration
	AwsFsx AwsIntegrationsAwsFsxPtrOutput `pulumi:"awsFsx"`
	// Aws Glue integration
	AwsGlue AwsIntegrationsAwsGluePtrOutput `pulumi:"awsGlue"`
	// Aws Kinesis Analytics integration
	AwsKinesisAnalytics AwsIntegrationsAwsKinesisAnalyticsPtrOutput `pulumi:"awsKinesisAnalytics"`
	// Aws Media Convert integration
	AwsMediaConvert AwsIntegrationsAwsMediaConvertPtrOutput `pulumi:"awsMediaConvert"`
	// Aws Media PackageVod integration
	AwsMediaPackageVod AwsIntegrationsAwsMediaPackageVodPtrOutput `pulumi:"awsMediaPackageVod"`
	// Aws Mq integration
	AwsMq AwsIntegrationsAwsMqPtrOutput `pulumi:"awsMq"`
	// Aws Msk integration
	AwsMsk AwsIntegrationsAwsMskPtrOutput `pulumi:"awsMsk"`
	// Aws Neptune integration
	AwsNeptune AwsIntegrationsAwsNeptunePtrOutput `pulumi:"awsNeptune"`
	// Aws Qldb integration
	AwsQldb AwsIntegrationsAwsQldbPtrOutput `pulumi:"awsQldb"`
	// Aws Route53resolver integration
	AwsRoute53resolver AwsIntegrationsAwsRoute53resolverPtrOutput `pulumi:"awsRoute53resolver"`
	// Aws states integration
	AwsStates AwsIntegrationsAwsStatesPtrOutput `pulumi:"awsStates"`
	// Aws Transit Gateway integration
	AwsTransitGateway AwsIntegrationsAwsTransitGatewayPtrOutput `pulumi:"awsTransitGateway"`
	// Aws Waf integration
	AwsWaf AwsIntegrationsAwsWafPtrOutput `pulumi:"awsWaf"`
	// Aws Wafv2 integration
	AwsWafv2 AwsIntegrationsAwsWafv2PtrOutput `pulumi:"awsWafv2"`
	// Billing integration
	Billing AwsIntegrationsBillingPtrOutput `pulumi:"billing"`
	// Cloudfront integration
	Cloudfront AwsIntegrationsCloudfrontPtrOutput `pulumi:"cloudfront"`
	// CloudTrail integration
	Cloudtrail AwsIntegrationsCloudtrailPtrOutput `pulumi:"cloudtrail"`
	// Doc DB integration
	DocDb AwsIntegrationsDocDbPtrOutput `pulumi:"docDb"`
	// Dynamo DB integration
	Dynamodb AwsIntegrationsDynamodbPtrOutput `pulumi:"dynamodb"`
	// EBS integration
	Ebs AwsIntegrationsEbsPtrOutput `pulumi:"ebs"`
	// Ec2 integration
	Ec2 AwsIntegrationsEc2PtrOutput `pulumi:"ec2"`
	// Ecs integration
	Ecs AwsIntegrationsEcsPtrOutput `pulumi:"ecs"`
	// Efs integration
	Efs AwsIntegrationsEfsPtrOutput `pulumi:"efs"`
	// Elasticache integration
	Elasticache AwsIntegrationsElasticachePtrOutput `pulumi:"elasticache"`
	// Elastic Bean Stalk integration
	Elasticbeanstalk AwsIntegrationsElasticbeanstalkPtrOutput `pulumi:"elasticbeanstalk"`
	// Elastic Search integration
	Elasticsearch AwsIntegrationsElasticsearchPtrOutput `pulumi:"elasticsearch"`
	// Elb integration
	Elb AwsIntegrationsElbPtrOutput `pulumi:"elb"`
	// Emr integration
	Emr AwsIntegrationsEmrPtrOutput `pulumi:"emr"`
	// Health integration
	Health AwsIntegrationsHealthPtrOutput `pulumi:"health"`
	// Iam integration
	Iam AwsIntegrationsIamPtrOutput `pulumi:"iam"`
	// Iot integration
	Iot AwsIntegrationsIotPtrOutput `pulumi:"iot"`
	// Kinesis integration
	Kinesis AwsIntegrationsKinesisPtrOutput `pulumi:"kinesis"`
	// Kinesis Firehose integration
	KinesisFirehose AwsIntegrationsKinesisFirehosePtrOutput `pulumi:"kinesisFirehose"`
	// Lambda integration
	Lambda AwsIntegrationsLambdaPtrOutput `pulumi:"lambda"`
	// The ID of the linked AWS account in New Relic.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	// <details>
	// <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
	//
	// | Block                   | Description                   |
	// |-------------------------|-------------------------------|
	// | `alb`                   | ALB Integration               |
	// | `apiGateway`           | API Gateway Integration       |
	// | `autoScaling`          | Auto Scaling Integration      |
	// | `awsAppSync`          | AppSync Integration           |
	// | `awsAthena`            | Athena Integration            |
	// | `awsCognito`           | Cognito Integration           |
	// | `awsConnect`           | Connect Integration           |
	// | `awsDirectConnect`    | Direct Connect Integration    |
	// | `awsFsx`               | FSx Integration               |
	// | `awsGlue`              | Glue Integration              |
	// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
	// | `awsMediaConvert`     | MediaConvert Integration      |
	// | `awsMediaPackageVod` | Media Package VOD Integration |
	// | `awsMq`                | MQ Integration                |
	// | `awsMsk`               | MSK Integration               |
	// | `awsNeptune`           | Neptune Integration           |
	// | `awsQldb`              | QLDB Integration              |
	// | `awsRoute53resolver`   | Route53 Resolver Integration  |
	// | `awsStates`            | States Integration            |
	// | `awsTransitGateway`   | Transit Gateway Integration   |
	// | `awsWaf`               | WAF Integration               |
	// | `awsWafv2`             | WAFv2 Integration             |
	// | `billing`               | Billing Integration           |
	// | `cloudfront`            | CloudFront Integration        |
	// | `cloudtrail`            | CloudTrail Integration        |
	// | `docDb`                | DocumentDB Integration        |
	// | `dynamodb`              | DynamoDB Integration          |
	// | `ebs`                   | EBS Integration               |
	// | `ec2`                   | EC2 Integration               |
	// | `ecs`                   | ECS Integration               |
	// | `efs`                   | EFS Integration               |
	// | `elasticache`           | ElastiCache Integration       |
	// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
	// | `elasticsearch`         | Elasticsearch Integration     |
	// | `elb`                   | ELB Integration               |
	// | `emr`                   | EMR Integration               |
	// | `health`                | Health Integration            |
	// | `iam`                   | IAM Integration               |
	// | `iot`                   | IoT Integration               |
	// | `kinesis`               | Kinesis Integration           |
	// | `kinesisFirehose`      | Kinesis Firehose Integration  |
	// | `lambda`                | Lambda Integration            |
	// | `rds`                   | RDS Integration               |
	// | `redshift`              | Redshift Integration          |
	// | `route53`               | Route53 Integration           |
	// | `s3`                    | S3 Integration                |
	// | `ses`                   | SES Integration               |
	// | `sns`                   | SNS Integration               |
	// | `sqs`                   | SQS Integration               |
	// | `trustedAdvisor`       | Trusted Advisor Integration   |
	// | `vpc`                   | VPC Integration               |
	// | `xRay`                 | X-Ray Integration             |
	//
	// </details>
	LinkedAccountId pulumi.IntOutput `pulumi:"linkedAccountId"`
	// Rds integration
	Rds AwsIntegrationsRdsPtrOutput `pulumi:"rds"`
	// Redshift integration
	Redshift AwsIntegrationsRedshiftPtrOutput `pulumi:"redshift"`
	// Route53 integration
	Route53 AwsIntegrationsRoute53PtrOutput `pulumi:"route53"`
	// S3 integration
	S3 AwsIntegrationsS3PtrOutput `pulumi:"s3"`
	// Ses integration
	Ses AwsIntegrationsSesPtrOutput `pulumi:"ses"`
	// Sns integration
	Sns AwsIntegrationsSnsPtrOutput `pulumi:"sns"`
	// SQS integration
	Sqs AwsIntegrationsSqsPtrOutput `pulumi:"sqs"`
	// Trusted Advisor integration
	TrustedAdvisor AwsIntegrationsTrustedAdvisorPtrOutput `pulumi:"trustedAdvisor"`
	// VPC integration
	Vpc AwsIntegrationsVpcPtrOutput `pulumi:"vpc"`
	// X-Ray integration
	XRay AwsIntegrationsXRayPtrOutput `pulumi:"xRay"`
}

// NewAwsIntegrations registers a new resource with the given unique name, arguments, and options.
func NewAwsIntegrations(ctx *pulumi.Context,
	name string, args *AwsIntegrationsArgs, opts ...pulumi.ResourceOption) (*AwsIntegrations, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LinkedAccountId == nil {
		return nil, errors.New("invalid value for required argument 'LinkedAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsIntegrations
	err := ctx.RegisterResource("newrelic:cloud/awsIntegrations:AwsIntegrations", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsIntegrations gets an existing AwsIntegrations resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsIntegrations(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsIntegrationsState, opts ...pulumi.ResourceOption) (*AwsIntegrations, error) {
	var resource AwsIntegrations
	err := ctx.ReadResource("newrelic:cloud/awsIntegrations:AwsIntegrations", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsIntegrations resources.
type awsIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// ALB integration
	Alb *AwsIntegrationsAlb `pulumi:"alb"`
	// API Gateway integration
	ApiGateway *AwsIntegrationsApiGateway `pulumi:"apiGateway"`
	// ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
	AutoScaling *AwsIntegrationsAutoScaling `pulumi:"autoScaling"`
	// Aws Appsync integration
	AwsAppSync *AwsIntegrationsAwsAppSync `pulumi:"awsAppSync"`
	// Aws Athena integration
	AwsAthena *AwsIntegrationsAwsAthena `pulumi:"awsAthena"`
	// Aws Cognito integration
	AwsCognito *AwsIntegrationsAwsCognito `pulumi:"awsCognito"`
	// Aws Connect integration
	AwsConnect *AwsIntegrationsAwsConnect `pulumi:"awsConnect"`
	// Aws Direct Connect integration
	AwsDirectConnect *AwsIntegrationsAwsDirectConnect `pulumi:"awsDirectConnect"`
	// Aws Fsx integration
	AwsFsx *AwsIntegrationsAwsFsx `pulumi:"awsFsx"`
	// Aws Glue integration
	AwsGlue *AwsIntegrationsAwsGlue `pulumi:"awsGlue"`
	// Aws Kinesis Analytics integration
	AwsKinesisAnalytics *AwsIntegrationsAwsKinesisAnalytics `pulumi:"awsKinesisAnalytics"`
	// Aws Media Convert integration
	AwsMediaConvert *AwsIntegrationsAwsMediaConvert `pulumi:"awsMediaConvert"`
	// Aws Media PackageVod integration
	AwsMediaPackageVod *AwsIntegrationsAwsMediaPackageVod `pulumi:"awsMediaPackageVod"`
	// Aws Mq integration
	AwsMq *AwsIntegrationsAwsMq `pulumi:"awsMq"`
	// Aws Msk integration
	AwsMsk *AwsIntegrationsAwsMsk `pulumi:"awsMsk"`
	// Aws Neptune integration
	AwsNeptune *AwsIntegrationsAwsNeptune `pulumi:"awsNeptune"`
	// Aws Qldb integration
	AwsQldb *AwsIntegrationsAwsQldb `pulumi:"awsQldb"`
	// Aws Route53resolver integration
	AwsRoute53resolver *AwsIntegrationsAwsRoute53resolver `pulumi:"awsRoute53resolver"`
	// Aws states integration
	AwsStates *AwsIntegrationsAwsStates `pulumi:"awsStates"`
	// Aws Transit Gateway integration
	AwsTransitGateway *AwsIntegrationsAwsTransitGateway `pulumi:"awsTransitGateway"`
	// Aws Waf integration
	AwsWaf *AwsIntegrationsAwsWaf `pulumi:"awsWaf"`
	// Aws Wafv2 integration
	AwsWafv2 *AwsIntegrationsAwsWafv2 `pulumi:"awsWafv2"`
	// Billing integration
	Billing *AwsIntegrationsBilling `pulumi:"billing"`
	// Cloudfront integration
	Cloudfront *AwsIntegrationsCloudfront `pulumi:"cloudfront"`
	// CloudTrail integration
	Cloudtrail *AwsIntegrationsCloudtrail `pulumi:"cloudtrail"`
	// Doc DB integration
	DocDb *AwsIntegrationsDocDb `pulumi:"docDb"`
	// Dynamo DB integration
	Dynamodb *AwsIntegrationsDynamodb `pulumi:"dynamodb"`
	// EBS integration
	Ebs *AwsIntegrationsEbs `pulumi:"ebs"`
	// Ec2 integration
	Ec2 *AwsIntegrationsEc2 `pulumi:"ec2"`
	// Ecs integration
	Ecs *AwsIntegrationsEcs `pulumi:"ecs"`
	// Efs integration
	Efs *AwsIntegrationsEfs `pulumi:"efs"`
	// Elasticache integration
	Elasticache *AwsIntegrationsElasticache `pulumi:"elasticache"`
	// Elastic Bean Stalk integration
	Elasticbeanstalk *AwsIntegrationsElasticbeanstalk `pulumi:"elasticbeanstalk"`
	// Elastic Search integration
	Elasticsearch *AwsIntegrationsElasticsearch `pulumi:"elasticsearch"`
	// Elb integration
	Elb *AwsIntegrationsElb `pulumi:"elb"`
	// Emr integration
	Emr *AwsIntegrationsEmr `pulumi:"emr"`
	// Health integration
	Health *AwsIntegrationsHealth `pulumi:"health"`
	// Iam integration
	Iam *AwsIntegrationsIam `pulumi:"iam"`
	// Iot integration
	Iot *AwsIntegrationsIot `pulumi:"iot"`
	// Kinesis integration
	Kinesis *AwsIntegrationsKinesis `pulumi:"kinesis"`
	// Kinesis Firehose integration
	KinesisFirehose *AwsIntegrationsKinesisFirehose `pulumi:"kinesisFirehose"`
	// Lambda integration
	Lambda *AwsIntegrationsLambda `pulumi:"lambda"`
	// The ID of the linked AWS account in New Relic.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	// <details>
	// <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
	//
	// | Block                   | Description                   |
	// |-------------------------|-------------------------------|
	// | `alb`                   | ALB Integration               |
	// | `apiGateway`           | API Gateway Integration       |
	// | `autoScaling`          | Auto Scaling Integration      |
	// | `awsAppSync`          | AppSync Integration           |
	// | `awsAthena`            | Athena Integration            |
	// | `awsCognito`           | Cognito Integration           |
	// | `awsConnect`           | Connect Integration           |
	// | `awsDirectConnect`    | Direct Connect Integration    |
	// | `awsFsx`               | FSx Integration               |
	// | `awsGlue`              | Glue Integration              |
	// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
	// | `awsMediaConvert`     | MediaConvert Integration      |
	// | `awsMediaPackageVod` | Media Package VOD Integration |
	// | `awsMq`                | MQ Integration                |
	// | `awsMsk`               | MSK Integration               |
	// | `awsNeptune`           | Neptune Integration           |
	// | `awsQldb`              | QLDB Integration              |
	// | `awsRoute53resolver`   | Route53 Resolver Integration  |
	// | `awsStates`            | States Integration            |
	// | `awsTransitGateway`   | Transit Gateway Integration   |
	// | `awsWaf`               | WAF Integration               |
	// | `awsWafv2`             | WAFv2 Integration             |
	// | `billing`               | Billing Integration           |
	// | `cloudfront`            | CloudFront Integration        |
	// | `cloudtrail`            | CloudTrail Integration        |
	// | `docDb`                | DocumentDB Integration        |
	// | `dynamodb`              | DynamoDB Integration          |
	// | `ebs`                   | EBS Integration               |
	// | `ec2`                   | EC2 Integration               |
	// | `ecs`                   | ECS Integration               |
	// | `efs`                   | EFS Integration               |
	// | `elasticache`           | ElastiCache Integration       |
	// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
	// | `elasticsearch`         | Elasticsearch Integration     |
	// | `elb`                   | ELB Integration               |
	// | `emr`                   | EMR Integration               |
	// | `health`                | Health Integration            |
	// | `iam`                   | IAM Integration               |
	// | `iot`                   | IoT Integration               |
	// | `kinesis`               | Kinesis Integration           |
	// | `kinesisFirehose`      | Kinesis Firehose Integration  |
	// | `lambda`                | Lambda Integration            |
	// | `rds`                   | RDS Integration               |
	// | `redshift`              | Redshift Integration          |
	// | `route53`               | Route53 Integration           |
	// | `s3`                    | S3 Integration                |
	// | `ses`                   | SES Integration               |
	// | `sns`                   | SNS Integration               |
	// | `sqs`                   | SQS Integration               |
	// | `trustedAdvisor`       | Trusted Advisor Integration   |
	// | `vpc`                   | VPC Integration               |
	// | `xRay`                 | X-Ray Integration             |
	//
	// </details>
	LinkedAccountId *int `pulumi:"linkedAccountId"`
	// Rds integration
	Rds *AwsIntegrationsRds `pulumi:"rds"`
	// Redshift integration
	Redshift *AwsIntegrationsRedshift `pulumi:"redshift"`
	// Route53 integration
	Route53 *AwsIntegrationsRoute53 `pulumi:"route53"`
	// S3 integration
	S3 *AwsIntegrationsS3 `pulumi:"s3"`
	// Ses integration
	Ses *AwsIntegrationsSes `pulumi:"ses"`
	// Sns integration
	Sns *AwsIntegrationsSns `pulumi:"sns"`
	// SQS integration
	Sqs *AwsIntegrationsSqs `pulumi:"sqs"`
	// Trusted Advisor integration
	TrustedAdvisor *AwsIntegrationsTrustedAdvisor `pulumi:"trustedAdvisor"`
	// VPC integration
	Vpc *AwsIntegrationsVpc `pulumi:"vpc"`
	// X-Ray integration
	XRay *AwsIntegrationsXRay `pulumi:"xRay"`
}

type AwsIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput
	// ALB integration
	Alb AwsIntegrationsAlbPtrInput
	// API Gateway integration
	ApiGateway AwsIntegrationsApiGatewayPtrInput
	// ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
	AutoScaling AwsIntegrationsAutoScalingPtrInput
	// Aws Appsync integration
	AwsAppSync AwsIntegrationsAwsAppSyncPtrInput
	// Aws Athena integration
	AwsAthena AwsIntegrationsAwsAthenaPtrInput
	// Aws Cognito integration
	AwsCognito AwsIntegrationsAwsCognitoPtrInput
	// Aws Connect integration
	AwsConnect AwsIntegrationsAwsConnectPtrInput
	// Aws Direct Connect integration
	AwsDirectConnect AwsIntegrationsAwsDirectConnectPtrInput
	// Aws Fsx integration
	AwsFsx AwsIntegrationsAwsFsxPtrInput
	// Aws Glue integration
	AwsGlue AwsIntegrationsAwsGluePtrInput
	// Aws Kinesis Analytics integration
	AwsKinesisAnalytics AwsIntegrationsAwsKinesisAnalyticsPtrInput
	// Aws Media Convert integration
	AwsMediaConvert AwsIntegrationsAwsMediaConvertPtrInput
	// Aws Media PackageVod integration
	AwsMediaPackageVod AwsIntegrationsAwsMediaPackageVodPtrInput
	// Aws Mq integration
	AwsMq AwsIntegrationsAwsMqPtrInput
	// Aws Msk integration
	AwsMsk AwsIntegrationsAwsMskPtrInput
	// Aws Neptune integration
	AwsNeptune AwsIntegrationsAwsNeptunePtrInput
	// Aws Qldb integration
	AwsQldb AwsIntegrationsAwsQldbPtrInput
	// Aws Route53resolver integration
	AwsRoute53resolver AwsIntegrationsAwsRoute53resolverPtrInput
	// Aws states integration
	AwsStates AwsIntegrationsAwsStatesPtrInput
	// Aws Transit Gateway integration
	AwsTransitGateway AwsIntegrationsAwsTransitGatewayPtrInput
	// Aws Waf integration
	AwsWaf AwsIntegrationsAwsWafPtrInput
	// Aws Wafv2 integration
	AwsWafv2 AwsIntegrationsAwsWafv2PtrInput
	// Billing integration
	Billing AwsIntegrationsBillingPtrInput
	// Cloudfront integration
	Cloudfront AwsIntegrationsCloudfrontPtrInput
	// CloudTrail integration
	Cloudtrail AwsIntegrationsCloudtrailPtrInput
	// Doc DB integration
	DocDb AwsIntegrationsDocDbPtrInput
	// Dynamo DB integration
	Dynamodb AwsIntegrationsDynamodbPtrInput
	// EBS integration
	Ebs AwsIntegrationsEbsPtrInput
	// Ec2 integration
	Ec2 AwsIntegrationsEc2PtrInput
	// Ecs integration
	Ecs AwsIntegrationsEcsPtrInput
	// Efs integration
	Efs AwsIntegrationsEfsPtrInput
	// Elasticache integration
	Elasticache AwsIntegrationsElasticachePtrInput
	// Elastic Bean Stalk integration
	Elasticbeanstalk AwsIntegrationsElasticbeanstalkPtrInput
	// Elastic Search integration
	Elasticsearch AwsIntegrationsElasticsearchPtrInput
	// Elb integration
	Elb AwsIntegrationsElbPtrInput
	// Emr integration
	Emr AwsIntegrationsEmrPtrInput
	// Health integration
	Health AwsIntegrationsHealthPtrInput
	// Iam integration
	Iam AwsIntegrationsIamPtrInput
	// Iot integration
	Iot AwsIntegrationsIotPtrInput
	// Kinesis integration
	Kinesis AwsIntegrationsKinesisPtrInput
	// Kinesis Firehose integration
	KinesisFirehose AwsIntegrationsKinesisFirehosePtrInput
	// Lambda integration
	Lambda AwsIntegrationsLambdaPtrInput
	// The ID of the linked AWS account in New Relic.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	// <details>
	// <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
	//
	// | Block                   | Description                   |
	// |-------------------------|-------------------------------|
	// | `alb`                   | ALB Integration               |
	// | `apiGateway`           | API Gateway Integration       |
	// | `autoScaling`          | Auto Scaling Integration      |
	// | `awsAppSync`          | AppSync Integration           |
	// | `awsAthena`            | Athena Integration            |
	// | `awsCognito`           | Cognito Integration           |
	// | `awsConnect`           | Connect Integration           |
	// | `awsDirectConnect`    | Direct Connect Integration    |
	// | `awsFsx`               | FSx Integration               |
	// | `awsGlue`              | Glue Integration              |
	// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
	// | `awsMediaConvert`     | MediaConvert Integration      |
	// | `awsMediaPackageVod` | Media Package VOD Integration |
	// | `awsMq`                | MQ Integration                |
	// | `awsMsk`               | MSK Integration               |
	// | `awsNeptune`           | Neptune Integration           |
	// | `awsQldb`              | QLDB Integration              |
	// | `awsRoute53resolver`   | Route53 Resolver Integration  |
	// | `awsStates`            | States Integration            |
	// | `awsTransitGateway`   | Transit Gateway Integration   |
	// | `awsWaf`               | WAF Integration               |
	// | `awsWafv2`             | WAFv2 Integration             |
	// | `billing`               | Billing Integration           |
	// | `cloudfront`            | CloudFront Integration        |
	// | `cloudtrail`            | CloudTrail Integration        |
	// | `docDb`                | DocumentDB Integration        |
	// | `dynamodb`              | DynamoDB Integration          |
	// | `ebs`                   | EBS Integration               |
	// | `ec2`                   | EC2 Integration               |
	// | `ecs`                   | ECS Integration               |
	// | `efs`                   | EFS Integration               |
	// | `elasticache`           | ElastiCache Integration       |
	// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
	// | `elasticsearch`         | Elasticsearch Integration     |
	// | `elb`                   | ELB Integration               |
	// | `emr`                   | EMR Integration               |
	// | `health`                | Health Integration            |
	// | `iam`                   | IAM Integration               |
	// | `iot`                   | IoT Integration               |
	// | `kinesis`               | Kinesis Integration           |
	// | `kinesisFirehose`      | Kinesis Firehose Integration  |
	// | `lambda`                | Lambda Integration            |
	// | `rds`                   | RDS Integration               |
	// | `redshift`              | Redshift Integration          |
	// | `route53`               | Route53 Integration           |
	// | `s3`                    | S3 Integration                |
	// | `ses`                   | SES Integration               |
	// | `sns`                   | SNS Integration               |
	// | `sqs`                   | SQS Integration               |
	// | `trustedAdvisor`       | Trusted Advisor Integration   |
	// | `vpc`                   | VPC Integration               |
	// | `xRay`                 | X-Ray Integration             |
	//
	// </details>
	LinkedAccountId pulumi.IntPtrInput
	// Rds integration
	Rds AwsIntegrationsRdsPtrInput
	// Redshift integration
	Redshift AwsIntegrationsRedshiftPtrInput
	// Route53 integration
	Route53 AwsIntegrationsRoute53PtrInput
	// S3 integration
	S3 AwsIntegrationsS3PtrInput
	// Ses integration
	Ses AwsIntegrationsSesPtrInput
	// Sns integration
	Sns AwsIntegrationsSnsPtrInput
	// SQS integration
	Sqs AwsIntegrationsSqsPtrInput
	// Trusted Advisor integration
	TrustedAdvisor AwsIntegrationsTrustedAdvisorPtrInput
	// VPC integration
	Vpc AwsIntegrationsVpcPtrInput
	// X-Ray integration
	XRay AwsIntegrationsXRayPtrInput
}

func (AwsIntegrationsState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsIntegrationsState)(nil)).Elem()
}

type awsIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// ALB integration
	Alb *AwsIntegrationsAlb `pulumi:"alb"`
	// API Gateway integration
	ApiGateway *AwsIntegrationsApiGateway `pulumi:"apiGateway"`
	// ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
	AutoScaling *AwsIntegrationsAutoScaling `pulumi:"autoScaling"`
	// Aws Appsync integration
	AwsAppSync *AwsIntegrationsAwsAppSync `pulumi:"awsAppSync"`
	// Aws Athena integration
	AwsAthena *AwsIntegrationsAwsAthena `pulumi:"awsAthena"`
	// Aws Cognito integration
	AwsCognito *AwsIntegrationsAwsCognito `pulumi:"awsCognito"`
	// Aws Connect integration
	AwsConnect *AwsIntegrationsAwsConnect `pulumi:"awsConnect"`
	// Aws Direct Connect integration
	AwsDirectConnect *AwsIntegrationsAwsDirectConnect `pulumi:"awsDirectConnect"`
	// Aws Fsx integration
	AwsFsx *AwsIntegrationsAwsFsx `pulumi:"awsFsx"`
	// Aws Glue integration
	AwsGlue *AwsIntegrationsAwsGlue `pulumi:"awsGlue"`
	// Aws Kinesis Analytics integration
	AwsKinesisAnalytics *AwsIntegrationsAwsKinesisAnalytics `pulumi:"awsKinesisAnalytics"`
	// Aws Media Convert integration
	AwsMediaConvert *AwsIntegrationsAwsMediaConvert `pulumi:"awsMediaConvert"`
	// Aws Media PackageVod integration
	AwsMediaPackageVod *AwsIntegrationsAwsMediaPackageVod `pulumi:"awsMediaPackageVod"`
	// Aws Mq integration
	AwsMq *AwsIntegrationsAwsMq `pulumi:"awsMq"`
	// Aws Msk integration
	AwsMsk *AwsIntegrationsAwsMsk `pulumi:"awsMsk"`
	// Aws Neptune integration
	AwsNeptune *AwsIntegrationsAwsNeptune `pulumi:"awsNeptune"`
	// Aws Qldb integration
	AwsQldb *AwsIntegrationsAwsQldb `pulumi:"awsQldb"`
	// Aws Route53resolver integration
	AwsRoute53resolver *AwsIntegrationsAwsRoute53resolver `pulumi:"awsRoute53resolver"`
	// Aws states integration
	AwsStates *AwsIntegrationsAwsStates `pulumi:"awsStates"`
	// Aws Transit Gateway integration
	AwsTransitGateway *AwsIntegrationsAwsTransitGateway `pulumi:"awsTransitGateway"`
	// Aws Waf integration
	AwsWaf *AwsIntegrationsAwsWaf `pulumi:"awsWaf"`
	// Aws Wafv2 integration
	AwsWafv2 *AwsIntegrationsAwsWafv2 `pulumi:"awsWafv2"`
	// Billing integration
	Billing *AwsIntegrationsBilling `pulumi:"billing"`
	// Cloudfront integration
	Cloudfront *AwsIntegrationsCloudfront `pulumi:"cloudfront"`
	// CloudTrail integration
	Cloudtrail *AwsIntegrationsCloudtrail `pulumi:"cloudtrail"`
	// Doc DB integration
	DocDb *AwsIntegrationsDocDb `pulumi:"docDb"`
	// Dynamo DB integration
	Dynamodb *AwsIntegrationsDynamodb `pulumi:"dynamodb"`
	// EBS integration
	Ebs *AwsIntegrationsEbs `pulumi:"ebs"`
	// Ec2 integration
	Ec2 *AwsIntegrationsEc2 `pulumi:"ec2"`
	// Ecs integration
	Ecs *AwsIntegrationsEcs `pulumi:"ecs"`
	// Efs integration
	Efs *AwsIntegrationsEfs `pulumi:"efs"`
	// Elasticache integration
	Elasticache *AwsIntegrationsElasticache `pulumi:"elasticache"`
	// Elastic Bean Stalk integration
	Elasticbeanstalk *AwsIntegrationsElasticbeanstalk `pulumi:"elasticbeanstalk"`
	// Elastic Search integration
	Elasticsearch *AwsIntegrationsElasticsearch `pulumi:"elasticsearch"`
	// Elb integration
	Elb *AwsIntegrationsElb `pulumi:"elb"`
	// Emr integration
	Emr *AwsIntegrationsEmr `pulumi:"emr"`
	// Health integration
	Health *AwsIntegrationsHealth `pulumi:"health"`
	// Iam integration
	Iam *AwsIntegrationsIam `pulumi:"iam"`
	// Iot integration
	Iot *AwsIntegrationsIot `pulumi:"iot"`
	// Kinesis integration
	Kinesis *AwsIntegrationsKinesis `pulumi:"kinesis"`
	// Kinesis Firehose integration
	KinesisFirehose *AwsIntegrationsKinesisFirehose `pulumi:"kinesisFirehose"`
	// Lambda integration
	Lambda *AwsIntegrationsLambda `pulumi:"lambda"`
	// The ID of the linked AWS account in New Relic.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	// <details>
	// <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
	//
	// | Block                   | Description                   |
	// |-------------------------|-------------------------------|
	// | `alb`                   | ALB Integration               |
	// | `apiGateway`           | API Gateway Integration       |
	// | `autoScaling`          | Auto Scaling Integration      |
	// | `awsAppSync`          | AppSync Integration           |
	// | `awsAthena`            | Athena Integration            |
	// | `awsCognito`           | Cognito Integration           |
	// | `awsConnect`           | Connect Integration           |
	// | `awsDirectConnect`    | Direct Connect Integration    |
	// | `awsFsx`               | FSx Integration               |
	// | `awsGlue`              | Glue Integration              |
	// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
	// | `awsMediaConvert`     | MediaConvert Integration      |
	// | `awsMediaPackageVod` | Media Package VOD Integration |
	// | `awsMq`                | MQ Integration                |
	// | `awsMsk`               | MSK Integration               |
	// | `awsNeptune`           | Neptune Integration           |
	// | `awsQldb`              | QLDB Integration              |
	// | `awsRoute53resolver`   | Route53 Resolver Integration  |
	// | `awsStates`            | States Integration            |
	// | `awsTransitGateway`   | Transit Gateway Integration   |
	// | `awsWaf`               | WAF Integration               |
	// | `awsWafv2`             | WAFv2 Integration             |
	// | `billing`               | Billing Integration           |
	// | `cloudfront`            | CloudFront Integration        |
	// | `cloudtrail`            | CloudTrail Integration        |
	// | `docDb`                | DocumentDB Integration        |
	// | `dynamodb`              | DynamoDB Integration          |
	// | `ebs`                   | EBS Integration               |
	// | `ec2`                   | EC2 Integration               |
	// | `ecs`                   | ECS Integration               |
	// | `efs`                   | EFS Integration               |
	// | `elasticache`           | ElastiCache Integration       |
	// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
	// | `elasticsearch`         | Elasticsearch Integration     |
	// | `elb`                   | ELB Integration               |
	// | `emr`                   | EMR Integration               |
	// | `health`                | Health Integration            |
	// | `iam`                   | IAM Integration               |
	// | `iot`                   | IoT Integration               |
	// | `kinesis`               | Kinesis Integration           |
	// | `kinesisFirehose`      | Kinesis Firehose Integration  |
	// | `lambda`                | Lambda Integration            |
	// | `rds`                   | RDS Integration               |
	// | `redshift`              | Redshift Integration          |
	// | `route53`               | Route53 Integration           |
	// | `s3`                    | S3 Integration                |
	// | `ses`                   | SES Integration               |
	// | `sns`                   | SNS Integration               |
	// | `sqs`                   | SQS Integration               |
	// | `trustedAdvisor`       | Trusted Advisor Integration   |
	// | `vpc`                   | VPC Integration               |
	// | `xRay`                 | X-Ray Integration             |
	//
	// </details>
	LinkedAccountId int `pulumi:"linkedAccountId"`
	// Rds integration
	Rds *AwsIntegrationsRds `pulumi:"rds"`
	// Redshift integration
	Redshift *AwsIntegrationsRedshift `pulumi:"redshift"`
	// Route53 integration
	Route53 *AwsIntegrationsRoute53 `pulumi:"route53"`
	// S3 integration
	S3 *AwsIntegrationsS3 `pulumi:"s3"`
	// Ses integration
	Ses *AwsIntegrationsSes `pulumi:"ses"`
	// Sns integration
	Sns *AwsIntegrationsSns `pulumi:"sns"`
	// SQS integration
	Sqs *AwsIntegrationsSqs `pulumi:"sqs"`
	// Trusted Advisor integration
	TrustedAdvisor *AwsIntegrationsTrustedAdvisor `pulumi:"trustedAdvisor"`
	// VPC integration
	Vpc *AwsIntegrationsVpc `pulumi:"vpc"`
	// X-Ray integration
	XRay *AwsIntegrationsXRay `pulumi:"xRay"`
}

// The set of arguments for constructing a AwsIntegrations resource.
type AwsIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput
	// ALB integration
	Alb AwsIntegrationsAlbPtrInput
	// API Gateway integration
	ApiGateway AwsIntegrationsApiGatewayPtrInput
	// ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
	AutoScaling AwsIntegrationsAutoScalingPtrInput
	// Aws Appsync integration
	AwsAppSync AwsIntegrationsAwsAppSyncPtrInput
	// Aws Athena integration
	AwsAthena AwsIntegrationsAwsAthenaPtrInput
	// Aws Cognito integration
	AwsCognito AwsIntegrationsAwsCognitoPtrInput
	// Aws Connect integration
	AwsConnect AwsIntegrationsAwsConnectPtrInput
	// Aws Direct Connect integration
	AwsDirectConnect AwsIntegrationsAwsDirectConnectPtrInput
	// Aws Fsx integration
	AwsFsx AwsIntegrationsAwsFsxPtrInput
	// Aws Glue integration
	AwsGlue AwsIntegrationsAwsGluePtrInput
	// Aws Kinesis Analytics integration
	AwsKinesisAnalytics AwsIntegrationsAwsKinesisAnalyticsPtrInput
	// Aws Media Convert integration
	AwsMediaConvert AwsIntegrationsAwsMediaConvertPtrInput
	// Aws Media PackageVod integration
	AwsMediaPackageVod AwsIntegrationsAwsMediaPackageVodPtrInput
	// Aws Mq integration
	AwsMq AwsIntegrationsAwsMqPtrInput
	// Aws Msk integration
	AwsMsk AwsIntegrationsAwsMskPtrInput
	// Aws Neptune integration
	AwsNeptune AwsIntegrationsAwsNeptunePtrInput
	// Aws Qldb integration
	AwsQldb AwsIntegrationsAwsQldbPtrInput
	// Aws Route53resolver integration
	AwsRoute53resolver AwsIntegrationsAwsRoute53resolverPtrInput
	// Aws states integration
	AwsStates AwsIntegrationsAwsStatesPtrInput
	// Aws Transit Gateway integration
	AwsTransitGateway AwsIntegrationsAwsTransitGatewayPtrInput
	// Aws Waf integration
	AwsWaf AwsIntegrationsAwsWafPtrInput
	// Aws Wafv2 integration
	AwsWafv2 AwsIntegrationsAwsWafv2PtrInput
	// Billing integration
	Billing AwsIntegrationsBillingPtrInput
	// Cloudfront integration
	Cloudfront AwsIntegrationsCloudfrontPtrInput
	// CloudTrail integration
	Cloudtrail AwsIntegrationsCloudtrailPtrInput
	// Doc DB integration
	DocDb AwsIntegrationsDocDbPtrInput
	// Dynamo DB integration
	Dynamodb AwsIntegrationsDynamodbPtrInput
	// EBS integration
	Ebs AwsIntegrationsEbsPtrInput
	// Ec2 integration
	Ec2 AwsIntegrationsEc2PtrInput
	// Ecs integration
	Ecs AwsIntegrationsEcsPtrInput
	// Efs integration
	Efs AwsIntegrationsEfsPtrInput
	// Elasticache integration
	Elasticache AwsIntegrationsElasticachePtrInput
	// Elastic Bean Stalk integration
	Elasticbeanstalk AwsIntegrationsElasticbeanstalkPtrInput
	// Elastic Search integration
	Elasticsearch AwsIntegrationsElasticsearchPtrInput
	// Elb integration
	Elb AwsIntegrationsElbPtrInput
	// Emr integration
	Emr AwsIntegrationsEmrPtrInput
	// Health integration
	Health AwsIntegrationsHealthPtrInput
	// Iam integration
	Iam AwsIntegrationsIamPtrInput
	// Iot integration
	Iot AwsIntegrationsIotPtrInput
	// Kinesis integration
	Kinesis AwsIntegrationsKinesisPtrInput
	// Kinesis Firehose integration
	KinesisFirehose AwsIntegrationsKinesisFirehosePtrInput
	// Lambda integration
	Lambda AwsIntegrationsLambdaPtrInput
	// The ID of the linked AWS account in New Relic.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	// <details>
	// <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
	//
	// | Block                   | Description                   |
	// |-------------------------|-------------------------------|
	// | `alb`                   | ALB Integration               |
	// | `apiGateway`           | API Gateway Integration       |
	// | `autoScaling`          | Auto Scaling Integration      |
	// | `awsAppSync`          | AppSync Integration           |
	// | `awsAthena`            | Athena Integration            |
	// | `awsCognito`           | Cognito Integration           |
	// | `awsConnect`           | Connect Integration           |
	// | `awsDirectConnect`    | Direct Connect Integration    |
	// | `awsFsx`               | FSx Integration               |
	// | `awsGlue`              | Glue Integration              |
	// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
	// | `awsMediaConvert`     | MediaConvert Integration      |
	// | `awsMediaPackageVod` | Media Package VOD Integration |
	// | `awsMq`                | MQ Integration                |
	// | `awsMsk`               | MSK Integration               |
	// | `awsNeptune`           | Neptune Integration           |
	// | `awsQldb`              | QLDB Integration              |
	// | `awsRoute53resolver`   | Route53 Resolver Integration  |
	// | `awsStates`            | States Integration            |
	// | `awsTransitGateway`   | Transit Gateway Integration   |
	// | `awsWaf`               | WAF Integration               |
	// | `awsWafv2`             | WAFv2 Integration             |
	// | `billing`               | Billing Integration           |
	// | `cloudfront`            | CloudFront Integration        |
	// | `cloudtrail`            | CloudTrail Integration        |
	// | `docDb`                | DocumentDB Integration        |
	// | `dynamodb`              | DynamoDB Integration          |
	// | `ebs`                   | EBS Integration               |
	// | `ec2`                   | EC2 Integration               |
	// | `ecs`                   | ECS Integration               |
	// | `efs`                   | EFS Integration               |
	// | `elasticache`           | ElastiCache Integration       |
	// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
	// | `elasticsearch`         | Elasticsearch Integration     |
	// | `elb`                   | ELB Integration               |
	// | `emr`                   | EMR Integration               |
	// | `health`                | Health Integration            |
	// | `iam`                   | IAM Integration               |
	// | `iot`                   | IoT Integration               |
	// | `kinesis`               | Kinesis Integration           |
	// | `kinesisFirehose`      | Kinesis Firehose Integration  |
	// | `lambda`                | Lambda Integration            |
	// | `rds`                   | RDS Integration               |
	// | `redshift`              | Redshift Integration          |
	// | `route53`               | Route53 Integration           |
	// | `s3`                    | S3 Integration                |
	// | `ses`                   | SES Integration               |
	// | `sns`                   | SNS Integration               |
	// | `sqs`                   | SQS Integration               |
	// | `trustedAdvisor`       | Trusted Advisor Integration   |
	// | `vpc`                   | VPC Integration               |
	// | `xRay`                 | X-Ray Integration             |
	//
	// </details>
	LinkedAccountId pulumi.IntInput
	// Rds integration
	Rds AwsIntegrationsRdsPtrInput
	// Redshift integration
	Redshift AwsIntegrationsRedshiftPtrInput
	// Route53 integration
	Route53 AwsIntegrationsRoute53PtrInput
	// S3 integration
	S3 AwsIntegrationsS3PtrInput
	// Ses integration
	Ses AwsIntegrationsSesPtrInput
	// Sns integration
	Sns AwsIntegrationsSnsPtrInput
	// SQS integration
	Sqs AwsIntegrationsSqsPtrInput
	// Trusted Advisor integration
	TrustedAdvisor AwsIntegrationsTrustedAdvisorPtrInput
	// VPC integration
	Vpc AwsIntegrationsVpcPtrInput
	// X-Ray integration
	XRay AwsIntegrationsXRayPtrInput
}

func (AwsIntegrationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsIntegrationsArgs)(nil)).Elem()
}

type AwsIntegrationsInput interface {
	pulumi.Input

	ToAwsIntegrationsOutput() AwsIntegrationsOutput
	ToAwsIntegrationsOutputWithContext(ctx context.Context) AwsIntegrationsOutput
}

func (*AwsIntegrations) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsIntegrations)(nil)).Elem()
}

func (i *AwsIntegrations) ToAwsIntegrationsOutput() AwsIntegrationsOutput {
	return i.ToAwsIntegrationsOutputWithContext(context.Background())
}

func (i *AwsIntegrations) ToAwsIntegrationsOutputWithContext(ctx context.Context) AwsIntegrationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIntegrationsOutput)
}

// AwsIntegrationsArrayInput is an input type that accepts AwsIntegrationsArray and AwsIntegrationsArrayOutput values.
// You can construct a concrete instance of `AwsIntegrationsArrayInput` via:
//
//	AwsIntegrationsArray{ AwsIntegrationsArgs{...} }
type AwsIntegrationsArrayInput interface {
	pulumi.Input

	ToAwsIntegrationsArrayOutput() AwsIntegrationsArrayOutput
	ToAwsIntegrationsArrayOutputWithContext(context.Context) AwsIntegrationsArrayOutput
}

type AwsIntegrationsArray []AwsIntegrationsInput

func (AwsIntegrationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsIntegrations)(nil)).Elem()
}

func (i AwsIntegrationsArray) ToAwsIntegrationsArrayOutput() AwsIntegrationsArrayOutput {
	return i.ToAwsIntegrationsArrayOutputWithContext(context.Background())
}

func (i AwsIntegrationsArray) ToAwsIntegrationsArrayOutputWithContext(ctx context.Context) AwsIntegrationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIntegrationsArrayOutput)
}

// AwsIntegrationsMapInput is an input type that accepts AwsIntegrationsMap and AwsIntegrationsMapOutput values.
// You can construct a concrete instance of `AwsIntegrationsMapInput` via:
//
//	AwsIntegrationsMap{ "key": AwsIntegrationsArgs{...} }
type AwsIntegrationsMapInput interface {
	pulumi.Input

	ToAwsIntegrationsMapOutput() AwsIntegrationsMapOutput
	ToAwsIntegrationsMapOutputWithContext(context.Context) AwsIntegrationsMapOutput
}

type AwsIntegrationsMap map[string]AwsIntegrationsInput

func (AwsIntegrationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsIntegrations)(nil)).Elem()
}

func (i AwsIntegrationsMap) ToAwsIntegrationsMapOutput() AwsIntegrationsMapOutput {
	return i.ToAwsIntegrationsMapOutputWithContext(context.Background())
}

func (i AwsIntegrationsMap) ToAwsIntegrationsMapOutputWithContext(ctx context.Context) AwsIntegrationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIntegrationsMapOutput)
}

type AwsIntegrationsOutput struct{ *pulumi.OutputState }

func (AwsIntegrationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsIntegrations)(nil)).Elem()
}

func (o AwsIntegrationsOutput) ToAwsIntegrationsOutput() AwsIntegrationsOutput {
	return o
}

func (o AwsIntegrationsOutput) ToAwsIntegrationsOutputWithContext(ctx context.Context) AwsIntegrationsOutput {
	return o
}

// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
func (o AwsIntegrationsOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsIntegrations) pulumi.IntOutput { return v.AccountId }).(pulumi.IntOutput)
}

// ALB integration
func (o AwsIntegrationsOutput) Alb() AwsIntegrationsAlbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAlbPtrOutput { return v.Alb }).(AwsIntegrationsAlbPtrOutput)
}

// API Gateway integration
func (o AwsIntegrationsOutput) ApiGateway() AwsIntegrationsApiGatewayPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsApiGatewayPtrOutput { return v.ApiGateway }).(AwsIntegrationsApiGatewayPtrOutput)
}

// ,`awsAppSync`,`awsAthena`,`awsCognito`,`awsConnect`,`awsDirectConnect`,`awsFsx`,`awsGlue`,`awsKinesisAnalytics`,`awsMediaConvert`,`awsMediaPackageVod`,`awsMq`,`awsMsk`,`awsNeptune`,`awsQldb`,`awsRoute53resolver`,`awsStates`,`awsTransitGateway`,`awsWaf`,`awsWafv2`,`iot`,`kinesisFirehose` and `ses`.
func (o AwsIntegrationsOutput) AutoScaling() AwsIntegrationsAutoScalingPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAutoScalingPtrOutput { return v.AutoScaling }).(AwsIntegrationsAutoScalingPtrOutput)
}

// Aws Appsync integration
func (o AwsIntegrationsOutput) AwsAppSync() AwsIntegrationsAwsAppSyncPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsAppSyncPtrOutput { return v.AwsAppSync }).(AwsIntegrationsAwsAppSyncPtrOutput)
}

// Aws Athena integration
func (o AwsIntegrationsOutput) AwsAthena() AwsIntegrationsAwsAthenaPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsAthenaPtrOutput { return v.AwsAthena }).(AwsIntegrationsAwsAthenaPtrOutput)
}

// Aws Cognito integration
func (o AwsIntegrationsOutput) AwsCognito() AwsIntegrationsAwsCognitoPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsCognitoPtrOutput { return v.AwsCognito }).(AwsIntegrationsAwsCognitoPtrOutput)
}

// Aws Connect integration
func (o AwsIntegrationsOutput) AwsConnect() AwsIntegrationsAwsConnectPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsConnectPtrOutput { return v.AwsConnect }).(AwsIntegrationsAwsConnectPtrOutput)
}

// Aws Direct Connect integration
func (o AwsIntegrationsOutput) AwsDirectConnect() AwsIntegrationsAwsDirectConnectPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsDirectConnectPtrOutput { return v.AwsDirectConnect }).(AwsIntegrationsAwsDirectConnectPtrOutput)
}

// Aws Fsx integration
func (o AwsIntegrationsOutput) AwsFsx() AwsIntegrationsAwsFsxPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsFsxPtrOutput { return v.AwsFsx }).(AwsIntegrationsAwsFsxPtrOutput)
}

// Aws Glue integration
func (o AwsIntegrationsOutput) AwsGlue() AwsIntegrationsAwsGluePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsGluePtrOutput { return v.AwsGlue }).(AwsIntegrationsAwsGluePtrOutput)
}

// Aws Kinesis Analytics integration
func (o AwsIntegrationsOutput) AwsKinesisAnalytics() AwsIntegrationsAwsKinesisAnalyticsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsKinesisAnalyticsPtrOutput { return v.AwsKinesisAnalytics }).(AwsIntegrationsAwsKinesisAnalyticsPtrOutput)
}

// Aws Media Convert integration
func (o AwsIntegrationsOutput) AwsMediaConvert() AwsIntegrationsAwsMediaConvertPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMediaConvertPtrOutput { return v.AwsMediaConvert }).(AwsIntegrationsAwsMediaConvertPtrOutput)
}

// Aws Media PackageVod integration
func (o AwsIntegrationsOutput) AwsMediaPackageVod() AwsIntegrationsAwsMediaPackageVodPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMediaPackageVodPtrOutput { return v.AwsMediaPackageVod }).(AwsIntegrationsAwsMediaPackageVodPtrOutput)
}

// Aws Mq integration
func (o AwsIntegrationsOutput) AwsMq() AwsIntegrationsAwsMqPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMqPtrOutput { return v.AwsMq }).(AwsIntegrationsAwsMqPtrOutput)
}

// Aws Msk integration
func (o AwsIntegrationsOutput) AwsMsk() AwsIntegrationsAwsMskPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMskPtrOutput { return v.AwsMsk }).(AwsIntegrationsAwsMskPtrOutput)
}

// Aws Neptune integration
func (o AwsIntegrationsOutput) AwsNeptune() AwsIntegrationsAwsNeptunePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsNeptunePtrOutput { return v.AwsNeptune }).(AwsIntegrationsAwsNeptunePtrOutput)
}

// Aws Qldb integration
func (o AwsIntegrationsOutput) AwsQldb() AwsIntegrationsAwsQldbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsQldbPtrOutput { return v.AwsQldb }).(AwsIntegrationsAwsQldbPtrOutput)
}

// Aws Route53resolver integration
func (o AwsIntegrationsOutput) AwsRoute53resolver() AwsIntegrationsAwsRoute53resolverPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsRoute53resolverPtrOutput { return v.AwsRoute53resolver }).(AwsIntegrationsAwsRoute53resolverPtrOutput)
}

// Aws states integration
func (o AwsIntegrationsOutput) AwsStates() AwsIntegrationsAwsStatesPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsStatesPtrOutput { return v.AwsStates }).(AwsIntegrationsAwsStatesPtrOutput)
}

// Aws Transit Gateway integration
func (o AwsIntegrationsOutput) AwsTransitGateway() AwsIntegrationsAwsTransitGatewayPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsTransitGatewayPtrOutput { return v.AwsTransitGateway }).(AwsIntegrationsAwsTransitGatewayPtrOutput)
}

// Aws Waf integration
func (o AwsIntegrationsOutput) AwsWaf() AwsIntegrationsAwsWafPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsWafPtrOutput { return v.AwsWaf }).(AwsIntegrationsAwsWafPtrOutput)
}

// Aws Wafv2 integration
func (o AwsIntegrationsOutput) AwsWafv2() AwsIntegrationsAwsWafv2PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsWafv2PtrOutput { return v.AwsWafv2 }).(AwsIntegrationsAwsWafv2PtrOutput)
}

// Billing integration
func (o AwsIntegrationsOutput) Billing() AwsIntegrationsBillingPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsBillingPtrOutput { return v.Billing }).(AwsIntegrationsBillingPtrOutput)
}

// Cloudfront integration
func (o AwsIntegrationsOutput) Cloudfront() AwsIntegrationsCloudfrontPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsCloudfrontPtrOutput { return v.Cloudfront }).(AwsIntegrationsCloudfrontPtrOutput)
}

// CloudTrail integration
func (o AwsIntegrationsOutput) Cloudtrail() AwsIntegrationsCloudtrailPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsCloudtrailPtrOutput { return v.Cloudtrail }).(AwsIntegrationsCloudtrailPtrOutput)
}

// Doc DB integration
func (o AwsIntegrationsOutput) DocDb() AwsIntegrationsDocDbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsDocDbPtrOutput { return v.DocDb }).(AwsIntegrationsDocDbPtrOutput)
}

// Dynamo DB integration
func (o AwsIntegrationsOutput) Dynamodb() AwsIntegrationsDynamodbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsDynamodbPtrOutput { return v.Dynamodb }).(AwsIntegrationsDynamodbPtrOutput)
}

// EBS integration
func (o AwsIntegrationsOutput) Ebs() AwsIntegrationsEbsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEbsPtrOutput { return v.Ebs }).(AwsIntegrationsEbsPtrOutput)
}

// Ec2 integration
func (o AwsIntegrationsOutput) Ec2() AwsIntegrationsEc2PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEc2PtrOutput { return v.Ec2 }).(AwsIntegrationsEc2PtrOutput)
}

// Ecs integration
func (o AwsIntegrationsOutput) Ecs() AwsIntegrationsEcsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEcsPtrOutput { return v.Ecs }).(AwsIntegrationsEcsPtrOutput)
}

// Efs integration
func (o AwsIntegrationsOutput) Efs() AwsIntegrationsEfsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEfsPtrOutput { return v.Efs }).(AwsIntegrationsEfsPtrOutput)
}

// Elasticache integration
func (o AwsIntegrationsOutput) Elasticache() AwsIntegrationsElasticachePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElasticachePtrOutput { return v.Elasticache }).(AwsIntegrationsElasticachePtrOutput)
}

// Elastic Bean Stalk integration
func (o AwsIntegrationsOutput) Elasticbeanstalk() AwsIntegrationsElasticbeanstalkPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElasticbeanstalkPtrOutput { return v.Elasticbeanstalk }).(AwsIntegrationsElasticbeanstalkPtrOutput)
}

// Elastic Search integration
func (o AwsIntegrationsOutput) Elasticsearch() AwsIntegrationsElasticsearchPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElasticsearchPtrOutput { return v.Elasticsearch }).(AwsIntegrationsElasticsearchPtrOutput)
}

// Elb integration
func (o AwsIntegrationsOutput) Elb() AwsIntegrationsElbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElbPtrOutput { return v.Elb }).(AwsIntegrationsElbPtrOutput)
}

// Emr integration
func (o AwsIntegrationsOutput) Emr() AwsIntegrationsEmrPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEmrPtrOutput { return v.Emr }).(AwsIntegrationsEmrPtrOutput)
}

// Health integration
func (o AwsIntegrationsOutput) Health() AwsIntegrationsHealthPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsHealthPtrOutput { return v.Health }).(AwsIntegrationsHealthPtrOutput)
}

// Iam integration
func (o AwsIntegrationsOutput) Iam() AwsIntegrationsIamPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsIamPtrOutput { return v.Iam }).(AwsIntegrationsIamPtrOutput)
}

// Iot integration
func (o AwsIntegrationsOutput) Iot() AwsIntegrationsIotPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsIotPtrOutput { return v.Iot }).(AwsIntegrationsIotPtrOutput)
}

// Kinesis integration
func (o AwsIntegrationsOutput) Kinesis() AwsIntegrationsKinesisPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsKinesisPtrOutput { return v.Kinesis }).(AwsIntegrationsKinesisPtrOutput)
}

// Kinesis Firehose integration
func (o AwsIntegrationsOutput) KinesisFirehose() AwsIntegrationsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsKinesisFirehosePtrOutput { return v.KinesisFirehose }).(AwsIntegrationsKinesisFirehosePtrOutput)
}

// Lambda integration
func (o AwsIntegrationsOutput) Lambda() AwsIntegrationsLambdaPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsLambdaPtrOutput { return v.Lambda }).(AwsIntegrationsLambdaPtrOutput)
}

// The ID of the linked AWS account in New Relic.
//
// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
// <details>
// <summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
//
// | Block                   | Description                   |
// |-------------------------|-------------------------------|
// | `alb`                   | ALB Integration               |
// | `apiGateway`           | API Gateway Integration       |
// | `autoScaling`          | Auto Scaling Integration      |
// | `awsAppSync`          | AppSync Integration           |
// | `awsAthena`            | Athena Integration            |
// | `awsCognito`           | Cognito Integration           |
// | `awsConnect`           | Connect Integration           |
// | `awsDirectConnect`    | Direct Connect Integration    |
// | `awsFsx`               | FSx Integration               |
// | `awsGlue`              | Glue Integration              |
// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
// | `awsMediaConvert`     | MediaConvert Integration      |
// | `awsMediaPackageVod` | Media Package VOD Integration |
// | `awsMq`                | MQ Integration                |
// | `awsMsk`               | MSK Integration               |
// | `awsNeptune`           | Neptune Integration           |
// | `awsQldb`              | QLDB Integration              |
// | `awsRoute53resolver`   | Route53 Resolver Integration  |
// | `awsStates`            | States Integration            |
// | `awsTransitGateway`   | Transit Gateway Integration   |
// | `awsWaf`               | WAF Integration               |
// | `awsWafv2`             | WAFv2 Integration             |
// | `billing`               | Billing Integration           |
// | `cloudfront`            | CloudFront Integration        |
// | `cloudtrail`            | CloudTrail Integration        |
// | `docDb`                | DocumentDB Integration        |
// | `dynamodb`              | DynamoDB Integration          |
// | `ebs`                   | EBS Integration               |
// | `ec2`                   | EC2 Integration               |
// | `ecs`                   | ECS Integration               |
// | `efs`                   | EFS Integration               |
// | `elasticache`           | ElastiCache Integration       |
// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
// | `elasticsearch`         | Elasticsearch Integration     |
// | `elb`                   | ELB Integration               |
// | `emr`                   | EMR Integration               |
// | `health`                | Health Integration            |
// | `iam`                   | IAM Integration               |
// | `iot`                   | IoT Integration               |
// | `kinesis`               | Kinesis Integration           |
// | `kinesisFirehose`      | Kinesis Firehose Integration  |
// | `lambda`                | Lambda Integration            |
// | `rds`                   | RDS Integration               |
// | `redshift`              | Redshift Integration          |
// | `route53`               | Route53 Integration           |
// | `s3`                    | S3 Integration                |
// | `ses`                   | SES Integration               |
// | `sns`                   | SNS Integration               |
// | `sqs`                   | SQS Integration               |
// | `trustedAdvisor`       | Trusted Advisor Integration   |
// | `vpc`                   | VPC Integration               |
// | `xRay`                 | X-Ray Integration             |
//
// </details>
func (o AwsIntegrationsOutput) LinkedAccountId() pulumi.IntOutput {
	return o.ApplyT(func(v *AwsIntegrations) pulumi.IntOutput { return v.LinkedAccountId }).(pulumi.IntOutput)
}

// Rds integration
func (o AwsIntegrationsOutput) Rds() AwsIntegrationsRdsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsRdsPtrOutput { return v.Rds }).(AwsIntegrationsRdsPtrOutput)
}

// Redshift integration
func (o AwsIntegrationsOutput) Redshift() AwsIntegrationsRedshiftPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsRedshiftPtrOutput { return v.Redshift }).(AwsIntegrationsRedshiftPtrOutput)
}

// Route53 integration
func (o AwsIntegrationsOutput) Route53() AwsIntegrationsRoute53PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsRoute53PtrOutput { return v.Route53 }).(AwsIntegrationsRoute53PtrOutput)
}

// S3 integration
func (o AwsIntegrationsOutput) S3() AwsIntegrationsS3PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsS3PtrOutput { return v.S3 }).(AwsIntegrationsS3PtrOutput)
}

// Ses integration
func (o AwsIntegrationsOutput) Ses() AwsIntegrationsSesPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsSesPtrOutput { return v.Ses }).(AwsIntegrationsSesPtrOutput)
}

// Sns integration
func (o AwsIntegrationsOutput) Sns() AwsIntegrationsSnsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsSnsPtrOutput { return v.Sns }).(AwsIntegrationsSnsPtrOutput)
}

// SQS integration
func (o AwsIntegrationsOutput) Sqs() AwsIntegrationsSqsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsSqsPtrOutput { return v.Sqs }).(AwsIntegrationsSqsPtrOutput)
}

// Trusted Advisor integration
func (o AwsIntegrationsOutput) TrustedAdvisor() AwsIntegrationsTrustedAdvisorPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsTrustedAdvisorPtrOutput { return v.TrustedAdvisor }).(AwsIntegrationsTrustedAdvisorPtrOutput)
}

// VPC integration
func (o AwsIntegrationsOutput) Vpc() AwsIntegrationsVpcPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsVpcPtrOutput { return v.Vpc }).(AwsIntegrationsVpcPtrOutput)
}

// X-Ray integration
func (o AwsIntegrationsOutput) XRay() AwsIntegrationsXRayPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsXRayPtrOutput { return v.XRay }).(AwsIntegrationsXRayPtrOutput)
}

type AwsIntegrationsArrayOutput struct{ *pulumi.OutputState }

func (AwsIntegrationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsIntegrations)(nil)).Elem()
}

func (o AwsIntegrationsArrayOutput) ToAwsIntegrationsArrayOutput() AwsIntegrationsArrayOutput {
	return o
}

func (o AwsIntegrationsArrayOutput) ToAwsIntegrationsArrayOutputWithContext(ctx context.Context) AwsIntegrationsArrayOutput {
	return o
}

func (o AwsIntegrationsArrayOutput) Index(i pulumi.IntInput) AwsIntegrationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsIntegrations {
		return vs[0].([]*AwsIntegrations)[vs[1].(int)]
	}).(AwsIntegrationsOutput)
}

type AwsIntegrationsMapOutput struct{ *pulumi.OutputState }

func (AwsIntegrationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsIntegrations)(nil)).Elem()
}

func (o AwsIntegrationsMapOutput) ToAwsIntegrationsMapOutput() AwsIntegrationsMapOutput {
	return o
}

func (o AwsIntegrationsMapOutput) ToAwsIntegrationsMapOutputWithContext(ctx context.Context) AwsIntegrationsMapOutput {
	return o
}

func (o AwsIntegrationsMapOutput) MapIndex(k pulumi.StringInput) AwsIntegrationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsIntegrations {
		return vs[0].(map[string]*AwsIntegrations)[vs[1].(string)]
	}).(AwsIntegrationsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIntegrationsInput)(nil)).Elem(), &AwsIntegrations{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIntegrationsArrayInput)(nil)).Elem(), AwsIntegrationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIntegrationsMapInput)(nil)).Elem(), AwsIntegrationsMap{})
	pulumi.RegisterOutputType(AwsIntegrationsOutput{})
	pulumi.RegisterOutputType(AwsIntegrationsArrayOutput{})
	pulumi.RegisterOutputType(AwsIntegrationsMapOutput{})
}
