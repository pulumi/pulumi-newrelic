// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to integrate AWS services with New Relic.
//
// ## Prerequisite
//
// Setup is required for this resource to work properly. This resource assumes you have linked an AWS account to New Relic and configured it to push metrics using CloudWatch Metric Streams.
//
// New Relic doesn't automatically receive metrics from AWS for some services so this resource can be used to configure integrations to those services.
//
// Using a metric stream to New Relic is the preferred way to integrate with AWS. Follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#set-up-metric-stream) to set up a metric stream. This resource supports any integration that's not available through AWS metric stream.
//
// ## Example Usage
//
// Leave an integration block empty to use its default configuration. You can also use the full example, including the AWS set up, found in our guides.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/cloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := cloud.NewAwsLinkAccount(ctx, "foo", &cloud.AwsLinkAccountArgs{
//				Arn:                  pulumi.Any(newrelicAwsRole.Arn),
//				MetricCollectionMode: pulumi.String("PULL"),
//				Name:                 pulumi.String("foo"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud.NewAwsIntegrations(ctx, "bar", &cloud.AwsIntegrationsArgs{
//				LinkedAccountId: foo.ID(),
//				Billing: &cloud.AwsIntegrationsBillingArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//				},
//				Cloudtrail: &cloud.AwsIntegrationsCloudtrailArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//						pulumi.String("us-east-2"),
//					},
//				},
//				Health: &cloud.AwsIntegrationsHealthArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				TrustedAdvisor: &cloud.AwsIntegrationsTrustedAdvisorArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//				},
//				Vpc: &cloud.AwsIntegrationsVpcArgs{
//					MetricsPollingInterval: pulumi.Int(900),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//						pulumi.String("us-east-2"),
//					},
//					FetchNatGateway: pulumi.Bool(true),
//					FetchVpn:        pulumi.Bool(false),
//					TagKey:          pulumi.String("tag key"),
//					TagValue:        pulumi.String("tag value"),
//				},
//				XRay: &cloud.AwsIntegrationsXRayArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//						pulumi.String("us-east-2"),
//					},
//				},
//				S3: &cloud.AwsIntegrationsS3Args{
//					MetricsPollingInterval: pulumi.Int(3600),
//				},
//				DocDb: &cloud.AwsIntegrationsDocDbArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Sqs: &cloud.AwsIntegrationsSqsArgs{
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					QueuePrefixes: pulumi.StringArray{
//						pulumi.String("queue prefix"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				Ebs: &cloud.AwsIntegrationsEbsArgs{
//					MetricsPollingInterval: pulumi.Int(900),
//					FetchExtendedInventory: pulumi.Bool(true),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				Alb: &cloud.AwsIntegrationsAlbArgs{
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					LoadBalancerPrefixes: pulumi.StringArray{
//						pulumi.String("load balancer prefix"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				Elasticache: &cloud.AwsIntegrationsElasticacheArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				ApiGateway: &cloud.AwsIntegrationsApiGatewayArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					StagePrefixes: pulumi.StringArray{
//						pulumi.String("stage prefix"),
//					},
//					TagKey:   pulumi.String("tag key"),
//					TagValue: pulumi.String("tag value"),
//				},
//				AutoScaling: &cloud.AwsIntegrationsAutoScalingArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsAppSync: &cloud.AwsIntegrationsAwsAppSyncArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsAthena: &cloud.AwsIntegrationsAwsAthenaArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsCognito: &cloud.AwsIntegrationsAwsCognitoArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsConnect: &cloud.AwsIntegrationsAwsConnectArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsDirectConnect: &cloud.AwsIntegrationsAwsDirectConnectArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsFsx: &cloud.AwsIntegrationsAwsFsxArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsGlue: &cloud.AwsIntegrationsAwsGlueArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsKinesisAnalytics: &cloud.AwsIntegrationsAwsKinesisAnalyticsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsMediaConvert: &cloud.AwsIntegrationsAwsMediaConvertArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsMediaPackageVod: &cloud.AwsIntegrationsAwsMediaPackageVodArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsMq: &cloud.AwsIntegrationsAwsMqArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsMsk: &cloud.AwsIntegrationsAwsMskArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsNeptune: &cloud.AwsIntegrationsAwsNeptuneArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsQldb: &cloud.AwsIntegrationsAwsQldbArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsRoute53resolver: &cloud.AwsIntegrationsAwsRoute53resolverArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsStates: &cloud.AwsIntegrationsAwsStatesArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsTransitGateway: &cloud.AwsIntegrationsAwsTransitGatewayArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsWaf: &cloud.AwsIntegrationsAwsWafArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				AwsWafv2: &cloud.AwsIntegrationsAwsWafv2Args{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Cloudfront: &cloud.AwsIntegrationsCloudfrontArgs{
//					FetchLambdasAtEdge:     pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Dynamodb: &cloud.AwsIntegrationsDynamodbArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Ec2: &cloud.AwsIntegrationsEc2Args{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					DuplicateEc2Tags:       pulumi.Bool(true),
//					FetchIpAddresses:       pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Ecs: &cloud.AwsIntegrationsEcsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Efs: &cloud.AwsIntegrationsEfsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Elasticbeanstalk: &cloud.AwsIntegrationsElasticbeanstalkArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Elasticsearch: &cloud.AwsIntegrationsElasticsearchArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchNodes:             pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Elb: &cloud.AwsIntegrationsElbArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Emr: &cloud.AwsIntegrationsEmrArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Iam: &cloud.AwsIntegrationsIamArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Iot: &cloud.AwsIntegrationsIotArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Kinesis: &cloud.AwsIntegrationsKinesisArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchShards:            pulumi.Bool(true),
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(900),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				KinesisFirehose: &cloud.AwsIntegrationsKinesisFirehoseArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Lambda: &cloud.AwsIntegrationsLambdaArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Rds: &cloud.AwsIntegrationsRdsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchTags:              pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Redshift: &cloud.AwsIntegrationsRedshiftArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//					TagKey:                 pulumi.String("tag key"),
//					TagValue:               pulumi.String("tag value"),
//				},
//				Route53: &cloud.AwsIntegrationsRoute53Args{
//					FetchExtendedInventory: pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Ses: &cloud.AwsIntegrationsSesArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//				Sns: &cloud.AwsIntegrationsSnsArgs{
//					AwsRegions: pulumi.StringArray{
//						pulumi.String("us-east-1"),
//					},
//					FetchExtendedInventory: pulumi.Bool(true),
//					MetricsPollingInterval: pulumi.Int(300),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Supported AWS Integrations
//
// <details>
//
//	<summary>Expand this section to view all supported AWS services supported, that may be integrated via this resource.</summary>
//
// | Block                   | Description                   |
// |-------------------------|-------------------------------|
// | `alb`                   | ALB Integration               |
// | `apiGateway`           | API Gateway Integration       |
// | `autoScaling`          | Auto Scaling Integration      |
// | `awsAppSync`          | AppSync Integration           |
// | `awsAthena`            | Athena Integration            |
// | `awsCognito`           | Cognito Integration           |
// | `awsConnect`           | Connect Integration           |
// | `awsDirectConnect`    | Direct Connect Integration    |
// | `awsFsx`               | FSx Integration               |
// | `awsGlue`              | Glue Integration              |
// | `awsKinesisAnalytics` | Kinesis Analytics Integration |
// | `awsMediaConvert`     | MediaConvert Integration      |
// | `awsMediaPackageVod` | Media Package VOD Integration |
// | `awsMq`                | MQ Integration                |
// | `awsMsk`               | MSK Integration               |
// | `awsNeptune`           | Neptune Integration           |
// | `awsQldb`              | QLDB Integration              |
// | `awsRoute53resolver`   | Route53 Resolver Integration  |
// | `awsStates`            | States Integration            |
// | `awsTransitGateway`   | Transit Gateway Integration   |
// | `awsWaf`               | WAF Integration               |
// | `awsWafv2`             | WAFv2 Integration             |
// | `billing`               | Billing Integration           |
// | `cloudfront`            | CloudFront Integration        |
// | `cloudtrail`            | CloudTrail Integration        |
// | `docDb`                | DocumentDB Integration        |
// | `dynamodb`              | DynamoDB Integration          |
// | `ebs`                   | EBS Integration               |
// | `ec2`                   | EC2 Integration               |
// | `ecs`                   | ECS Integration               |
// | `efs`                   | EFS Integration               |
// | `elasticache`           | ElastiCache Integration       |
// | `elasticbeanstalk`      | Elastic Beanstalk Integration |
// | `elasticsearch`         | Elasticsearch Integration     |
// | `elb`                   | ELB Integration               |
// | `emr`                   | EMR Integration               |
// | `health`                | Health Integration            |
// | `iam`                   | IAM Integration               |
// | `iot`                   | IoT Integration               |
// | `kinesis`               | Kinesis Integration           |
// | `kinesisFirehose`      | Kinesis Firehose Integration  |
// | `lambda`                | Lambda Integration            |
// | `rds`                   | RDS Integration               |
// | `redshift`              | Redshift Integration          |
// | `route53`               | Route53 Integration           |
// | `s3`                    | S3 Integration                |
// | `ses`                   | SES Integration               |
// | `sns`                   | SNS Integration               |
// | `sqs`                   | SQS Integration               |
// | `trustedAdvisor`       | Trusted Advisor Integration   |
// | `vpc`                   | VPC Integration               |
// | `xRay`                 | X-Ray Integration             |
//
// </details>
//
// ## Import
//
// Linked AWS account integrations can be imported using the `id`, e.g.
//
// bash
//
// ```sh
// $ pulumi import newrelic:cloud/awsIntegrations:AwsIntegrations foo <id>
// ```
type AwsIntegrations struct {
	pulumi.CustomResourceState

	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// AWS ALB. See Integration blocks below for details.
	Alb AwsIntegrationsAlbPtrOutput `pulumi:"alb"`
	// AWS API Gateway. See Integration blocks below for details.
	ApiGateway AwsIntegrationsApiGatewayPtrOutput `pulumi:"apiGateway"`
	// AWS Auto Scaling. See Integration blocks below for details.
	AutoScaling AwsIntegrationsAutoScalingPtrOutput `pulumi:"autoScaling"`
	// AWS AppSync. See Integration blocks below for details.
	AwsAppSync AwsIntegrationsAwsAppSyncPtrOutput `pulumi:"awsAppSync"`
	// AWS Athena. See Integration blocks below for details.
	AwsAthena AwsIntegrationsAwsAthenaPtrOutput `pulumi:"awsAthena"`
	// AWS Cognito. See Integration blocks below for details.
	AwsCognito AwsIntegrationsAwsCognitoPtrOutput `pulumi:"awsCognito"`
	// AWS Connect. See Integration blocks below for details.
	AwsConnect AwsIntegrationsAwsConnectPtrOutput `pulumi:"awsConnect"`
	// AWS Direct Connect. See Integration blocks below for details.
	AwsDirectConnect AwsIntegrationsAwsDirectConnectPtrOutput `pulumi:"awsDirectConnect"`
	// AWS FSx. See Integration blocks below for details.
	AwsFsx AwsIntegrationsAwsFsxPtrOutput `pulumi:"awsFsx"`
	// AWS Glue. See Integration blocks below for details.
	AwsGlue AwsIntegrationsAwsGluePtrOutput `pulumi:"awsGlue"`
	// AWS Kinesis Data Analytics. See Integration blocks below for details.
	AwsKinesisAnalytics AwsIntegrationsAwsKinesisAnalyticsPtrOutput `pulumi:"awsKinesisAnalytics"`
	// AWS Media Convert. See Integration blocks below for details.
	AwsMediaConvert AwsIntegrationsAwsMediaConvertPtrOutput `pulumi:"awsMediaConvert"`
	// AWS MediaPackage VOD. See Integration blocks below for details.
	AwsMediaPackageVod AwsIntegrationsAwsMediaPackageVodPtrOutput `pulumi:"awsMediaPackageVod"`
	// AWS MQ. See Integration blocks below for details.
	AwsMq AwsIntegrationsAwsMqPtrOutput `pulumi:"awsMq"`
	// Amazon Managed Kafka (MSK). See Integration blocks below for details.
	AwsMsk AwsIntegrationsAwsMskPtrOutput `pulumi:"awsMsk"`
	// AWS Neptune. See Integration blocks below for details.
	AwsNeptune AwsIntegrationsAwsNeptunePtrOutput `pulumi:"awsNeptune"`
	// Amazon QLDB. See Integration blocks below for details.
	AwsQldb AwsIntegrationsAwsQldbPtrOutput `pulumi:"awsQldb"`
	// AWS Route53 Resolver. See Integration blocks below for details.
	AwsRoute53resolver AwsIntegrationsAwsRoute53resolverPtrOutput `pulumi:"awsRoute53resolver"`
	// Aws states integration
	AwsStates AwsIntegrationsAwsStatesPtrOutput `pulumi:"awsStates"`
	// Amazon Transit Gateway. See Integration blocks below for details.
	AwsTransitGateway AwsIntegrationsAwsTransitGatewayPtrOutput `pulumi:"awsTransitGateway"`
	// AWS WAF. See Integration blocks below for details.
	AwsWaf AwsIntegrationsAwsWafPtrOutput `pulumi:"awsWaf"`
	// AWS WAF V2. See Integration blocks below for details.
	AwsWafv2 AwsIntegrationsAwsWafv2PtrOutput `pulumi:"awsWafv2"`
	// AWS Billing. See Integration blocks below for details.
	Billing AwsIntegrationsBillingPtrOutput `pulumi:"billing"`
	// AWS CloudFront. See Integration blocks below for details.
	Cloudfront AwsIntegrationsCloudfrontPtrOutput `pulumi:"cloudfront"`
	// AWS CloudTrail. See Integration blocks below for details.
	Cloudtrail AwsIntegrationsCloudtrailPtrOutput `pulumi:"cloudtrail"`
	// AWS DocumentDB. See Integration blocks below for details.
	DocDb AwsIntegrationsDocDbPtrOutput `pulumi:"docDb"`
	// Amazon DynamoDB. See Integration blocks below for details.
	Dynamodb AwsIntegrationsDynamodbPtrOutput `pulumi:"dynamodb"`
	// Amazon EBS. See Integration blocks below for details.
	Ebs AwsIntegrationsEbsPtrOutput `pulumi:"ebs"`
	// Amazon EC2. See Integration blocks below for details.
	Ec2 AwsIntegrationsEc2PtrOutput `pulumi:"ec2"`
	// Amazon ECS. See Integration blocks below for details.
	Ecs AwsIntegrationsEcsPtrOutput `pulumi:"ecs"`
	// Amazon EFS. See Integration blocks below for details.
	Efs AwsIntegrationsEfsPtrOutput `pulumi:"efs"`
	// AWS ElastiCache. See Integration blocks below for details.
	Elasticache AwsIntegrationsElasticachePtrOutput `pulumi:"elasticache"`
	// AWS Elastic Beanstalk. See Integration blocks below for details.
	Elasticbeanstalk AwsIntegrationsElasticbeanstalkPtrOutput `pulumi:"elasticbeanstalk"`
	// AWS ElasticSearch. See Integration blocks below for details.
	Elasticsearch AwsIntegrationsElasticsearchPtrOutput `pulumi:"elasticsearch"`
	// AWS ELB (Classic). See Integration blocks below for details.
	Elb AwsIntegrationsElbPtrOutput `pulumi:"elb"`
	// AWS EMR. See Integration blocks below for details.
	Emr AwsIntegrationsEmrPtrOutput `pulumi:"emr"`
	// AWS Health. See Integration blocks below for details.
	Health AwsIntegrationsHealthPtrOutput `pulumi:"health"`
	// AWS IAM. See Integration blocks below for details.
	Iam AwsIntegrationsIamPtrOutput `pulumi:"iam"`
	// AWS IoT. See Integration blocks below for details.
	Iot AwsIntegrationsIotPtrOutput `pulumi:"iot"`
	// AWS Kinesis. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Kinesis AwsIntegrationsKinesisPtrOutput `pulumi:"kinesis"`
	// Amazon Kinesis Data Firehose. See Integration blocks below for details.
	KinesisFirehose AwsIntegrationsKinesisFirehosePtrOutput `pulumi:"kinesisFirehose"`
	// AWS Lambda. See Integration blocks below for details.
	Lambda AwsIntegrationsLambdaPtrOutput `pulumi:"lambda"`
	// The ID of the linked AWS account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	LinkedAccountId pulumi.StringOutput `pulumi:"linkedAccountId"`
	// Amazon RDS. See Integration blocks below for details.
	Rds AwsIntegrationsRdsPtrOutput `pulumi:"rds"`
	// Amazon Redshift. See Integration blocks below for details.
	Redshift AwsIntegrationsRedshiftPtrOutput `pulumi:"redshift"`
	// Amazon Route 53. See Integration blocks below for details.
	Route53 AwsIntegrationsRoute53PtrOutput `pulumi:"route53"`
	// Amazon S3. See Integration blocks below for details.
	S3 AwsIntegrationsS3PtrOutput `pulumi:"s3"`
	// Amazon SES. See Integration blocks below for details.
	Ses AwsIntegrationsSesPtrOutput `pulumi:"ses"`
	// AWS SNS. See Integration blocks below for details.
	Sns AwsIntegrationsSnsPtrOutput `pulumi:"sns"`
	// AWS SQS. See Integration blocks below for details.
	Sqs AwsIntegrationsSqsPtrOutput `pulumi:"sqs"`
	// AWS Trusted Advisor. See Integration blocks below for details.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	TrustedAdvisor AwsIntegrationsTrustedAdvisorPtrOutput `pulumi:"trustedAdvisor"`
	// VPC integration
	Vpc AwsIntegrationsVpcPtrOutput `pulumi:"vpc"`
	// AWS X-Ray. See Integration blocks below for details.
	// x
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 900 seconds.
	XRay AwsIntegrationsXRayPtrOutput `pulumi:"xRay"`
}

// NewAwsIntegrations registers a new resource with the given unique name, arguments, and options.
func NewAwsIntegrations(ctx *pulumi.Context,
	name string, args *AwsIntegrationsArgs, opts ...pulumi.ResourceOption) (*AwsIntegrations, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LinkedAccountId == nil {
		return nil, errors.New("invalid value for required argument 'LinkedAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AwsIntegrations
	err := ctx.RegisterResource("newrelic:cloud/awsIntegrations:AwsIntegrations", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsIntegrations gets an existing AwsIntegrations resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsIntegrations(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsIntegrationsState, opts ...pulumi.ResourceOption) (*AwsIntegrations, error) {
	var resource AwsIntegrations
	err := ctx.ReadResource("newrelic:cloud/awsIntegrations:AwsIntegrations", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsIntegrations resources.
type awsIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *string `pulumi:"accountId"`
	// AWS ALB. See Integration blocks below for details.
	Alb *AwsIntegrationsAlb `pulumi:"alb"`
	// AWS API Gateway. See Integration blocks below for details.
	ApiGateway *AwsIntegrationsApiGateway `pulumi:"apiGateway"`
	// AWS Auto Scaling. See Integration blocks below for details.
	AutoScaling *AwsIntegrationsAutoScaling `pulumi:"autoScaling"`
	// AWS AppSync. See Integration blocks below for details.
	AwsAppSync *AwsIntegrationsAwsAppSync `pulumi:"awsAppSync"`
	// AWS Athena. See Integration blocks below for details.
	AwsAthena *AwsIntegrationsAwsAthena `pulumi:"awsAthena"`
	// AWS Cognito. See Integration blocks below for details.
	AwsCognito *AwsIntegrationsAwsCognito `pulumi:"awsCognito"`
	// AWS Connect. See Integration blocks below for details.
	AwsConnect *AwsIntegrationsAwsConnect `pulumi:"awsConnect"`
	// AWS Direct Connect. See Integration blocks below for details.
	AwsDirectConnect *AwsIntegrationsAwsDirectConnect `pulumi:"awsDirectConnect"`
	// AWS FSx. See Integration blocks below for details.
	AwsFsx *AwsIntegrationsAwsFsx `pulumi:"awsFsx"`
	// AWS Glue. See Integration blocks below for details.
	AwsGlue *AwsIntegrationsAwsGlue `pulumi:"awsGlue"`
	// AWS Kinesis Data Analytics. See Integration blocks below for details.
	AwsKinesisAnalytics *AwsIntegrationsAwsKinesisAnalytics `pulumi:"awsKinesisAnalytics"`
	// AWS Media Convert. See Integration blocks below for details.
	AwsMediaConvert *AwsIntegrationsAwsMediaConvert `pulumi:"awsMediaConvert"`
	// AWS MediaPackage VOD. See Integration blocks below for details.
	AwsMediaPackageVod *AwsIntegrationsAwsMediaPackageVod `pulumi:"awsMediaPackageVod"`
	// AWS MQ. See Integration blocks below for details.
	AwsMq *AwsIntegrationsAwsMq `pulumi:"awsMq"`
	// Amazon Managed Kafka (MSK). See Integration blocks below for details.
	AwsMsk *AwsIntegrationsAwsMsk `pulumi:"awsMsk"`
	// AWS Neptune. See Integration blocks below for details.
	AwsNeptune *AwsIntegrationsAwsNeptune `pulumi:"awsNeptune"`
	// Amazon QLDB. See Integration blocks below for details.
	AwsQldb *AwsIntegrationsAwsQldb `pulumi:"awsQldb"`
	// AWS Route53 Resolver. See Integration blocks below for details.
	AwsRoute53resolver *AwsIntegrationsAwsRoute53resolver `pulumi:"awsRoute53resolver"`
	// Aws states integration
	AwsStates *AwsIntegrationsAwsStates `pulumi:"awsStates"`
	// Amazon Transit Gateway. See Integration blocks below for details.
	AwsTransitGateway *AwsIntegrationsAwsTransitGateway `pulumi:"awsTransitGateway"`
	// AWS WAF. See Integration blocks below for details.
	AwsWaf *AwsIntegrationsAwsWaf `pulumi:"awsWaf"`
	// AWS WAF V2. See Integration blocks below for details.
	AwsWafv2 *AwsIntegrationsAwsWafv2 `pulumi:"awsWafv2"`
	// AWS Billing. See Integration blocks below for details.
	Billing *AwsIntegrationsBilling `pulumi:"billing"`
	// AWS CloudFront. See Integration blocks below for details.
	Cloudfront *AwsIntegrationsCloudfront `pulumi:"cloudfront"`
	// AWS CloudTrail. See Integration blocks below for details.
	Cloudtrail *AwsIntegrationsCloudtrail `pulumi:"cloudtrail"`
	// AWS DocumentDB. See Integration blocks below for details.
	DocDb *AwsIntegrationsDocDb `pulumi:"docDb"`
	// Amazon DynamoDB. See Integration blocks below for details.
	Dynamodb *AwsIntegrationsDynamodb `pulumi:"dynamodb"`
	// Amazon EBS. See Integration blocks below for details.
	Ebs *AwsIntegrationsEbs `pulumi:"ebs"`
	// Amazon EC2. See Integration blocks below for details.
	Ec2 *AwsIntegrationsEc2 `pulumi:"ec2"`
	// Amazon ECS. See Integration blocks below for details.
	Ecs *AwsIntegrationsEcs `pulumi:"ecs"`
	// Amazon EFS. See Integration blocks below for details.
	Efs *AwsIntegrationsEfs `pulumi:"efs"`
	// AWS ElastiCache. See Integration blocks below for details.
	Elasticache *AwsIntegrationsElasticache `pulumi:"elasticache"`
	// AWS Elastic Beanstalk. See Integration blocks below for details.
	Elasticbeanstalk *AwsIntegrationsElasticbeanstalk `pulumi:"elasticbeanstalk"`
	// AWS ElasticSearch. See Integration blocks below for details.
	Elasticsearch *AwsIntegrationsElasticsearch `pulumi:"elasticsearch"`
	// AWS ELB (Classic). See Integration blocks below for details.
	Elb *AwsIntegrationsElb `pulumi:"elb"`
	// AWS EMR. See Integration blocks below for details.
	Emr *AwsIntegrationsEmr `pulumi:"emr"`
	// AWS Health. See Integration blocks below for details.
	Health *AwsIntegrationsHealth `pulumi:"health"`
	// AWS IAM. See Integration blocks below for details.
	Iam *AwsIntegrationsIam `pulumi:"iam"`
	// AWS IoT. See Integration blocks below for details.
	Iot *AwsIntegrationsIot `pulumi:"iot"`
	// AWS Kinesis. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Kinesis *AwsIntegrationsKinesis `pulumi:"kinesis"`
	// Amazon Kinesis Data Firehose. See Integration blocks below for details.
	KinesisFirehose *AwsIntegrationsKinesisFirehose `pulumi:"kinesisFirehose"`
	// AWS Lambda. See Integration blocks below for details.
	Lambda *AwsIntegrationsLambda `pulumi:"lambda"`
	// The ID of the linked AWS account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	LinkedAccountId *string `pulumi:"linkedAccountId"`
	// Amazon RDS. See Integration blocks below for details.
	Rds *AwsIntegrationsRds `pulumi:"rds"`
	// Amazon Redshift. See Integration blocks below for details.
	Redshift *AwsIntegrationsRedshift `pulumi:"redshift"`
	// Amazon Route 53. See Integration blocks below for details.
	Route53 *AwsIntegrationsRoute53 `pulumi:"route53"`
	// Amazon S3. See Integration blocks below for details.
	S3 *AwsIntegrationsS3 `pulumi:"s3"`
	// Amazon SES. See Integration blocks below for details.
	Ses *AwsIntegrationsSes `pulumi:"ses"`
	// AWS SNS. See Integration blocks below for details.
	Sns *AwsIntegrationsSns `pulumi:"sns"`
	// AWS SQS. See Integration blocks below for details.
	Sqs *AwsIntegrationsSqs `pulumi:"sqs"`
	// AWS Trusted Advisor. See Integration blocks below for details.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	TrustedAdvisor *AwsIntegrationsTrustedAdvisor `pulumi:"trustedAdvisor"`
	// VPC integration
	Vpc *AwsIntegrationsVpc `pulumi:"vpc"`
	// AWS X-Ray. See Integration blocks below for details.
	// x
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 900 seconds.
	XRay *AwsIntegrationsXRay `pulumi:"xRay"`
}

type AwsIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.StringPtrInput
	// AWS ALB. See Integration blocks below for details.
	Alb AwsIntegrationsAlbPtrInput
	// AWS API Gateway. See Integration blocks below for details.
	ApiGateway AwsIntegrationsApiGatewayPtrInput
	// AWS Auto Scaling. See Integration blocks below for details.
	AutoScaling AwsIntegrationsAutoScalingPtrInput
	// AWS AppSync. See Integration blocks below for details.
	AwsAppSync AwsIntegrationsAwsAppSyncPtrInput
	// AWS Athena. See Integration blocks below for details.
	AwsAthena AwsIntegrationsAwsAthenaPtrInput
	// AWS Cognito. See Integration blocks below for details.
	AwsCognito AwsIntegrationsAwsCognitoPtrInput
	// AWS Connect. See Integration blocks below for details.
	AwsConnect AwsIntegrationsAwsConnectPtrInput
	// AWS Direct Connect. See Integration blocks below for details.
	AwsDirectConnect AwsIntegrationsAwsDirectConnectPtrInput
	// AWS FSx. See Integration blocks below for details.
	AwsFsx AwsIntegrationsAwsFsxPtrInput
	// AWS Glue. See Integration blocks below for details.
	AwsGlue AwsIntegrationsAwsGluePtrInput
	// AWS Kinesis Data Analytics. See Integration blocks below for details.
	AwsKinesisAnalytics AwsIntegrationsAwsKinesisAnalyticsPtrInput
	// AWS Media Convert. See Integration blocks below for details.
	AwsMediaConvert AwsIntegrationsAwsMediaConvertPtrInput
	// AWS MediaPackage VOD. See Integration blocks below for details.
	AwsMediaPackageVod AwsIntegrationsAwsMediaPackageVodPtrInput
	// AWS MQ. See Integration blocks below for details.
	AwsMq AwsIntegrationsAwsMqPtrInput
	// Amazon Managed Kafka (MSK). See Integration blocks below for details.
	AwsMsk AwsIntegrationsAwsMskPtrInput
	// AWS Neptune. See Integration blocks below for details.
	AwsNeptune AwsIntegrationsAwsNeptunePtrInput
	// Amazon QLDB. See Integration blocks below for details.
	AwsQldb AwsIntegrationsAwsQldbPtrInput
	// AWS Route53 Resolver. See Integration blocks below for details.
	AwsRoute53resolver AwsIntegrationsAwsRoute53resolverPtrInput
	// Aws states integration
	AwsStates AwsIntegrationsAwsStatesPtrInput
	// Amazon Transit Gateway. See Integration blocks below for details.
	AwsTransitGateway AwsIntegrationsAwsTransitGatewayPtrInput
	// AWS WAF. See Integration blocks below for details.
	AwsWaf AwsIntegrationsAwsWafPtrInput
	// AWS WAF V2. See Integration blocks below for details.
	AwsWafv2 AwsIntegrationsAwsWafv2PtrInput
	// AWS Billing. See Integration blocks below for details.
	Billing AwsIntegrationsBillingPtrInput
	// AWS CloudFront. See Integration blocks below for details.
	Cloudfront AwsIntegrationsCloudfrontPtrInput
	// AWS CloudTrail. See Integration blocks below for details.
	Cloudtrail AwsIntegrationsCloudtrailPtrInput
	// AWS DocumentDB. See Integration blocks below for details.
	DocDb AwsIntegrationsDocDbPtrInput
	// Amazon DynamoDB. See Integration blocks below for details.
	Dynamodb AwsIntegrationsDynamodbPtrInput
	// Amazon EBS. See Integration blocks below for details.
	Ebs AwsIntegrationsEbsPtrInput
	// Amazon EC2. See Integration blocks below for details.
	Ec2 AwsIntegrationsEc2PtrInput
	// Amazon ECS. See Integration blocks below for details.
	Ecs AwsIntegrationsEcsPtrInput
	// Amazon EFS. See Integration blocks below for details.
	Efs AwsIntegrationsEfsPtrInput
	// AWS ElastiCache. See Integration blocks below for details.
	Elasticache AwsIntegrationsElasticachePtrInput
	// AWS Elastic Beanstalk. See Integration blocks below for details.
	Elasticbeanstalk AwsIntegrationsElasticbeanstalkPtrInput
	// AWS ElasticSearch. See Integration blocks below for details.
	Elasticsearch AwsIntegrationsElasticsearchPtrInput
	// AWS ELB (Classic). See Integration blocks below for details.
	Elb AwsIntegrationsElbPtrInput
	// AWS EMR. See Integration blocks below for details.
	Emr AwsIntegrationsEmrPtrInput
	// AWS Health. See Integration blocks below for details.
	Health AwsIntegrationsHealthPtrInput
	// AWS IAM. See Integration blocks below for details.
	Iam AwsIntegrationsIamPtrInput
	// AWS IoT. See Integration blocks below for details.
	Iot AwsIntegrationsIotPtrInput
	// AWS Kinesis. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Kinesis AwsIntegrationsKinesisPtrInput
	// Amazon Kinesis Data Firehose. See Integration blocks below for details.
	KinesisFirehose AwsIntegrationsKinesisFirehosePtrInput
	// AWS Lambda. See Integration blocks below for details.
	Lambda AwsIntegrationsLambdaPtrInput
	// The ID of the linked AWS account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	LinkedAccountId pulumi.StringPtrInput
	// Amazon RDS. See Integration blocks below for details.
	Rds AwsIntegrationsRdsPtrInput
	// Amazon Redshift. See Integration blocks below for details.
	Redshift AwsIntegrationsRedshiftPtrInput
	// Amazon Route 53. See Integration blocks below for details.
	Route53 AwsIntegrationsRoute53PtrInput
	// Amazon S3. See Integration blocks below for details.
	S3 AwsIntegrationsS3PtrInput
	// Amazon SES. See Integration blocks below for details.
	Ses AwsIntegrationsSesPtrInput
	// AWS SNS. See Integration blocks below for details.
	Sns AwsIntegrationsSnsPtrInput
	// AWS SQS. See Integration blocks below for details.
	Sqs AwsIntegrationsSqsPtrInput
	// AWS Trusted Advisor. See Integration blocks below for details.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	TrustedAdvisor AwsIntegrationsTrustedAdvisorPtrInput
	// VPC integration
	Vpc AwsIntegrationsVpcPtrInput
	// AWS X-Ray. See Integration blocks below for details.
	// x
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 900 seconds.
	XRay AwsIntegrationsXRayPtrInput
}

func (AwsIntegrationsState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsIntegrationsState)(nil)).Elem()
}

type awsIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *string `pulumi:"accountId"`
	// AWS ALB. See Integration blocks below for details.
	Alb *AwsIntegrationsAlb `pulumi:"alb"`
	// AWS API Gateway. See Integration blocks below for details.
	ApiGateway *AwsIntegrationsApiGateway `pulumi:"apiGateway"`
	// AWS Auto Scaling. See Integration blocks below for details.
	AutoScaling *AwsIntegrationsAutoScaling `pulumi:"autoScaling"`
	// AWS AppSync. See Integration blocks below for details.
	AwsAppSync *AwsIntegrationsAwsAppSync `pulumi:"awsAppSync"`
	// AWS Athena. See Integration blocks below for details.
	AwsAthena *AwsIntegrationsAwsAthena `pulumi:"awsAthena"`
	// AWS Cognito. See Integration blocks below for details.
	AwsCognito *AwsIntegrationsAwsCognito `pulumi:"awsCognito"`
	// AWS Connect. See Integration blocks below for details.
	AwsConnect *AwsIntegrationsAwsConnect `pulumi:"awsConnect"`
	// AWS Direct Connect. See Integration blocks below for details.
	AwsDirectConnect *AwsIntegrationsAwsDirectConnect `pulumi:"awsDirectConnect"`
	// AWS FSx. See Integration blocks below for details.
	AwsFsx *AwsIntegrationsAwsFsx `pulumi:"awsFsx"`
	// AWS Glue. See Integration blocks below for details.
	AwsGlue *AwsIntegrationsAwsGlue `pulumi:"awsGlue"`
	// AWS Kinesis Data Analytics. See Integration blocks below for details.
	AwsKinesisAnalytics *AwsIntegrationsAwsKinesisAnalytics `pulumi:"awsKinesisAnalytics"`
	// AWS Media Convert. See Integration blocks below for details.
	AwsMediaConvert *AwsIntegrationsAwsMediaConvert `pulumi:"awsMediaConvert"`
	// AWS MediaPackage VOD. See Integration blocks below for details.
	AwsMediaPackageVod *AwsIntegrationsAwsMediaPackageVod `pulumi:"awsMediaPackageVod"`
	// AWS MQ. See Integration blocks below for details.
	AwsMq *AwsIntegrationsAwsMq `pulumi:"awsMq"`
	// Amazon Managed Kafka (MSK). See Integration blocks below for details.
	AwsMsk *AwsIntegrationsAwsMsk `pulumi:"awsMsk"`
	// AWS Neptune. See Integration blocks below for details.
	AwsNeptune *AwsIntegrationsAwsNeptune `pulumi:"awsNeptune"`
	// Amazon QLDB. See Integration blocks below for details.
	AwsQldb *AwsIntegrationsAwsQldb `pulumi:"awsQldb"`
	// AWS Route53 Resolver. See Integration blocks below for details.
	AwsRoute53resolver *AwsIntegrationsAwsRoute53resolver `pulumi:"awsRoute53resolver"`
	// Aws states integration
	AwsStates *AwsIntegrationsAwsStates `pulumi:"awsStates"`
	// Amazon Transit Gateway. See Integration blocks below for details.
	AwsTransitGateway *AwsIntegrationsAwsTransitGateway `pulumi:"awsTransitGateway"`
	// AWS WAF. See Integration blocks below for details.
	AwsWaf *AwsIntegrationsAwsWaf `pulumi:"awsWaf"`
	// AWS WAF V2. See Integration blocks below for details.
	AwsWafv2 *AwsIntegrationsAwsWafv2 `pulumi:"awsWafv2"`
	// AWS Billing. See Integration blocks below for details.
	Billing *AwsIntegrationsBilling `pulumi:"billing"`
	// AWS CloudFront. See Integration blocks below for details.
	Cloudfront *AwsIntegrationsCloudfront `pulumi:"cloudfront"`
	// AWS CloudTrail. See Integration blocks below for details.
	Cloudtrail *AwsIntegrationsCloudtrail `pulumi:"cloudtrail"`
	// AWS DocumentDB. See Integration blocks below for details.
	DocDb *AwsIntegrationsDocDb `pulumi:"docDb"`
	// Amazon DynamoDB. See Integration blocks below for details.
	Dynamodb *AwsIntegrationsDynamodb `pulumi:"dynamodb"`
	// Amazon EBS. See Integration blocks below for details.
	Ebs *AwsIntegrationsEbs `pulumi:"ebs"`
	// Amazon EC2. See Integration blocks below for details.
	Ec2 *AwsIntegrationsEc2 `pulumi:"ec2"`
	// Amazon ECS. See Integration blocks below for details.
	Ecs *AwsIntegrationsEcs `pulumi:"ecs"`
	// Amazon EFS. See Integration blocks below for details.
	Efs *AwsIntegrationsEfs `pulumi:"efs"`
	// AWS ElastiCache. See Integration blocks below for details.
	Elasticache *AwsIntegrationsElasticache `pulumi:"elasticache"`
	// AWS Elastic Beanstalk. See Integration blocks below for details.
	Elasticbeanstalk *AwsIntegrationsElasticbeanstalk `pulumi:"elasticbeanstalk"`
	// AWS ElasticSearch. See Integration blocks below for details.
	Elasticsearch *AwsIntegrationsElasticsearch `pulumi:"elasticsearch"`
	// AWS ELB (Classic). See Integration blocks below for details.
	Elb *AwsIntegrationsElb `pulumi:"elb"`
	// AWS EMR. See Integration blocks below for details.
	Emr *AwsIntegrationsEmr `pulumi:"emr"`
	// AWS Health. See Integration blocks below for details.
	Health *AwsIntegrationsHealth `pulumi:"health"`
	// AWS IAM. See Integration blocks below for details.
	Iam *AwsIntegrationsIam `pulumi:"iam"`
	// AWS IoT. See Integration blocks below for details.
	Iot *AwsIntegrationsIot `pulumi:"iot"`
	// AWS Kinesis. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Kinesis *AwsIntegrationsKinesis `pulumi:"kinesis"`
	// Amazon Kinesis Data Firehose. See Integration blocks below for details.
	KinesisFirehose *AwsIntegrationsKinesisFirehose `pulumi:"kinesisFirehose"`
	// AWS Lambda. See Integration blocks below for details.
	Lambda *AwsIntegrationsLambda `pulumi:"lambda"`
	// The ID of the linked AWS account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	LinkedAccountId string `pulumi:"linkedAccountId"`
	// Amazon RDS. See Integration blocks below for details.
	Rds *AwsIntegrationsRds `pulumi:"rds"`
	// Amazon Redshift. See Integration blocks below for details.
	Redshift *AwsIntegrationsRedshift `pulumi:"redshift"`
	// Amazon Route 53. See Integration blocks below for details.
	Route53 *AwsIntegrationsRoute53 `pulumi:"route53"`
	// Amazon S3. See Integration blocks below for details.
	S3 *AwsIntegrationsS3 `pulumi:"s3"`
	// Amazon SES. See Integration blocks below for details.
	Ses *AwsIntegrationsSes `pulumi:"ses"`
	// AWS SNS. See Integration blocks below for details.
	Sns *AwsIntegrationsSns `pulumi:"sns"`
	// AWS SQS. See Integration blocks below for details.
	Sqs *AwsIntegrationsSqs `pulumi:"sqs"`
	// AWS Trusted Advisor. See Integration blocks below for details.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	TrustedAdvisor *AwsIntegrationsTrustedAdvisor `pulumi:"trustedAdvisor"`
	// VPC integration
	Vpc *AwsIntegrationsVpc `pulumi:"vpc"`
	// AWS X-Ray. See Integration blocks below for details.
	// x
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 900 seconds.
	XRay *AwsIntegrationsXRay `pulumi:"xRay"`
}

// The set of arguments for constructing a AwsIntegrations resource.
type AwsIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.StringPtrInput
	// AWS ALB. See Integration blocks below for details.
	Alb AwsIntegrationsAlbPtrInput
	// AWS API Gateway. See Integration blocks below for details.
	ApiGateway AwsIntegrationsApiGatewayPtrInput
	// AWS Auto Scaling. See Integration blocks below for details.
	AutoScaling AwsIntegrationsAutoScalingPtrInput
	// AWS AppSync. See Integration blocks below for details.
	AwsAppSync AwsIntegrationsAwsAppSyncPtrInput
	// AWS Athena. See Integration blocks below for details.
	AwsAthena AwsIntegrationsAwsAthenaPtrInput
	// AWS Cognito. See Integration blocks below for details.
	AwsCognito AwsIntegrationsAwsCognitoPtrInput
	// AWS Connect. See Integration blocks below for details.
	AwsConnect AwsIntegrationsAwsConnectPtrInput
	// AWS Direct Connect. See Integration blocks below for details.
	AwsDirectConnect AwsIntegrationsAwsDirectConnectPtrInput
	// AWS FSx. See Integration blocks below for details.
	AwsFsx AwsIntegrationsAwsFsxPtrInput
	// AWS Glue. See Integration blocks below for details.
	AwsGlue AwsIntegrationsAwsGluePtrInput
	// AWS Kinesis Data Analytics. See Integration blocks below for details.
	AwsKinesisAnalytics AwsIntegrationsAwsKinesisAnalyticsPtrInput
	// AWS Media Convert. See Integration blocks below for details.
	AwsMediaConvert AwsIntegrationsAwsMediaConvertPtrInput
	// AWS MediaPackage VOD. See Integration blocks below for details.
	AwsMediaPackageVod AwsIntegrationsAwsMediaPackageVodPtrInput
	// AWS MQ. See Integration blocks below for details.
	AwsMq AwsIntegrationsAwsMqPtrInput
	// Amazon Managed Kafka (MSK). See Integration blocks below for details.
	AwsMsk AwsIntegrationsAwsMskPtrInput
	// AWS Neptune. See Integration blocks below for details.
	AwsNeptune AwsIntegrationsAwsNeptunePtrInput
	// Amazon QLDB. See Integration blocks below for details.
	AwsQldb AwsIntegrationsAwsQldbPtrInput
	// AWS Route53 Resolver. See Integration blocks below for details.
	AwsRoute53resolver AwsIntegrationsAwsRoute53resolverPtrInput
	// Aws states integration
	AwsStates AwsIntegrationsAwsStatesPtrInput
	// Amazon Transit Gateway. See Integration blocks below for details.
	AwsTransitGateway AwsIntegrationsAwsTransitGatewayPtrInput
	// AWS WAF. See Integration blocks below for details.
	AwsWaf AwsIntegrationsAwsWafPtrInput
	// AWS WAF V2. See Integration blocks below for details.
	AwsWafv2 AwsIntegrationsAwsWafv2PtrInput
	// AWS Billing. See Integration blocks below for details.
	Billing AwsIntegrationsBillingPtrInput
	// AWS CloudFront. See Integration blocks below for details.
	Cloudfront AwsIntegrationsCloudfrontPtrInput
	// AWS CloudTrail. See Integration blocks below for details.
	Cloudtrail AwsIntegrationsCloudtrailPtrInput
	// AWS DocumentDB. See Integration blocks below for details.
	DocDb AwsIntegrationsDocDbPtrInput
	// Amazon DynamoDB. See Integration blocks below for details.
	Dynamodb AwsIntegrationsDynamodbPtrInput
	// Amazon EBS. See Integration blocks below for details.
	Ebs AwsIntegrationsEbsPtrInput
	// Amazon EC2. See Integration blocks below for details.
	Ec2 AwsIntegrationsEc2PtrInput
	// Amazon ECS. See Integration blocks below for details.
	Ecs AwsIntegrationsEcsPtrInput
	// Amazon EFS. See Integration blocks below for details.
	Efs AwsIntegrationsEfsPtrInput
	// AWS ElastiCache. See Integration blocks below for details.
	Elasticache AwsIntegrationsElasticachePtrInput
	// AWS Elastic Beanstalk. See Integration blocks below for details.
	Elasticbeanstalk AwsIntegrationsElasticbeanstalkPtrInput
	// AWS ElasticSearch. See Integration blocks below for details.
	Elasticsearch AwsIntegrationsElasticsearchPtrInput
	// AWS ELB (Classic). See Integration blocks below for details.
	Elb AwsIntegrationsElbPtrInput
	// AWS EMR. See Integration blocks below for details.
	Emr AwsIntegrationsEmrPtrInput
	// AWS Health. See Integration blocks below for details.
	Health AwsIntegrationsHealthPtrInput
	// AWS IAM. See Integration blocks below for details.
	Iam AwsIntegrationsIamPtrInput
	// AWS IoT. See Integration blocks below for details.
	Iot AwsIntegrationsIotPtrInput
	// AWS Kinesis. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Kinesis AwsIntegrationsKinesisPtrInput
	// Amazon Kinesis Data Firehose. See Integration blocks below for details.
	KinesisFirehose AwsIntegrationsKinesisFirehosePtrInput
	// AWS Lambda. See Integration blocks below for details.
	Lambda AwsIntegrationsLambdaPtrInput
	// The ID of the linked AWS account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	LinkedAccountId pulumi.StringInput
	// Amazon RDS. See Integration blocks below for details.
	Rds AwsIntegrationsRdsPtrInput
	// Amazon Redshift. See Integration blocks below for details.
	Redshift AwsIntegrationsRedshiftPtrInput
	// Amazon Route 53. See Integration blocks below for details.
	Route53 AwsIntegrationsRoute53PtrInput
	// Amazon S3. See Integration blocks below for details.
	S3 AwsIntegrationsS3PtrInput
	// Amazon SES. See Integration blocks below for details.
	Ses AwsIntegrationsSesPtrInput
	// AWS SNS. See Integration blocks below for details.
	Sns AwsIntegrationsSnsPtrInput
	// AWS SQS. See Integration blocks below for details.
	Sqs AwsIntegrationsSqsPtrInput
	// AWS Trusted Advisor. See Integration blocks below for details.
	//
	// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
	TrustedAdvisor AwsIntegrationsTrustedAdvisorPtrInput
	// VPC integration
	Vpc AwsIntegrationsVpcPtrInput
	// AWS X-Ray. See Integration blocks below for details.
	// x
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 900 seconds.
	XRay AwsIntegrationsXRayPtrInput
}

func (AwsIntegrationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsIntegrationsArgs)(nil)).Elem()
}

type AwsIntegrationsInput interface {
	pulumi.Input

	ToAwsIntegrationsOutput() AwsIntegrationsOutput
	ToAwsIntegrationsOutputWithContext(ctx context.Context) AwsIntegrationsOutput
}

func (*AwsIntegrations) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsIntegrations)(nil)).Elem()
}

func (i *AwsIntegrations) ToAwsIntegrationsOutput() AwsIntegrationsOutput {
	return i.ToAwsIntegrationsOutputWithContext(context.Background())
}

func (i *AwsIntegrations) ToAwsIntegrationsOutputWithContext(ctx context.Context) AwsIntegrationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIntegrationsOutput)
}

// AwsIntegrationsArrayInput is an input type that accepts AwsIntegrationsArray and AwsIntegrationsArrayOutput values.
// You can construct a concrete instance of `AwsIntegrationsArrayInput` via:
//
//	AwsIntegrationsArray{ AwsIntegrationsArgs{...} }
type AwsIntegrationsArrayInput interface {
	pulumi.Input

	ToAwsIntegrationsArrayOutput() AwsIntegrationsArrayOutput
	ToAwsIntegrationsArrayOutputWithContext(context.Context) AwsIntegrationsArrayOutput
}

type AwsIntegrationsArray []AwsIntegrationsInput

func (AwsIntegrationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsIntegrations)(nil)).Elem()
}

func (i AwsIntegrationsArray) ToAwsIntegrationsArrayOutput() AwsIntegrationsArrayOutput {
	return i.ToAwsIntegrationsArrayOutputWithContext(context.Background())
}

func (i AwsIntegrationsArray) ToAwsIntegrationsArrayOutputWithContext(ctx context.Context) AwsIntegrationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIntegrationsArrayOutput)
}

// AwsIntegrationsMapInput is an input type that accepts AwsIntegrationsMap and AwsIntegrationsMapOutput values.
// You can construct a concrete instance of `AwsIntegrationsMapInput` via:
//
//	AwsIntegrationsMap{ "key": AwsIntegrationsArgs{...} }
type AwsIntegrationsMapInput interface {
	pulumi.Input

	ToAwsIntegrationsMapOutput() AwsIntegrationsMapOutput
	ToAwsIntegrationsMapOutputWithContext(context.Context) AwsIntegrationsMapOutput
}

type AwsIntegrationsMap map[string]AwsIntegrationsInput

func (AwsIntegrationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsIntegrations)(nil)).Elem()
}

func (i AwsIntegrationsMap) ToAwsIntegrationsMapOutput() AwsIntegrationsMapOutput {
	return i.ToAwsIntegrationsMapOutputWithContext(context.Background())
}

func (i AwsIntegrationsMap) ToAwsIntegrationsMapOutputWithContext(ctx context.Context) AwsIntegrationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsIntegrationsMapOutput)
}

type AwsIntegrationsOutput struct{ *pulumi.OutputState }

func (AwsIntegrationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsIntegrations)(nil)).Elem()
}

func (o AwsIntegrationsOutput) ToAwsIntegrationsOutput() AwsIntegrationsOutput {
	return o
}

func (o AwsIntegrationsOutput) ToAwsIntegrationsOutputWithContext(ctx context.Context) AwsIntegrationsOutput {
	return o
}

// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
func (o AwsIntegrationsOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsIntegrations) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// AWS ALB. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Alb() AwsIntegrationsAlbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAlbPtrOutput { return v.Alb }).(AwsIntegrationsAlbPtrOutput)
}

// AWS API Gateway. See Integration blocks below for details.
func (o AwsIntegrationsOutput) ApiGateway() AwsIntegrationsApiGatewayPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsApiGatewayPtrOutput { return v.ApiGateway }).(AwsIntegrationsApiGatewayPtrOutput)
}

// AWS Auto Scaling. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AutoScaling() AwsIntegrationsAutoScalingPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAutoScalingPtrOutput { return v.AutoScaling }).(AwsIntegrationsAutoScalingPtrOutput)
}

// AWS AppSync. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsAppSync() AwsIntegrationsAwsAppSyncPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsAppSyncPtrOutput { return v.AwsAppSync }).(AwsIntegrationsAwsAppSyncPtrOutput)
}

// AWS Athena. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsAthena() AwsIntegrationsAwsAthenaPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsAthenaPtrOutput { return v.AwsAthena }).(AwsIntegrationsAwsAthenaPtrOutput)
}

// AWS Cognito. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsCognito() AwsIntegrationsAwsCognitoPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsCognitoPtrOutput { return v.AwsCognito }).(AwsIntegrationsAwsCognitoPtrOutput)
}

// AWS Connect. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsConnect() AwsIntegrationsAwsConnectPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsConnectPtrOutput { return v.AwsConnect }).(AwsIntegrationsAwsConnectPtrOutput)
}

// AWS Direct Connect. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsDirectConnect() AwsIntegrationsAwsDirectConnectPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsDirectConnectPtrOutput { return v.AwsDirectConnect }).(AwsIntegrationsAwsDirectConnectPtrOutput)
}

// AWS FSx. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsFsx() AwsIntegrationsAwsFsxPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsFsxPtrOutput { return v.AwsFsx }).(AwsIntegrationsAwsFsxPtrOutput)
}

// AWS Glue. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsGlue() AwsIntegrationsAwsGluePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsGluePtrOutput { return v.AwsGlue }).(AwsIntegrationsAwsGluePtrOutput)
}

// AWS Kinesis Data Analytics. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsKinesisAnalytics() AwsIntegrationsAwsKinesisAnalyticsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsKinesisAnalyticsPtrOutput { return v.AwsKinesisAnalytics }).(AwsIntegrationsAwsKinesisAnalyticsPtrOutput)
}

// AWS Media Convert. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsMediaConvert() AwsIntegrationsAwsMediaConvertPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMediaConvertPtrOutput { return v.AwsMediaConvert }).(AwsIntegrationsAwsMediaConvertPtrOutput)
}

// AWS MediaPackage VOD. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsMediaPackageVod() AwsIntegrationsAwsMediaPackageVodPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMediaPackageVodPtrOutput { return v.AwsMediaPackageVod }).(AwsIntegrationsAwsMediaPackageVodPtrOutput)
}

// AWS MQ. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsMq() AwsIntegrationsAwsMqPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMqPtrOutput { return v.AwsMq }).(AwsIntegrationsAwsMqPtrOutput)
}

// Amazon Managed Kafka (MSK). See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsMsk() AwsIntegrationsAwsMskPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsMskPtrOutput { return v.AwsMsk }).(AwsIntegrationsAwsMskPtrOutput)
}

// AWS Neptune. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsNeptune() AwsIntegrationsAwsNeptunePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsNeptunePtrOutput { return v.AwsNeptune }).(AwsIntegrationsAwsNeptunePtrOutput)
}

// Amazon QLDB. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsQldb() AwsIntegrationsAwsQldbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsQldbPtrOutput { return v.AwsQldb }).(AwsIntegrationsAwsQldbPtrOutput)
}

// AWS Route53 Resolver. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsRoute53resolver() AwsIntegrationsAwsRoute53resolverPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsRoute53resolverPtrOutput { return v.AwsRoute53resolver }).(AwsIntegrationsAwsRoute53resolverPtrOutput)
}

// Aws states integration
func (o AwsIntegrationsOutput) AwsStates() AwsIntegrationsAwsStatesPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsStatesPtrOutput { return v.AwsStates }).(AwsIntegrationsAwsStatesPtrOutput)
}

// Amazon Transit Gateway. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsTransitGateway() AwsIntegrationsAwsTransitGatewayPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsTransitGatewayPtrOutput { return v.AwsTransitGateway }).(AwsIntegrationsAwsTransitGatewayPtrOutput)
}

// AWS WAF. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsWaf() AwsIntegrationsAwsWafPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsWafPtrOutput { return v.AwsWaf }).(AwsIntegrationsAwsWafPtrOutput)
}

// AWS WAF V2. See Integration blocks below for details.
func (o AwsIntegrationsOutput) AwsWafv2() AwsIntegrationsAwsWafv2PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsAwsWafv2PtrOutput { return v.AwsWafv2 }).(AwsIntegrationsAwsWafv2PtrOutput)
}

// AWS Billing. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Billing() AwsIntegrationsBillingPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsBillingPtrOutput { return v.Billing }).(AwsIntegrationsBillingPtrOutput)
}

// AWS CloudFront. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Cloudfront() AwsIntegrationsCloudfrontPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsCloudfrontPtrOutput { return v.Cloudfront }).(AwsIntegrationsCloudfrontPtrOutput)
}

// AWS CloudTrail. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Cloudtrail() AwsIntegrationsCloudtrailPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsCloudtrailPtrOutput { return v.Cloudtrail }).(AwsIntegrationsCloudtrailPtrOutput)
}

// AWS DocumentDB. See Integration blocks below for details.
func (o AwsIntegrationsOutput) DocDb() AwsIntegrationsDocDbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsDocDbPtrOutput { return v.DocDb }).(AwsIntegrationsDocDbPtrOutput)
}

// Amazon DynamoDB. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Dynamodb() AwsIntegrationsDynamodbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsDynamodbPtrOutput { return v.Dynamodb }).(AwsIntegrationsDynamodbPtrOutput)
}

// Amazon EBS. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Ebs() AwsIntegrationsEbsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEbsPtrOutput { return v.Ebs }).(AwsIntegrationsEbsPtrOutput)
}

// Amazon EC2. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Ec2() AwsIntegrationsEc2PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEc2PtrOutput { return v.Ec2 }).(AwsIntegrationsEc2PtrOutput)
}

// Amazon ECS. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Ecs() AwsIntegrationsEcsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEcsPtrOutput { return v.Ecs }).(AwsIntegrationsEcsPtrOutput)
}

// Amazon EFS. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Efs() AwsIntegrationsEfsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEfsPtrOutput { return v.Efs }).(AwsIntegrationsEfsPtrOutput)
}

// AWS ElastiCache. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Elasticache() AwsIntegrationsElasticachePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElasticachePtrOutput { return v.Elasticache }).(AwsIntegrationsElasticachePtrOutput)
}

// AWS Elastic Beanstalk. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Elasticbeanstalk() AwsIntegrationsElasticbeanstalkPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElasticbeanstalkPtrOutput { return v.Elasticbeanstalk }).(AwsIntegrationsElasticbeanstalkPtrOutput)
}

// AWS ElasticSearch. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Elasticsearch() AwsIntegrationsElasticsearchPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElasticsearchPtrOutput { return v.Elasticsearch }).(AwsIntegrationsElasticsearchPtrOutput)
}

// AWS ELB (Classic). See Integration blocks below for details.
func (o AwsIntegrationsOutput) Elb() AwsIntegrationsElbPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsElbPtrOutput { return v.Elb }).(AwsIntegrationsElbPtrOutput)
}

// AWS EMR. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Emr() AwsIntegrationsEmrPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsEmrPtrOutput { return v.Emr }).(AwsIntegrationsEmrPtrOutput)
}

// AWS Health. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Health() AwsIntegrationsHealthPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsHealthPtrOutput { return v.Health }).(AwsIntegrationsHealthPtrOutput)
}

// AWS IAM. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Iam() AwsIntegrationsIamPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsIamPtrOutput { return v.Iam }).(AwsIntegrationsIamPtrOutput)
}

// AWS IoT. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Iot() AwsIntegrationsIotPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsIotPtrOutput { return v.Iot }).(AwsIntegrationsIotPtrOutput)
}

// AWS Kinesis. See Integration blocks below for details.
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
func (o AwsIntegrationsOutput) Kinesis() AwsIntegrationsKinesisPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsKinesisPtrOutput { return v.Kinesis }).(AwsIntegrationsKinesisPtrOutput)
}

// Amazon Kinesis Data Firehose. See Integration blocks below for details.
func (o AwsIntegrationsOutput) KinesisFirehose() AwsIntegrationsKinesisFirehosePtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsKinesisFirehosePtrOutput { return v.KinesisFirehose }).(AwsIntegrationsKinesisFirehosePtrOutput)
}

// AWS Lambda. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Lambda() AwsIntegrationsLambdaPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsLambdaPtrOutput { return v.Lambda }).(AwsIntegrationsLambdaPtrOutput)
}

// The ID of the linked AWS account in New Relic.
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
func (o AwsIntegrationsOutput) LinkedAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AwsIntegrations) pulumi.StringOutput { return v.LinkedAccountId }).(pulumi.StringOutput)
}

// Amazon RDS. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Rds() AwsIntegrationsRdsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsRdsPtrOutput { return v.Rds }).(AwsIntegrationsRdsPtrOutput)
}

// Amazon Redshift. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Redshift() AwsIntegrationsRedshiftPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsRedshiftPtrOutput { return v.Redshift }).(AwsIntegrationsRedshiftPtrOutput)
}

// Amazon Route 53. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Route53() AwsIntegrationsRoute53PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsRoute53PtrOutput { return v.Route53 }).(AwsIntegrationsRoute53PtrOutput)
}

// Amazon S3. See Integration blocks below for details.
func (o AwsIntegrationsOutput) S3() AwsIntegrationsS3PtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsS3PtrOutput { return v.S3 }).(AwsIntegrationsS3PtrOutput)
}

// Amazon SES. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Ses() AwsIntegrationsSesPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsSesPtrOutput { return v.Ses }).(AwsIntegrationsSesPtrOutput)
}

// AWS SNS. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Sns() AwsIntegrationsSnsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsSnsPtrOutput { return v.Sns }).(AwsIntegrationsSnsPtrOutput)
}

// AWS SQS. See Integration blocks below for details.
func (o AwsIntegrationsOutput) Sqs() AwsIntegrationsSqsPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsSqsPtrOutput { return v.Sqs }).(AwsIntegrationsSqsPtrOutput)
}

// AWS Trusted Advisor. See Integration blocks below for details.
//
// All other arguments are dependent on the services to be integrated, which have been listed in the collapsible section below. All of these are **optional** blocks that can be added in any required combination. **For details on arguments that can be used with each service, check out the `Integration` blocks section below.**
func (o AwsIntegrationsOutput) TrustedAdvisor() AwsIntegrationsTrustedAdvisorPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsTrustedAdvisorPtrOutput { return v.TrustedAdvisor }).(AwsIntegrationsTrustedAdvisorPtrOutput)
}

// VPC integration
func (o AwsIntegrationsOutput) Vpc() AwsIntegrationsVpcPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsVpcPtrOutput { return v.Vpc }).(AwsIntegrationsVpcPtrOutput)
}

// AWS X-Ray. See Integration blocks below for details.
// x
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 900 seconds.
func (o AwsIntegrationsOutput) XRay() AwsIntegrationsXRayPtrOutput {
	return o.ApplyT(func(v *AwsIntegrations) AwsIntegrationsXRayPtrOutput { return v.XRay }).(AwsIntegrationsXRayPtrOutput)
}

type AwsIntegrationsArrayOutput struct{ *pulumi.OutputState }

func (AwsIntegrationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsIntegrations)(nil)).Elem()
}

func (o AwsIntegrationsArrayOutput) ToAwsIntegrationsArrayOutput() AwsIntegrationsArrayOutput {
	return o
}

func (o AwsIntegrationsArrayOutput) ToAwsIntegrationsArrayOutputWithContext(ctx context.Context) AwsIntegrationsArrayOutput {
	return o
}

func (o AwsIntegrationsArrayOutput) Index(i pulumi.IntInput) AwsIntegrationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsIntegrations {
		return vs[0].([]*AwsIntegrations)[vs[1].(int)]
	}).(AwsIntegrationsOutput)
}

type AwsIntegrationsMapOutput struct{ *pulumi.OutputState }

func (AwsIntegrationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsIntegrations)(nil)).Elem()
}

func (o AwsIntegrationsMapOutput) ToAwsIntegrationsMapOutput() AwsIntegrationsMapOutput {
	return o
}

func (o AwsIntegrationsMapOutput) ToAwsIntegrationsMapOutputWithContext(ctx context.Context) AwsIntegrationsMapOutput {
	return o
}

func (o AwsIntegrationsMapOutput) MapIndex(k pulumi.StringInput) AwsIntegrationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsIntegrations {
		return vs[0].(map[string]*AwsIntegrations)[vs[1].(string)]
	}).(AwsIntegrationsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIntegrationsInput)(nil)).Elem(), &AwsIntegrations{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIntegrationsArrayInput)(nil)).Elem(), AwsIntegrationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsIntegrationsMapInput)(nil)).Elem(), AwsIntegrationsMap{})
	pulumi.RegisterOutputType(AwsIntegrationsOutput{})
	pulumi.RegisterOutputType(AwsIntegrationsArrayOutput{})
	pulumi.RegisterOutputType(AwsIntegrationsMapOutput{})
}
