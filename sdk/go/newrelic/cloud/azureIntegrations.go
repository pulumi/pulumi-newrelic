// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to integrate Azure services with New Relic.
//
// ## Prerequisite
//
// To start receiving Azure data with New Relic Azure integrations, connect your Azure account to New Relic infrastructure monitoring. If you don't have one already, create a New Relic account. It's free, forever.
//
// Setup is required for this resource to work properly. This resource assumes you have linked an Azure account to New Relic.
//
// You can find instructions on how to set up Azure on [our documentation](https://docs.newrelic.com/docs/infrastructure/microsoft-azure-integrations/get-started/activate-azure-integrations/).
//
// ## Example Usage
//
// Leave an integration block empty to use its default configuration. You can also use the full example, including the Azure set up, found in our guides.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/cloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := cloud.NewAzureLinkAccount(ctx, "foo", &cloud.AzureLinkAccountArgs{
//				AccountId:      pulumi.String("The New Relic account ID where you want to link the Azure account"),
//				ApplicationId:  pulumi.String("ID of the application"),
//				ClientSecret:   pulumi.String("Secret value of client's Azure account"),
//				SubscriptionId: pulumi.String("Subscription ID of Azure"),
//				TenantId:       pulumi.String("Tenant ID of the Azure"),
//				Name:           pulumi.String("Name of the linked account"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cloud.NewAzureIntegrations(ctx, "foo", &cloud.AzureIntegrationsArgs{
//				LinkedAccountId: foo.ID(),
//				AccountId:       pulumi.String("The New Relic account ID"),
//				ApiManagement: &cloud.AzureIntegrationsApiManagementArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				AppGateway: &cloud.AzureIntegrationsAppGatewayArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				AppService: &cloud.AzureIntegrationsAppServiceArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Containers: &cloud.AzureIntegrationsContainersArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				CosmosDb: &cloud.AzureIntegrationsCosmosDbArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				CostManagement: &cloud.AzureIntegrationsCostManagementArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//					TagKeys: pulumi.StringArray{
//						pulumi.String("tag_keys"),
//					},
//				},
//				DataFactory: &cloud.AzureIntegrationsDataFactoryArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				EventHub: &cloud.AzureIntegrationsEventHubArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				ExpressRoute: &cloud.AzureIntegrationsExpressRouteArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Firewalls: &cloud.AzureIntegrationsFirewallsArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				FrontDoor: &cloud.AzureIntegrationsFrontDoorArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Functions: &cloud.AzureIntegrationsFunctionsArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				KeyVault: &cloud.AzureIntegrationsKeyVaultArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				LoadBalancer: &cloud.AzureIntegrationsLoadBalancerArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				LogicApps: &cloud.AzureIntegrationsLogicAppsArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				MachineLearning: &cloud.AzureIntegrationsMachineLearningArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				MariaDb: &cloud.AzureIntegrationsMariaDbArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Monitor: &cloud.AzureIntegrationsMonitorArgs{
//					MetricsPollingInterval: pulumi.Int(60),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//					IncludeTags: pulumi.StringArray{
//						pulumi.String("env:production"),
//					},
//					ExcludeTags: pulumi.StringArray{
//						pulumi.String("env:staging"),
//						pulumi.String("env:testing"),
//					},
//					Enabled: pulumi.Bool(true),
//					ResourceTypes: pulumi.StringArray{
//						pulumi.String("microsoft.datashare/accounts"),
//					},
//				},
//				Mysql: &cloud.AzureIntegrationsMysqlArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				MysqlFlexible: &cloud.AzureIntegrationsMysqlFlexibleArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Postgresql: &cloud.AzureIntegrationsPostgresqlArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				PostgresqlFlexible: &cloud.AzureIntegrationsPostgresqlFlexibleArgs{
//					MetricsPollingInterval: pulumi.Int(3600),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				PowerBiDedicated: &cloud.AzureIntegrationsPowerBiDedicatedArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				RedisCache: &cloud.AzureIntegrationsRedisCacheArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				ServiceBus: &cloud.AzureIntegrationsServiceBusArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Sql: &cloud.AzureIntegrationsSqlArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				SqlManaged: &cloud.AzureIntegrationsSqlManagedArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Storage: &cloud.AzureIntegrationsStorageArgs{
//					MetricsPollingInterval: pulumi.Int(1800),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				VirtualMachine: &cloud.AzureIntegrationsVirtualMachineArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				VirtualNetworks: &cloud.AzureIntegrationsVirtualNetworksArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				Vms: &cloud.AzureIntegrationsVmsArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//				VpnGateway: &cloud.AzureIntegrationsVpnGatewayArgs{
//					MetricsPollingInterval: pulumi.Int(300),
//					ResourceGroups: pulumi.StringArray{
//						pulumi.String("resource_groups"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Linked Azure accounts can be imported using `id`, you can find the `id` of existing Azure linked accounts in Azure dashboard under Infrastructure in NewRelic.
//
// bash
//
// ```sh
// $ pulumi import newrelic:cloud/azureIntegrations:AzureIntegrations foo <id>
// ```
type AzureIntegrations struct {
	pulumi.CustomResourceState

	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Azure API Management. See Integration blocks below for details.
	ApiManagement AzureIntegrationsApiManagementPtrOutput `pulumi:"apiManagement"`
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway AzureIntegrationsAppGatewayPtrOutput `pulumi:"appGateway"`
	// Azure App Service. See Integration blocks below for details.
	AppService AzureIntegrationsAppServicePtrOutput `pulumi:"appService"`
	// Azure Containers. See Integration blocks below for details.
	Containers AzureIntegrationsContainersPtrOutput `pulumi:"containers"`
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb AzureIntegrationsCosmosDbPtrOutput `pulumi:"cosmosDb"`
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement AzureIntegrationsCostManagementPtrOutput `pulumi:"costManagement"`
	// Azure Data Factory. See Integration blocks below for details.
	DataFactory AzureIntegrationsDataFactoryPtrOutput `pulumi:"dataFactory"`
	// Azure Event Hub. See Integration blocks below for details.
	EventHub AzureIntegrationsEventHubPtrOutput `pulumi:"eventHub"`
	// Azure Express Route. See Integration blocks below for details.
	ExpressRoute AzureIntegrationsExpressRoutePtrOutput `pulumi:"expressRoute"`
	// Azure Firewalls. See Integration blocks below for details.
	Firewalls AzureIntegrationsFirewallsPtrOutput `pulumi:"firewalls"`
	// Azure Front Door. See Integration blocks below for details.
	FrontDoor AzureIntegrationsFrontDoorPtrOutput `pulumi:"frontDoor"`
	// Azure Functions. See Integration blocks below for details.
	Functions AzureIntegrationsFunctionsPtrOutput `pulumi:"functions"`
	// Azure Key Vault. See Integration blocks below for details.
	KeyVault AzureIntegrationsKeyVaultPtrOutput `pulumi:"keyVault"`
	// The ID of the linked Azure account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 60 seconds.
	LinkedAccountId pulumi.StringOutput `pulumi:"linkedAccountId"`
	// Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer AzureIntegrationsLoadBalancerPtrOutput `pulumi:"loadBalancer"`
	// Azure Logic Apps. See Integration blocks below for details.
	LogicApps AzureIntegrationsLogicAppsPtrOutput `pulumi:"logicApps"`
	// Azure Machine Learning. See Integration blocks below for details.
	MachineLearning AzureIntegrationsMachineLearningPtrOutput `pulumi:"machineLearning"`
	// Azure MariaDB. See Integration blocks below for details.
	MariaDb AzureIntegrationsMariaDbPtrOutput `pulumi:"mariaDb"`
	// Azure Monitor. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	Monitor AzureIntegrationsMonitorPtrOutput `pulumi:"monitor"`
	// Azure MySQL. See Integration blocks below for details.
	Mysql AzureIntegrationsMysqlPtrOutput `pulumi:"mysql"`
	// Azure MySQL Flexible Server. See Integration blocks below for details.
	MysqlFlexible AzureIntegrationsMysqlFlexiblePtrOutput `pulumi:"mysqlFlexible"`
	// Azure PostgreSQL. See Integration blocks below for details.
	Postgresql AzureIntegrationsPostgresqlPtrOutput `pulumi:"postgresql"`
	// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
	PostgresqlFlexible AzureIntegrationsPostgresqlFlexiblePtrOutput `pulumi:"postgresqlFlexible"`
	// Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated AzureIntegrationsPowerBiDedicatedPtrOutput `pulumi:"powerBiDedicated"`
	// Azure Redis Cache. See Integration blocks below for details.
	RedisCache AzureIntegrationsRedisCachePtrOutput `pulumi:"redisCache"`
	// Azure Service Bus. See Integration blocks below for details.
	ServiceBus AzureIntegrationsServiceBusPtrOutput `pulumi:"serviceBus"`
	// Azure SQL. See Integration blocks below for details.
	Sql AzureIntegrationsSqlPtrOutput `pulumi:"sql"`
	// Azure SQL Managed. See Integration blocks below for details.
	SqlManaged AzureIntegrationsSqlManagedPtrOutput `pulumi:"sqlManaged"`
	// for Azure Storage. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Storage AzureIntegrationsStoragePtrOutput `pulumi:"storage"`
	// Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine AzureIntegrationsVirtualMachinePtrOutput `pulumi:"virtualMachine"`
	// for Azure Virtual networks. See Integration blocks below for details.
	VirtualNetworks AzureIntegrationsVirtualNetworksPtrOutput `pulumi:"virtualNetworks"`
	// Azure VMs. See Integration blocks below for details.
	Vms AzureIntegrationsVmsPtrOutput `pulumi:"vms"`
	// Azure VPN Gateway. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 1800 seconds.
	VpnGateway AzureIntegrationsVpnGatewayPtrOutput `pulumi:"vpnGateway"`
}

// NewAzureIntegrations registers a new resource with the given unique name, arguments, and options.
func NewAzureIntegrations(ctx *pulumi.Context,
	name string, args *AzureIntegrationsArgs, opts ...pulumi.ResourceOption) (*AzureIntegrations, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LinkedAccountId == nil {
		return nil, errors.New("invalid value for required argument 'LinkedAccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AzureIntegrations
	err := ctx.RegisterResource("newrelic:cloud/azureIntegrations:AzureIntegrations", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAzureIntegrations gets an existing AzureIntegrations resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAzureIntegrations(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AzureIntegrationsState, opts ...pulumi.ResourceOption) (*AzureIntegrations, error) {
	var resource AzureIntegrations
	err := ctx.ReadResource("newrelic:cloud/azureIntegrations:AzureIntegrations", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AzureIntegrations resources.
type azureIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *string `pulumi:"accountId"`
	// Azure API Management. See Integration blocks below for details.
	ApiManagement *AzureIntegrationsApiManagement `pulumi:"apiManagement"`
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway *AzureIntegrationsAppGateway `pulumi:"appGateway"`
	// Azure App Service. See Integration blocks below for details.
	AppService *AzureIntegrationsAppService `pulumi:"appService"`
	// Azure Containers. See Integration blocks below for details.
	Containers *AzureIntegrationsContainers `pulumi:"containers"`
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb *AzureIntegrationsCosmosDb `pulumi:"cosmosDb"`
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement *AzureIntegrationsCostManagement `pulumi:"costManagement"`
	// Azure Data Factory. See Integration blocks below for details.
	DataFactory *AzureIntegrationsDataFactory `pulumi:"dataFactory"`
	// Azure Event Hub. See Integration blocks below for details.
	EventHub *AzureIntegrationsEventHub `pulumi:"eventHub"`
	// Azure Express Route. See Integration blocks below for details.
	ExpressRoute *AzureIntegrationsExpressRoute `pulumi:"expressRoute"`
	// Azure Firewalls. See Integration blocks below for details.
	Firewalls *AzureIntegrationsFirewalls `pulumi:"firewalls"`
	// Azure Front Door. See Integration blocks below for details.
	FrontDoor *AzureIntegrationsFrontDoor `pulumi:"frontDoor"`
	// Azure Functions. See Integration blocks below for details.
	Functions *AzureIntegrationsFunctions `pulumi:"functions"`
	// Azure Key Vault. See Integration blocks below for details.
	KeyVault *AzureIntegrationsKeyVault `pulumi:"keyVault"`
	// The ID of the linked Azure account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 60 seconds.
	LinkedAccountId *string `pulumi:"linkedAccountId"`
	// Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer *AzureIntegrationsLoadBalancer `pulumi:"loadBalancer"`
	// Azure Logic Apps. See Integration blocks below for details.
	LogicApps *AzureIntegrationsLogicApps `pulumi:"logicApps"`
	// Azure Machine Learning. See Integration blocks below for details.
	MachineLearning *AzureIntegrationsMachineLearning `pulumi:"machineLearning"`
	// Azure MariaDB. See Integration blocks below for details.
	MariaDb *AzureIntegrationsMariaDb `pulumi:"mariaDb"`
	// Azure Monitor. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	Monitor *AzureIntegrationsMonitor `pulumi:"monitor"`
	// Azure MySQL. See Integration blocks below for details.
	Mysql *AzureIntegrationsMysql `pulumi:"mysql"`
	// Azure MySQL Flexible Server. See Integration blocks below for details.
	MysqlFlexible *AzureIntegrationsMysqlFlexible `pulumi:"mysqlFlexible"`
	// Azure PostgreSQL. See Integration blocks below for details.
	Postgresql *AzureIntegrationsPostgresql `pulumi:"postgresql"`
	// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
	PostgresqlFlexible *AzureIntegrationsPostgresqlFlexible `pulumi:"postgresqlFlexible"`
	// Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated *AzureIntegrationsPowerBiDedicated `pulumi:"powerBiDedicated"`
	// Azure Redis Cache. See Integration blocks below for details.
	RedisCache *AzureIntegrationsRedisCache `pulumi:"redisCache"`
	// Azure Service Bus. See Integration blocks below for details.
	ServiceBus *AzureIntegrationsServiceBus `pulumi:"serviceBus"`
	// Azure SQL. See Integration blocks below for details.
	Sql *AzureIntegrationsSql `pulumi:"sql"`
	// Azure SQL Managed. See Integration blocks below for details.
	SqlManaged *AzureIntegrationsSqlManaged `pulumi:"sqlManaged"`
	// for Azure Storage. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Storage *AzureIntegrationsStorage `pulumi:"storage"`
	// Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine *AzureIntegrationsVirtualMachine `pulumi:"virtualMachine"`
	// for Azure Virtual networks. See Integration blocks below for details.
	VirtualNetworks *AzureIntegrationsVirtualNetworks `pulumi:"virtualNetworks"`
	// Azure VMs. See Integration blocks below for details.
	Vms *AzureIntegrationsVms `pulumi:"vms"`
	// Azure VPN Gateway. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 1800 seconds.
	VpnGateway *AzureIntegrationsVpnGateway `pulumi:"vpnGateway"`
}

type AzureIntegrationsState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.StringPtrInput
	// Azure API Management. See Integration blocks below for details.
	ApiManagement AzureIntegrationsApiManagementPtrInput
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway AzureIntegrationsAppGatewayPtrInput
	// Azure App Service. See Integration blocks below for details.
	AppService AzureIntegrationsAppServicePtrInput
	// Azure Containers. See Integration blocks below for details.
	Containers AzureIntegrationsContainersPtrInput
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb AzureIntegrationsCosmosDbPtrInput
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement AzureIntegrationsCostManagementPtrInput
	// Azure Data Factory. See Integration blocks below for details.
	DataFactory AzureIntegrationsDataFactoryPtrInput
	// Azure Event Hub. See Integration blocks below for details.
	EventHub AzureIntegrationsEventHubPtrInput
	// Azure Express Route. See Integration blocks below for details.
	ExpressRoute AzureIntegrationsExpressRoutePtrInput
	// Azure Firewalls. See Integration blocks below for details.
	Firewalls AzureIntegrationsFirewallsPtrInput
	// Azure Front Door. See Integration blocks below for details.
	FrontDoor AzureIntegrationsFrontDoorPtrInput
	// Azure Functions. See Integration blocks below for details.
	Functions AzureIntegrationsFunctionsPtrInput
	// Azure Key Vault. See Integration blocks below for details.
	KeyVault AzureIntegrationsKeyVaultPtrInput
	// The ID of the linked Azure account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 60 seconds.
	LinkedAccountId pulumi.StringPtrInput
	// Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer AzureIntegrationsLoadBalancerPtrInput
	// Azure Logic Apps. See Integration blocks below for details.
	LogicApps AzureIntegrationsLogicAppsPtrInput
	// Azure Machine Learning. See Integration blocks below for details.
	MachineLearning AzureIntegrationsMachineLearningPtrInput
	// Azure MariaDB. See Integration blocks below for details.
	MariaDb AzureIntegrationsMariaDbPtrInput
	// Azure Monitor. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	Monitor AzureIntegrationsMonitorPtrInput
	// Azure MySQL. See Integration blocks below for details.
	Mysql AzureIntegrationsMysqlPtrInput
	// Azure MySQL Flexible Server. See Integration blocks below for details.
	MysqlFlexible AzureIntegrationsMysqlFlexiblePtrInput
	// Azure PostgreSQL. See Integration blocks below for details.
	Postgresql AzureIntegrationsPostgresqlPtrInput
	// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
	PostgresqlFlexible AzureIntegrationsPostgresqlFlexiblePtrInput
	// Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated AzureIntegrationsPowerBiDedicatedPtrInput
	// Azure Redis Cache. See Integration blocks below for details.
	RedisCache AzureIntegrationsRedisCachePtrInput
	// Azure Service Bus. See Integration blocks below for details.
	ServiceBus AzureIntegrationsServiceBusPtrInput
	// Azure SQL. See Integration blocks below for details.
	Sql AzureIntegrationsSqlPtrInput
	// Azure SQL Managed. See Integration blocks below for details.
	SqlManaged AzureIntegrationsSqlManagedPtrInput
	// for Azure Storage. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Storage AzureIntegrationsStoragePtrInput
	// Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine AzureIntegrationsVirtualMachinePtrInput
	// for Azure Virtual networks. See Integration blocks below for details.
	VirtualNetworks AzureIntegrationsVirtualNetworksPtrInput
	// Azure VMs. See Integration blocks below for details.
	Vms AzureIntegrationsVmsPtrInput
	// Azure VPN Gateway. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 1800 seconds.
	VpnGateway AzureIntegrationsVpnGatewayPtrInput
}

func (AzureIntegrationsState) ElementType() reflect.Type {
	return reflect.TypeOf((*azureIntegrationsState)(nil)).Elem()
}

type azureIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *string `pulumi:"accountId"`
	// Azure API Management. See Integration blocks below for details.
	ApiManagement *AzureIntegrationsApiManagement `pulumi:"apiManagement"`
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway *AzureIntegrationsAppGateway `pulumi:"appGateway"`
	// Azure App Service. See Integration blocks below for details.
	AppService *AzureIntegrationsAppService `pulumi:"appService"`
	// Azure Containers. See Integration blocks below for details.
	Containers *AzureIntegrationsContainers `pulumi:"containers"`
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb *AzureIntegrationsCosmosDb `pulumi:"cosmosDb"`
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement *AzureIntegrationsCostManagement `pulumi:"costManagement"`
	// Azure Data Factory. See Integration blocks below for details.
	DataFactory *AzureIntegrationsDataFactory `pulumi:"dataFactory"`
	// Azure Event Hub. See Integration blocks below for details.
	EventHub *AzureIntegrationsEventHub `pulumi:"eventHub"`
	// Azure Express Route. See Integration blocks below for details.
	ExpressRoute *AzureIntegrationsExpressRoute `pulumi:"expressRoute"`
	// Azure Firewalls. See Integration blocks below for details.
	Firewalls *AzureIntegrationsFirewalls `pulumi:"firewalls"`
	// Azure Front Door. See Integration blocks below for details.
	FrontDoor *AzureIntegrationsFrontDoor `pulumi:"frontDoor"`
	// Azure Functions. See Integration blocks below for details.
	Functions *AzureIntegrationsFunctions `pulumi:"functions"`
	// Azure Key Vault. See Integration blocks below for details.
	KeyVault *AzureIntegrationsKeyVault `pulumi:"keyVault"`
	// The ID of the linked Azure account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 60 seconds.
	LinkedAccountId string `pulumi:"linkedAccountId"`
	// Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer *AzureIntegrationsLoadBalancer `pulumi:"loadBalancer"`
	// Azure Logic Apps. See Integration blocks below for details.
	LogicApps *AzureIntegrationsLogicApps `pulumi:"logicApps"`
	// Azure Machine Learning. See Integration blocks below for details.
	MachineLearning *AzureIntegrationsMachineLearning `pulumi:"machineLearning"`
	// Azure MariaDB. See Integration blocks below for details.
	MariaDb *AzureIntegrationsMariaDb `pulumi:"mariaDb"`
	// Azure Monitor. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	Monitor *AzureIntegrationsMonitor `pulumi:"monitor"`
	// Azure MySQL. See Integration blocks below for details.
	Mysql *AzureIntegrationsMysql `pulumi:"mysql"`
	// Azure MySQL Flexible Server. See Integration blocks below for details.
	MysqlFlexible *AzureIntegrationsMysqlFlexible `pulumi:"mysqlFlexible"`
	// Azure PostgreSQL. See Integration blocks below for details.
	Postgresql *AzureIntegrationsPostgresql `pulumi:"postgresql"`
	// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
	PostgresqlFlexible *AzureIntegrationsPostgresqlFlexible `pulumi:"postgresqlFlexible"`
	// Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated *AzureIntegrationsPowerBiDedicated `pulumi:"powerBiDedicated"`
	// Azure Redis Cache. See Integration blocks below for details.
	RedisCache *AzureIntegrationsRedisCache `pulumi:"redisCache"`
	// Azure Service Bus. See Integration blocks below for details.
	ServiceBus *AzureIntegrationsServiceBus `pulumi:"serviceBus"`
	// Azure SQL. See Integration blocks below for details.
	Sql *AzureIntegrationsSql `pulumi:"sql"`
	// Azure SQL Managed. See Integration blocks below for details.
	SqlManaged *AzureIntegrationsSqlManaged `pulumi:"sqlManaged"`
	// for Azure Storage. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Storage *AzureIntegrationsStorage `pulumi:"storage"`
	// Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine *AzureIntegrationsVirtualMachine `pulumi:"virtualMachine"`
	// for Azure Virtual networks. See Integration blocks below for details.
	VirtualNetworks *AzureIntegrationsVirtualNetworks `pulumi:"virtualNetworks"`
	// Azure VMs. See Integration blocks below for details.
	Vms *AzureIntegrationsVms `pulumi:"vms"`
	// Azure VPN Gateway. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 1800 seconds.
	VpnGateway *AzureIntegrationsVpnGateway `pulumi:"vpnGateway"`
}

// The set of arguments for constructing a AzureIntegrations resource.
type AzureIntegrationsArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.StringPtrInput
	// Azure API Management. See Integration blocks below for details.
	ApiManagement AzureIntegrationsApiManagementPtrInput
	// Azure App Gateway. See Integration blocks below for details.
	AppGateway AzureIntegrationsAppGatewayPtrInput
	// Azure App Service. See Integration blocks below for details.
	AppService AzureIntegrationsAppServicePtrInput
	// Azure Containers. See Integration blocks below for details.
	Containers AzureIntegrationsContainersPtrInput
	// Azure CosmosDB. See Integration blocks below for details.
	CosmosDb AzureIntegrationsCosmosDbPtrInput
	// Azure Cost Management. See Integration blocks below for details.
	CostManagement AzureIntegrationsCostManagementPtrInput
	// Azure Data Factory. See Integration blocks below for details.
	DataFactory AzureIntegrationsDataFactoryPtrInput
	// Azure Event Hub. See Integration blocks below for details.
	EventHub AzureIntegrationsEventHubPtrInput
	// Azure Express Route. See Integration blocks below for details.
	ExpressRoute AzureIntegrationsExpressRoutePtrInput
	// Azure Firewalls. See Integration blocks below for details.
	Firewalls AzureIntegrationsFirewallsPtrInput
	// Azure Front Door. See Integration blocks below for details.
	FrontDoor AzureIntegrationsFrontDoorPtrInput
	// Azure Functions. See Integration blocks below for details.
	Functions AzureIntegrationsFunctionsPtrInput
	// Azure Key Vault. See Integration blocks below for details.
	KeyVault AzureIntegrationsKeyVaultPtrInput
	// The ID of the linked Azure account in New Relic.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 60 seconds.
	LinkedAccountId pulumi.StringInput
	// Azure Load Balancer. See Integration blocks below for details.
	LoadBalancer AzureIntegrationsLoadBalancerPtrInput
	// Azure Logic Apps. See Integration blocks below for details.
	LogicApps AzureIntegrationsLogicAppsPtrInput
	// Azure Machine Learning. See Integration blocks below for details.
	MachineLearning AzureIntegrationsMachineLearningPtrInput
	// Azure MariaDB. See Integration blocks below for details.
	MariaDb AzureIntegrationsMariaDbPtrInput
	// Azure Monitor. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
	Monitor AzureIntegrationsMonitorPtrInput
	// Azure MySQL. See Integration blocks below for details.
	Mysql AzureIntegrationsMysqlPtrInput
	// Azure MySQL Flexible Server. See Integration blocks below for details.
	MysqlFlexible AzureIntegrationsMysqlFlexiblePtrInput
	// Azure PostgreSQL. See Integration blocks below for details.
	Postgresql AzureIntegrationsPostgresqlPtrInput
	// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
	PostgresqlFlexible AzureIntegrationsPostgresqlFlexiblePtrInput
	// Azure Power BI Dedicated. See Integration blocks below for details.
	PowerBiDedicated AzureIntegrationsPowerBiDedicatedPtrInput
	// Azure Redis Cache. See Integration blocks below for details.
	RedisCache AzureIntegrationsRedisCachePtrInput
	// Azure Service Bus. See Integration blocks below for details.
	ServiceBus AzureIntegrationsServiceBusPtrInput
	// Azure SQL. See Integration blocks below for details.
	Sql AzureIntegrationsSqlPtrInput
	// Azure SQL Managed. See Integration blocks below for details.
	SqlManaged AzureIntegrationsSqlManagedPtrInput
	// for Azure Storage. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
	Storage AzureIntegrationsStoragePtrInput
	// Azure Virtual machine. See Integration blocks below for details.
	VirtualMachine AzureIntegrationsVirtualMachinePtrInput
	// for Azure Virtual networks. See Integration blocks below for details.
	VirtualNetworks AzureIntegrationsVirtualNetworksPtrInput
	// Azure VMs. See Integration blocks below for details.
	Vms AzureIntegrationsVmsPtrInput
	// Azure VPN Gateway. See Integration blocks below for details.
	//
	// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 1800 seconds.
	VpnGateway AzureIntegrationsVpnGatewayPtrInput
}

func (AzureIntegrationsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*azureIntegrationsArgs)(nil)).Elem()
}

type AzureIntegrationsInput interface {
	pulumi.Input

	ToAzureIntegrationsOutput() AzureIntegrationsOutput
	ToAzureIntegrationsOutputWithContext(ctx context.Context) AzureIntegrationsOutput
}

func (*AzureIntegrations) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIntegrations)(nil)).Elem()
}

func (i *AzureIntegrations) ToAzureIntegrationsOutput() AzureIntegrationsOutput {
	return i.ToAzureIntegrationsOutputWithContext(context.Background())
}

func (i *AzureIntegrations) ToAzureIntegrationsOutputWithContext(ctx context.Context) AzureIntegrationsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIntegrationsOutput)
}

// AzureIntegrationsArrayInput is an input type that accepts AzureIntegrationsArray and AzureIntegrationsArrayOutput values.
// You can construct a concrete instance of `AzureIntegrationsArrayInput` via:
//
//	AzureIntegrationsArray{ AzureIntegrationsArgs{...} }
type AzureIntegrationsArrayInput interface {
	pulumi.Input

	ToAzureIntegrationsArrayOutput() AzureIntegrationsArrayOutput
	ToAzureIntegrationsArrayOutputWithContext(context.Context) AzureIntegrationsArrayOutput
}

type AzureIntegrationsArray []AzureIntegrationsInput

func (AzureIntegrationsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureIntegrations)(nil)).Elem()
}

func (i AzureIntegrationsArray) ToAzureIntegrationsArrayOutput() AzureIntegrationsArrayOutput {
	return i.ToAzureIntegrationsArrayOutputWithContext(context.Background())
}

func (i AzureIntegrationsArray) ToAzureIntegrationsArrayOutputWithContext(ctx context.Context) AzureIntegrationsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIntegrationsArrayOutput)
}

// AzureIntegrationsMapInput is an input type that accepts AzureIntegrationsMap and AzureIntegrationsMapOutput values.
// You can construct a concrete instance of `AzureIntegrationsMapInput` via:
//
//	AzureIntegrationsMap{ "key": AzureIntegrationsArgs{...} }
type AzureIntegrationsMapInput interface {
	pulumi.Input

	ToAzureIntegrationsMapOutput() AzureIntegrationsMapOutput
	ToAzureIntegrationsMapOutputWithContext(context.Context) AzureIntegrationsMapOutput
}

type AzureIntegrationsMap map[string]AzureIntegrationsInput

func (AzureIntegrationsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureIntegrations)(nil)).Elem()
}

func (i AzureIntegrationsMap) ToAzureIntegrationsMapOutput() AzureIntegrationsMapOutput {
	return i.ToAzureIntegrationsMapOutputWithContext(context.Background())
}

func (i AzureIntegrationsMap) ToAzureIntegrationsMapOutputWithContext(ctx context.Context) AzureIntegrationsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AzureIntegrationsMapOutput)
}

type AzureIntegrationsOutput struct{ *pulumi.OutputState }

func (AzureIntegrationsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AzureIntegrations)(nil)).Elem()
}

func (o AzureIntegrationsOutput) ToAzureIntegrationsOutput() AzureIntegrationsOutput {
	return o
}

func (o AzureIntegrationsOutput) ToAzureIntegrationsOutputWithContext(ctx context.Context) AzureIntegrationsOutput {
	return o
}

// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
func (o AzureIntegrationsOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureIntegrations) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Azure API Management. See Integration blocks below for details.
func (o AzureIntegrationsOutput) ApiManagement() AzureIntegrationsApiManagementPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsApiManagementPtrOutput { return v.ApiManagement }).(AzureIntegrationsApiManagementPtrOutput)
}

// Azure App Gateway. See Integration blocks below for details.
func (o AzureIntegrationsOutput) AppGateway() AzureIntegrationsAppGatewayPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsAppGatewayPtrOutput { return v.AppGateway }).(AzureIntegrationsAppGatewayPtrOutput)
}

// Azure App Service. See Integration blocks below for details.
func (o AzureIntegrationsOutput) AppService() AzureIntegrationsAppServicePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsAppServicePtrOutput { return v.AppService }).(AzureIntegrationsAppServicePtrOutput)
}

// Azure Containers. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Containers() AzureIntegrationsContainersPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsContainersPtrOutput { return v.Containers }).(AzureIntegrationsContainersPtrOutput)
}

// Azure CosmosDB. See Integration blocks below for details.
func (o AzureIntegrationsOutput) CosmosDb() AzureIntegrationsCosmosDbPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsCosmosDbPtrOutput { return v.CosmosDb }).(AzureIntegrationsCosmosDbPtrOutput)
}

// Azure Cost Management. See Integration blocks below for details.
func (o AzureIntegrationsOutput) CostManagement() AzureIntegrationsCostManagementPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsCostManagementPtrOutput { return v.CostManagement }).(AzureIntegrationsCostManagementPtrOutput)
}

// Azure Data Factory. See Integration blocks below for details.
func (o AzureIntegrationsOutput) DataFactory() AzureIntegrationsDataFactoryPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsDataFactoryPtrOutput { return v.DataFactory }).(AzureIntegrationsDataFactoryPtrOutput)
}

// Azure Event Hub. See Integration blocks below for details.
func (o AzureIntegrationsOutput) EventHub() AzureIntegrationsEventHubPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsEventHubPtrOutput { return v.EventHub }).(AzureIntegrationsEventHubPtrOutput)
}

// Azure Express Route. See Integration blocks below for details.
func (o AzureIntegrationsOutput) ExpressRoute() AzureIntegrationsExpressRoutePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsExpressRoutePtrOutput { return v.ExpressRoute }).(AzureIntegrationsExpressRoutePtrOutput)
}

// Azure Firewalls. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Firewalls() AzureIntegrationsFirewallsPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsFirewallsPtrOutput { return v.Firewalls }).(AzureIntegrationsFirewallsPtrOutput)
}

// Azure Front Door. See Integration blocks below for details.
func (o AzureIntegrationsOutput) FrontDoor() AzureIntegrationsFrontDoorPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsFrontDoorPtrOutput { return v.FrontDoor }).(AzureIntegrationsFrontDoorPtrOutput)
}

// Azure Functions. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Functions() AzureIntegrationsFunctionsPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsFunctionsPtrOutput { return v.Functions }).(AzureIntegrationsFunctionsPtrOutput)
}

// Azure Key Vault. See Integration blocks below for details.
func (o AzureIntegrationsOutput) KeyVault() AzureIntegrationsKeyVaultPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsKeyVaultPtrOutput { return v.KeyVault }).(AzureIntegrationsKeyVaultPtrOutput)
}

// The ID of the linked Azure account in New Relic.
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 60 seconds.
func (o AzureIntegrationsOutput) LinkedAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *AzureIntegrations) pulumi.StringOutput { return v.LinkedAccountId }).(pulumi.StringOutput)
}

// Azure Load Balancer. See Integration blocks below for details.
func (o AzureIntegrationsOutput) LoadBalancer() AzureIntegrationsLoadBalancerPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsLoadBalancerPtrOutput { return v.LoadBalancer }).(AzureIntegrationsLoadBalancerPtrOutput)
}

// Azure Logic Apps. See Integration blocks below for details.
func (o AzureIntegrationsOutput) LogicApps() AzureIntegrationsLogicAppsPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsLogicAppsPtrOutput { return v.LogicApps }).(AzureIntegrationsLogicAppsPtrOutput)
}

// Azure Machine Learning. See Integration blocks below for details.
func (o AzureIntegrationsOutput) MachineLearning() AzureIntegrationsMachineLearningPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsMachineLearningPtrOutput { return v.MachineLearning }).(AzureIntegrationsMachineLearningPtrOutput)
}

// Azure MariaDB. See Integration blocks below for details.
func (o AzureIntegrationsOutput) MariaDb() AzureIntegrationsMariaDbPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsMariaDbPtrOutput { return v.MariaDb }).(AzureIntegrationsMariaDbPtrOutput)
}

// Azure Monitor. See Integration blocks below for details.
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 300 seconds.
func (o AzureIntegrationsOutput) Monitor() AzureIntegrationsMonitorPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsMonitorPtrOutput { return v.Monitor }).(AzureIntegrationsMonitorPtrOutput)
}

// Azure MySQL. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Mysql() AzureIntegrationsMysqlPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsMysqlPtrOutput { return v.Mysql }).(AzureIntegrationsMysqlPtrOutput)
}

// Azure MySQL Flexible Server. See Integration blocks below for details.
func (o AzureIntegrationsOutput) MysqlFlexible() AzureIntegrationsMysqlFlexiblePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsMysqlFlexiblePtrOutput { return v.MysqlFlexible }).(AzureIntegrationsMysqlFlexiblePtrOutput)
}

// Azure PostgreSQL. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Postgresql() AzureIntegrationsPostgresqlPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsPostgresqlPtrOutput { return v.Postgresql }).(AzureIntegrationsPostgresqlPtrOutput)
}

// Azure PostgreSQL Flexible Server. See Integration blocks below for details.
func (o AzureIntegrationsOutput) PostgresqlFlexible() AzureIntegrationsPostgresqlFlexiblePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsPostgresqlFlexiblePtrOutput { return v.PostgresqlFlexible }).(AzureIntegrationsPostgresqlFlexiblePtrOutput)
}

// Azure Power BI Dedicated. See Integration blocks below for details.
func (o AzureIntegrationsOutput) PowerBiDedicated() AzureIntegrationsPowerBiDedicatedPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsPowerBiDedicatedPtrOutput { return v.PowerBiDedicated }).(AzureIntegrationsPowerBiDedicatedPtrOutput)
}

// Azure Redis Cache. See Integration blocks below for details.
func (o AzureIntegrationsOutput) RedisCache() AzureIntegrationsRedisCachePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsRedisCachePtrOutput { return v.RedisCache }).(AzureIntegrationsRedisCachePtrOutput)
}

// Azure Service Bus. See Integration blocks below for details.
func (o AzureIntegrationsOutput) ServiceBus() AzureIntegrationsServiceBusPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsServiceBusPtrOutput { return v.ServiceBus }).(AzureIntegrationsServiceBusPtrOutput)
}

// Azure SQL. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Sql() AzureIntegrationsSqlPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsSqlPtrOutput { return v.Sql }).(AzureIntegrationsSqlPtrOutput)
}

// Azure SQL Managed. See Integration blocks below for details.
func (o AzureIntegrationsOutput) SqlManaged() AzureIntegrationsSqlManagedPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsSqlManagedPtrOutput { return v.SqlManaged }).(AzureIntegrationsSqlManagedPtrOutput)
}

// for Azure Storage. See Integration blocks below for details.
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 3600 seconds.
func (o AzureIntegrationsOutput) Storage() AzureIntegrationsStoragePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsStoragePtrOutput { return v.Storage }).(AzureIntegrationsStoragePtrOutput)
}

// Azure Virtual machine. See Integration blocks below for details.
func (o AzureIntegrationsOutput) VirtualMachine() AzureIntegrationsVirtualMachinePtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsVirtualMachinePtrOutput { return v.VirtualMachine }).(AzureIntegrationsVirtualMachinePtrOutput)
}

// for Azure Virtual networks. See Integration blocks below for details.
func (o AzureIntegrationsOutput) VirtualNetworks() AzureIntegrationsVirtualNetworksPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsVirtualNetworksPtrOutput { return v.VirtualNetworks }).(AzureIntegrationsVirtualNetworksPtrOutput)
}

// Azure VMs. See Integration blocks below for details.
func (o AzureIntegrationsOutput) Vms() AzureIntegrationsVmsPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsVmsPtrOutput { return v.Vms }).(AzureIntegrationsVmsPtrOutput)
}

// Azure VPN Gateway. See Integration blocks below for details.
//
// The following arguments/integration blocks are intended to be used with a minimum `metricsPollingInterval` of 1800 seconds.
func (o AzureIntegrationsOutput) VpnGateway() AzureIntegrationsVpnGatewayPtrOutput {
	return o.ApplyT(func(v *AzureIntegrations) AzureIntegrationsVpnGatewayPtrOutput { return v.VpnGateway }).(AzureIntegrationsVpnGatewayPtrOutput)
}

type AzureIntegrationsArrayOutput struct{ *pulumi.OutputState }

func (AzureIntegrationsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AzureIntegrations)(nil)).Elem()
}

func (o AzureIntegrationsArrayOutput) ToAzureIntegrationsArrayOutput() AzureIntegrationsArrayOutput {
	return o
}

func (o AzureIntegrationsArrayOutput) ToAzureIntegrationsArrayOutputWithContext(ctx context.Context) AzureIntegrationsArrayOutput {
	return o
}

func (o AzureIntegrationsArrayOutput) Index(i pulumi.IntInput) AzureIntegrationsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AzureIntegrations {
		return vs[0].([]*AzureIntegrations)[vs[1].(int)]
	}).(AzureIntegrationsOutput)
}

type AzureIntegrationsMapOutput struct{ *pulumi.OutputState }

func (AzureIntegrationsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AzureIntegrations)(nil)).Elem()
}

func (o AzureIntegrationsMapOutput) ToAzureIntegrationsMapOutput() AzureIntegrationsMapOutput {
	return o
}

func (o AzureIntegrationsMapOutput) ToAzureIntegrationsMapOutputWithContext(ctx context.Context) AzureIntegrationsMapOutput {
	return o
}

func (o AzureIntegrationsMapOutput) MapIndex(k pulumi.StringInput) AzureIntegrationsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AzureIntegrations {
		return vs[0].(map[string]*AzureIntegrations)[vs[1].(string)]
	}).(AzureIntegrationsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AzureIntegrationsInput)(nil)).Elem(), &AzureIntegrations{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureIntegrationsArrayInput)(nil)).Elem(), AzureIntegrationsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AzureIntegrationsMapInput)(nil)).Elem(), AzureIntegrationsMap{})
	pulumi.RegisterOutputType(AzureIntegrationsOutput{})
	pulumi.RegisterOutputType(AzureIntegrationsArrayOutput{})
	pulumi.RegisterOutputType(AzureIntegrationsMapOutput{})
}
