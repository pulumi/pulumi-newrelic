// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloud

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this resource to link an AWS account to New Relic.
//
// ## Prerequisite
//
// Setup is required in AWS for this resource to work properly. The New Relic AWS integration can be set up to pull metrics from AWS services or AWS can push metrics to New Relic using CloudWatch Metric Streams.
//
// Using a metric stream to New Relic is the preferred way to integrate with AWS. Follow the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/aws-integrations-list/aws-metric-stream/#set-up-metric-stream) to set up a metric stream.
//
// To pull data from AWS instead, complete the [steps outlined here](https://docs.newrelic.com/docs/infrastructure/amazon-integrations/get-started/connect-aws-new-relic-infrastructure-monitoring#connect).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-newrelic/sdk/v4/go/newrelic/cloud"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := cloud.NewAwsLinkAccount(ctx, "foo", &cloud.AwsLinkAccountArgs{
// 			Arn:                  pulumi.String("arn:aws:service:region:account-id:resource-id"),
// 			MetricCollectionMode: pulumi.String("PUSH"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Linked AWS accounts can be imported using the `id`, e.g. bash
//
// ```sh
//  $ pulumi import newrelic:cloud/awsLinkAccount:AwsLinkAccount foo <id>
// ```
type AwsLinkAccount struct {
	pulumi.CustomResourceState

	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntOutput `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the IAM role.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// How metrics will be collected. Use `PUSH` for a metric stream or `PULL` to integrate with individual services.
	MetricCollectionMode pulumi.StringPtrOutput `pulumi:"metricCollectionMode"`
	// - The linked account name
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewAwsLinkAccount registers a new resource with the given unique name, arguments, and options.
func NewAwsLinkAccount(ctx *pulumi.Context,
	name string, args *AwsLinkAccountArgs, opts ...pulumi.ResourceOption) (*AwsLinkAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Arn == nil {
		return nil, errors.New("invalid value for required argument 'Arn'")
	}
	var resource AwsLinkAccount
	err := ctx.RegisterResource("newrelic:cloud/awsLinkAccount:AwsLinkAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAwsLinkAccount gets an existing AwsLinkAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAwsLinkAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AwsLinkAccountState, opts ...pulumi.ResourceOption) (*AwsLinkAccount, error) {
	var resource AwsLinkAccount
	err := ctx.ReadResource("newrelic:cloud/awsLinkAccount:AwsLinkAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AwsLinkAccount resources.
type awsLinkAccountState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the IAM role.
	Arn *string `pulumi:"arn"`
	// How metrics will be collected. Use `PUSH` for a metric stream or `PULL` to integrate with individual services.
	MetricCollectionMode *string `pulumi:"metricCollectionMode"`
	// - The linked account name
	Name *string `pulumi:"name"`
}

type AwsLinkAccountState struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput
	// The Amazon Resource Name (ARN) of the IAM role.
	Arn pulumi.StringPtrInput
	// How metrics will be collected. Use `PUSH` for a metric stream or `PULL` to integrate with individual services.
	MetricCollectionMode pulumi.StringPtrInput
	// - The linked account name
	Name pulumi.StringPtrInput
}

func (AwsLinkAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLinkAccountState)(nil)).Elem()
}

type awsLinkAccountArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the IAM role.
	Arn string `pulumi:"arn"`
	// How metrics will be collected. Use `PUSH` for a metric stream or `PULL` to integrate with individual services.
	MetricCollectionMode *string `pulumi:"metricCollectionMode"`
	// - The linked account name
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a AwsLinkAccount resource.
type AwsLinkAccountArgs struct {
	// The New Relic account ID to operate on.  This allows the user to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput
	// The Amazon Resource Name (ARN) of the IAM role.
	Arn pulumi.StringInput
	// How metrics will be collected. Use `PUSH` for a metric stream or `PULL` to integrate with individual services.
	MetricCollectionMode pulumi.StringPtrInput
	// - The linked account name
	Name pulumi.StringPtrInput
}

func (AwsLinkAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*awsLinkAccountArgs)(nil)).Elem()
}

type AwsLinkAccountInput interface {
	pulumi.Input

	ToAwsLinkAccountOutput() AwsLinkAccountOutput
	ToAwsLinkAccountOutputWithContext(ctx context.Context) AwsLinkAccountOutput
}

func (*AwsLinkAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLinkAccount)(nil)).Elem()
}

func (i *AwsLinkAccount) ToAwsLinkAccountOutput() AwsLinkAccountOutput {
	return i.ToAwsLinkAccountOutputWithContext(context.Background())
}

func (i *AwsLinkAccount) ToAwsLinkAccountOutputWithContext(ctx context.Context) AwsLinkAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLinkAccountOutput)
}

// AwsLinkAccountArrayInput is an input type that accepts AwsLinkAccountArray and AwsLinkAccountArrayOutput values.
// You can construct a concrete instance of `AwsLinkAccountArrayInput` via:
//
//          AwsLinkAccountArray{ AwsLinkAccountArgs{...} }
type AwsLinkAccountArrayInput interface {
	pulumi.Input

	ToAwsLinkAccountArrayOutput() AwsLinkAccountArrayOutput
	ToAwsLinkAccountArrayOutputWithContext(context.Context) AwsLinkAccountArrayOutput
}

type AwsLinkAccountArray []AwsLinkAccountInput

func (AwsLinkAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLinkAccount)(nil)).Elem()
}

func (i AwsLinkAccountArray) ToAwsLinkAccountArrayOutput() AwsLinkAccountArrayOutput {
	return i.ToAwsLinkAccountArrayOutputWithContext(context.Background())
}

func (i AwsLinkAccountArray) ToAwsLinkAccountArrayOutputWithContext(ctx context.Context) AwsLinkAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLinkAccountArrayOutput)
}

// AwsLinkAccountMapInput is an input type that accepts AwsLinkAccountMap and AwsLinkAccountMapOutput values.
// You can construct a concrete instance of `AwsLinkAccountMapInput` via:
//
//          AwsLinkAccountMap{ "key": AwsLinkAccountArgs{...} }
type AwsLinkAccountMapInput interface {
	pulumi.Input

	ToAwsLinkAccountMapOutput() AwsLinkAccountMapOutput
	ToAwsLinkAccountMapOutputWithContext(context.Context) AwsLinkAccountMapOutput
}

type AwsLinkAccountMap map[string]AwsLinkAccountInput

func (AwsLinkAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLinkAccount)(nil)).Elem()
}

func (i AwsLinkAccountMap) ToAwsLinkAccountMapOutput() AwsLinkAccountMapOutput {
	return i.ToAwsLinkAccountMapOutputWithContext(context.Background())
}

func (i AwsLinkAccountMap) ToAwsLinkAccountMapOutputWithContext(ctx context.Context) AwsLinkAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLinkAccountMapOutput)
}

type AwsLinkAccountOutput struct{ *pulumi.OutputState }

func (AwsLinkAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLinkAccount)(nil)).Elem()
}

func (o AwsLinkAccountOutput) ToAwsLinkAccountOutput() AwsLinkAccountOutput {
	return o
}

func (o AwsLinkAccountOutput) ToAwsLinkAccountOutputWithContext(ctx context.Context) AwsLinkAccountOutput {
	return o
}

type AwsLinkAccountArrayOutput struct{ *pulumi.OutputState }

func (AwsLinkAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AwsLinkAccount)(nil)).Elem()
}

func (o AwsLinkAccountArrayOutput) ToAwsLinkAccountArrayOutput() AwsLinkAccountArrayOutput {
	return o
}

func (o AwsLinkAccountArrayOutput) ToAwsLinkAccountArrayOutputWithContext(ctx context.Context) AwsLinkAccountArrayOutput {
	return o
}

func (o AwsLinkAccountArrayOutput) Index(i pulumi.IntInput) AwsLinkAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AwsLinkAccount {
		return vs[0].([]*AwsLinkAccount)[vs[1].(int)]
	}).(AwsLinkAccountOutput)
}

type AwsLinkAccountMapOutput struct{ *pulumi.OutputState }

func (AwsLinkAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AwsLinkAccount)(nil)).Elem()
}

func (o AwsLinkAccountMapOutput) ToAwsLinkAccountMapOutput() AwsLinkAccountMapOutput {
	return o
}

func (o AwsLinkAccountMapOutput) ToAwsLinkAccountMapOutputWithContext(ctx context.Context) AwsLinkAccountMapOutput {
	return o
}

func (o AwsLinkAccountMapOutput) MapIndex(k pulumi.StringInput) AwsLinkAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AwsLinkAccount {
		return vs[0].(map[string]*AwsLinkAccount)[vs[1].(string)]
	}).(AwsLinkAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLinkAccountInput)(nil)).Elem(), &AwsLinkAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLinkAccountArrayInput)(nil)).Elem(), AwsLinkAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLinkAccountMapInput)(nil)).Elem(), AwsLinkAccountMap{})
	pulumi.RegisterOutputType(AwsLinkAccountOutput{})
	pulumi.RegisterOutputType(AwsLinkAccountArrayOutput{})
	pulumi.RegisterOutputType(AwsLinkAccountMapOutput{})
}
