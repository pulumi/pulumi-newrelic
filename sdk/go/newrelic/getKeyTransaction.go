// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Use this data source to get information about a specific key transaction in New Relic that already exists.
func GetKeyTransaction(ctx *pulumi.Context, args *GetKeyTransactionArgs, opts ...pulumi.InvokeOption) (*GetKeyTransactionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKeyTransactionResult
	err := ctx.Invoke("newrelic:index/getKeyTransaction:getKeyTransaction", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeyTransaction.
type GetKeyTransactionArgs struct {
	// The name of the key transaction in New Relic.
	Name string `pulumi:"name"`
}

// A collection of values returned by getKeyTransaction.
type GetKeyTransactionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func GetKeyTransactionOutput(ctx *pulumi.Context, args GetKeyTransactionOutputArgs, opts ...pulumi.InvokeOption) GetKeyTransactionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeyTransactionResult, error) {
			args := v.(GetKeyTransactionArgs)
			r, err := GetKeyTransaction(ctx, &args, opts...)
			var s GetKeyTransactionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeyTransactionResultOutput)
}

// A collection of arguments for invoking getKeyTransaction.
type GetKeyTransactionOutputArgs struct {
	// The name of the key transaction in New Relic.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetKeyTransactionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyTransactionArgs)(nil)).Elem()
}

// A collection of values returned by getKeyTransaction.
type GetKeyTransactionResultOutput struct{ *pulumi.OutputState }

func (GetKeyTransactionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeyTransactionResult)(nil)).Elem()
}

func (o GetKeyTransactionResultOutput) ToGetKeyTransactionResultOutput() GetKeyTransactionResultOutput {
	return o
}

func (o GetKeyTransactionResultOutput) ToGetKeyTransactionResultOutputWithContext(ctx context.Context) GetKeyTransactionResultOutput {
	return o
}

func (o GetKeyTransactionResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetKeyTransactionResult] {
	return pulumix.Output[GetKeyTransactionResult]{
		OutputState: o.OutputState,
	}
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeyTransactionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyTransactionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKeyTransactionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeyTransactionResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeyTransactionResultOutput{})
}
