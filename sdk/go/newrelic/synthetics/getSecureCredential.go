// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a specific Synthetics secure credential in New Relic that already exists.
//
// Note that the secure credential's value is not returned as an attribute for security reasons.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-newrelic/sdk/v4/go/newrelic/synthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.LookupSecureCredential(ctx, &synthetics.LookupSecureCredentialArgs{
//				Key: "MY_KEY",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSecureCredential(ctx *pulumi.Context, args *LookupSecureCredentialArgs, opts ...pulumi.InvokeOption) (*LookupSecureCredentialResult, error) {
	var rv LookupSecureCredentialResult
	err := ctx.Invoke("newrelic:synthetics/getSecureCredential:getSecureCredential", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecureCredential.
type LookupSecureCredentialArgs struct {
	// The secure credential's key name.  Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API.
	Key string `pulumi:"key"`
}

// A collection of values returned by getSecureCredential.
type LookupSecureCredentialResult struct {
	// The time the secure credential was created.
	CreatedAt string `pulumi:"createdAt"`
	// The secure credential's description.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id  string `pulumi:"id"`
	Key string `pulumi:"key"`
	// The time the secure credential was last updated.
	LastUpdated string `pulumi:"lastUpdated"`
}

func LookupSecureCredentialOutput(ctx *pulumi.Context, args LookupSecureCredentialOutputArgs, opts ...pulumi.InvokeOption) LookupSecureCredentialResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSecureCredentialResult, error) {
			args := v.(LookupSecureCredentialArgs)
			r, err := LookupSecureCredential(ctx, &args, opts...)
			var s LookupSecureCredentialResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSecureCredentialResultOutput)
}

// A collection of arguments for invoking getSecureCredential.
type LookupSecureCredentialOutputArgs struct {
	// The secure credential's key name.  Regardless of the case used in the configuration, the provider will provide an upcased key to the underlying API.
	Key pulumi.StringInput `pulumi:"key"`
}

func (LookupSecureCredentialOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecureCredentialArgs)(nil)).Elem()
}

// A collection of values returned by getSecureCredential.
type LookupSecureCredentialResultOutput struct{ *pulumi.OutputState }

func (LookupSecureCredentialResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSecureCredentialResult)(nil)).Elem()
}

func (o LookupSecureCredentialResultOutput) ToLookupSecureCredentialResultOutput() LookupSecureCredentialResultOutput {
	return o
}

func (o LookupSecureCredentialResultOutput) ToLookupSecureCredentialResultOutputWithContext(ctx context.Context) LookupSecureCredentialResultOutput {
	return o
}

// The time the secure credential was created.
func (o LookupSecureCredentialResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecureCredentialResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The secure credential's description.
func (o LookupSecureCredentialResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecureCredentialResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSecureCredentialResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecureCredentialResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSecureCredentialResultOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecureCredentialResult) string { return v.Key }).(pulumi.StringOutput)
}

// The time the secure credential was last updated.
func (o LookupSecureCredentialResultOutput) LastUpdated() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSecureCredentialResult) string { return v.LastUpdated }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSecureCredentialResultOutput{})
}
