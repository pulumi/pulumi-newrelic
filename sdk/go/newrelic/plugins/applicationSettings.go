// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package plugins

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// > **NOTE:** Applications are not created by this resource, but are created by
// a reporting agent.
//
// Use this resource to manage configuration for an application that already
// exists in New Relic.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-newrelic/sdk/v3/go/newrelic/plugins"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := plugins.NewApplicationSettings(ctx, "app", &plugins.ApplicationSettingsArgs{
// 			AppApdexThreshold:        pulumi.Float64(0.7),
// 			EnableRealUserMonitoring: pulumi.Bool(false),
// 			EndUserApdexThreshold:    pulumi.Float64(0.8),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Notes
//
// > **NOTE:** Applications that have reported data in the last twelve hours
// cannot be deleted.
type ApplicationSettings struct {
	pulumi.CustomResourceState

	// The appex threshold for the New Relic application.
	AppApdexThreshold pulumi.Float64Output `pulumi:"appApdexThreshold"`
	// Enable or disable real user monitoring for the New Relic application.
	EnableRealUserMonitoring pulumi.BoolOutput `pulumi:"enableRealUserMonitoring"`
	// The user's apdex threshold for the New Relic application.
	EndUserApdexThreshold pulumi.Float64Output `pulumi:"endUserApdexThreshold"`
	// The name of the application in New Relic APM.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewApplicationSettings registers a new resource with the given unique name, arguments, and options.
func NewApplicationSettings(ctx *pulumi.Context,
	name string, args *ApplicationSettingsArgs, opts ...pulumi.ResourceOption) (*ApplicationSettings, error) {
	if args == nil || args.AppApdexThreshold == nil {
		return nil, errors.New("missing required argument 'AppApdexThreshold'")
	}
	if args == nil || args.EnableRealUserMonitoring == nil {
		return nil, errors.New("missing required argument 'EnableRealUserMonitoring'")
	}
	if args == nil || args.EndUserApdexThreshold == nil {
		return nil, errors.New("missing required argument 'EndUserApdexThreshold'")
	}
	if args == nil {
		args = &ApplicationSettingsArgs{}
	}
	var resource ApplicationSettings
	err := ctx.RegisterResource("newrelic:plugins/applicationSettings:ApplicationSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationSettings gets an existing ApplicationSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationSettingsState, opts ...pulumi.ResourceOption) (*ApplicationSettings, error) {
	var resource ApplicationSettings
	err := ctx.ReadResource("newrelic:plugins/applicationSettings:ApplicationSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationSettings resources.
type applicationSettingsState struct {
	// The appex threshold for the New Relic application.
	AppApdexThreshold *float64 `pulumi:"appApdexThreshold"`
	// Enable or disable real user monitoring for the New Relic application.
	EnableRealUserMonitoring *bool `pulumi:"enableRealUserMonitoring"`
	// The user's apdex threshold for the New Relic application.
	EndUserApdexThreshold *float64 `pulumi:"endUserApdexThreshold"`
	// The name of the application in New Relic APM.
	Name *string `pulumi:"name"`
}

type ApplicationSettingsState struct {
	// The appex threshold for the New Relic application.
	AppApdexThreshold pulumi.Float64PtrInput
	// Enable or disable real user monitoring for the New Relic application.
	EnableRealUserMonitoring pulumi.BoolPtrInput
	// The user's apdex threshold for the New Relic application.
	EndUserApdexThreshold pulumi.Float64PtrInput
	// The name of the application in New Relic APM.
	Name pulumi.StringPtrInput
}

func (ApplicationSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationSettingsState)(nil)).Elem()
}

type applicationSettingsArgs struct {
	// The appex threshold for the New Relic application.
	AppApdexThreshold float64 `pulumi:"appApdexThreshold"`
	// Enable or disable real user monitoring for the New Relic application.
	EnableRealUserMonitoring bool `pulumi:"enableRealUserMonitoring"`
	// The user's apdex threshold for the New Relic application.
	EndUserApdexThreshold float64 `pulumi:"endUserApdexThreshold"`
	// The name of the application in New Relic APM.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ApplicationSettings resource.
type ApplicationSettingsArgs struct {
	// The appex threshold for the New Relic application.
	AppApdexThreshold pulumi.Float64Input
	// Enable or disable real user monitoring for the New Relic application.
	EnableRealUserMonitoring pulumi.BoolInput
	// The user's apdex threshold for the New Relic application.
	EndUserApdexThreshold pulumi.Float64Input
	// The name of the application in New Relic APM.
	Name pulumi.StringPtrInput
}

func (ApplicationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationSettingsArgs)(nil)).Elem()
}
