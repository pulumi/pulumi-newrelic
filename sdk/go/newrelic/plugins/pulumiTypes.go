// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package plugins

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AlertConditionTerm struct {
	Duration     int     `pulumi:"duration"`
	Operator     *string `pulumi:"operator"`
	Priority     *string `pulumi:"priority"`
	Threshold    float64 `pulumi:"threshold"`
	TimeFunction string  `pulumi:"timeFunction"`
}

// AlertConditionTermInput is an input type that accepts AlertConditionTermArgs and AlertConditionTermOutput values.
// You can construct a concrete instance of `AlertConditionTermInput` via:
//
// 		 AlertConditionTermArgs{...}
//
type AlertConditionTermInput interface {
	pulumi.Input

	ToAlertConditionTermOutput() AlertConditionTermOutput
	ToAlertConditionTermOutputWithContext(context.Context) AlertConditionTermOutput
}

type AlertConditionTermArgs struct {
	Duration     pulumi.IntInput       `pulumi:"duration"`
	Operator     pulumi.StringPtrInput `pulumi:"operator"`
	Priority     pulumi.StringPtrInput `pulumi:"priority"`
	Threshold    pulumi.Float64Input   `pulumi:"threshold"`
	TimeFunction pulumi.StringInput    `pulumi:"timeFunction"`
}

func (AlertConditionTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConditionTerm)(nil)).Elem()
}

func (i AlertConditionTermArgs) ToAlertConditionTermOutput() AlertConditionTermOutput {
	return i.ToAlertConditionTermOutputWithContext(context.Background())
}

func (i AlertConditionTermArgs) ToAlertConditionTermOutputWithContext(ctx context.Context) AlertConditionTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConditionTermOutput)
}

// AlertConditionTermArrayInput is an input type that accepts AlertConditionTermArray and AlertConditionTermArrayOutput values.
// You can construct a concrete instance of `AlertConditionTermArrayInput` via:
//
// 		 AlertConditionTermArray{ AlertConditionTermArgs{...} }
//
type AlertConditionTermArrayInput interface {
	pulumi.Input

	ToAlertConditionTermArrayOutput() AlertConditionTermArrayOutput
	ToAlertConditionTermArrayOutputWithContext(context.Context) AlertConditionTermArrayOutput
}

type AlertConditionTermArray []AlertConditionTermInput

func (AlertConditionTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConditionTerm)(nil)).Elem()
}

func (i AlertConditionTermArray) ToAlertConditionTermArrayOutput() AlertConditionTermArrayOutput {
	return i.ToAlertConditionTermArrayOutputWithContext(context.Background())
}

func (i AlertConditionTermArray) ToAlertConditionTermArrayOutputWithContext(ctx context.Context) AlertConditionTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConditionTermArrayOutput)
}

type AlertConditionTermOutput struct{ *pulumi.OutputState }

func (AlertConditionTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConditionTerm)(nil)).Elem()
}

func (o AlertConditionTermOutput) ToAlertConditionTermOutput() AlertConditionTermOutput {
	return o
}

func (o AlertConditionTermOutput) ToAlertConditionTermOutputWithContext(ctx context.Context) AlertConditionTermOutput {
	return o
}

func (o AlertConditionTermOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v AlertConditionTerm) int { return v.Duration }).(pulumi.IntOutput)
}

func (o AlertConditionTermOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConditionTerm) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

func (o AlertConditionTermOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConditionTerm) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

func (o AlertConditionTermOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v AlertConditionTerm) float64 { return v.Threshold }).(pulumi.Float64Output)
}

func (o AlertConditionTermOutput) TimeFunction() pulumi.StringOutput {
	return o.ApplyT(func(v AlertConditionTerm) string { return v.TimeFunction }).(pulumi.StringOutput)
}

type AlertConditionTermArrayOutput struct{ *pulumi.OutputState }

func (AlertConditionTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConditionTerm)(nil)).Elem()
}

func (o AlertConditionTermArrayOutput) ToAlertConditionTermArrayOutput() AlertConditionTermArrayOutput {
	return o
}

func (o AlertConditionTermArrayOutput) ToAlertConditionTermArrayOutputWithContext(ctx context.Context) AlertConditionTermArrayOutput {
	return o
}

func (o AlertConditionTermArrayOutput) Index(i pulumi.IntInput) AlertConditionTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConditionTerm {
		return vs[0].([]AlertConditionTerm)[vs[1].(int)]
	}).(AlertConditionTermOutput)
}

func init() {
	pulumi.RegisterOutputType(AlertConditionTermOutput{})
	pulumi.RegisterOutputType(AlertConditionTermArrayOutput{})
}
