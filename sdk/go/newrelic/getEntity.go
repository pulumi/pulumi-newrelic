// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetEntity(ctx *pulumi.Context, args *GetEntityArgs, opts ...pulumi.InvokeOption) (*GetEntityResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEntityResult
	err := ctx.Invoke("newrelic:index/getEntity:getEntity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEntity.
type GetEntityArgs struct {
	// The New Relic account ID the entity to be returned would be associated with, i.e. if specified, the data source would filter matching entities received by `accountId` and return the first match. If not, matching entities are filtered by the account ID specified in the configuration of the provider. See the **Example: Filter By Account ID** section above for more details.
	AccountId *string `pulumi:"accountId"`
	// The entity's domain. Valid values are APM, BROWSER, INFRA, MOBILE, SYNTH, and EXT. If not specified, all domains are searched.
	Domain *string `pulumi:"domain"`
	// A JSON-encoded string, comprising tags associated with the entity fetched.
	// * See the **Additional Examples** section below, for an illustration depicting the usage of `jsondecode` with the attribute `entityTags`, to get the tags associated with the entity fetched.
	EntityTags *string `pulumi:"entityTags"`
	// Ignore case of the `name` when searching for the entity. Defaults to false.
	IgnoreCase *bool `pulumi:"ignoreCase"`
	// A boolean argument that, when set to true, prevents an error from being thrown when the queried entity is not found. Instead, a warning is displayed. Defaults to `false`.
	//
	// > **WARNING:** Setting the `ignoreNotFound` argument to `true` will display an 'entity not found' warning instead of throwing an error. This can lead to downstream errors if the values of attributes exported by this data source are used elsewhere, as all of these values would be null. Please use this argument at your own risk.
	IgnoreNotFound *bool `pulumi:"ignoreNotFound"`
	// The name of the entity in New Relic One.  The first entity matching this name for the given search parameters will be returned.
	Name string `pulumi:"name"`
	// A tag applied to the entity. See Nested tag blocks below for details.
	Tags []GetEntityTag `pulumi:"tags"`
	// The entity's type. Valid values are APPLICATION, DASHBOARD, HOST, MONITOR, WORKLOAD, AWSLAMBDAFUNCTION, SERVICE_LEVEL, and KEY_TRANSACTION. Note: Other entity types may also be queryable as the list of entity types may fluctuate over time.
	Type *string `pulumi:"type"`
}

// A collection of values returned by getEntity.
type GetEntityResult struct {
	AccountId string `pulumi:"accountId"`
	// The domain-specific application ID of the entity. Only returned for APM and Browser applications.
	ApplicationId string `pulumi:"applicationId"`
	Domain        string `pulumi:"domain"`
	// A JSON-encoded string, comprising tags associated with the entity fetched.
	// * See the **Additional Examples** section below, for an illustration depicting the usage of `jsondecode` with the attribute `entityTags`, to get the tags associated with the entity fetched.
	EntityTags string `pulumi:"entityTags"`
	// The unique GUID of the entity.
	Guid string `pulumi:"guid"`
	// The provider-assigned unique ID for this managed resource.
	Id             string `pulumi:"id"`
	IgnoreCase     *bool  `pulumi:"ignoreCase"`
	IgnoreNotFound *bool  `pulumi:"ignoreNotFound"`
	Name           string `pulumi:"name"`
	// The browser-specific ID of the backing APM entity. Only returned for Browser applications.
	ServingApmApplicationId string         `pulumi:"servingApmApplicationId"`
	Tags                    []GetEntityTag `pulumi:"tags"`
	Type                    string         `pulumi:"type"`
}

func GetEntityOutput(ctx *pulumi.Context, args GetEntityOutputArgs, opts ...pulumi.InvokeOption) GetEntityResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEntityResultOutput, error) {
			args := v.(GetEntityArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("newrelic:index/getEntity:getEntity", args, GetEntityResultOutput{}, options).(GetEntityResultOutput), nil
		}).(GetEntityResultOutput)
}

// A collection of arguments for invoking getEntity.
type GetEntityOutputArgs struct {
	// The New Relic account ID the entity to be returned would be associated with, i.e. if specified, the data source would filter matching entities received by `accountId` and return the first match. If not, matching entities are filtered by the account ID specified in the configuration of the provider. See the **Example: Filter By Account ID** section above for more details.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The entity's domain. Valid values are APM, BROWSER, INFRA, MOBILE, SYNTH, and EXT. If not specified, all domains are searched.
	Domain pulumi.StringPtrInput `pulumi:"domain"`
	// A JSON-encoded string, comprising tags associated with the entity fetched.
	// * See the **Additional Examples** section below, for an illustration depicting the usage of `jsondecode` with the attribute `entityTags`, to get the tags associated with the entity fetched.
	EntityTags pulumi.StringPtrInput `pulumi:"entityTags"`
	// Ignore case of the `name` when searching for the entity. Defaults to false.
	IgnoreCase pulumi.BoolPtrInput `pulumi:"ignoreCase"`
	// A boolean argument that, when set to true, prevents an error from being thrown when the queried entity is not found. Instead, a warning is displayed. Defaults to `false`.
	//
	// > **WARNING:** Setting the `ignoreNotFound` argument to `true` will display an 'entity not found' warning instead of throwing an error. This can lead to downstream errors if the values of attributes exported by this data source are used elsewhere, as all of these values would be null. Please use this argument at your own risk.
	IgnoreNotFound pulumi.BoolPtrInput `pulumi:"ignoreNotFound"`
	// The name of the entity in New Relic One.  The first entity matching this name for the given search parameters will be returned.
	Name pulumi.StringInput `pulumi:"name"`
	// A tag applied to the entity. See Nested tag blocks below for details.
	Tags GetEntityTagArrayInput `pulumi:"tags"`
	// The entity's type. Valid values are APPLICATION, DASHBOARD, HOST, MONITOR, WORKLOAD, AWSLAMBDAFUNCTION, SERVICE_LEVEL, and KEY_TRANSACTION. Note: Other entity types may also be queryable as the list of entity types may fluctuate over time.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (GetEntityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityArgs)(nil)).Elem()
}

// A collection of values returned by getEntity.
type GetEntityResultOutput struct{ *pulumi.OutputState }

func (GetEntityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityResult)(nil)).Elem()
}

func (o GetEntityResultOutput) ToGetEntityResultOutput() GetEntityResultOutput {
	return o
}

func (o GetEntityResultOutput) ToGetEntityResultOutputWithContext(ctx context.Context) GetEntityResultOutput {
	return o
}

func (o GetEntityResultOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.AccountId }).(pulumi.StringOutput)
}

// The domain-specific application ID of the entity. Only returned for APM and Browser applications.
func (o GetEntityResultOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o GetEntityResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.Domain }).(pulumi.StringOutput)
}

// A JSON-encoded string, comprising tags associated with the entity fetched.
// * See the **Additional Examples** section below, for an illustration depicting the usage of `jsondecode` with the attribute `entityTags`, to get the tags associated with the entity fetched.
func (o GetEntityResultOutput) EntityTags() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.EntityTags }).(pulumi.StringOutput)
}

// The unique GUID of the entity.
func (o GetEntityResultOutput) Guid() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.Guid }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEntityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEntityResultOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o GetEntityResultOutput) IgnoreNotFound() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetEntityResult) *bool { return v.IgnoreNotFound }).(pulumi.BoolPtrOutput)
}

func (o GetEntityResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.Name }).(pulumi.StringOutput)
}

// The browser-specific ID of the backing APM entity. Only returned for Browser applications.
func (o GetEntityResultOutput) ServingApmApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.ServingApmApplicationId }).(pulumi.StringOutput)
}

func (o GetEntityResultOutput) Tags() GetEntityTagArrayOutput {
	return o.ApplyT(func(v GetEntityResult) []GetEntityTag { return v.Tags }).(GetEntityTagArrayOutput)
}

func (o GetEntityResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEntityResultOutput{})
}
