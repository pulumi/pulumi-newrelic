// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AlertChannelConfig struct {
	// The API key for integrating with OpsGenie.
	ApiKey *string `pulumi:"apiKey"`
	// Specifies an authentication password for use with a channel. Supported by the webhook channel type.
	AuthPassword *string `pulumi:"authPassword"`
	// Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC.
	AuthType *string `pulumi:"authType"`
	// Specifies an authentication username for use with a channel. Supported by the webhook channel type.
	AuthUsername *string `pulumi:"authUsername"`
	// The base URL of the webhook destination.
	BaseUrl *string `pulumi:"baseUrl"`
	// The Slack channel to send notifications to.
	Channel *string `pulumi:"channel"`
	// A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.
	Headers map[string]string `pulumi:"headers"`
	// Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.
	HeadersString *string `pulumi:"headersString"`
	// true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients.
	IncludeJsonAttachment *string `pulumi:"includeJsonAttachment"`
	// The key for integrating with VictorOps.
	Key *string `pulumi:"key"`
	// A map of key/value pairs that represents the webhook payload. Must provide payloadType if setting this argument.
	Payload map[string]string `pulumi:"payload"`
	// Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.
	PayloadString *string `pulumi:"payloadString"`
	// Can either be application/json or application/x-www-form-urlencoded. The payloadType argument is required if payload is set.
	PayloadType *string `pulumi:"payloadType"`
	// A set of recipients for targeting notifications. Multiple values are comma separated.
	Recipients *string `pulumi:"recipients"`
	// The data center region to store your data. Valid values are US and EU. Default is US.
	Region *string `pulumi:"region"`
	// The route key for integrating with VictorOps.
	RouteKey *string `pulumi:"routeKey"`
	// Specifies the service key for integrating with Pagerduty.
	ServiceKey *string `pulumi:"serviceKey"`
	// A set of tags for targeting notifications. Multiple values are comma separated.
	Tags *string `pulumi:"tags"`
	// A set of teams for targeting notifications. Multiple values are comma separated.
	Teams *string `pulumi:"teams"`
	// Your organization's Slack URL.
	Url *string `pulumi:"url"`
	// The user ID for use with the user channel type.
	UserId *string `pulumi:"userId"`
}

// AlertChannelConfigInput is an input type that accepts AlertChannelConfigArgs and AlertChannelConfigOutput values.
// You can construct a concrete instance of `AlertChannelConfigInput` via:
//
//	AlertChannelConfigArgs{...}
type AlertChannelConfigInput interface {
	pulumi.Input

	ToAlertChannelConfigOutput() AlertChannelConfigOutput
	ToAlertChannelConfigOutputWithContext(context.Context) AlertChannelConfigOutput
}

type AlertChannelConfigArgs struct {
	// The API key for integrating with OpsGenie.
	ApiKey pulumi.StringPtrInput `pulumi:"apiKey"`
	// Specifies an authentication password for use with a channel. Supported by the webhook channel type.
	AuthPassword pulumi.StringPtrInput `pulumi:"authPassword"`
	// Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC.
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// Specifies an authentication username for use with a channel. Supported by the webhook channel type.
	AuthUsername pulumi.StringPtrInput `pulumi:"authUsername"`
	// The base URL of the webhook destination.
	BaseUrl pulumi.StringPtrInput `pulumi:"baseUrl"`
	// The Slack channel to send notifications to.
	Channel pulumi.StringPtrInput `pulumi:"channel"`
	// A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.
	Headers pulumi.StringMapInput `pulumi:"headers"`
	// Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.
	HeadersString pulumi.StringPtrInput `pulumi:"headersString"`
	// true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients.
	IncludeJsonAttachment pulumi.StringPtrInput `pulumi:"includeJsonAttachment"`
	// The key for integrating with VictorOps.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// A map of key/value pairs that represents the webhook payload. Must provide payloadType if setting this argument.
	Payload pulumi.StringMapInput `pulumi:"payload"`
	// Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.
	PayloadString pulumi.StringPtrInput `pulumi:"payloadString"`
	// Can either be application/json or application/x-www-form-urlencoded. The payloadType argument is required if payload is set.
	PayloadType pulumi.StringPtrInput `pulumi:"payloadType"`
	// A set of recipients for targeting notifications. Multiple values are comma separated.
	Recipients pulumi.StringPtrInput `pulumi:"recipients"`
	// The data center region to store your data. Valid values are US and EU. Default is US.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// The route key for integrating with VictorOps.
	RouteKey pulumi.StringPtrInput `pulumi:"routeKey"`
	// Specifies the service key for integrating with Pagerduty.
	ServiceKey pulumi.StringPtrInput `pulumi:"serviceKey"`
	// A set of tags for targeting notifications. Multiple values are comma separated.
	Tags pulumi.StringPtrInput `pulumi:"tags"`
	// A set of teams for targeting notifications. Multiple values are comma separated.
	Teams pulumi.StringPtrInput `pulumi:"teams"`
	// Your organization's Slack URL.
	Url pulumi.StringPtrInput `pulumi:"url"`
	// The user ID for use with the user channel type.
	UserId pulumi.StringPtrInput `pulumi:"userId"`
}

func (AlertChannelConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertChannelConfig)(nil)).Elem()
}

func (i AlertChannelConfigArgs) ToAlertChannelConfigOutput() AlertChannelConfigOutput {
	return i.ToAlertChannelConfigOutputWithContext(context.Background())
}

func (i AlertChannelConfigArgs) ToAlertChannelConfigOutputWithContext(ctx context.Context) AlertChannelConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertChannelConfigOutput)
}

func (i AlertChannelConfigArgs) ToAlertChannelConfigPtrOutput() AlertChannelConfigPtrOutput {
	return i.ToAlertChannelConfigPtrOutputWithContext(context.Background())
}

func (i AlertChannelConfigArgs) ToAlertChannelConfigPtrOutputWithContext(ctx context.Context) AlertChannelConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertChannelConfigOutput).ToAlertChannelConfigPtrOutputWithContext(ctx)
}

// AlertChannelConfigPtrInput is an input type that accepts AlertChannelConfigArgs, AlertChannelConfigPtr and AlertChannelConfigPtrOutput values.
// You can construct a concrete instance of `AlertChannelConfigPtrInput` via:
//
//	        AlertChannelConfigArgs{...}
//
//	or:
//
//	        nil
type AlertChannelConfigPtrInput interface {
	pulumi.Input

	ToAlertChannelConfigPtrOutput() AlertChannelConfigPtrOutput
	ToAlertChannelConfigPtrOutputWithContext(context.Context) AlertChannelConfigPtrOutput
}

type alertChannelConfigPtrType AlertChannelConfigArgs

func AlertChannelConfigPtr(v *AlertChannelConfigArgs) AlertChannelConfigPtrInput {
	return (*alertChannelConfigPtrType)(v)
}

func (*alertChannelConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertChannelConfig)(nil)).Elem()
}

func (i *alertChannelConfigPtrType) ToAlertChannelConfigPtrOutput() AlertChannelConfigPtrOutput {
	return i.ToAlertChannelConfigPtrOutputWithContext(context.Background())
}

func (i *alertChannelConfigPtrType) ToAlertChannelConfigPtrOutputWithContext(ctx context.Context) AlertChannelConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertChannelConfigPtrOutput)
}

type AlertChannelConfigOutput struct{ *pulumi.OutputState }

func (AlertChannelConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertChannelConfig)(nil)).Elem()
}

func (o AlertChannelConfigOutput) ToAlertChannelConfigOutput() AlertChannelConfigOutput {
	return o
}

func (o AlertChannelConfigOutput) ToAlertChannelConfigOutputWithContext(ctx context.Context) AlertChannelConfigOutput {
	return o
}

func (o AlertChannelConfigOutput) ToAlertChannelConfigPtrOutput() AlertChannelConfigPtrOutput {
	return o.ToAlertChannelConfigPtrOutputWithContext(context.Background())
}

func (o AlertChannelConfigOutput) ToAlertChannelConfigPtrOutputWithContext(ctx context.Context) AlertChannelConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertChannelConfig) *AlertChannelConfig {
		return &v
	}).(AlertChannelConfigPtrOutput)
}

// The API key for integrating with OpsGenie.
func (o AlertChannelConfigOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

// Specifies an authentication password for use with a channel. Supported by the webhook channel type.
func (o AlertChannelConfigOutput) AuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.AuthPassword }).(pulumi.StringPtrOutput)
}

// Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC.
func (o AlertChannelConfigOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Specifies an authentication username for use with a channel. Supported by the webhook channel type.
func (o AlertChannelConfigOutput) AuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.AuthUsername }).(pulumi.StringPtrOutput)
}

// The base URL of the webhook destination.
func (o AlertChannelConfigOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.BaseUrl }).(pulumi.StringPtrOutput)
}

// The Slack channel to send notifications to.
func (o AlertChannelConfigOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

// A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.
func (o AlertChannelConfigOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertChannelConfig) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

// Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.
func (o AlertChannelConfigOutput) HeadersString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.HeadersString }).(pulumi.StringPtrOutput)
}

// true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients.
func (o AlertChannelConfigOutput) IncludeJsonAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.IncludeJsonAttachment }).(pulumi.StringPtrOutput)
}

// The key for integrating with VictorOps.
func (o AlertChannelConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// A map of key/value pairs that represents the webhook payload. Must provide payloadType if setting this argument.
func (o AlertChannelConfigOutput) Payload() pulumi.StringMapOutput {
	return o.ApplyT(func(v AlertChannelConfig) map[string]string { return v.Payload }).(pulumi.StringMapOutput)
}

// Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.
func (o AlertChannelConfigOutput) PayloadString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.PayloadString }).(pulumi.StringPtrOutput)
}

// Can either be application/json or application/x-www-form-urlencoded. The payloadType argument is required if payload is set.
func (o AlertChannelConfigOutput) PayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.PayloadType }).(pulumi.StringPtrOutput)
}

// A set of recipients for targeting notifications. Multiple values are comma separated.
func (o AlertChannelConfigOutput) Recipients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Recipients }).(pulumi.StringPtrOutput)
}

// The data center region to store your data. Valid values are US and EU. Default is US.
func (o AlertChannelConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// The route key for integrating with VictorOps.
func (o AlertChannelConfigOutput) RouteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.RouteKey }).(pulumi.StringPtrOutput)
}

// Specifies the service key for integrating with Pagerduty.
func (o AlertChannelConfigOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

// A set of tags for targeting notifications. Multiple values are comma separated.
func (o AlertChannelConfigOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

// A set of teams for targeting notifications. Multiple values are comma separated.
func (o AlertChannelConfigOutput) Teams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Teams }).(pulumi.StringPtrOutput)
}

// Your organization's Slack URL.
func (o AlertChannelConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

// The user ID for use with the user channel type.
func (o AlertChannelConfigOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertChannelConfig) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type AlertChannelConfigPtrOutput struct{ *pulumi.OutputState }

func (AlertChannelConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertChannelConfig)(nil)).Elem()
}

func (o AlertChannelConfigPtrOutput) ToAlertChannelConfigPtrOutput() AlertChannelConfigPtrOutput {
	return o
}

func (o AlertChannelConfigPtrOutput) ToAlertChannelConfigPtrOutputWithContext(ctx context.Context) AlertChannelConfigPtrOutput {
	return o
}

func (o AlertChannelConfigPtrOutput) Elem() AlertChannelConfigOutput {
	return o.ApplyT(func(v *AlertChannelConfig) AlertChannelConfig {
		if v != nil {
			return *v
		}
		var ret AlertChannelConfig
		return ret
	}).(AlertChannelConfigOutput)
}

// The API key for integrating with OpsGenie.
func (o AlertChannelConfigPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Specifies an authentication password for use with a channel. Supported by the webhook channel type.
func (o AlertChannelConfigPtrOutput) AuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthPassword
	}).(pulumi.StringPtrOutput)
}

// Specifies an authentication method for use with a channel. Supported by the webhook channel type. Only HTTP basic authentication is currently supported via the value BASIC.
func (o AlertChannelConfigPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Specifies an authentication username for use with a channel. Supported by the webhook channel type.
func (o AlertChannelConfigPtrOutput) AuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthUsername
	}).(pulumi.StringPtrOutput)
}

// The base URL of the webhook destination.
func (o AlertChannelConfigPtrOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.BaseUrl
	}).(pulumi.StringPtrOutput)
}

// The Slack channel to send notifications to.
func (o AlertChannelConfigPtrOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Channel
	}).(pulumi.StringPtrOutput)
}

// A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.
func (o AlertChannelConfigPtrOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlertChannelConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringMapOutput)
}

// Use instead of headers if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with headers.
func (o AlertChannelConfigPtrOutput) HeadersString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.HeadersString
	}).(pulumi.StringPtrOutput)
}

// true or false. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients.
func (o AlertChannelConfigPtrOutput) IncludeJsonAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.IncludeJsonAttachment
	}).(pulumi.StringPtrOutput)
}

// The key for integrating with VictorOps.
func (o AlertChannelConfigPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Key
	}).(pulumi.StringPtrOutput)
}

// A map of key/value pairs that represents the webhook payload. Must provide payloadType if setting this argument.
func (o AlertChannelConfigPtrOutput) Payload() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AlertChannelConfig) map[string]string {
		if v == nil {
			return nil
		}
		return v.Payload
	}).(pulumi.StringMapOutput)
}

// Use instead of payload if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects). The value provided should be a valid JSON string with escaped double quotes. Conflicts with payload.
func (o AlertChannelConfigPtrOutput) PayloadString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.PayloadString
	}).(pulumi.StringPtrOutput)
}

// Can either be application/json or application/x-www-form-urlencoded. The payloadType argument is required if payload is set.
func (o AlertChannelConfigPtrOutput) PayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.PayloadType
	}).(pulumi.StringPtrOutput)
}

// A set of recipients for targeting notifications. Multiple values are comma separated.
func (o AlertChannelConfigPtrOutput) Recipients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Recipients
	}).(pulumi.StringPtrOutput)
}

// The data center region to store your data. Valid values are US and EU. Default is US.
func (o AlertChannelConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// The route key for integrating with VictorOps.
func (o AlertChannelConfigPtrOutput) RouteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.RouteKey
	}).(pulumi.StringPtrOutput)
}

// Specifies the service key for integrating with Pagerduty.
func (o AlertChannelConfigPtrOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServiceKey
	}).(pulumi.StringPtrOutput)
}

// A set of tags for targeting notifications. Multiple values are comma separated.
func (o AlertChannelConfigPtrOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringPtrOutput)
}

// A set of teams for targeting notifications. Multiple values are comma separated.
func (o AlertChannelConfigPtrOutput) Teams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Teams
	}).(pulumi.StringPtrOutput)
}

// Your organization's Slack URL.
func (o AlertChannelConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// The user ID for use with the user channel type.
func (o AlertChannelConfigPtrOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertChannelConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserId
	}).(pulumi.StringPtrOutput)
}

type AlertConditionTerm struct {
	// In minutes, must be in the range of 5 to 120, inclusive.
	Duration int `pulumi:"duration"`
	// One of (above, below, equal). Defaults to equal.
	Operator *string `pulumi:"operator"`
	// One of (critical, warning). Defaults to critical.
	Priority *string `pulumi:"priority"`
	// Must be 0 or greater.
	Threshold float64 `pulumi:"threshold"`
	// One of (all, any).
	TimeFunction string `pulumi:"timeFunction"`
}

// AlertConditionTermInput is an input type that accepts AlertConditionTermArgs and AlertConditionTermOutput values.
// You can construct a concrete instance of `AlertConditionTermInput` via:
//
//	AlertConditionTermArgs{...}
type AlertConditionTermInput interface {
	pulumi.Input

	ToAlertConditionTermOutput() AlertConditionTermOutput
	ToAlertConditionTermOutputWithContext(context.Context) AlertConditionTermOutput
}

type AlertConditionTermArgs struct {
	// In minutes, must be in the range of 5 to 120, inclusive.
	Duration pulumi.IntInput `pulumi:"duration"`
	// One of (above, below, equal). Defaults to equal.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// One of (critical, warning). Defaults to critical.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// Must be 0 or greater.
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// One of (all, any).
	TimeFunction pulumi.StringInput `pulumi:"timeFunction"`
}

func (AlertConditionTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConditionTerm)(nil)).Elem()
}

func (i AlertConditionTermArgs) ToAlertConditionTermOutput() AlertConditionTermOutput {
	return i.ToAlertConditionTermOutputWithContext(context.Background())
}

func (i AlertConditionTermArgs) ToAlertConditionTermOutputWithContext(ctx context.Context) AlertConditionTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConditionTermOutput)
}

// AlertConditionTermArrayInput is an input type that accepts AlertConditionTermArray and AlertConditionTermArrayOutput values.
// You can construct a concrete instance of `AlertConditionTermArrayInput` via:
//
//	AlertConditionTermArray{ AlertConditionTermArgs{...} }
type AlertConditionTermArrayInput interface {
	pulumi.Input

	ToAlertConditionTermArrayOutput() AlertConditionTermArrayOutput
	ToAlertConditionTermArrayOutputWithContext(context.Context) AlertConditionTermArrayOutput
}

type AlertConditionTermArray []AlertConditionTermInput

func (AlertConditionTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConditionTerm)(nil)).Elem()
}

func (i AlertConditionTermArray) ToAlertConditionTermArrayOutput() AlertConditionTermArrayOutput {
	return i.ToAlertConditionTermArrayOutputWithContext(context.Background())
}

func (i AlertConditionTermArray) ToAlertConditionTermArrayOutputWithContext(ctx context.Context) AlertConditionTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertConditionTermArrayOutput)
}

type AlertConditionTermOutput struct{ *pulumi.OutputState }

func (AlertConditionTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertConditionTerm)(nil)).Elem()
}

func (o AlertConditionTermOutput) ToAlertConditionTermOutput() AlertConditionTermOutput {
	return o
}

func (o AlertConditionTermOutput) ToAlertConditionTermOutputWithContext(ctx context.Context) AlertConditionTermOutput {
	return o
}

// In minutes, must be in the range of 5 to 120, inclusive.
func (o AlertConditionTermOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v AlertConditionTerm) int { return v.Duration }).(pulumi.IntOutput)
}

// One of (above, below, equal). Defaults to equal.
func (o AlertConditionTermOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConditionTerm) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// One of (critical, warning). Defaults to critical.
func (o AlertConditionTermOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertConditionTerm) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// Must be 0 or greater.
func (o AlertConditionTermOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v AlertConditionTerm) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// One of (all, any).
func (o AlertConditionTermOutput) TimeFunction() pulumi.StringOutput {
	return o.ApplyT(func(v AlertConditionTerm) string { return v.TimeFunction }).(pulumi.StringOutput)
}

type AlertConditionTermArrayOutput struct{ *pulumi.OutputState }

func (AlertConditionTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertConditionTerm)(nil)).Elem()
}

func (o AlertConditionTermArrayOutput) ToAlertConditionTermArrayOutput() AlertConditionTermArrayOutput {
	return o
}

func (o AlertConditionTermArrayOutput) ToAlertConditionTermArrayOutputWithContext(ctx context.Context) AlertConditionTermArrayOutput {
	return o
}

func (o AlertConditionTermArrayOutput) Index(i pulumi.IntInput) AlertConditionTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertConditionTerm {
		return vs[0].([]AlertConditionTerm)[vs[1].(int)]
	}).(AlertConditionTermOutput)
}

type AlertMutingRuleCondition struct {
	// The individual MutingRuleConditions within the group. See Nested conditions blocks below for details.
	Conditions []AlertMutingRuleConditionCondition `pulumi:"conditions"`
	// The operator used to combine all the MutingRuleConditions within the group. Valid values are `AND`, `OR`.
	Operator string `pulumi:"operator"`
}

// AlertMutingRuleConditionInput is an input type that accepts AlertMutingRuleConditionArgs and AlertMutingRuleConditionOutput values.
// You can construct a concrete instance of `AlertMutingRuleConditionInput` via:
//
//	AlertMutingRuleConditionArgs{...}
type AlertMutingRuleConditionInput interface {
	pulumi.Input

	ToAlertMutingRuleConditionOutput() AlertMutingRuleConditionOutput
	ToAlertMutingRuleConditionOutputWithContext(context.Context) AlertMutingRuleConditionOutput
}

type AlertMutingRuleConditionArgs struct {
	// The individual MutingRuleConditions within the group. See Nested conditions blocks below for details.
	Conditions AlertMutingRuleConditionConditionArrayInput `pulumi:"conditions"`
	// The operator used to combine all the MutingRuleConditions within the group. Valid values are `AND`, `OR`.
	Operator pulumi.StringInput `pulumi:"operator"`
}

func (AlertMutingRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMutingRuleCondition)(nil)).Elem()
}

func (i AlertMutingRuleConditionArgs) ToAlertMutingRuleConditionOutput() AlertMutingRuleConditionOutput {
	return i.ToAlertMutingRuleConditionOutputWithContext(context.Background())
}

func (i AlertMutingRuleConditionArgs) ToAlertMutingRuleConditionOutputWithContext(ctx context.Context) AlertMutingRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleConditionOutput)
}

func (i AlertMutingRuleConditionArgs) ToAlertMutingRuleConditionPtrOutput() AlertMutingRuleConditionPtrOutput {
	return i.ToAlertMutingRuleConditionPtrOutputWithContext(context.Background())
}

func (i AlertMutingRuleConditionArgs) ToAlertMutingRuleConditionPtrOutputWithContext(ctx context.Context) AlertMutingRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleConditionOutput).ToAlertMutingRuleConditionPtrOutputWithContext(ctx)
}

// AlertMutingRuleConditionPtrInput is an input type that accepts AlertMutingRuleConditionArgs, AlertMutingRuleConditionPtr and AlertMutingRuleConditionPtrOutput values.
// You can construct a concrete instance of `AlertMutingRuleConditionPtrInput` via:
//
//	        AlertMutingRuleConditionArgs{...}
//
//	or:
//
//	        nil
type AlertMutingRuleConditionPtrInput interface {
	pulumi.Input

	ToAlertMutingRuleConditionPtrOutput() AlertMutingRuleConditionPtrOutput
	ToAlertMutingRuleConditionPtrOutputWithContext(context.Context) AlertMutingRuleConditionPtrOutput
}

type alertMutingRuleConditionPtrType AlertMutingRuleConditionArgs

func AlertMutingRuleConditionPtr(v *AlertMutingRuleConditionArgs) AlertMutingRuleConditionPtrInput {
	return (*alertMutingRuleConditionPtrType)(v)
}

func (*alertMutingRuleConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMutingRuleCondition)(nil)).Elem()
}

func (i *alertMutingRuleConditionPtrType) ToAlertMutingRuleConditionPtrOutput() AlertMutingRuleConditionPtrOutput {
	return i.ToAlertMutingRuleConditionPtrOutputWithContext(context.Background())
}

func (i *alertMutingRuleConditionPtrType) ToAlertMutingRuleConditionPtrOutputWithContext(ctx context.Context) AlertMutingRuleConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleConditionPtrOutput)
}

type AlertMutingRuleConditionOutput struct{ *pulumi.OutputState }

func (AlertMutingRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMutingRuleCondition)(nil)).Elem()
}

func (o AlertMutingRuleConditionOutput) ToAlertMutingRuleConditionOutput() AlertMutingRuleConditionOutput {
	return o
}

func (o AlertMutingRuleConditionOutput) ToAlertMutingRuleConditionOutputWithContext(ctx context.Context) AlertMutingRuleConditionOutput {
	return o
}

func (o AlertMutingRuleConditionOutput) ToAlertMutingRuleConditionPtrOutput() AlertMutingRuleConditionPtrOutput {
	return o.ToAlertMutingRuleConditionPtrOutputWithContext(context.Background())
}

func (o AlertMutingRuleConditionOutput) ToAlertMutingRuleConditionPtrOutputWithContext(ctx context.Context) AlertMutingRuleConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertMutingRuleCondition) *AlertMutingRuleCondition {
		return &v
	}).(AlertMutingRuleConditionPtrOutput)
}

// The individual MutingRuleConditions within the group. See Nested conditions blocks below for details.
func (o AlertMutingRuleConditionOutput) Conditions() AlertMutingRuleConditionConditionArrayOutput {
	return o.ApplyT(func(v AlertMutingRuleCondition) []AlertMutingRuleConditionCondition { return v.Conditions }).(AlertMutingRuleConditionConditionArrayOutput)
}

// The operator used to combine all the MutingRuleConditions within the group. Valid values are `AND`, `OR`.
func (o AlertMutingRuleConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AlertMutingRuleCondition) string { return v.Operator }).(pulumi.StringOutput)
}

type AlertMutingRuleConditionPtrOutput struct{ *pulumi.OutputState }

func (AlertMutingRuleConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMutingRuleCondition)(nil)).Elem()
}

func (o AlertMutingRuleConditionPtrOutput) ToAlertMutingRuleConditionPtrOutput() AlertMutingRuleConditionPtrOutput {
	return o
}

func (o AlertMutingRuleConditionPtrOutput) ToAlertMutingRuleConditionPtrOutputWithContext(ctx context.Context) AlertMutingRuleConditionPtrOutput {
	return o
}

func (o AlertMutingRuleConditionPtrOutput) Elem() AlertMutingRuleConditionOutput {
	return o.ApplyT(func(v *AlertMutingRuleCondition) AlertMutingRuleCondition {
		if v != nil {
			return *v
		}
		var ret AlertMutingRuleCondition
		return ret
	}).(AlertMutingRuleConditionOutput)
}

// The individual MutingRuleConditions within the group. See Nested conditions blocks below for details.
func (o AlertMutingRuleConditionPtrOutput) Conditions() AlertMutingRuleConditionConditionArrayOutput {
	return o.ApplyT(func(v *AlertMutingRuleCondition) []AlertMutingRuleConditionCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(AlertMutingRuleConditionConditionArrayOutput)
}

// The operator used to combine all the MutingRuleConditions within the group. Valid values are `AND`, `OR`.
func (o AlertMutingRuleConditionPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Operator
	}).(pulumi.StringPtrOutput)
}

type AlertMutingRuleConditionCondition struct {
	// The attribute on an incident.
	Attribute string `pulumi:"attribute"`
	// The operator used to compare the attribute's value with the supplied value(s).
	Operator string `pulumi:"operator"`
	// The value(s) to compare against the attribute's value.
	Values []string `pulumi:"values"`
}

// AlertMutingRuleConditionConditionInput is an input type that accepts AlertMutingRuleConditionConditionArgs and AlertMutingRuleConditionConditionOutput values.
// You can construct a concrete instance of `AlertMutingRuleConditionConditionInput` via:
//
//	AlertMutingRuleConditionConditionArgs{...}
type AlertMutingRuleConditionConditionInput interface {
	pulumi.Input

	ToAlertMutingRuleConditionConditionOutput() AlertMutingRuleConditionConditionOutput
	ToAlertMutingRuleConditionConditionOutputWithContext(context.Context) AlertMutingRuleConditionConditionOutput
}

type AlertMutingRuleConditionConditionArgs struct {
	// The attribute on an incident.
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The operator used to compare the attribute's value with the supplied value(s).
	Operator pulumi.StringInput `pulumi:"operator"`
	// The value(s) to compare against the attribute's value.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (AlertMutingRuleConditionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMutingRuleConditionCondition)(nil)).Elem()
}

func (i AlertMutingRuleConditionConditionArgs) ToAlertMutingRuleConditionConditionOutput() AlertMutingRuleConditionConditionOutput {
	return i.ToAlertMutingRuleConditionConditionOutputWithContext(context.Background())
}

func (i AlertMutingRuleConditionConditionArgs) ToAlertMutingRuleConditionConditionOutputWithContext(ctx context.Context) AlertMutingRuleConditionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleConditionConditionOutput)
}

// AlertMutingRuleConditionConditionArrayInput is an input type that accepts AlertMutingRuleConditionConditionArray and AlertMutingRuleConditionConditionArrayOutput values.
// You can construct a concrete instance of `AlertMutingRuleConditionConditionArrayInput` via:
//
//	AlertMutingRuleConditionConditionArray{ AlertMutingRuleConditionConditionArgs{...} }
type AlertMutingRuleConditionConditionArrayInput interface {
	pulumi.Input

	ToAlertMutingRuleConditionConditionArrayOutput() AlertMutingRuleConditionConditionArrayOutput
	ToAlertMutingRuleConditionConditionArrayOutputWithContext(context.Context) AlertMutingRuleConditionConditionArrayOutput
}

type AlertMutingRuleConditionConditionArray []AlertMutingRuleConditionConditionInput

func (AlertMutingRuleConditionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertMutingRuleConditionCondition)(nil)).Elem()
}

func (i AlertMutingRuleConditionConditionArray) ToAlertMutingRuleConditionConditionArrayOutput() AlertMutingRuleConditionConditionArrayOutput {
	return i.ToAlertMutingRuleConditionConditionArrayOutputWithContext(context.Background())
}

func (i AlertMutingRuleConditionConditionArray) ToAlertMutingRuleConditionConditionArrayOutputWithContext(ctx context.Context) AlertMutingRuleConditionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleConditionConditionArrayOutput)
}

type AlertMutingRuleConditionConditionOutput struct{ *pulumi.OutputState }

func (AlertMutingRuleConditionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMutingRuleConditionCondition)(nil)).Elem()
}

func (o AlertMutingRuleConditionConditionOutput) ToAlertMutingRuleConditionConditionOutput() AlertMutingRuleConditionConditionOutput {
	return o
}

func (o AlertMutingRuleConditionConditionOutput) ToAlertMutingRuleConditionConditionOutputWithContext(ctx context.Context) AlertMutingRuleConditionConditionOutput {
	return o
}

// The attribute on an incident.
func (o AlertMutingRuleConditionConditionOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v AlertMutingRuleConditionCondition) string { return v.Attribute }).(pulumi.StringOutput)
}

// The operator used to compare the attribute's value with the supplied value(s).
func (o AlertMutingRuleConditionConditionOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AlertMutingRuleConditionCondition) string { return v.Operator }).(pulumi.StringOutput)
}

// The value(s) to compare against the attribute's value.
func (o AlertMutingRuleConditionConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertMutingRuleConditionCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type AlertMutingRuleConditionConditionArrayOutput struct{ *pulumi.OutputState }

func (AlertMutingRuleConditionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertMutingRuleConditionCondition)(nil)).Elem()
}

func (o AlertMutingRuleConditionConditionArrayOutput) ToAlertMutingRuleConditionConditionArrayOutput() AlertMutingRuleConditionConditionArrayOutput {
	return o
}

func (o AlertMutingRuleConditionConditionArrayOutput) ToAlertMutingRuleConditionConditionArrayOutputWithContext(ctx context.Context) AlertMutingRuleConditionConditionArrayOutput {
	return o
}

func (o AlertMutingRuleConditionConditionArrayOutput) Index(i pulumi.IntInput) AlertMutingRuleConditionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertMutingRuleConditionCondition {
		return vs[0].([]AlertMutingRuleConditionCondition)[vs[1].(int)]
	}).(AlertMutingRuleConditionConditionOutput)
}

type AlertMutingRuleSchedule struct {
	// The datetime stamp when the muting rule schedule stops repeating. This is in local ISO 8601 format without an offset. Example: '2020-07-10T15:00:00'. Conflicts with `repeatCount`
	EndRepeat *string `pulumi:"endRepeat"`
	// The datetime stamp that represents when the muting rule ends. This is in local ISO 8601 format without an offset. Example: '2020-07-15T14:30:00'
	// * `timeZone` (Required) The time zone that applies to the muting rule schedule. Example: 'America/Los_Angeles'. See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	EndTime *string `pulumi:"endTime"`
	// The frequency the muting rule schedule repeats. If it does not repeat, omit this field. Options are DAILY, WEEKLY, MONTHLY
	Repeat *string `pulumi:"repeat"`
	// The number of times the muting rule schedule repeats. This includes the original schedule. For example, a repeatCount of 2 will recur one time. Conflicts with `endRepeat`
	RepeatCount *int `pulumi:"repeatCount"`
	// The datetime stamp that represents when the muting rule starts. This is in local ISO 8601 format without an offset. Example: '2020-07-08T14:30:00'
	StartTime *string `pulumi:"startTime"`
	// The time zone that applies to the MutingRule schedule.
	TimeZone string `pulumi:"timeZone"`
	// The day(s) of the week that a muting rule should repeat when the repeat field is set to 'WEEKLY'. Example: ['MONDAY', 'WEDNESDAY']
	WeeklyRepeatDays []string `pulumi:"weeklyRepeatDays"`
}

// AlertMutingRuleScheduleInput is an input type that accepts AlertMutingRuleScheduleArgs and AlertMutingRuleScheduleOutput values.
// You can construct a concrete instance of `AlertMutingRuleScheduleInput` via:
//
//	AlertMutingRuleScheduleArgs{...}
type AlertMutingRuleScheduleInput interface {
	pulumi.Input

	ToAlertMutingRuleScheduleOutput() AlertMutingRuleScheduleOutput
	ToAlertMutingRuleScheduleOutputWithContext(context.Context) AlertMutingRuleScheduleOutput
}

type AlertMutingRuleScheduleArgs struct {
	// The datetime stamp when the muting rule schedule stops repeating. This is in local ISO 8601 format without an offset. Example: '2020-07-10T15:00:00'. Conflicts with `repeatCount`
	EndRepeat pulumi.StringPtrInput `pulumi:"endRepeat"`
	// The datetime stamp that represents when the muting rule ends. This is in local ISO 8601 format without an offset. Example: '2020-07-15T14:30:00'
	// * `timeZone` (Required) The time zone that applies to the muting rule schedule. Example: 'America/Los_Angeles'. See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
	EndTime pulumi.StringPtrInput `pulumi:"endTime"`
	// The frequency the muting rule schedule repeats. If it does not repeat, omit this field. Options are DAILY, WEEKLY, MONTHLY
	Repeat pulumi.StringPtrInput `pulumi:"repeat"`
	// The number of times the muting rule schedule repeats. This includes the original schedule. For example, a repeatCount of 2 will recur one time. Conflicts with `endRepeat`
	RepeatCount pulumi.IntPtrInput `pulumi:"repeatCount"`
	// The datetime stamp that represents when the muting rule starts. This is in local ISO 8601 format without an offset. Example: '2020-07-08T14:30:00'
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
	// The time zone that applies to the MutingRule schedule.
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
	// The day(s) of the week that a muting rule should repeat when the repeat field is set to 'WEEKLY'. Example: ['MONDAY', 'WEDNESDAY']
	WeeklyRepeatDays pulumi.StringArrayInput `pulumi:"weeklyRepeatDays"`
}

func (AlertMutingRuleScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMutingRuleSchedule)(nil)).Elem()
}

func (i AlertMutingRuleScheduleArgs) ToAlertMutingRuleScheduleOutput() AlertMutingRuleScheduleOutput {
	return i.ToAlertMutingRuleScheduleOutputWithContext(context.Background())
}

func (i AlertMutingRuleScheduleArgs) ToAlertMutingRuleScheduleOutputWithContext(ctx context.Context) AlertMutingRuleScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleScheduleOutput)
}

func (i AlertMutingRuleScheduleArgs) ToAlertMutingRuleSchedulePtrOutput() AlertMutingRuleSchedulePtrOutput {
	return i.ToAlertMutingRuleSchedulePtrOutputWithContext(context.Background())
}

func (i AlertMutingRuleScheduleArgs) ToAlertMutingRuleSchedulePtrOutputWithContext(ctx context.Context) AlertMutingRuleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleScheduleOutput).ToAlertMutingRuleSchedulePtrOutputWithContext(ctx)
}

// AlertMutingRuleSchedulePtrInput is an input type that accepts AlertMutingRuleScheduleArgs, AlertMutingRuleSchedulePtr and AlertMutingRuleSchedulePtrOutput values.
// You can construct a concrete instance of `AlertMutingRuleSchedulePtrInput` via:
//
//	        AlertMutingRuleScheduleArgs{...}
//
//	or:
//
//	        nil
type AlertMutingRuleSchedulePtrInput interface {
	pulumi.Input

	ToAlertMutingRuleSchedulePtrOutput() AlertMutingRuleSchedulePtrOutput
	ToAlertMutingRuleSchedulePtrOutputWithContext(context.Context) AlertMutingRuleSchedulePtrOutput
}

type alertMutingRuleSchedulePtrType AlertMutingRuleScheduleArgs

func AlertMutingRuleSchedulePtr(v *AlertMutingRuleScheduleArgs) AlertMutingRuleSchedulePtrInput {
	return (*alertMutingRuleSchedulePtrType)(v)
}

func (*alertMutingRuleSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMutingRuleSchedule)(nil)).Elem()
}

func (i *alertMutingRuleSchedulePtrType) ToAlertMutingRuleSchedulePtrOutput() AlertMutingRuleSchedulePtrOutput {
	return i.ToAlertMutingRuleSchedulePtrOutputWithContext(context.Background())
}

func (i *alertMutingRuleSchedulePtrType) ToAlertMutingRuleSchedulePtrOutputWithContext(ctx context.Context) AlertMutingRuleSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMutingRuleSchedulePtrOutput)
}

type AlertMutingRuleScheduleOutput struct{ *pulumi.OutputState }

func (AlertMutingRuleScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMutingRuleSchedule)(nil)).Elem()
}

func (o AlertMutingRuleScheduleOutput) ToAlertMutingRuleScheduleOutput() AlertMutingRuleScheduleOutput {
	return o
}

func (o AlertMutingRuleScheduleOutput) ToAlertMutingRuleScheduleOutputWithContext(ctx context.Context) AlertMutingRuleScheduleOutput {
	return o
}

func (o AlertMutingRuleScheduleOutput) ToAlertMutingRuleSchedulePtrOutput() AlertMutingRuleSchedulePtrOutput {
	return o.ToAlertMutingRuleSchedulePtrOutputWithContext(context.Background())
}

func (o AlertMutingRuleScheduleOutput) ToAlertMutingRuleSchedulePtrOutputWithContext(ctx context.Context) AlertMutingRuleSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertMutingRuleSchedule) *AlertMutingRuleSchedule {
		return &v
	}).(AlertMutingRuleSchedulePtrOutput)
}

// The datetime stamp when the muting rule schedule stops repeating. This is in local ISO 8601 format without an offset. Example: '2020-07-10T15:00:00'. Conflicts with `repeatCount`
func (o AlertMutingRuleScheduleOutput) EndRepeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) *string { return v.EndRepeat }).(pulumi.StringPtrOutput)
}

// The datetime stamp that represents when the muting rule ends. This is in local ISO 8601 format without an offset. Example: '2020-07-15T14:30:00'
// * `timeZone` (Required) The time zone that applies to the muting rule schedule. Example: 'America/Los_Angeles'. See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
func (o AlertMutingRuleScheduleOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The frequency the muting rule schedule repeats. If it does not repeat, omit this field. Options are DAILY, WEEKLY, MONTHLY
func (o AlertMutingRuleScheduleOutput) Repeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) *string { return v.Repeat }).(pulumi.StringPtrOutput)
}

// The number of times the muting rule schedule repeats. This includes the original schedule. For example, a repeatCount of 2 will recur one time. Conflicts with `endRepeat`
func (o AlertMutingRuleScheduleOutput) RepeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) *int { return v.RepeatCount }).(pulumi.IntPtrOutput)
}

// The datetime stamp that represents when the muting rule starts. This is in local ISO 8601 format without an offset. Example: '2020-07-08T14:30:00'
func (o AlertMutingRuleScheduleOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

// The time zone that applies to the MutingRule schedule.
func (o AlertMutingRuleScheduleOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) string { return v.TimeZone }).(pulumi.StringOutput)
}

// The day(s) of the week that a muting rule should repeat when the repeat field is set to 'WEEKLY'. Example: ['MONDAY', 'WEDNESDAY']
func (o AlertMutingRuleScheduleOutput) WeeklyRepeatDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlertMutingRuleSchedule) []string { return v.WeeklyRepeatDays }).(pulumi.StringArrayOutput)
}

type AlertMutingRuleSchedulePtrOutput struct{ *pulumi.OutputState }

func (AlertMutingRuleSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMutingRuleSchedule)(nil)).Elem()
}

func (o AlertMutingRuleSchedulePtrOutput) ToAlertMutingRuleSchedulePtrOutput() AlertMutingRuleSchedulePtrOutput {
	return o
}

func (o AlertMutingRuleSchedulePtrOutput) ToAlertMutingRuleSchedulePtrOutputWithContext(ctx context.Context) AlertMutingRuleSchedulePtrOutput {
	return o
}

func (o AlertMutingRuleSchedulePtrOutput) Elem() AlertMutingRuleScheduleOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) AlertMutingRuleSchedule {
		if v != nil {
			return *v
		}
		var ret AlertMutingRuleSchedule
		return ret
	}).(AlertMutingRuleScheduleOutput)
}

// The datetime stamp when the muting rule schedule stops repeating. This is in local ISO 8601 format without an offset. Example: '2020-07-10T15:00:00'. Conflicts with `repeatCount`
func (o AlertMutingRuleSchedulePtrOutput) EndRepeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndRepeat
	}).(pulumi.StringPtrOutput)
}

// The datetime stamp that represents when the muting rule ends. This is in local ISO 8601 format without an offset. Example: '2020-07-15T14:30:00'
// * `timeZone` (Required) The time zone that applies to the muting rule schedule. Example: 'America/Los_Angeles'. See https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
func (o AlertMutingRuleSchedulePtrOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) *string {
		if v == nil {
			return nil
		}
		return v.EndTime
	}).(pulumi.StringPtrOutput)
}

// The frequency the muting rule schedule repeats. If it does not repeat, omit this field. Options are DAILY, WEEKLY, MONTHLY
func (o AlertMutingRuleSchedulePtrOutput) Repeat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) *string {
		if v == nil {
			return nil
		}
		return v.Repeat
	}).(pulumi.StringPtrOutput)
}

// The number of times the muting rule schedule repeats. This includes the original schedule. For example, a repeatCount of 2 will recur one time. Conflicts with `endRepeat`
func (o AlertMutingRuleSchedulePtrOutput) RepeatCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) *int {
		if v == nil {
			return nil
		}
		return v.RepeatCount
	}).(pulumi.IntPtrOutput)
}

// The datetime stamp that represents when the muting rule starts. This is in local ISO 8601 format without an offset. Example: '2020-07-08T14:30:00'
func (o AlertMutingRuleSchedulePtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

// The time zone that applies to the MutingRule schedule.
func (o AlertMutingRuleSchedulePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.TimeZone
	}).(pulumi.StringPtrOutput)
}

// The day(s) of the week that a muting rule should repeat when the repeat field is set to 'WEEKLY'. Example: ['MONDAY', 'WEDNESDAY']
func (o AlertMutingRuleSchedulePtrOutput) WeeklyRepeatDays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertMutingRuleSchedule) []string {
		if v == nil {
			return nil
		}
		return v.WeeklyRepeatDays
	}).(pulumi.StringArrayOutput)
}

type EntityTagsTag struct {
	// The key of the tag.
	//
	// > **NOTE:** One should not use reserved (immutable) keys with this resource. It is recommended to choose unique and descriptive keys which do not conflict with existing reserved keys.
	Key string `pulumi:"key"`
	// The tag values.
	Values []string `pulumi:"values"`
}

// EntityTagsTagInput is an input type that accepts EntityTagsTagArgs and EntityTagsTagOutput values.
// You can construct a concrete instance of `EntityTagsTagInput` via:
//
//	EntityTagsTagArgs{...}
type EntityTagsTagInput interface {
	pulumi.Input

	ToEntityTagsTagOutput() EntityTagsTagOutput
	ToEntityTagsTagOutputWithContext(context.Context) EntityTagsTagOutput
}

type EntityTagsTagArgs struct {
	// The key of the tag.
	//
	// > **NOTE:** One should not use reserved (immutable) keys with this resource. It is recommended to choose unique and descriptive keys which do not conflict with existing reserved keys.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag values.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (EntityTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityTagsTag)(nil)).Elem()
}

func (i EntityTagsTagArgs) ToEntityTagsTagOutput() EntityTagsTagOutput {
	return i.ToEntityTagsTagOutputWithContext(context.Background())
}

func (i EntityTagsTagArgs) ToEntityTagsTagOutputWithContext(ctx context.Context) EntityTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityTagsTagOutput)
}

// EntityTagsTagArrayInput is an input type that accepts EntityTagsTagArray and EntityTagsTagArrayOutput values.
// You can construct a concrete instance of `EntityTagsTagArrayInput` via:
//
//	EntityTagsTagArray{ EntityTagsTagArgs{...} }
type EntityTagsTagArrayInput interface {
	pulumi.Input

	ToEntityTagsTagArrayOutput() EntityTagsTagArrayOutput
	ToEntityTagsTagArrayOutputWithContext(context.Context) EntityTagsTagArrayOutput
}

type EntityTagsTagArray []EntityTagsTagInput

func (EntityTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityTagsTag)(nil)).Elem()
}

func (i EntityTagsTagArray) ToEntityTagsTagArrayOutput() EntityTagsTagArrayOutput {
	return i.ToEntityTagsTagArrayOutputWithContext(context.Background())
}

func (i EntityTagsTagArray) ToEntityTagsTagArrayOutputWithContext(ctx context.Context) EntityTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EntityTagsTagArrayOutput)
}

type EntityTagsTagOutput struct{ *pulumi.OutputState }

func (EntityTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EntityTagsTag)(nil)).Elem()
}

func (o EntityTagsTagOutput) ToEntityTagsTagOutput() EntityTagsTagOutput {
	return o
}

func (o EntityTagsTagOutput) ToEntityTagsTagOutputWithContext(ctx context.Context) EntityTagsTagOutput {
	return o
}

// The key of the tag.
//
// > **NOTE:** One should not use reserved (immutable) keys with this resource. It is recommended to choose unique and descriptive keys which do not conflict with existing reserved keys.
func (o EntityTagsTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EntityTagsTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag values.
func (o EntityTagsTagOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EntityTagsTag) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type EntityTagsTagArrayOutput struct{ *pulumi.OutputState }

func (EntityTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EntityTagsTag)(nil)).Elem()
}

func (o EntityTagsTagArrayOutput) ToEntityTagsTagArrayOutput() EntityTagsTagArrayOutput {
	return o
}

func (o EntityTagsTagArrayOutput) ToEntityTagsTagArrayOutputWithContext(ctx context.Context) EntityTagsTagArrayOutput {
	return o
}

func (o EntityTagsTagArrayOutput) Index(i pulumi.IntInput) EntityTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EntityTagsTag {
		return vs[0].([]EntityTagsTag)[vs[1].(int)]
	}).(EntityTagsTagOutput)
}

type InfraAlertConditionCritical struct {
	Duration     int      `pulumi:"duration"`
	TimeFunction *string  `pulumi:"timeFunction"`
	Value        *float64 `pulumi:"value"`
}

// InfraAlertConditionCriticalInput is an input type that accepts InfraAlertConditionCriticalArgs and InfraAlertConditionCriticalOutput values.
// You can construct a concrete instance of `InfraAlertConditionCriticalInput` via:
//
//	InfraAlertConditionCriticalArgs{...}
type InfraAlertConditionCriticalInput interface {
	pulumi.Input

	ToInfraAlertConditionCriticalOutput() InfraAlertConditionCriticalOutput
	ToInfraAlertConditionCriticalOutputWithContext(context.Context) InfraAlertConditionCriticalOutput
}

type InfraAlertConditionCriticalArgs struct {
	Duration     pulumi.IntInput        `pulumi:"duration"`
	TimeFunction pulumi.StringPtrInput  `pulumi:"timeFunction"`
	Value        pulumi.Float64PtrInput `pulumi:"value"`
}

func (InfraAlertConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraAlertConditionCritical)(nil)).Elem()
}

func (i InfraAlertConditionCriticalArgs) ToInfraAlertConditionCriticalOutput() InfraAlertConditionCriticalOutput {
	return i.ToInfraAlertConditionCriticalOutputWithContext(context.Background())
}

func (i InfraAlertConditionCriticalArgs) ToInfraAlertConditionCriticalOutputWithContext(ctx context.Context) InfraAlertConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraAlertConditionCriticalOutput)
}

func (i InfraAlertConditionCriticalArgs) ToInfraAlertConditionCriticalPtrOutput() InfraAlertConditionCriticalPtrOutput {
	return i.ToInfraAlertConditionCriticalPtrOutputWithContext(context.Background())
}

func (i InfraAlertConditionCriticalArgs) ToInfraAlertConditionCriticalPtrOutputWithContext(ctx context.Context) InfraAlertConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraAlertConditionCriticalOutput).ToInfraAlertConditionCriticalPtrOutputWithContext(ctx)
}

// InfraAlertConditionCriticalPtrInput is an input type that accepts InfraAlertConditionCriticalArgs, InfraAlertConditionCriticalPtr and InfraAlertConditionCriticalPtrOutput values.
// You can construct a concrete instance of `InfraAlertConditionCriticalPtrInput` via:
//
//	        InfraAlertConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type InfraAlertConditionCriticalPtrInput interface {
	pulumi.Input

	ToInfraAlertConditionCriticalPtrOutput() InfraAlertConditionCriticalPtrOutput
	ToInfraAlertConditionCriticalPtrOutputWithContext(context.Context) InfraAlertConditionCriticalPtrOutput
}

type infraAlertConditionCriticalPtrType InfraAlertConditionCriticalArgs

func InfraAlertConditionCriticalPtr(v *InfraAlertConditionCriticalArgs) InfraAlertConditionCriticalPtrInput {
	return (*infraAlertConditionCriticalPtrType)(v)
}

func (*infraAlertConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfraAlertConditionCritical)(nil)).Elem()
}

func (i *infraAlertConditionCriticalPtrType) ToInfraAlertConditionCriticalPtrOutput() InfraAlertConditionCriticalPtrOutput {
	return i.ToInfraAlertConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *infraAlertConditionCriticalPtrType) ToInfraAlertConditionCriticalPtrOutputWithContext(ctx context.Context) InfraAlertConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraAlertConditionCriticalPtrOutput)
}

type InfraAlertConditionCriticalOutput struct{ *pulumi.OutputState }

func (InfraAlertConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraAlertConditionCritical)(nil)).Elem()
}

func (o InfraAlertConditionCriticalOutput) ToInfraAlertConditionCriticalOutput() InfraAlertConditionCriticalOutput {
	return o
}

func (o InfraAlertConditionCriticalOutput) ToInfraAlertConditionCriticalOutputWithContext(ctx context.Context) InfraAlertConditionCriticalOutput {
	return o
}

func (o InfraAlertConditionCriticalOutput) ToInfraAlertConditionCriticalPtrOutput() InfraAlertConditionCriticalPtrOutput {
	return o.ToInfraAlertConditionCriticalPtrOutputWithContext(context.Background())
}

func (o InfraAlertConditionCriticalOutput) ToInfraAlertConditionCriticalPtrOutputWithContext(ctx context.Context) InfraAlertConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfraAlertConditionCritical) *InfraAlertConditionCritical {
		return &v
	}).(InfraAlertConditionCriticalPtrOutput)
}

func (o InfraAlertConditionCriticalOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v InfraAlertConditionCritical) int { return v.Duration }).(pulumi.IntOutput)
}

func (o InfraAlertConditionCriticalOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfraAlertConditionCritical) *string { return v.TimeFunction }).(pulumi.StringPtrOutput)
}

func (o InfraAlertConditionCriticalOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InfraAlertConditionCritical) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type InfraAlertConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (InfraAlertConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfraAlertConditionCritical)(nil)).Elem()
}

func (o InfraAlertConditionCriticalPtrOutput) ToInfraAlertConditionCriticalPtrOutput() InfraAlertConditionCriticalPtrOutput {
	return o
}

func (o InfraAlertConditionCriticalPtrOutput) ToInfraAlertConditionCriticalPtrOutputWithContext(ctx context.Context) InfraAlertConditionCriticalPtrOutput {
	return o
}

func (o InfraAlertConditionCriticalPtrOutput) Elem() InfraAlertConditionCriticalOutput {
	return o.ApplyT(func(v *InfraAlertConditionCritical) InfraAlertConditionCritical {
		if v != nil {
			return *v
		}
		var ret InfraAlertConditionCritical
		return ret
	}).(InfraAlertConditionCriticalOutput)
}

func (o InfraAlertConditionCriticalPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfraAlertConditionCritical) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o InfraAlertConditionCriticalPtrOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfraAlertConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.TimeFunction
	}).(pulumi.StringPtrOutput)
}

func (o InfraAlertConditionCriticalPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InfraAlertConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type InfraAlertConditionWarning struct {
	Duration     int      `pulumi:"duration"`
	TimeFunction *string  `pulumi:"timeFunction"`
	Value        *float64 `pulumi:"value"`
}

// InfraAlertConditionWarningInput is an input type that accepts InfraAlertConditionWarningArgs and InfraAlertConditionWarningOutput values.
// You can construct a concrete instance of `InfraAlertConditionWarningInput` via:
//
//	InfraAlertConditionWarningArgs{...}
type InfraAlertConditionWarningInput interface {
	pulumi.Input

	ToInfraAlertConditionWarningOutput() InfraAlertConditionWarningOutput
	ToInfraAlertConditionWarningOutputWithContext(context.Context) InfraAlertConditionWarningOutput
}

type InfraAlertConditionWarningArgs struct {
	Duration     pulumi.IntInput        `pulumi:"duration"`
	TimeFunction pulumi.StringPtrInput  `pulumi:"timeFunction"`
	Value        pulumi.Float64PtrInput `pulumi:"value"`
}

func (InfraAlertConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraAlertConditionWarning)(nil)).Elem()
}

func (i InfraAlertConditionWarningArgs) ToInfraAlertConditionWarningOutput() InfraAlertConditionWarningOutput {
	return i.ToInfraAlertConditionWarningOutputWithContext(context.Background())
}

func (i InfraAlertConditionWarningArgs) ToInfraAlertConditionWarningOutputWithContext(ctx context.Context) InfraAlertConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraAlertConditionWarningOutput)
}

func (i InfraAlertConditionWarningArgs) ToInfraAlertConditionWarningPtrOutput() InfraAlertConditionWarningPtrOutput {
	return i.ToInfraAlertConditionWarningPtrOutputWithContext(context.Background())
}

func (i InfraAlertConditionWarningArgs) ToInfraAlertConditionWarningPtrOutputWithContext(ctx context.Context) InfraAlertConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraAlertConditionWarningOutput).ToInfraAlertConditionWarningPtrOutputWithContext(ctx)
}

// InfraAlertConditionWarningPtrInput is an input type that accepts InfraAlertConditionWarningArgs, InfraAlertConditionWarningPtr and InfraAlertConditionWarningPtrOutput values.
// You can construct a concrete instance of `InfraAlertConditionWarningPtrInput` via:
//
//	        InfraAlertConditionWarningArgs{...}
//
//	or:
//
//	        nil
type InfraAlertConditionWarningPtrInput interface {
	pulumi.Input

	ToInfraAlertConditionWarningPtrOutput() InfraAlertConditionWarningPtrOutput
	ToInfraAlertConditionWarningPtrOutputWithContext(context.Context) InfraAlertConditionWarningPtrOutput
}

type infraAlertConditionWarningPtrType InfraAlertConditionWarningArgs

func InfraAlertConditionWarningPtr(v *InfraAlertConditionWarningArgs) InfraAlertConditionWarningPtrInput {
	return (*infraAlertConditionWarningPtrType)(v)
}

func (*infraAlertConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InfraAlertConditionWarning)(nil)).Elem()
}

func (i *infraAlertConditionWarningPtrType) ToInfraAlertConditionWarningPtrOutput() InfraAlertConditionWarningPtrOutput {
	return i.ToInfraAlertConditionWarningPtrOutputWithContext(context.Background())
}

func (i *infraAlertConditionWarningPtrType) ToInfraAlertConditionWarningPtrOutputWithContext(ctx context.Context) InfraAlertConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InfraAlertConditionWarningPtrOutput)
}

type InfraAlertConditionWarningOutput struct{ *pulumi.OutputState }

func (InfraAlertConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InfraAlertConditionWarning)(nil)).Elem()
}

func (o InfraAlertConditionWarningOutput) ToInfraAlertConditionWarningOutput() InfraAlertConditionWarningOutput {
	return o
}

func (o InfraAlertConditionWarningOutput) ToInfraAlertConditionWarningOutputWithContext(ctx context.Context) InfraAlertConditionWarningOutput {
	return o
}

func (o InfraAlertConditionWarningOutput) ToInfraAlertConditionWarningPtrOutput() InfraAlertConditionWarningPtrOutput {
	return o.ToInfraAlertConditionWarningPtrOutputWithContext(context.Background())
}

func (o InfraAlertConditionWarningOutput) ToInfraAlertConditionWarningPtrOutputWithContext(ctx context.Context) InfraAlertConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InfraAlertConditionWarning) *InfraAlertConditionWarning {
		return &v
	}).(InfraAlertConditionWarningPtrOutput)
}

func (o InfraAlertConditionWarningOutput) Duration() pulumi.IntOutput {
	return o.ApplyT(func(v InfraAlertConditionWarning) int { return v.Duration }).(pulumi.IntOutput)
}

func (o InfraAlertConditionWarningOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InfraAlertConditionWarning) *string { return v.TimeFunction }).(pulumi.StringPtrOutput)
}

func (o InfraAlertConditionWarningOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InfraAlertConditionWarning) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type InfraAlertConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (InfraAlertConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InfraAlertConditionWarning)(nil)).Elem()
}

func (o InfraAlertConditionWarningPtrOutput) ToInfraAlertConditionWarningPtrOutput() InfraAlertConditionWarningPtrOutput {
	return o
}

func (o InfraAlertConditionWarningPtrOutput) ToInfraAlertConditionWarningPtrOutputWithContext(ctx context.Context) InfraAlertConditionWarningPtrOutput {
	return o
}

func (o InfraAlertConditionWarningPtrOutput) Elem() InfraAlertConditionWarningOutput {
	return o.ApplyT(func(v *InfraAlertConditionWarning) InfraAlertConditionWarning {
		if v != nil {
			return *v
		}
		var ret InfraAlertConditionWarning
		return ret
	}).(InfraAlertConditionWarningOutput)
}

func (o InfraAlertConditionWarningPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InfraAlertConditionWarning) *int {
		if v == nil {
			return nil
		}
		return &v.Duration
	}).(pulumi.IntPtrOutput)
}

func (o InfraAlertConditionWarningPtrOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InfraAlertConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.TimeFunction
	}).(pulumi.StringPtrOutput)
}

func (o InfraAlertConditionWarningPtrOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InfraAlertConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type MonitorDowntimeEndRepeat struct {
	// A date, on which the Monitor Downtime's repeat cycle is expected to end.
	OnDate *string `pulumi:"onDate"`
	// Number of repetitions after which the Monitor Downtime's repeat cycle is expected to end.
	OnRepeat *int `pulumi:"onRepeat"`
}

// MonitorDowntimeEndRepeatInput is an input type that accepts MonitorDowntimeEndRepeatArgs and MonitorDowntimeEndRepeatOutput values.
// You can construct a concrete instance of `MonitorDowntimeEndRepeatInput` via:
//
//	MonitorDowntimeEndRepeatArgs{...}
type MonitorDowntimeEndRepeatInput interface {
	pulumi.Input

	ToMonitorDowntimeEndRepeatOutput() MonitorDowntimeEndRepeatOutput
	ToMonitorDowntimeEndRepeatOutputWithContext(context.Context) MonitorDowntimeEndRepeatOutput
}

type MonitorDowntimeEndRepeatArgs struct {
	// A date, on which the Monitor Downtime's repeat cycle is expected to end.
	OnDate pulumi.StringPtrInput `pulumi:"onDate"`
	// Number of repetitions after which the Monitor Downtime's repeat cycle is expected to end.
	OnRepeat pulumi.IntPtrInput `pulumi:"onRepeat"`
}

func (MonitorDowntimeEndRepeatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorDowntimeEndRepeat)(nil)).Elem()
}

func (i MonitorDowntimeEndRepeatArgs) ToMonitorDowntimeEndRepeatOutput() MonitorDowntimeEndRepeatOutput {
	return i.ToMonitorDowntimeEndRepeatOutputWithContext(context.Background())
}

func (i MonitorDowntimeEndRepeatArgs) ToMonitorDowntimeEndRepeatOutputWithContext(ctx context.Context) MonitorDowntimeEndRepeatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeEndRepeatOutput)
}

func (i MonitorDowntimeEndRepeatArgs) ToMonitorDowntimeEndRepeatPtrOutput() MonitorDowntimeEndRepeatPtrOutput {
	return i.ToMonitorDowntimeEndRepeatPtrOutputWithContext(context.Background())
}

func (i MonitorDowntimeEndRepeatArgs) ToMonitorDowntimeEndRepeatPtrOutputWithContext(ctx context.Context) MonitorDowntimeEndRepeatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeEndRepeatOutput).ToMonitorDowntimeEndRepeatPtrOutputWithContext(ctx)
}

// MonitorDowntimeEndRepeatPtrInput is an input type that accepts MonitorDowntimeEndRepeatArgs, MonitorDowntimeEndRepeatPtr and MonitorDowntimeEndRepeatPtrOutput values.
// You can construct a concrete instance of `MonitorDowntimeEndRepeatPtrInput` via:
//
//	        MonitorDowntimeEndRepeatArgs{...}
//
//	or:
//
//	        nil
type MonitorDowntimeEndRepeatPtrInput interface {
	pulumi.Input

	ToMonitorDowntimeEndRepeatPtrOutput() MonitorDowntimeEndRepeatPtrOutput
	ToMonitorDowntimeEndRepeatPtrOutputWithContext(context.Context) MonitorDowntimeEndRepeatPtrOutput
}

type monitorDowntimeEndRepeatPtrType MonitorDowntimeEndRepeatArgs

func MonitorDowntimeEndRepeatPtr(v *MonitorDowntimeEndRepeatArgs) MonitorDowntimeEndRepeatPtrInput {
	return (*monitorDowntimeEndRepeatPtrType)(v)
}

func (*monitorDowntimeEndRepeatPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorDowntimeEndRepeat)(nil)).Elem()
}

func (i *monitorDowntimeEndRepeatPtrType) ToMonitorDowntimeEndRepeatPtrOutput() MonitorDowntimeEndRepeatPtrOutput {
	return i.ToMonitorDowntimeEndRepeatPtrOutputWithContext(context.Background())
}

func (i *monitorDowntimeEndRepeatPtrType) ToMonitorDowntimeEndRepeatPtrOutputWithContext(ctx context.Context) MonitorDowntimeEndRepeatPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeEndRepeatPtrOutput)
}

type MonitorDowntimeEndRepeatOutput struct{ *pulumi.OutputState }

func (MonitorDowntimeEndRepeatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorDowntimeEndRepeat)(nil)).Elem()
}

func (o MonitorDowntimeEndRepeatOutput) ToMonitorDowntimeEndRepeatOutput() MonitorDowntimeEndRepeatOutput {
	return o
}

func (o MonitorDowntimeEndRepeatOutput) ToMonitorDowntimeEndRepeatOutputWithContext(ctx context.Context) MonitorDowntimeEndRepeatOutput {
	return o
}

func (o MonitorDowntimeEndRepeatOutput) ToMonitorDowntimeEndRepeatPtrOutput() MonitorDowntimeEndRepeatPtrOutput {
	return o.ToMonitorDowntimeEndRepeatPtrOutputWithContext(context.Background())
}

func (o MonitorDowntimeEndRepeatOutput) ToMonitorDowntimeEndRepeatPtrOutputWithContext(ctx context.Context) MonitorDowntimeEndRepeatPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorDowntimeEndRepeat) *MonitorDowntimeEndRepeat {
		return &v
	}).(MonitorDowntimeEndRepeatPtrOutput)
}

// A date, on which the Monitor Downtime's repeat cycle is expected to end.
func (o MonitorDowntimeEndRepeatOutput) OnDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MonitorDowntimeEndRepeat) *string { return v.OnDate }).(pulumi.StringPtrOutput)
}

// Number of repetitions after which the Monitor Downtime's repeat cycle is expected to end.
func (o MonitorDowntimeEndRepeatOutput) OnRepeat() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MonitorDowntimeEndRepeat) *int { return v.OnRepeat }).(pulumi.IntPtrOutput)
}

type MonitorDowntimeEndRepeatPtrOutput struct{ *pulumi.OutputState }

func (MonitorDowntimeEndRepeatPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorDowntimeEndRepeat)(nil)).Elem()
}

func (o MonitorDowntimeEndRepeatPtrOutput) ToMonitorDowntimeEndRepeatPtrOutput() MonitorDowntimeEndRepeatPtrOutput {
	return o
}

func (o MonitorDowntimeEndRepeatPtrOutput) ToMonitorDowntimeEndRepeatPtrOutputWithContext(ctx context.Context) MonitorDowntimeEndRepeatPtrOutput {
	return o
}

func (o MonitorDowntimeEndRepeatPtrOutput) Elem() MonitorDowntimeEndRepeatOutput {
	return o.ApplyT(func(v *MonitorDowntimeEndRepeat) MonitorDowntimeEndRepeat {
		if v != nil {
			return *v
		}
		var ret MonitorDowntimeEndRepeat
		return ret
	}).(MonitorDowntimeEndRepeatOutput)
}

// A date, on which the Monitor Downtime's repeat cycle is expected to end.
func (o MonitorDowntimeEndRepeatPtrOutput) OnDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorDowntimeEndRepeat) *string {
		if v == nil {
			return nil
		}
		return v.OnDate
	}).(pulumi.StringPtrOutput)
}

// Number of repetitions after which the Monitor Downtime's repeat cycle is expected to end.
func (o MonitorDowntimeEndRepeatPtrOutput) OnRepeat() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MonitorDowntimeEndRepeat) *int {
		if v == nil {
			return nil
		}
		return v.OnRepeat
	}).(pulumi.IntPtrOutput)
}

type MonitorDowntimeFrequency struct {
	// A numerical list of days of a month on which the Monitor Downtime is scheduled to run.
	DaysOfMonths []int `pulumi:"daysOfMonths"`
	// A list of days of the week on which the Monitor Downtime is scheduled to run.
	DaysOfWeek *MonitorDowntimeFrequencyDaysOfWeek `pulumi:"daysOfWeek"`
}

// MonitorDowntimeFrequencyInput is an input type that accepts MonitorDowntimeFrequencyArgs and MonitorDowntimeFrequencyOutput values.
// You can construct a concrete instance of `MonitorDowntimeFrequencyInput` via:
//
//	MonitorDowntimeFrequencyArgs{...}
type MonitorDowntimeFrequencyInput interface {
	pulumi.Input

	ToMonitorDowntimeFrequencyOutput() MonitorDowntimeFrequencyOutput
	ToMonitorDowntimeFrequencyOutputWithContext(context.Context) MonitorDowntimeFrequencyOutput
}

type MonitorDowntimeFrequencyArgs struct {
	// A numerical list of days of a month on which the Monitor Downtime is scheduled to run.
	DaysOfMonths pulumi.IntArrayInput `pulumi:"daysOfMonths"`
	// A list of days of the week on which the Monitor Downtime is scheduled to run.
	DaysOfWeek MonitorDowntimeFrequencyDaysOfWeekPtrInput `pulumi:"daysOfWeek"`
}

func (MonitorDowntimeFrequencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorDowntimeFrequency)(nil)).Elem()
}

func (i MonitorDowntimeFrequencyArgs) ToMonitorDowntimeFrequencyOutput() MonitorDowntimeFrequencyOutput {
	return i.ToMonitorDowntimeFrequencyOutputWithContext(context.Background())
}

func (i MonitorDowntimeFrequencyArgs) ToMonitorDowntimeFrequencyOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeFrequencyOutput)
}

func (i MonitorDowntimeFrequencyArgs) ToMonitorDowntimeFrequencyPtrOutput() MonitorDowntimeFrequencyPtrOutput {
	return i.ToMonitorDowntimeFrequencyPtrOutputWithContext(context.Background())
}

func (i MonitorDowntimeFrequencyArgs) ToMonitorDowntimeFrequencyPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeFrequencyOutput).ToMonitorDowntimeFrequencyPtrOutputWithContext(ctx)
}

// MonitorDowntimeFrequencyPtrInput is an input type that accepts MonitorDowntimeFrequencyArgs, MonitorDowntimeFrequencyPtr and MonitorDowntimeFrequencyPtrOutput values.
// You can construct a concrete instance of `MonitorDowntimeFrequencyPtrInput` via:
//
//	        MonitorDowntimeFrequencyArgs{...}
//
//	or:
//
//	        nil
type MonitorDowntimeFrequencyPtrInput interface {
	pulumi.Input

	ToMonitorDowntimeFrequencyPtrOutput() MonitorDowntimeFrequencyPtrOutput
	ToMonitorDowntimeFrequencyPtrOutputWithContext(context.Context) MonitorDowntimeFrequencyPtrOutput
}

type monitorDowntimeFrequencyPtrType MonitorDowntimeFrequencyArgs

func MonitorDowntimeFrequencyPtr(v *MonitorDowntimeFrequencyArgs) MonitorDowntimeFrequencyPtrInput {
	return (*monitorDowntimeFrequencyPtrType)(v)
}

func (*monitorDowntimeFrequencyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorDowntimeFrequency)(nil)).Elem()
}

func (i *monitorDowntimeFrequencyPtrType) ToMonitorDowntimeFrequencyPtrOutput() MonitorDowntimeFrequencyPtrOutput {
	return i.ToMonitorDowntimeFrequencyPtrOutputWithContext(context.Background())
}

func (i *monitorDowntimeFrequencyPtrType) ToMonitorDowntimeFrequencyPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeFrequencyPtrOutput)
}

type MonitorDowntimeFrequencyOutput struct{ *pulumi.OutputState }

func (MonitorDowntimeFrequencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorDowntimeFrequency)(nil)).Elem()
}

func (o MonitorDowntimeFrequencyOutput) ToMonitorDowntimeFrequencyOutput() MonitorDowntimeFrequencyOutput {
	return o
}

func (o MonitorDowntimeFrequencyOutput) ToMonitorDowntimeFrequencyOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyOutput {
	return o
}

func (o MonitorDowntimeFrequencyOutput) ToMonitorDowntimeFrequencyPtrOutput() MonitorDowntimeFrequencyPtrOutput {
	return o.ToMonitorDowntimeFrequencyPtrOutputWithContext(context.Background())
}

func (o MonitorDowntimeFrequencyOutput) ToMonitorDowntimeFrequencyPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorDowntimeFrequency) *MonitorDowntimeFrequency {
		return &v
	}).(MonitorDowntimeFrequencyPtrOutput)
}

// A numerical list of days of a month on which the Monitor Downtime is scheduled to run.
func (o MonitorDowntimeFrequencyOutput) DaysOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v MonitorDowntimeFrequency) []int { return v.DaysOfMonths }).(pulumi.IntArrayOutput)
}

// A list of days of the week on which the Monitor Downtime is scheduled to run.
func (o MonitorDowntimeFrequencyOutput) DaysOfWeek() MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return o.ApplyT(func(v MonitorDowntimeFrequency) *MonitorDowntimeFrequencyDaysOfWeek { return v.DaysOfWeek }).(MonitorDowntimeFrequencyDaysOfWeekPtrOutput)
}

type MonitorDowntimeFrequencyPtrOutput struct{ *pulumi.OutputState }

func (MonitorDowntimeFrequencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorDowntimeFrequency)(nil)).Elem()
}

func (o MonitorDowntimeFrequencyPtrOutput) ToMonitorDowntimeFrequencyPtrOutput() MonitorDowntimeFrequencyPtrOutput {
	return o
}

func (o MonitorDowntimeFrequencyPtrOutput) ToMonitorDowntimeFrequencyPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyPtrOutput {
	return o
}

func (o MonitorDowntimeFrequencyPtrOutput) Elem() MonitorDowntimeFrequencyOutput {
	return o.ApplyT(func(v *MonitorDowntimeFrequency) MonitorDowntimeFrequency {
		if v != nil {
			return *v
		}
		var ret MonitorDowntimeFrequency
		return ret
	}).(MonitorDowntimeFrequencyOutput)
}

// A numerical list of days of a month on which the Monitor Downtime is scheduled to run.
func (o MonitorDowntimeFrequencyPtrOutput) DaysOfMonths() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *MonitorDowntimeFrequency) []int {
		if v == nil {
			return nil
		}
		return v.DaysOfMonths
	}).(pulumi.IntArrayOutput)
}

// A list of days of the week on which the Monitor Downtime is scheduled to run.
func (o MonitorDowntimeFrequencyPtrOutput) DaysOfWeek() MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return o.ApplyT(func(v *MonitorDowntimeFrequency) *MonitorDowntimeFrequencyDaysOfWeek {
		if v == nil {
			return nil
		}
		return v.DaysOfWeek
	}).(MonitorDowntimeFrequencyDaysOfWeekPtrOutput)
}

type MonitorDowntimeFrequencyDaysOfWeek struct {
	// An occurrence of the day selected within the month.
	OrdinalDayOfMonth string `pulumi:"ordinalDayOfMonth"`
	// The day of the week on which the Monitor Downtime would run.
	WeekDay string `pulumi:"weekDay"`
}

// MonitorDowntimeFrequencyDaysOfWeekInput is an input type that accepts MonitorDowntimeFrequencyDaysOfWeekArgs and MonitorDowntimeFrequencyDaysOfWeekOutput values.
// You can construct a concrete instance of `MonitorDowntimeFrequencyDaysOfWeekInput` via:
//
//	MonitorDowntimeFrequencyDaysOfWeekArgs{...}
type MonitorDowntimeFrequencyDaysOfWeekInput interface {
	pulumi.Input

	ToMonitorDowntimeFrequencyDaysOfWeekOutput() MonitorDowntimeFrequencyDaysOfWeekOutput
	ToMonitorDowntimeFrequencyDaysOfWeekOutputWithContext(context.Context) MonitorDowntimeFrequencyDaysOfWeekOutput
}

type MonitorDowntimeFrequencyDaysOfWeekArgs struct {
	// An occurrence of the day selected within the month.
	OrdinalDayOfMonth pulumi.StringInput `pulumi:"ordinalDayOfMonth"`
	// The day of the week on which the Monitor Downtime would run.
	WeekDay pulumi.StringInput `pulumi:"weekDay"`
}

func (MonitorDowntimeFrequencyDaysOfWeekArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorDowntimeFrequencyDaysOfWeek)(nil)).Elem()
}

func (i MonitorDowntimeFrequencyDaysOfWeekArgs) ToMonitorDowntimeFrequencyDaysOfWeekOutput() MonitorDowntimeFrequencyDaysOfWeekOutput {
	return i.ToMonitorDowntimeFrequencyDaysOfWeekOutputWithContext(context.Background())
}

func (i MonitorDowntimeFrequencyDaysOfWeekArgs) ToMonitorDowntimeFrequencyDaysOfWeekOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyDaysOfWeekOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeFrequencyDaysOfWeekOutput)
}

func (i MonitorDowntimeFrequencyDaysOfWeekArgs) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutput() MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return i.ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(context.Background())
}

func (i MonitorDowntimeFrequencyDaysOfWeekArgs) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeFrequencyDaysOfWeekOutput).ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(ctx)
}

// MonitorDowntimeFrequencyDaysOfWeekPtrInput is an input type that accepts MonitorDowntimeFrequencyDaysOfWeekArgs, MonitorDowntimeFrequencyDaysOfWeekPtr and MonitorDowntimeFrequencyDaysOfWeekPtrOutput values.
// You can construct a concrete instance of `MonitorDowntimeFrequencyDaysOfWeekPtrInput` via:
//
//	        MonitorDowntimeFrequencyDaysOfWeekArgs{...}
//
//	or:
//
//	        nil
type MonitorDowntimeFrequencyDaysOfWeekPtrInput interface {
	pulumi.Input

	ToMonitorDowntimeFrequencyDaysOfWeekPtrOutput() MonitorDowntimeFrequencyDaysOfWeekPtrOutput
	ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(context.Context) MonitorDowntimeFrequencyDaysOfWeekPtrOutput
}

type monitorDowntimeFrequencyDaysOfWeekPtrType MonitorDowntimeFrequencyDaysOfWeekArgs

func MonitorDowntimeFrequencyDaysOfWeekPtr(v *MonitorDowntimeFrequencyDaysOfWeekArgs) MonitorDowntimeFrequencyDaysOfWeekPtrInput {
	return (*monitorDowntimeFrequencyDaysOfWeekPtrType)(v)
}

func (*monitorDowntimeFrequencyDaysOfWeekPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorDowntimeFrequencyDaysOfWeek)(nil)).Elem()
}

func (i *monitorDowntimeFrequencyDaysOfWeekPtrType) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutput() MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return i.ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(context.Background())
}

func (i *monitorDowntimeFrequencyDaysOfWeekPtrType) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorDowntimeFrequencyDaysOfWeekPtrOutput)
}

type MonitorDowntimeFrequencyDaysOfWeekOutput struct{ *pulumi.OutputState }

func (MonitorDowntimeFrequencyDaysOfWeekOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorDowntimeFrequencyDaysOfWeek)(nil)).Elem()
}

func (o MonitorDowntimeFrequencyDaysOfWeekOutput) ToMonitorDowntimeFrequencyDaysOfWeekOutput() MonitorDowntimeFrequencyDaysOfWeekOutput {
	return o
}

func (o MonitorDowntimeFrequencyDaysOfWeekOutput) ToMonitorDowntimeFrequencyDaysOfWeekOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyDaysOfWeekOutput {
	return o
}

func (o MonitorDowntimeFrequencyDaysOfWeekOutput) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutput() MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return o.ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(context.Background())
}

func (o MonitorDowntimeFrequencyDaysOfWeekOutput) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorDowntimeFrequencyDaysOfWeek) *MonitorDowntimeFrequencyDaysOfWeek {
		return &v
	}).(MonitorDowntimeFrequencyDaysOfWeekPtrOutput)
}

// An occurrence of the day selected within the month.
func (o MonitorDowntimeFrequencyDaysOfWeekOutput) OrdinalDayOfMonth() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorDowntimeFrequencyDaysOfWeek) string { return v.OrdinalDayOfMonth }).(pulumi.StringOutput)
}

// The day of the week on which the Monitor Downtime would run.
func (o MonitorDowntimeFrequencyDaysOfWeekOutput) WeekDay() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorDowntimeFrequencyDaysOfWeek) string { return v.WeekDay }).(pulumi.StringOutput)
}

type MonitorDowntimeFrequencyDaysOfWeekPtrOutput struct{ *pulumi.OutputState }

func (MonitorDowntimeFrequencyDaysOfWeekPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorDowntimeFrequencyDaysOfWeek)(nil)).Elem()
}

func (o MonitorDowntimeFrequencyDaysOfWeekPtrOutput) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutput() MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return o
}

func (o MonitorDowntimeFrequencyDaysOfWeekPtrOutput) ToMonitorDowntimeFrequencyDaysOfWeekPtrOutputWithContext(ctx context.Context) MonitorDowntimeFrequencyDaysOfWeekPtrOutput {
	return o
}

func (o MonitorDowntimeFrequencyDaysOfWeekPtrOutput) Elem() MonitorDowntimeFrequencyDaysOfWeekOutput {
	return o.ApplyT(func(v *MonitorDowntimeFrequencyDaysOfWeek) MonitorDowntimeFrequencyDaysOfWeek {
		if v != nil {
			return *v
		}
		var ret MonitorDowntimeFrequencyDaysOfWeek
		return ret
	}).(MonitorDowntimeFrequencyDaysOfWeekOutput)
}

// An occurrence of the day selected within the month.
func (o MonitorDowntimeFrequencyDaysOfWeekPtrOutput) OrdinalDayOfMonth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorDowntimeFrequencyDaysOfWeek) *string {
		if v == nil {
			return nil
		}
		return &v.OrdinalDayOfMonth
	}).(pulumi.StringPtrOutput)
}

// The day of the week on which the Monitor Downtime would run.
func (o MonitorDowntimeFrequencyDaysOfWeekPtrOutput) WeekDay() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MonitorDowntimeFrequencyDaysOfWeek) *string {
		if v == nil {
			return nil
		}
		return &v.WeekDay
	}).(pulumi.StringPtrOutput)
}

type NotificationChannelProperty struct {
	// Notification property display key.
	DisplayValue *string `pulumi:"displayValue"`
	// Notification property key.
	Key string `pulumi:"key"`
	// Notification property label.
	Label *string `pulumi:"label"`
	// Notification property value.
	Value string `pulumi:"value"`
}

// NotificationChannelPropertyInput is an input type that accepts NotificationChannelPropertyArgs and NotificationChannelPropertyOutput values.
// You can construct a concrete instance of `NotificationChannelPropertyInput` via:
//
//	NotificationChannelPropertyArgs{...}
type NotificationChannelPropertyInput interface {
	pulumi.Input

	ToNotificationChannelPropertyOutput() NotificationChannelPropertyOutput
	ToNotificationChannelPropertyOutputWithContext(context.Context) NotificationChannelPropertyOutput
}

type NotificationChannelPropertyArgs struct {
	// Notification property display key.
	DisplayValue pulumi.StringPtrInput `pulumi:"displayValue"`
	// Notification property key.
	Key pulumi.StringInput `pulumi:"key"`
	// Notification property label.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Notification property value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NotificationChannelPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelProperty)(nil)).Elem()
}

func (i NotificationChannelPropertyArgs) ToNotificationChannelPropertyOutput() NotificationChannelPropertyOutput {
	return i.ToNotificationChannelPropertyOutputWithContext(context.Background())
}

func (i NotificationChannelPropertyArgs) ToNotificationChannelPropertyOutputWithContext(ctx context.Context) NotificationChannelPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPropertyOutput)
}

// NotificationChannelPropertyArrayInput is an input type that accepts NotificationChannelPropertyArray and NotificationChannelPropertyArrayOutput values.
// You can construct a concrete instance of `NotificationChannelPropertyArrayInput` via:
//
//	NotificationChannelPropertyArray{ NotificationChannelPropertyArgs{...} }
type NotificationChannelPropertyArrayInput interface {
	pulumi.Input

	ToNotificationChannelPropertyArrayOutput() NotificationChannelPropertyArrayOutput
	ToNotificationChannelPropertyArrayOutputWithContext(context.Context) NotificationChannelPropertyArrayOutput
}

type NotificationChannelPropertyArray []NotificationChannelPropertyInput

func (NotificationChannelPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelProperty)(nil)).Elem()
}

func (i NotificationChannelPropertyArray) ToNotificationChannelPropertyArrayOutput() NotificationChannelPropertyArrayOutput {
	return i.ToNotificationChannelPropertyArrayOutputWithContext(context.Background())
}

func (i NotificationChannelPropertyArray) ToNotificationChannelPropertyArrayOutputWithContext(ctx context.Context) NotificationChannelPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationChannelPropertyArrayOutput)
}

type NotificationChannelPropertyOutput struct{ *pulumi.OutputState }

func (NotificationChannelPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationChannelProperty)(nil)).Elem()
}

func (o NotificationChannelPropertyOutput) ToNotificationChannelPropertyOutput() NotificationChannelPropertyOutput {
	return o
}

func (o NotificationChannelPropertyOutput) ToNotificationChannelPropertyOutputWithContext(ctx context.Context) NotificationChannelPropertyOutput {
	return o
}

// Notification property display key.
func (o NotificationChannelPropertyOutput) DisplayValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationChannelProperty) *string { return v.DisplayValue }).(pulumi.StringPtrOutput)
}

// Notification property key.
func (o NotificationChannelPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelProperty) string { return v.Key }).(pulumi.StringOutput)
}

// Notification property label.
func (o NotificationChannelPropertyOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationChannelProperty) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Notification property value.
func (o NotificationChannelPropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationChannelProperty) string { return v.Value }).(pulumi.StringOutput)
}

type NotificationChannelPropertyArrayOutput struct{ *pulumi.OutputState }

func (NotificationChannelPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationChannelProperty)(nil)).Elem()
}

func (o NotificationChannelPropertyArrayOutput) ToNotificationChannelPropertyArrayOutput() NotificationChannelPropertyArrayOutput {
	return o
}

func (o NotificationChannelPropertyArrayOutput) ToNotificationChannelPropertyArrayOutputWithContext(ctx context.Context) NotificationChannelPropertyArrayOutput {
	return o
}

func (o NotificationChannelPropertyArrayOutput) Index(i pulumi.IntInput) NotificationChannelPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationChannelProperty {
		return vs[0].([]NotificationChannelProperty)[vs[1].(int)]
	}).(NotificationChannelPropertyOutput)
}

type NotificationDestinationAuthBasic struct {
	// Specifies an authentication password for use with a destination.
	Password string `pulumi:"password"`
	// The username of the basic auth.
	User string `pulumi:"user"`
}

// NotificationDestinationAuthBasicInput is an input type that accepts NotificationDestinationAuthBasicArgs and NotificationDestinationAuthBasicOutput values.
// You can construct a concrete instance of `NotificationDestinationAuthBasicInput` via:
//
//	NotificationDestinationAuthBasicArgs{...}
type NotificationDestinationAuthBasicInput interface {
	pulumi.Input

	ToNotificationDestinationAuthBasicOutput() NotificationDestinationAuthBasicOutput
	ToNotificationDestinationAuthBasicOutputWithContext(context.Context) NotificationDestinationAuthBasicOutput
}

type NotificationDestinationAuthBasicArgs struct {
	// Specifies an authentication password for use with a destination.
	Password pulumi.StringInput `pulumi:"password"`
	// The username of the basic auth.
	User pulumi.StringInput `pulumi:"user"`
}

func (NotificationDestinationAuthBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationAuthBasic)(nil)).Elem()
}

func (i NotificationDestinationAuthBasicArgs) ToNotificationDestinationAuthBasicOutput() NotificationDestinationAuthBasicOutput {
	return i.ToNotificationDestinationAuthBasicOutputWithContext(context.Background())
}

func (i NotificationDestinationAuthBasicArgs) ToNotificationDestinationAuthBasicOutputWithContext(ctx context.Context) NotificationDestinationAuthBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthBasicOutput)
}

func (i NotificationDestinationAuthBasicArgs) ToNotificationDestinationAuthBasicPtrOutput() NotificationDestinationAuthBasicPtrOutput {
	return i.ToNotificationDestinationAuthBasicPtrOutputWithContext(context.Background())
}

func (i NotificationDestinationAuthBasicArgs) ToNotificationDestinationAuthBasicPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthBasicOutput).ToNotificationDestinationAuthBasicPtrOutputWithContext(ctx)
}

// NotificationDestinationAuthBasicPtrInput is an input type that accepts NotificationDestinationAuthBasicArgs, NotificationDestinationAuthBasicPtr and NotificationDestinationAuthBasicPtrOutput values.
// You can construct a concrete instance of `NotificationDestinationAuthBasicPtrInput` via:
//
//	        NotificationDestinationAuthBasicArgs{...}
//
//	or:
//
//	        nil
type NotificationDestinationAuthBasicPtrInput interface {
	pulumi.Input

	ToNotificationDestinationAuthBasicPtrOutput() NotificationDestinationAuthBasicPtrOutput
	ToNotificationDestinationAuthBasicPtrOutputWithContext(context.Context) NotificationDestinationAuthBasicPtrOutput
}

type notificationDestinationAuthBasicPtrType NotificationDestinationAuthBasicArgs

func NotificationDestinationAuthBasicPtr(v *NotificationDestinationAuthBasicArgs) NotificationDestinationAuthBasicPtrInput {
	return (*notificationDestinationAuthBasicPtrType)(v)
}

func (*notificationDestinationAuthBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDestinationAuthBasic)(nil)).Elem()
}

func (i *notificationDestinationAuthBasicPtrType) ToNotificationDestinationAuthBasicPtrOutput() NotificationDestinationAuthBasicPtrOutput {
	return i.ToNotificationDestinationAuthBasicPtrOutputWithContext(context.Background())
}

func (i *notificationDestinationAuthBasicPtrType) ToNotificationDestinationAuthBasicPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthBasicPtrOutput)
}

type NotificationDestinationAuthBasicOutput struct{ *pulumi.OutputState }

func (NotificationDestinationAuthBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationAuthBasic)(nil)).Elem()
}

func (o NotificationDestinationAuthBasicOutput) ToNotificationDestinationAuthBasicOutput() NotificationDestinationAuthBasicOutput {
	return o
}

func (o NotificationDestinationAuthBasicOutput) ToNotificationDestinationAuthBasicOutputWithContext(ctx context.Context) NotificationDestinationAuthBasicOutput {
	return o
}

func (o NotificationDestinationAuthBasicOutput) ToNotificationDestinationAuthBasicPtrOutput() NotificationDestinationAuthBasicPtrOutput {
	return o.ToNotificationDestinationAuthBasicPtrOutputWithContext(context.Background())
}

func (o NotificationDestinationAuthBasicOutput) ToNotificationDestinationAuthBasicPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthBasicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationDestinationAuthBasic) *NotificationDestinationAuthBasic {
		return &v
	}).(NotificationDestinationAuthBasicPtrOutput)
}

// Specifies an authentication password for use with a destination.
func (o NotificationDestinationAuthBasicOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationAuthBasic) string { return v.Password }).(pulumi.StringOutput)
}

// The username of the basic auth.
func (o NotificationDestinationAuthBasicOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationAuthBasic) string { return v.User }).(pulumi.StringOutput)
}

type NotificationDestinationAuthBasicPtrOutput struct{ *pulumi.OutputState }

func (NotificationDestinationAuthBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDestinationAuthBasic)(nil)).Elem()
}

func (o NotificationDestinationAuthBasicPtrOutput) ToNotificationDestinationAuthBasicPtrOutput() NotificationDestinationAuthBasicPtrOutput {
	return o
}

func (o NotificationDestinationAuthBasicPtrOutput) ToNotificationDestinationAuthBasicPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthBasicPtrOutput {
	return o
}

func (o NotificationDestinationAuthBasicPtrOutput) Elem() NotificationDestinationAuthBasicOutput {
	return o.ApplyT(func(v *NotificationDestinationAuthBasic) NotificationDestinationAuthBasic {
		if v != nil {
			return *v
		}
		var ret NotificationDestinationAuthBasic
		return ret
	}).(NotificationDestinationAuthBasicOutput)
}

// Specifies an authentication password for use with a destination.
func (o NotificationDestinationAuthBasicPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationDestinationAuthBasic) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The username of the basic auth.
func (o NotificationDestinationAuthBasicPtrOutput) User() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationDestinationAuthBasic) *string {
		if v == nil {
			return nil
		}
		return &v.User
	}).(pulumi.StringPtrOutput)
}

type NotificationDestinationAuthCustomHeader struct {
	// The notification property key.
	Key string `pulumi:"key"`
	// The notification property value.
	Value string `pulumi:"value"`
}

// NotificationDestinationAuthCustomHeaderInput is an input type that accepts NotificationDestinationAuthCustomHeaderArgs and NotificationDestinationAuthCustomHeaderOutput values.
// You can construct a concrete instance of `NotificationDestinationAuthCustomHeaderInput` via:
//
//	NotificationDestinationAuthCustomHeaderArgs{...}
type NotificationDestinationAuthCustomHeaderInput interface {
	pulumi.Input

	ToNotificationDestinationAuthCustomHeaderOutput() NotificationDestinationAuthCustomHeaderOutput
	ToNotificationDestinationAuthCustomHeaderOutputWithContext(context.Context) NotificationDestinationAuthCustomHeaderOutput
}

type NotificationDestinationAuthCustomHeaderArgs struct {
	// The notification property key.
	Key pulumi.StringInput `pulumi:"key"`
	// The notification property value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NotificationDestinationAuthCustomHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationAuthCustomHeader)(nil)).Elem()
}

func (i NotificationDestinationAuthCustomHeaderArgs) ToNotificationDestinationAuthCustomHeaderOutput() NotificationDestinationAuthCustomHeaderOutput {
	return i.ToNotificationDestinationAuthCustomHeaderOutputWithContext(context.Background())
}

func (i NotificationDestinationAuthCustomHeaderArgs) ToNotificationDestinationAuthCustomHeaderOutputWithContext(ctx context.Context) NotificationDestinationAuthCustomHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthCustomHeaderOutput)
}

// NotificationDestinationAuthCustomHeaderArrayInput is an input type that accepts NotificationDestinationAuthCustomHeaderArray and NotificationDestinationAuthCustomHeaderArrayOutput values.
// You can construct a concrete instance of `NotificationDestinationAuthCustomHeaderArrayInput` via:
//
//	NotificationDestinationAuthCustomHeaderArray{ NotificationDestinationAuthCustomHeaderArgs{...} }
type NotificationDestinationAuthCustomHeaderArrayInput interface {
	pulumi.Input

	ToNotificationDestinationAuthCustomHeaderArrayOutput() NotificationDestinationAuthCustomHeaderArrayOutput
	ToNotificationDestinationAuthCustomHeaderArrayOutputWithContext(context.Context) NotificationDestinationAuthCustomHeaderArrayOutput
}

type NotificationDestinationAuthCustomHeaderArray []NotificationDestinationAuthCustomHeaderInput

func (NotificationDestinationAuthCustomHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationDestinationAuthCustomHeader)(nil)).Elem()
}

func (i NotificationDestinationAuthCustomHeaderArray) ToNotificationDestinationAuthCustomHeaderArrayOutput() NotificationDestinationAuthCustomHeaderArrayOutput {
	return i.ToNotificationDestinationAuthCustomHeaderArrayOutputWithContext(context.Background())
}

func (i NotificationDestinationAuthCustomHeaderArray) ToNotificationDestinationAuthCustomHeaderArrayOutputWithContext(ctx context.Context) NotificationDestinationAuthCustomHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthCustomHeaderArrayOutput)
}

type NotificationDestinationAuthCustomHeaderOutput struct{ *pulumi.OutputState }

func (NotificationDestinationAuthCustomHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationAuthCustomHeader)(nil)).Elem()
}

func (o NotificationDestinationAuthCustomHeaderOutput) ToNotificationDestinationAuthCustomHeaderOutput() NotificationDestinationAuthCustomHeaderOutput {
	return o
}

func (o NotificationDestinationAuthCustomHeaderOutput) ToNotificationDestinationAuthCustomHeaderOutputWithContext(ctx context.Context) NotificationDestinationAuthCustomHeaderOutput {
	return o
}

// The notification property key.
func (o NotificationDestinationAuthCustomHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationAuthCustomHeader) string { return v.Key }).(pulumi.StringOutput)
}

// The notification property value.
func (o NotificationDestinationAuthCustomHeaderOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationAuthCustomHeader) string { return v.Value }).(pulumi.StringOutput)
}

type NotificationDestinationAuthCustomHeaderArrayOutput struct{ *pulumi.OutputState }

func (NotificationDestinationAuthCustomHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationDestinationAuthCustomHeader)(nil)).Elem()
}

func (o NotificationDestinationAuthCustomHeaderArrayOutput) ToNotificationDestinationAuthCustomHeaderArrayOutput() NotificationDestinationAuthCustomHeaderArrayOutput {
	return o
}

func (o NotificationDestinationAuthCustomHeaderArrayOutput) ToNotificationDestinationAuthCustomHeaderArrayOutputWithContext(ctx context.Context) NotificationDestinationAuthCustomHeaderArrayOutput {
	return o
}

func (o NotificationDestinationAuthCustomHeaderArrayOutput) Index(i pulumi.IntInput) NotificationDestinationAuthCustomHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationDestinationAuthCustomHeader {
		return vs[0].([]NotificationDestinationAuthCustomHeader)[vs[1].(int)]
	}).(NotificationDestinationAuthCustomHeaderOutput)
}

type NotificationDestinationAuthToken struct {
	// The prefix of the URL.
	Prefix *string `pulumi:"prefix"`
	// Specifies the token for integrating.
	Token string `pulumi:"token"`
}

// NotificationDestinationAuthTokenInput is an input type that accepts NotificationDestinationAuthTokenArgs and NotificationDestinationAuthTokenOutput values.
// You can construct a concrete instance of `NotificationDestinationAuthTokenInput` via:
//
//	NotificationDestinationAuthTokenArgs{...}
type NotificationDestinationAuthTokenInput interface {
	pulumi.Input

	ToNotificationDestinationAuthTokenOutput() NotificationDestinationAuthTokenOutput
	ToNotificationDestinationAuthTokenOutputWithContext(context.Context) NotificationDestinationAuthTokenOutput
}

type NotificationDestinationAuthTokenArgs struct {
	// The prefix of the URL.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Specifies the token for integrating.
	Token pulumi.StringInput `pulumi:"token"`
}

func (NotificationDestinationAuthTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationAuthToken)(nil)).Elem()
}

func (i NotificationDestinationAuthTokenArgs) ToNotificationDestinationAuthTokenOutput() NotificationDestinationAuthTokenOutput {
	return i.ToNotificationDestinationAuthTokenOutputWithContext(context.Background())
}

func (i NotificationDestinationAuthTokenArgs) ToNotificationDestinationAuthTokenOutputWithContext(ctx context.Context) NotificationDestinationAuthTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthTokenOutput)
}

func (i NotificationDestinationAuthTokenArgs) ToNotificationDestinationAuthTokenPtrOutput() NotificationDestinationAuthTokenPtrOutput {
	return i.ToNotificationDestinationAuthTokenPtrOutputWithContext(context.Background())
}

func (i NotificationDestinationAuthTokenArgs) ToNotificationDestinationAuthTokenPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthTokenOutput).ToNotificationDestinationAuthTokenPtrOutputWithContext(ctx)
}

// NotificationDestinationAuthTokenPtrInput is an input type that accepts NotificationDestinationAuthTokenArgs, NotificationDestinationAuthTokenPtr and NotificationDestinationAuthTokenPtrOutput values.
// You can construct a concrete instance of `NotificationDestinationAuthTokenPtrInput` via:
//
//	        NotificationDestinationAuthTokenArgs{...}
//
//	or:
//
//	        nil
type NotificationDestinationAuthTokenPtrInput interface {
	pulumi.Input

	ToNotificationDestinationAuthTokenPtrOutput() NotificationDestinationAuthTokenPtrOutput
	ToNotificationDestinationAuthTokenPtrOutputWithContext(context.Context) NotificationDestinationAuthTokenPtrOutput
}

type notificationDestinationAuthTokenPtrType NotificationDestinationAuthTokenArgs

func NotificationDestinationAuthTokenPtr(v *NotificationDestinationAuthTokenArgs) NotificationDestinationAuthTokenPtrInput {
	return (*notificationDestinationAuthTokenPtrType)(v)
}

func (*notificationDestinationAuthTokenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDestinationAuthToken)(nil)).Elem()
}

func (i *notificationDestinationAuthTokenPtrType) ToNotificationDestinationAuthTokenPtrOutput() NotificationDestinationAuthTokenPtrOutput {
	return i.ToNotificationDestinationAuthTokenPtrOutputWithContext(context.Background())
}

func (i *notificationDestinationAuthTokenPtrType) ToNotificationDestinationAuthTokenPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthTokenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationAuthTokenPtrOutput)
}

type NotificationDestinationAuthTokenOutput struct{ *pulumi.OutputState }

func (NotificationDestinationAuthTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationAuthToken)(nil)).Elem()
}

func (o NotificationDestinationAuthTokenOutput) ToNotificationDestinationAuthTokenOutput() NotificationDestinationAuthTokenOutput {
	return o
}

func (o NotificationDestinationAuthTokenOutput) ToNotificationDestinationAuthTokenOutputWithContext(ctx context.Context) NotificationDestinationAuthTokenOutput {
	return o
}

func (o NotificationDestinationAuthTokenOutput) ToNotificationDestinationAuthTokenPtrOutput() NotificationDestinationAuthTokenPtrOutput {
	return o.ToNotificationDestinationAuthTokenPtrOutputWithContext(context.Background())
}

func (o NotificationDestinationAuthTokenOutput) ToNotificationDestinationAuthTokenPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthTokenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationDestinationAuthToken) *NotificationDestinationAuthToken {
		return &v
	}).(NotificationDestinationAuthTokenPtrOutput)
}

// The prefix of the URL.
func (o NotificationDestinationAuthTokenOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationDestinationAuthToken) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Specifies the token for integrating.
func (o NotificationDestinationAuthTokenOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationAuthToken) string { return v.Token }).(pulumi.StringOutput)
}

type NotificationDestinationAuthTokenPtrOutput struct{ *pulumi.OutputState }

func (NotificationDestinationAuthTokenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDestinationAuthToken)(nil)).Elem()
}

func (o NotificationDestinationAuthTokenPtrOutput) ToNotificationDestinationAuthTokenPtrOutput() NotificationDestinationAuthTokenPtrOutput {
	return o
}

func (o NotificationDestinationAuthTokenPtrOutput) ToNotificationDestinationAuthTokenPtrOutputWithContext(ctx context.Context) NotificationDestinationAuthTokenPtrOutput {
	return o
}

func (o NotificationDestinationAuthTokenPtrOutput) Elem() NotificationDestinationAuthTokenOutput {
	return o.ApplyT(func(v *NotificationDestinationAuthToken) NotificationDestinationAuthToken {
		if v != nil {
			return *v
		}
		var ret NotificationDestinationAuthToken
		return ret
	}).(NotificationDestinationAuthTokenOutput)
}

// The prefix of the URL.
func (o NotificationDestinationAuthTokenPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationDestinationAuthToken) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// Specifies the token for integrating.
func (o NotificationDestinationAuthTokenPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationDestinationAuthToken) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type NotificationDestinationProperty struct {
	// Notification property display key.
	DisplayValue *string `pulumi:"displayValue"`
	// Notification property key.
	Key string `pulumi:"key"`
	// Notification property label.
	Label *string `pulumi:"label"`
	// Notification property value.
	Value string `pulumi:"value"`
}

// NotificationDestinationPropertyInput is an input type that accepts NotificationDestinationPropertyArgs and NotificationDestinationPropertyOutput values.
// You can construct a concrete instance of `NotificationDestinationPropertyInput` via:
//
//	NotificationDestinationPropertyArgs{...}
type NotificationDestinationPropertyInput interface {
	pulumi.Input

	ToNotificationDestinationPropertyOutput() NotificationDestinationPropertyOutput
	ToNotificationDestinationPropertyOutputWithContext(context.Context) NotificationDestinationPropertyOutput
}

type NotificationDestinationPropertyArgs struct {
	// Notification property display key.
	DisplayValue pulumi.StringPtrInput `pulumi:"displayValue"`
	// Notification property key.
	Key pulumi.StringInput `pulumi:"key"`
	// Notification property label.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Notification property value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (NotificationDestinationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationProperty)(nil)).Elem()
}

func (i NotificationDestinationPropertyArgs) ToNotificationDestinationPropertyOutput() NotificationDestinationPropertyOutput {
	return i.ToNotificationDestinationPropertyOutputWithContext(context.Background())
}

func (i NotificationDestinationPropertyArgs) ToNotificationDestinationPropertyOutputWithContext(ctx context.Context) NotificationDestinationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationPropertyOutput)
}

// NotificationDestinationPropertyArrayInput is an input type that accepts NotificationDestinationPropertyArray and NotificationDestinationPropertyArrayOutput values.
// You can construct a concrete instance of `NotificationDestinationPropertyArrayInput` via:
//
//	NotificationDestinationPropertyArray{ NotificationDestinationPropertyArgs{...} }
type NotificationDestinationPropertyArrayInput interface {
	pulumi.Input

	ToNotificationDestinationPropertyArrayOutput() NotificationDestinationPropertyArrayOutput
	ToNotificationDestinationPropertyArrayOutputWithContext(context.Context) NotificationDestinationPropertyArrayOutput
}

type NotificationDestinationPropertyArray []NotificationDestinationPropertyInput

func (NotificationDestinationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationDestinationProperty)(nil)).Elem()
}

func (i NotificationDestinationPropertyArray) ToNotificationDestinationPropertyArrayOutput() NotificationDestinationPropertyArrayOutput {
	return i.ToNotificationDestinationPropertyArrayOutputWithContext(context.Background())
}

func (i NotificationDestinationPropertyArray) ToNotificationDestinationPropertyArrayOutputWithContext(ctx context.Context) NotificationDestinationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationPropertyArrayOutput)
}

type NotificationDestinationPropertyOutput struct{ *pulumi.OutputState }

func (NotificationDestinationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationProperty)(nil)).Elem()
}

func (o NotificationDestinationPropertyOutput) ToNotificationDestinationPropertyOutput() NotificationDestinationPropertyOutput {
	return o
}

func (o NotificationDestinationPropertyOutput) ToNotificationDestinationPropertyOutputWithContext(ctx context.Context) NotificationDestinationPropertyOutput {
	return o
}

// Notification property display key.
func (o NotificationDestinationPropertyOutput) DisplayValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationDestinationProperty) *string { return v.DisplayValue }).(pulumi.StringPtrOutput)
}

// Notification property key.
func (o NotificationDestinationPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationProperty) string { return v.Key }).(pulumi.StringOutput)
}

// Notification property label.
func (o NotificationDestinationPropertyOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationDestinationProperty) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Notification property value.
func (o NotificationDestinationPropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationProperty) string { return v.Value }).(pulumi.StringOutput)
}

type NotificationDestinationPropertyArrayOutput struct{ *pulumi.OutputState }

func (NotificationDestinationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NotificationDestinationProperty)(nil)).Elem()
}

func (o NotificationDestinationPropertyArrayOutput) ToNotificationDestinationPropertyArrayOutput() NotificationDestinationPropertyArrayOutput {
	return o
}

func (o NotificationDestinationPropertyArrayOutput) ToNotificationDestinationPropertyArrayOutputWithContext(ctx context.Context) NotificationDestinationPropertyArrayOutput {
	return o
}

func (o NotificationDestinationPropertyArrayOutput) Index(i pulumi.IntInput) NotificationDestinationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NotificationDestinationProperty {
		return vs[0].([]NotificationDestinationProperty)[vs[1].(int)]
	}).(NotificationDestinationPropertyOutput)
}

type NotificationDestinationSecureUrl struct {
	// The prefix of the URL.
	Prefix string `pulumi:"prefix"`
	// The suffix of the URL, which contains sensitive data.
	SecureSuffix string `pulumi:"secureSuffix"`
}

// NotificationDestinationSecureUrlInput is an input type that accepts NotificationDestinationSecureUrlArgs and NotificationDestinationSecureUrlOutput values.
// You can construct a concrete instance of `NotificationDestinationSecureUrlInput` via:
//
//	NotificationDestinationSecureUrlArgs{...}
type NotificationDestinationSecureUrlInput interface {
	pulumi.Input

	ToNotificationDestinationSecureUrlOutput() NotificationDestinationSecureUrlOutput
	ToNotificationDestinationSecureUrlOutputWithContext(context.Context) NotificationDestinationSecureUrlOutput
}

type NotificationDestinationSecureUrlArgs struct {
	// The prefix of the URL.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// The suffix of the URL, which contains sensitive data.
	SecureSuffix pulumi.StringInput `pulumi:"secureSuffix"`
}

func (NotificationDestinationSecureUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationSecureUrl)(nil)).Elem()
}

func (i NotificationDestinationSecureUrlArgs) ToNotificationDestinationSecureUrlOutput() NotificationDestinationSecureUrlOutput {
	return i.ToNotificationDestinationSecureUrlOutputWithContext(context.Background())
}

func (i NotificationDestinationSecureUrlArgs) ToNotificationDestinationSecureUrlOutputWithContext(ctx context.Context) NotificationDestinationSecureUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationSecureUrlOutput)
}

func (i NotificationDestinationSecureUrlArgs) ToNotificationDestinationSecureUrlPtrOutput() NotificationDestinationSecureUrlPtrOutput {
	return i.ToNotificationDestinationSecureUrlPtrOutputWithContext(context.Background())
}

func (i NotificationDestinationSecureUrlArgs) ToNotificationDestinationSecureUrlPtrOutputWithContext(ctx context.Context) NotificationDestinationSecureUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationSecureUrlOutput).ToNotificationDestinationSecureUrlPtrOutputWithContext(ctx)
}

// NotificationDestinationSecureUrlPtrInput is an input type that accepts NotificationDestinationSecureUrlArgs, NotificationDestinationSecureUrlPtr and NotificationDestinationSecureUrlPtrOutput values.
// You can construct a concrete instance of `NotificationDestinationSecureUrlPtrInput` via:
//
//	        NotificationDestinationSecureUrlArgs{...}
//
//	or:
//
//	        nil
type NotificationDestinationSecureUrlPtrInput interface {
	pulumi.Input

	ToNotificationDestinationSecureUrlPtrOutput() NotificationDestinationSecureUrlPtrOutput
	ToNotificationDestinationSecureUrlPtrOutputWithContext(context.Context) NotificationDestinationSecureUrlPtrOutput
}

type notificationDestinationSecureUrlPtrType NotificationDestinationSecureUrlArgs

func NotificationDestinationSecureUrlPtr(v *NotificationDestinationSecureUrlArgs) NotificationDestinationSecureUrlPtrInput {
	return (*notificationDestinationSecureUrlPtrType)(v)
}

func (*notificationDestinationSecureUrlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDestinationSecureUrl)(nil)).Elem()
}

func (i *notificationDestinationSecureUrlPtrType) ToNotificationDestinationSecureUrlPtrOutput() NotificationDestinationSecureUrlPtrOutput {
	return i.ToNotificationDestinationSecureUrlPtrOutputWithContext(context.Background())
}

func (i *notificationDestinationSecureUrlPtrType) ToNotificationDestinationSecureUrlPtrOutputWithContext(ctx context.Context) NotificationDestinationSecureUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationDestinationSecureUrlPtrOutput)
}

type NotificationDestinationSecureUrlOutput struct{ *pulumi.OutputState }

func (NotificationDestinationSecureUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationDestinationSecureUrl)(nil)).Elem()
}

func (o NotificationDestinationSecureUrlOutput) ToNotificationDestinationSecureUrlOutput() NotificationDestinationSecureUrlOutput {
	return o
}

func (o NotificationDestinationSecureUrlOutput) ToNotificationDestinationSecureUrlOutputWithContext(ctx context.Context) NotificationDestinationSecureUrlOutput {
	return o
}

func (o NotificationDestinationSecureUrlOutput) ToNotificationDestinationSecureUrlPtrOutput() NotificationDestinationSecureUrlPtrOutput {
	return o.ToNotificationDestinationSecureUrlPtrOutputWithContext(context.Background())
}

func (o NotificationDestinationSecureUrlOutput) ToNotificationDestinationSecureUrlPtrOutputWithContext(ctx context.Context) NotificationDestinationSecureUrlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationDestinationSecureUrl) *NotificationDestinationSecureUrl {
		return &v
	}).(NotificationDestinationSecureUrlPtrOutput)
}

// The prefix of the URL.
func (o NotificationDestinationSecureUrlOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationSecureUrl) string { return v.Prefix }).(pulumi.StringOutput)
}

// The suffix of the URL, which contains sensitive data.
func (o NotificationDestinationSecureUrlOutput) SecureSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v NotificationDestinationSecureUrl) string { return v.SecureSuffix }).(pulumi.StringOutput)
}

type NotificationDestinationSecureUrlPtrOutput struct{ *pulumi.OutputState }

func (NotificationDestinationSecureUrlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationDestinationSecureUrl)(nil)).Elem()
}

func (o NotificationDestinationSecureUrlPtrOutput) ToNotificationDestinationSecureUrlPtrOutput() NotificationDestinationSecureUrlPtrOutput {
	return o
}

func (o NotificationDestinationSecureUrlPtrOutput) ToNotificationDestinationSecureUrlPtrOutputWithContext(ctx context.Context) NotificationDestinationSecureUrlPtrOutput {
	return o
}

func (o NotificationDestinationSecureUrlPtrOutput) Elem() NotificationDestinationSecureUrlOutput {
	return o.ApplyT(func(v *NotificationDestinationSecureUrl) NotificationDestinationSecureUrl {
		if v != nil {
			return *v
		}
		var ret NotificationDestinationSecureUrl
		return ret
	}).(NotificationDestinationSecureUrlOutput)
}

// The prefix of the URL.
func (o NotificationDestinationSecureUrlPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationDestinationSecureUrl) *string {
		if v == nil {
			return nil
		}
		return &v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The suffix of the URL, which contains sensitive data.
func (o NotificationDestinationSecureUrlPtrOutput) SecureSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationDestinationSecureUrl) *string {
		if v == nil {
			return nil
		}
		return &v.SecureSuffix
	}).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionCritical struct {
	// Violations will not change system health status for this term.
	DisableHealthStatusReporting *bool `pulumi:"disableHealthStatusReporting"`
	// In minutes, must be in the range of 1 to 120 (inclusive).
	//
	// Deprecated: use `thresholdDuration` attribute instead
	Duration *int `pulumi:"duration"`
	// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
	Operator *string `pulumi:"operator"`
	// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
	Prediction *NrqlAlertConditionCriticalPrediction `pulumi:"prediction"`
	// For baseline conditions must be in range [1, 1000].
	Threshold float64 `pulumi:"threshold"`
	// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
	ThresholdDuration *int `pulumi:"thresholdDuration"`
	// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
	ThresholdOccurrences *string `pulumi:"thresholdOccurrences"`
	// Valid values are: 'all' or 'any'
	//
	// Deprecated: use `thresholdOccurrences` attribute instead
	TimeFunction *string `pulumi:"timeFunction"`
}

// NrqlAlertConditionCriticalInput is an input type that accepts NrqlAlertConditionCriticalArgs and NrqlAlertConditionCriticalOutput values.
// You can construct a concrete instance of `NrqlAlertConditionCriticalInput` via:
//
//	NrqlAlertConditionCriticalArgs{...}
type NrqlAlertConditionCriticalInput interface {
	pulumi.Input

	ToNrqlAlertConditionCriticalOutput() NrqlAlertConditionCriticalOutput
	ToNrqlAlertConditionCriticalOutputWithContext(context.Context) NrqlAlertConditionCriticalOutput
}

type NrqlAlertConditionCriticalArgs struct {
	// Violations will not change system health status for this term.
	DisableHealthStatusReporting pulumi.BoolPtrInput `pulumi:"disableHealthStatusReporting"`
	// In minutes, must be in the range of 1 to 120 (inclusive).
	//
	// Deprecated: use `thresholdDuration` attribute instead
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
	Prediction NrqlAlertConditionCriticalPredictionPtrInput `pulumi:"prediction"`
	// For baseline conditions must be in range [1, 1000].
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
	ThresholdDuration pulumi.IntPtrInput `pulumi:"thresholdDuration"`
	// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
	ThresholdOccurrences pulumi.StringPtrInput `pulumi:"thresholdOccurrences"`
	// Valid values are: 'all' or 'any'
	//
	// Deprecated: use `thresholdOccurrences` attribute instead
	TimeFunction pulumi.StringPtrInput `pulumi:"timeFunction"`
}

func (NrqlAlertConditionCriticalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionCritical)(nil)).Elem()
}

func (i NrqlAlertConditionCriticalArgs) ToNrqlAlertConditionCriticalOutput() NrqlAlertConditionCriticalOutput {
	return i.ToNrqlAlertConditionCriticalOutputWithContext(context.Background())
}

func (i NrqlAlertConditionCriticalArgs) ToNrqlAlertConditionCriticalOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionCriticalOutput)
}

func (i NrqlAlertConditionCriticalArgs) ToNrqlAlertConditionCriticalPtrOutput() NrqlAlertConditionCriticalPtrOutput {
	return i.ToNrqlAlertConditionCriticalPtrOutputWithContext(context.Background())
}

func (i NrqlAlertConditionCriticalArgs) ToNrqlAlertConditionCriticalPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionCriticalOutput).ToNrqlAlertConditionCriticalPtrOutputWithContext(ctx)
}

// NrqlAlertConditionCriticalPtrInput is an input type that accepts NrqlAlertConditionCriticalArgs, NrqlAlertConditionCriticalPtr and NrqlAlertConditionCriticalPtrOutput values.
// You can construct a concrete instance of `NrqlAlertConditionCriticalPtrInput` via:
//
//	        NrqlAlertConditionCriticalArgs{...}
//
//	or:
//
//	        nil
type NrqlAlertConditionCriticalPtrInput interface {
	pulumi.Input

	ToNrqlAlertConditionCriticalPtrOutput() NrqlAlertConditionCriticalPtrOutput
	ToNrqlAlertConditionCriticalPtrOutputWithContext(context.Context) NrqlAlertConditionCriticalPtrOutput
}

type nrqlAlertConditionCriticalPtrType NrqlAlertConditionCriticalArgs

func NrqlAlertConditionCriticalPtr(v *NrqlAlertConditionCriticalArgs) NrqlAlertConditionCriticalPtrInput {
	return (*nrqlAlertConditionCriticalPtrType)(v)
}

func (*nrqlAlertConditionCriticalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionCritical)(nil)).Elem()
}

func (i *nrqlAlertConditionCriticalPtrType) ToNrqlAlertConditionCriticalPtrOutput() NrqlAlertConditionCriticalPtrOutput {
	return i.ToNrqlAlertConditionCriticalPtrOutputWithContext(context.Background())
}

func (i *nrqlAlertConditionCriticalPtrType) ToNrqlAlertConditionCriticalPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionCriticalPtrOutput)
}

type NrqlAlertConditionCriticalOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionCriticalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionCritical)(nil)).Elem()
}

func (o NrqlAlertConditionCriticalOutput) ToNrqlAlertConditionCriticalOutput() NrqlAlertConditionCriticalOutput {
	return o
}

func (o NrqlAlertConditionCriticalOutput) ToNrqlAlertConditionCriticalOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalOutput {
	return o
}

func (o NrqlAlertConditionCriticalOutput) ToNrqlAlertConditionCriticalPtrOutput() NrqlAlertConditionCriticalPtrOutput {
	return o.ToNrqlAlertConditionCriticalPtrOutputWithContext(context.Background())
}

func (o NrqlAlertConditionCriticalOutput) ToNrqlAlertConditionCriticalPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NrqlAlertConditionCritical) *NrqlAlertConditionCritical {
		return &v
	}).(NrqlAlertConditionCriticalPtrOutput)
}

// Violations will not change system health status for this term.
func (o NrqlAlertConditionCriticalOutput) DisableHealthStatusReporting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *bool { return v.DisableHealthStatusReporting }).(pulumi.BoolPtrOutput)
}

// In minutes, must be in the range of 1 to 120 (inclusive).
//
// Deprecated: use `thresholdDuration` attribute instead
func (o NrqlAlertConditionCriticalOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
func (o NrqlAlertConditionCriticalOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
func (o NrqlAlertConditionCriticalOutput) Prediction() NrqlAlertConditionCriticalPredictionPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *NrqlAlertConditionCriticalPrediction { return v.Prediction }).(NrqlAlertConditionCriticalPredictionPtrOutput)
}

// For baseline conditions must be in range [1, 1000].
func (o NrqlAlertConditionCriticalOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v NrqlAlertConditionCritical) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
func (o NrqlAlertConditionCriticalOutput) ThresholdDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *int { return v.ThresholdDuration }).(pulumi.IntPtrOutput)
}

// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
func (o NrqlAlertConditionCriticalOutput) ThresholdOccurrences() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *string { return v.ThresholdOccurrences }).(pulumi.StringPtrOutput)
}

// Valid values are: 'all' or 'any'
//
// Deprecated: use `thresholdOccurrences` attribute instead
func (o NrqlAlertConditionCriticalOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCritical) *string { return v.TimeFunction }).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionCriticalPtrOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionCriticalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionCritical)(nil)).Elem()
}

func (o NrqlAlertConditionCriticalPtrOutput) ToNrqlAlertConditionCriticalPtrOutput() NrqlAlertConditionCriticalPtrOutput {
	return o
}

func (o NrqlAlertConditionCriticalPtrOutput) ToNrqlAlertConditionCriticalPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPtrOutput {
	return o
}

func (o NrqlAlertConditionCriticalPtrOutput) Elem() NrqlAlertConditionCriticalOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) NrqlAlertConditionCritical {
		if v != nil {
			return *v
		}
		var ret NrqlAlertConditionCritical
		return ret
	}).(NrqlAlertConditionCriticalOutput)
}

// Violations will not change system health status for this term.
func (o NrqlAlertConditionCriticalPtrOutput) DisableHealthStatusReporting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHealthStatusReporting
	}).(pulumi.BoolPtrOutput)
}

// In minutes, must be in the range of 1 to 120 (inclusive).
//
// Deprecated: use `thresholdDuration` attribute instead
func (o NrqlAlertConditionCriticalPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
func (o NrqlAlertConditionCriticalPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
func (o NrqlAlertConditionCriticalPtrOutput) Prediction() NrqlAlertConditionCriticalPredictionPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *NrqlAlertConditionCriticalPrediction {
		if v == nil {
			return nil
		}
		return v.Prediction
	}).(NrqlAlertConditionCriticalPredictionPtrOutput)
}

// For baseline conditions must be in range [1, 1000].
func (o NrqlAlertConditionCriticalPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *float64 {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
func (o NrqlAlertConditionCriticalPtrOutput) ThresholdDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *int {
		if v == nil {
			return nil
		}
		return v.ThresholdDuration
	}).(pulumi.IntPtrOutput)
}

// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
func (o NrqlAlertConditionCriticalPtrOutput) ThresholdOccurrences() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdOccurrences
	}).(pulumi.StringPtrOutput)
}

// Valid values are: 'all' or 'any'
//
// Deprecated: use `thresholdOccurrences` attribute instead
func (o NrqlAlertConditionCriticalPtrOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCritical) *string {
		if v == nil {
			return nil
		}
		return v.TimeFunction
	}).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionCriticalPrediction struct {
	// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
	PredictBy *int `pulumi:"predictBy"`
	// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
	PreferPredictionViolation *bool `pulumi:"preferPredictionViolation"`
}

// NrqlAlertConditionCriticalPredictionInput is an input type that accepts NrqlAlertConditionCriticalPredictionArgs and NrqlAlertConditionCriticalPredictionOutput values.
// You can construct a concrete instance of `NrqlAlertConditionCriticalPredictionInput` via:
//
//	NrqlAlertConditionCriticalPredictionArgs{...}
type NrqlAlertConditionCriticalPredictionInput interface {
	pulumi.Input

	ToNrqlAlertConditionCriticalPredictionOutput() NrqlAlertConditionCriticalPredictionOutput
	ToNrqlAlertConditionCriticalPredictionOutputWithContext(context.Context) NrqlAlertConditionCriticalPredictionOutput
}

type NrqlAlertConditionCriticalPredictionArgs struct {
	// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
	PredictBy pulumi.IntPtrInput `pulumi:"predictBy"`
	// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
	PreferPredictionViolation pulumi.BoolPtrInput `pulumi:"preferPredictionViolation"`
}

func (NrqlAlertConditionCriticalPredictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionCriticalPrediction)(nil)).Elem()
}

func (i NrqlAlertConditionCriticalPredictionArgs) ToNrqlAlertConditionCriticalPredictionOutput() NrqlAlertConditionCriticalPredictionOutput {
	return i.ToNrqlAlertConditionCriticalPredictionOutputWithContext(context.Background())
}

func (i NrqlAlertConditionCriticalPredictionArgs) ToNrqlAlertConditionCriticalPredictionOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPredictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionCriticalPredictionOutput)
}

func (i NrqlAlertConditionCriticalPredictionArgs) ToNrqlAlertConditionCriticalPredictionPtrOutput() NrqlAlertConditionCriticalPredictionPtrOutput {
	return i.ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(context.Background())
}

func (i NrqlAlertConditionCriticalPredictionArgs) ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPredictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionCriticalPredictionOutput).ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(ctx)
}

// NrqlAlertConditionCriticalPredictionPtrInput is an input type that accepts NrqlAlertConditionCriticalPredictionArgs, NrqlAlertConditionCriticalPredictionPtr and NrqlAlertConditionCriticalPredictionPtrOutput values.
// You can construct a concrete instance of `NrqlAlertConditionCriticalPredictionPtrInput` via:
//
//	        NrqlAlertConditionCriticalPredictionArgs{...}
//
//	or:
//
//	        nil
type NrqlAlertConditionCriticalPredictionPtrInput interface {
	pulumi.Input

	ToNrqlAlertConditionCriticalPredictionPtrOutput() NrqlAlertConditionCriticalPredictionPtrOutput
	ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(context.Context) NrqlAlertConditionCriticalPredictionPtrOutput
}

type nrqlAlertConditionCriticalPredictionPtrType NrqlAlertConditionCriticalPredictionArgs

func NrqlAlertConditionCriticalPredictionPtr(v *NrqlAlertConditionCriticalPredictionArgs) NrqlAlertConditionCriticalPredictionPtrInput {
	return (*nrqlAlertConditionCriticalPredictionPtrType)(v)
}

func (*nrqlAlertConditionCriticalPredictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionCriticalPrediction)(nil)).Elem()
}

func (i *nrqlAlertConditionCriticalPredictionPtrType) ToNrqlAlertConditionCriticalPredictionPtrOutput() NrqlAlertConditionCriticalPredictionPtrOutput {
	return i.ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(context.Background())
}

func (i *nrqlAlertConditionCriticalPredictionPtrType) ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPredictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionCriticalPredictionPtrOutput)
}

type NrqlAlertConditionCriticalPredictionOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionCriticalPredictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionCriticalPrediction)(nil)).Elem()
}

func (o NrqlAlertConditionCriticalPredictionOutput) ToNrqlAlertConditionCriticalPredictionOutput() NrqlAlertConditionCriticalPredictionOutput {
	return o
}

func (o NrqlAlertConditionCriticalPredictionOutput) ToNrqlAlertConditionCriticalPredictionOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPredictionOutput {
	return o
}

func (o NrqlAlertConditionCriticalPredictionOutput) ToNrqlAlertConditionCriticalPredictionPtrOutput() NrqlAlertConditionCriticalPredictionPtrOutput {
	return o.ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(context.Background())
}

func (o NrqlAlertConditionCriticalPredictionOutput) ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPredictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NrqlAlertConditionCriticalPrediction) *NrqlAlertConditionCriticalPrediction {
		return &v
	}).(NrqlAlertConditionCriticalPredictionPtrOutput)
}

// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
func (o NrqlAlertConditionCriticalPredictionOutput) PredictBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCriticalPrediction) *int { return v.PredictBy }).(pulumi.IntPtrOutput)
}

// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
func (o NrqlAlertConditionCriticalPredictionOutput) PreferPredictionViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionCriticalPrediction) *bool { return v.PreferPredictionViolation }).(pulumi.BoolPtrOutput)
}

type NrqlAlertConditionCriticalPredictionPtrOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionCriticalPredictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionCriticalPrediction)(nil)).Elem()
}

func (o NrqlAlertConditionCriticalPredictionPtrOutput) ToNrqlAlertConditionCriticalPredictionPtrOutput() NrqlAlertConditionCriticalPredictionPtrOutput {
	return o
}

func (o NrqlAlertConditionCriticalPredictionPtrOutput) ToNrqlAlertConditionCriticalPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionCriticalPredictionPtrOutput {
	return o
}

func (o NrqlAlertConditionCriticalPredictionPtrOutput) Elem() NrqlAlertConditionCriticalPredictionOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCriticalPrediction) NrqlAlertConditionCriticalPrediction {
		if v != nil {
			return *v
		}
		var ret NrqlAlertConditionCriticalPrediction
		return ret
	}).(NrqlAlertConditionCriticalPredictionOutput)
}

// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
func (o NrqlAlertConditionCriticalPredictionPtrOutput) PredictBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCriticalPrediction) *int {
		if v == nil {
			return nil
		}
		return v.PredictBy
	}).(pulumi.IntPtrOutput)
}

// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
func (o NrqlAlertConditionCriticalPredictionPtrOutput) PreferPredictionViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionCriticalPrediction) *bool {
		if v == nil {
			return nil
		}
		return v.PreferPredictionViolation
	}).(pulumi.BoolPtrOutput)
}

type NrqlAlertConditionNrql struct {
	// The New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to `accountId` if unspecified.
	DataAccountId *string `pulumi:"dataAccountId"`
	// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluationOffset`.
	//
	// Deprecated: use `aggregationMethod` attribute instead
	EvaluationOffset *int   `pulumi:"evaluationOffset"`
	Query            string `pulumi:"query"`
	// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `sinceValue`.
	//
	// Deprecated: use `aggregationMethod` attribute instead
	SinceValue *string `pulumi:"sinceValue"`
}

// NrqlAlertConditionNrqlInput is an input type that accepts NrqlAlertConditionNrqlArgs and NrqlAlertConditionNrqlOutput values.
// You can construct a concrete instance of `NrqlAlertConditionNrqlInput` via:
//
//	NrqlAlertConditionNrqlArgs{...}
type NrqlAlertConditionNrqlInput interface {
	pulumi.Input

	ToNrqlAlertConditionNrqlOutput() NrqlAlertConditionNrqlOutput
	ToNrqlAlertConditionNrqlOutputWithContext(context.Context) NrqlAlertConditionNrqlOutput
}

type NrqlAlertConditionNrqlArgs struct {
	// The New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to `accountId` if unspecified.
	DataAccountId pulumi.StringPtrInput `pulumi:"dataAccountId"`
	// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluationOffset`.
	//
	// Deprecated: use `aggregationMethod` attribute instead
	EvaluationOffset pulumi.IntPtrInput `pulumi:"evaluationOffset"`
	Query            pulumi.StringInput `pulumi:"query"`
	// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `sinceValue`.
	//
	// Deprecated: use `aggregationMethod` attribute instead
	SinceValue pulumi.StringPtrInput `pulumi:"sinceValue"`
}

func (NrqlAlertConditionNrqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionNrql)(nil)).Elem()
}

func (i NrqlAlertConditionNrqlArgs) ToNrqlAlertConditionNrqlOutput() NrqlAlertConditionNrqlOutput {
	return i.ToNrqlAlertConditionNrqlOutputWithContext(context.Background())
}

func (i NrqlAlertConditionNrqlArgs) ToNrqlAlertConditionNrqlOutputWithContext(ctx context.Context) NrqlAlertConditionNrqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionNrqlOutput)
}

func (i NrqlAlertConditionNrqlArgs) ToNrqlAlertConditionNrqlPtrOutput() NrqlAlertConditionNrqlPtrOutput {
	return i.ToNrqlAlertConditionNrqlPtrOutputWithContext(context.Background())
}

func (i NrqlAlertConditionNrqlArgs) ToNrqlAlertConditionNrqlPtrOutputWithContext(ctx context.Context) NrqlAlertConditionNrqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionNrqlOutput).ToNrqlAlertConditionNrqlPtrOutputWithContext(ctx)
}

// NrqlAlertConditionNrqlPtrInput is an input type that accepts NrqlAlertConditionNrqlArgs, NrqlAlertConditionNrqlPtr and NrqlAlertConditionNrqlPtrOutput values.
// You can construct a concrete instance of `NrqlAlertConditionNrqlPtrInput` via:
//
//	        NrqlAlertConditionNrqlArgs{...}
//
//	or:
//
//	        nil
type NrqlAlertConditionNrqlPtrInput interface {
	pulumi.Input

	ToNrqlAlertConditionNrqlPtrOutput() NrqlAlertConditionNrqlPtrOutput
	ToNrqlAlertConditionNrqlPtrOutputWithContext(context.Context) NrqlAlertConditionNrqlPtrOutput
}

type nrqlAlertConditionNrqlPtrType NrqlAlertConditionNrqlArgs

func NrqlAlertConditionNrqlPtr(v *NrqlAlertConditionNrqlArgs) NrqlAlertConditionNrqlPtrInput {
	return (*nrqlAlertConditionNrqlPtrType)(v)
}

func (*nrqlAlertConditionNrqlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionNrql)(nil)).Elem()
}

func (i *nrqlAlertConditionNrqlPtrType) ToNrqlAlertConditionNrqlPtrOutput() NrqlAlertConditionNrqlPtrOutput {
	return i.ToNrqlAlertConditionNrqlPtrOutputWithContext(context.Background())
}

func (i *nrqlAlertConditionNrqlPtrType) ToNrqlAlertConditionNrqlPtrOutputWithContext(ctx context.Context) NrqlAlertConditionNrqlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionNrqlPtrOutput)
}

type NrqlAlertConditionNrqlOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionNrqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionNrql)(nil)).Elem()
}

func (o NrqlAlertConditionNrqlOutput) ToNrqlAlertConditionNrqlOutput() NrqlAlertConditionNrqlOutput {
	return o
}

func (o NrqlAlertConditionNrqlOutput) ToNrqlAlertConditionNrqlOutputWithContext(ctx context.Context) NrqlAlertConditionNrqlOutput {
	return o
}

func (o NrqlAlertConditionNrqlOutput) ToNrqlAlertConditionNrqlPtrOutput() NrqlAlertConditionNrqlPtrOutput {
	return o.ToNrqlAlertConditionNrqlPtrOutputWithContext(context.Background())
}

func (o NrqlAlertConditionNrqlOutput) ToNrqlAlertConditionNrqlPtrOutputWithContext(ctx context.Context) NrqlAlertConditionNrqlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NrqlAlertConditionNrql) *NrqlAlertConditionNrql {
		return &v
	}).(NrqlAlertConditionNrqlPtrOutput)
}

// The New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to `accountId` if unspecified.
func (o NrqlAlertConditionNrqlOutput) DataAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionNrql) *string { return v.DataAccountId }).(pulumi.StringPtrOutput)
}

// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluationOffset`.
//
// Deprecated: use `aggregationMethod` attribute instead
func (o NrqlAlertConditionNrqlOutput) EvaluationOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionNrql) *int { return v.EvaluationOffset }).(pulumi.IntPtrOutput)
}

func (o NrqlAlertConditionNrqlOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v NrqlAlertConditionNrql) string { return v.Query }).(pulumi.StringOutput)
}

// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `sinceValue`.
//
// Deprecated: use `aggregationMethod` attribute instead
func (o NrqlAlertConditionNrqlOutput) SinceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionNrql) *string { return v.SinceValue }).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionNrqlPtrOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionNrqlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionNrql)(nil)).Elem()
}

func (o NrqlAlertConditionNrqlPtrOutput) ToNrqlAlertConditionNrqlPtrOutput() NrqlAlertConditionNrqlPtrOutput {
	return o
}

func (o NrqlAlertConditionNrqlPtrOutput) ToNrqlAlertConditionNrqlPtrOutputWithContext(ctx context.Context) NrqlAlertConditionNrqlPtrOutput {
	return o
}

func (o NrqlAlertConditionNrqlPtrOutput) Elem() NrqlAlertConditionNrqlOutput {
	return o.ApplyT(func(v *NrqlAlertConditionNrql) NrqlAlertConditionNrql {
		if v != nil {
			return *v
		}
		var ret NrqlAlertConditionNrql
		return ret
	}).(NrqlAlertConditionNrqlOutput)
}

// The New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to `accountId` if unspecified.
func (o NrqlAlertConditionNrqlPtrOutput) DataAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionNrql) *string {
		if v == nil {
			return nil
		}
		return v.DataAccountId
	}).(pulumi.StringPtrOutput)
}

// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `evaluationOffset`.
//
// Deprecated: use `aggregationMethod` attribute instead
func (o NrqlAlertConditionNrqlPtrOutput) EvaluationOffset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionNrql) *int {
		if v == nil {
			return nil
		}
		return v.EvaluationOffset
	}).(pulumi.IntPtrOutput)
}

func (o NrqlAlertConditionNrqlPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionNrql) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

// NRQL queries are evaluated in one-minute time windows. The start time depends on the value you provide in the NRQL condition's `sinceValue`.
//
// Deprecated: use `aggregationMethod` attribute instead
func (o NrqlAlertConditionNrqlPtrOutput) SinceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionNrql) *string {
		if v == nil {
			return nil
		}
		return v.SinceValue
	}).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionTerm struct {
	// Violations will not change system health status for this term.
	DisableHealthStatusReporting *bool `pulumi:"disableHealthStatusReporting"`
	// In minutes, must be in the range of 1 to 120 (inclusive).
	//
	// Deprecated: use `thresholdDuration` attribute instead
	Duration *int `pulumi:"duration"`
	// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
	Operator *string `pulumi:"operator"`
	// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
	Prediction *NrqlAlertConditionTermPrediction `pulumi:"prediction"`
	// One of (critical, warning). Defaults to 'critical'. At least one condition term must have priority set to 'critical'.
	Priority *string `pulumi:"priority"`
	// For baseline conditions must be in range [1, 1000].
	Threshold float64 `pulumi:"threshold"`
	// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
	ThresholdDuration *int `pulumi:"thresholdDuration"`
	// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
	ThresholdOccurrences *string `pulumi:"thresholdOccurrences"`
	// Valid values are: 'all' or 'any'
	//
	// Deprecated: use `thresholdOccurrences` attribute instead
	TimeFunction *string `pulumi:"timeFunction"`
}

// NrqlAlertConditionTermInput is an input type that accepts NrqlAlertConditionTermArgs and NrqlAlertConditionTermOutput values.
// You can construct a concrete instance of `NrqlAlertConditionTermInput` via:
//
//	NrqlAlertConditionTermArgs{...}
type NrqlAlertConditionTermInput interface {
	pulumi.Input

	ToNrqlAlertConditionTermOutput() NrqlAlertConditionTermOutput
	ToNrqlAlertConditionTermOutputWithContext(context.Context) NrqlAlertConditionTermOutput
}

type NrqlAlertConditionTermArgs struct {
	// Violations will not change system health status for this term.
	DisableHealthStatusReporting pulumi.BoolPtrInput `pulumi:"disableHealthStatusReporting"`
	// In minutes, must be in the range of 1 to 120 (inclusive).
	//
	// Deprecated: use `thresholdDuration` attribute instead
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
	Prediction NrqlAlertConditionTermPredictionPtrInput `pulumi:"prediction"`
	// One of (critical, warning). Defaults to 'critical'. At least one condition term must have priority set to 'critical'.
	Priority pulumi.StringPtrInput `pulumi:"priority"`
	// For baseline conditions must be in range [1, 1000].
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
	ThresholdDuration pulumi.IntPtrInput `pulumi:"thresholdDuration"`
	// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
	ThresholdOccurrences pulumi.StringPtrInput `pulumi:"thresholdOccurrences"`
	// Valid values are: 'all' or 'any'
	//
	// Deprecated: use `thresholdOccurrences` attribute instead
	TimeFunction pulumi.StringPtrInput `pulumi:"timeFunction"`
}

func (NrqlAlertConditionTermArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionTerm)(nil)).Elem()
}

func (i NrqlAlertConditionTermArgs) ToNrqlAlertConditionTermOutput() NrqlAlertConditionTermOutput {
	return i.ToNrqlAlertConditionTermOutputWithContext(context.Background())
}

func (i NrqlAlertConditionTermArgs) ToNrqlAlertConditionTermOutputWithContext(ctx context.Context) NrqlAlertConditionTermOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionTermOutput)
}

// NrqlAlertConditionTermArrayInput is an input type that accepts NrqlAlertConditionTermArray and NrqlAlertConditionTermArrayOutput values.
// You can construct a concrete instance of `NrqlAlertConditionTermArrayInput` via:
//
//	NrqlAlertConditionTermArray{ NrqlAlertConditionTermArgs{...} }
type NrqlAlertConditionTermArrayInput interface {
	pulumi.Input

	ToNrqlAlertConditionTermArrayOutput() NrqlAlertConditionTermArrayOutput
	ToNrqlAlertConditionTermArrayOutputWithContext(context.Context) NrqlAlertConditionTermArrayOutput
}

type NrqlAlertConditionTermArray []NrqlAlertConditionTermInput

func (NrqlAlertConditionTermArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NrqlAlertConditionTerm)(nil)).Elem()
}

func (i NrqlAlertConditionTermArray) ToNrqlAlertConditionTermArrayOutput() NrqlAlertConditionTermArrayOutput {
	return i.ToNrqlAlertConditionTermArrayOutputWithContext(context.Background())
}

func (i NrqlAlertConditionTermArray) ToNrqlAlertConditionTermArrayOutputWithContext(ctx context.Context) NrqlAlertConditionTermArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionTermArrayOutput)
}

type NrqlAlertConditionTermOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionTermOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionTerm)(nil)).Elem()
}

func (o NrqlAlertConditionTermOutput) ToNrqlAlertConditionTermOutput() NrqlAlertConditionTermOutput {
	return o
}

func (o NrqlAlertConditionTermOutput) ToNrqlAlertConditionTermOutputWithContext(ctx context.Context) NrqlAlertConditionTermOutput {
	return o
}

// Violations will not change system health status for this term.
func (o NrqlAlertConditionTermOutput) DisableHealthStatusReporting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *bool { return v.DisableHealthStatusReporting }).(pulumi.BoolPtrOutput)
}

// In minutes, must be in the range of 1 to 120 (inclusive).
//
// Deprecated: use `thresholdDuration` attribute instead
func (o NrqlAlertConditionTermOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
func (o NrqlAlertConditionTermOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
func (o NrqlAlertConditionTermOutput) Prediction() NrqlAlertConditionTermPredictionPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *NrqlAlertConditionTermPrediction { return v.Prediction }).(NrqlAlertConditionTermPredictionPtrOutput)
}

// One of (critical, warning). Defaults to 'critical'. At least one condition term must have priority set to 'critical'.
func (o NrqlAlertConditionTermOutput) Priority() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *string { return v.Priority }).(pulumi.StringPtrOutput)
}

// For baseline conditions must be in range [1, 1000].
func (o NrqlAlertConditionTermOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v NrqlAlertConditionTerm) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
func (o NrqlAlertConditionTermOutput) ThresholdDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *int { return v.ThresholdDuration }).(pulumi.IntPtrOutput)
}

// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
func (o NrqlAlertConditionTermOutput) ThresholdOccurrences() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *string { return v.ThresholdOccurrences }).(pulumi.StringPtrOutput)
}

// Valid values are: 'all' or 'any'
//
// Deprecated: use `thresholdOccurrences` attribute instead
func (o NrqlAlertConditionTermOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTerm) *string { return v.TimeFunction }).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionTermArrayOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionTermArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]NrqlAlertConditionTerm)(nil)).Elem()
}

func (o NrqlAlertConditionTermArrayOutput) ToNrqlAlertConditionTermArrayOutput() NrqlAlertConditionTermArrayOutput {
	return o
}

func (o NrqlAlertConditionTermArrayOutput) ToNrqlAlertConditionTermArrayOutputWithContext(ctx context.Context) NrqlAlertConditionTermArrayOutput {
	return o
}

func (o NrqlAlertConditionTermArrayOutput) Index(i pulumi.IntInput) NrqlAlertConditionTermOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) NrqlAlertConditionTerm {
		return vs[0].([]NrqlAlertConditionTerm)[vs[1].(int)]
	}).(NrqlAlertConditionTermOutput)
}

type NrqlAlertConditionTermPrediction struct {
	// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
	PredictBy *int `pulumi:"predictBy"`
	// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
	PreferPredictionViolation *bool `pulumi:"preferPredictionViolation"`
}

// NrqlAlertConditionTermPredictionInput is an input type that accepts NrqlAlertConditionTermPredictionArgs and NrqlAlertConditionTermPredictionOutput values.
// You can construct a concrete instance of `NrqlAlertConditionTermPredictionInput` via:
//
//	NrqlAlertConditionTermPredictionArgs{...}
type NrqlAlertConditionTermPredictionInput interface {
	pulumi.Input

	ToNrqlAlertConditionTermPredictionOutput() NrqlAlertConditionTermPredictionOutput
	ToNrqlAlertConditionTermPredictionOutputWithContext(context.Context) NrqlAlertConditionTermPredictionOutput
}

type NrqlAlertConditionTermPredictionArgs struct {
	// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
	PredictBy pulumi.IntPtrInput `pulumi:"predictBy"`
	// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
	PreferPredictionViolation pulumi.BoolPtrInput `pulumi:"preferPredictionViolation"`
}

func (NrqlAlertConditionTermPredictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionTermPrediction)(nil)).Elem()
}

func (i NrqlAlertConditionTermPredictionArgs) ToNrqlAlertConditionTermPredictionOutput() NrqlAlertConditionTermPredictionOutput {
	return i.ToNrqlAlertConditionTermPredictionOutputWithContext(context.Background())
}

func (i NrqlAlertConditionTermPredictionArgs) ToNrqlAlertConditionTermPredictionOutputWithContext(ctx context.Context) NrqlAlertConditionTermPredictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionTermPredictionOutput)
}

func (i NrqlAlertConditionTermPredictionArgs) ToNrqlAlertConditionTermPredictionPtrOutput() NrqlAlertConditionTermPredictionPtrOutput {
	return i.ToNrqlAlertConditionTermPredictionPtrOutputWithContext(context.Background())
}

func (i NrqlAlertConditionTermPredictionArgs) ToNrqlAlertConditionTermPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionTermPredictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionTermPredictionOutput).ToNrqlAlertConditionTermPredictionPtrOutputWithContext(ctx)
}

// NrqlAlertConditionTermPredictionPtrInput is an input type that accepts NrqlAlertConditionTermPredictionArgs, NrqlAlertConditionTermPredictionPtr and NrqlAlertConditionTermPredictionPtrOutput values.
// You can construct a concrete instance of `NrqlAlertConditionTermPredictionPtrInput` via:
//
//	        NrqlAlertConditionTermPredictionArgs{...}
//
//	or:
//
//	        nil
type NrqlAlertConditionTermPredictionPtrInput interface {
	pulumi.Input

	ToNrqlAlertConditionTermPredictionPtrOutput() NrqlAlertConditionTermPredictionPtrOutput
	ToNrqlAlertConditionTermPredictionPtrOutputWithContext(context.Context) NrqlAlertConditionTermPredictionPtrOutput
}

type nrqlAlertConditionTermPredictionPtrType NrqlAlertConditionTermPredictionArgs

func NrqlAlertConditionTermPredictionPtr(v *NrqlAlertConditionTermPredictionArgs) NrqlAlertConditionTermPredictionPtrInput {
	return (*nrqlAlertConditionTermPredictionPtrType)(v)
}

func (*nrqlAlertConditionTermPredictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionTermPrediction)(nil)).Elem()
}

func (i *nrqlAlertConditionTermPredictionPtrType) ToNrqlAlertConditionTermPredictionPtrOutput() NrqlAlertConditionTermPredictionPtrOutput {
	return i.ToNrqlAlertConditionTermPredictionPtrOutputWithContext(context.Background())
}

func (i *nrqlAlertConditionTermPredictionPtrType) ToNrqlAlertConditionTermPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionTermPredictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionTermPredictionPtrOutput)
}

type NrqlAlertConditionTermPredictionOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionTermPredictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionTermPrediction)(nil)).Elem()
}

func (o NrqlAlertConditionTermPredictionOutput) ToNrqlAlertConditionTermPredictionOutput() NrqlAlertConditionTermPredictionOutput {
	return o
}

func (o NrqlAlertConditionTermPredictionOutput) ToNrqlAlertConditionTermPredictionOutputWithContext(ctx context.Context) NrqlAlertConditionTermPredictionOutput {
	return o
}

func (o NrqlAlertConditionTermPredictionOutput) ToNrqlAlertConditionTermPredictionPtrOutput() NrqlAlertConditionTermPredictionPtrOutput {
	return o.ToNrqlAlertConditionTermPredictionPtrOutputWithContext(context.Background())
}

func (o NrqlAlertConditionTermPredictionOutput) ToNrqlAlertConditionTermPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionTermPredictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NrqlAlertConditionTermPrediction) *NrqlAlertConditionTermPrediction {
		return &v
	}).(NrqlAlertConditionTermPredictionPtrOutput)
}

// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
func (o NrqlAlertConditionTermPredictionOutput) PredictBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTermPrediction) *int { return v.PredictBy }).(pulumi.IntPtrOutput)
}

// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
func (o NrqlAlertConditionTermPredictionOutput) PreferPredictionViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionTermPrediction) *bool { return v.PreferPredictionViolation }).(pulumi.BoolPtrOutput)
}

type NrqlAlertConditionTermPredictionPtrOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionTermPredictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionTermPrediction)(nil)).Elem()
}

func (o NrqlAlertConditionTermPredictionPtrOutput) ToNrqlAlertConditionTermPredictionPtrOutput() NrqlAlertConditionTermPredictionPtrOutput {
	return o
}

func (o NrqlAlertConditionTermPredictionPtrOutput) ToNrqlAlertConditionTermPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionTermPredictionPtrOutput {
	return o
}

func (o NrqlAlertConditionTermPredictionPtrOutput) Elem() NrqlAlertConditionTermPredictionOutput {
	return o.ApplyT(func(v *NrqlAlertConditionTermPrediction) NrqlAlertConditionTermPrediction {
		if v != nil {
			return *v
		}
		var ret NrqlAlertConditionTermPrediction
		return ret
	}).(NrqlAlertConditionTermPredictionOutput)
}

// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
func (o NrqlAlertConditionTermPredictionPtrOutput) PredictBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionTermPrediction) *int {
		if v == nil {
			return nil
		}
		return v.PredictBy
	}).(pulumi.IntPtrOutput)
}

// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
func (o NrqlAlertConditionTermPredictionPtrOutput) PreferPredictionViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionTermPrediction) *bool {
		if v == nil {
			return nil
		}
		return v.PreferPredictionViolation
	}).(pulumi.BoolPtrOutput)
}

type NrqlAlertConditionWarning struct {
	// Violations will not change system health status for this term.
	DisableHealthStatusReporting *bool `pulumi:"disableHealthStatusReporting"`
	// In minutes, must be in the range of 1 to 120 (inclusive).
	//
	// Deprecated: use `thresholdDuration` attribute instead
	Duration *int `pulumi:"duration"`
	// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
	Operator *string `pulumi:"operator"`
	// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
	Prediction *NrqlAlertConditionWarningPrediction `pulumi:"prediction"`
	// For baseline conditions must be in range [1, 1000].
	Threshold float64 `pulumi:"threshold"`
	// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
	ThresholdDuration *int `pulumi:"thresholdDuration"`
	// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
	ThresholdOccurrences *string `pulumi:"thresholdOccurrences"`
	// Valid values are: 'all' or 'any'
	//
	// Deprecated: use `thresholdOccurrences` attribute instead
	TimeFunction *string `pulumi:"timeFunction"`
}

// NrqlAlertConditionWarningInput is an input type that accepts NrqlAlertConditionWarningArgs and NrqlAlertConditionWarningOutput values.
// You can construct a concrete instance of `NrqlAlertConditionWarningInput` via:
//
//	NrqlAlertConditionWarningArgs{...}
type NrqlAlertConditionWarningInput interface {
	pulumi.Input

	ToNrqlAlertConditionWarningOutput() NrqlAlertConditionWarningOutput
	ToNrqlAlertConditionWarningOutputWithContext(context.Context) NrqlAlertConditionWarningOutput
}

type NrqlAlertConditionWarningArgs struct {
	// Violations will not change system health status for this term.
	DisableHealthStatusReporting pulumi.BoolPtrInput `pulumi:"disableHealthStatusReporting"`
	// In minutes, must be in the range of 1 to 120 (inclusive).
	//
	// Deprecated: use `thresholdDuration` attribute instead
	Duration pulumi.IntPtrInput `pulumi:"duration"`
	// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
	Operator pulumi.StringPtrInput `pulumi:"operator"`
	// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
	Prediction NrqlAlertConditionWarningPredictionPtrInput `pulumi:"prediction"`
	// For baseline conditions must be in range [1, 1000].
	Threshold pulumi.Float64Input `pulumi:"threshold"`
	// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
	ThresholdDuration pulumi.IntPtrInput `pulumi:"thresholdDuration"`
	// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
	ThresholdOccurrences pulumi.StringPtrInput `pulumi:"thresholdOccurrences"`
	// Valid values are: 'all' or 'any'
	//
	// Deprecated: use `thresholdOccurrences` attribute instead
	TimeFunction pulumi.StringPtrInput `pulumi:"timeFunction"`
}

func (NrqlAlertConditionWarningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionWarning)(nil)).Elem()
}

func (i NrqlAlertConditionWarningArgs) ToNrqlAlertConditionWarningOutput() NrqlAlertConditionWarningOutput {
	return i.ToNrqlAlertConditionWarningOutputWithContext(context.Background())
}

func (i NrqlAlertConditionWarningArgs) ToNrqlAlertConditionWarningOutputWithContext(ctx context.Context) NrqlAlertConditionWarningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionWarningOutput)
}

func (i NrqlAlertConditionWarningArgs) ToNrqlAlertConditionWarningPtrOutput() NrqlAlertConditionWarningPtrOutput {
	return i.ToNrqlAlertConditionWarningPtrOutputWithContext(context.Background())
}

func (i NrqlAlertConditionWarningArgs) ToNrqlAlertConditionWarningPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionWarningOutput).ToNrqlAlertConditionWarningPtrOutputWithContext(ctx)
}

// NrqlAlertConditionWarningPtrInput is an input type that accepts NrqlAlertConditionWarningArgs, NrqlAlertConditionWarningPtr and NrqlAlertConditionWarningPtrOutput values.
// You can construct a concrete instance of `NrqlAlertConditionWarningPtrInput` via:
//
//	        NrqlAlertConditionWarningArgs{...}
//
//	or:
//
//	        nil
type NrqlAlertConditionWarningPtrInput interface {
	pulumi.Input

	ToNrqlAlertConditionWarningPtrOutput() NrqlAlertConditionWarningPtrOutput
	ToNrqlAlertConditionWarningPtrOutputWithContext(context.Context) NrqlAlertConditionWarningPtrOutput
}

type nrqlAlertConditionWarningPtrType NrqlAlertConditionWarningArgs

func NrqlAlertConditionWarningPtr(v *NrqlAlertConditionWarningArgs) NrqlAlertConditionWarningPtrInput {
	return (*nrqlAlertConditionWarningPtrType)(v)
}

func (*nrqlAlertConditionWarningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionWarning)(nil)).Elem()
}

func (i *nrqlAlertConditionWarningPtrType) ToNrqlAlertConditionWarningPtrOutput() NrqlAlertConditionWarningPtrOutput {
	return i.ToNrqlAlertConditionWarningPtrOutputWithContext(context.Background())
}

func (i *nrqlAlertConditionWarningPtrType) ToNrqlAlertConditionWarningPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionWarningPtrOutput)
}

type NrqlAlertConditionWarningOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionWarningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionWarning)(nil)).Elem()
}

func (o NrqlAlertConditionWarningOutput) ToNrqlAlertConditionWarningOutput() NrqlAlertConditionWarningOutput {
	return o
}

func (o NrqlAlertConditionWarningOutput) ToNrqlAlertConditionWarningOutputWithContext(ctx context.Context) NrqlAlertConditionWarningOutput {
	return o
}

func (o NrqlAlertConditionWarningOutput) ToNrqlAlertConditionWarningPtrOutput() NrqlAlertConditionWarningPtrOutput {
	return o.ToNrqlAlertConditionWarningPtrOutputWithContext(context.Background())
}

func (o NrqlAlertConditionWarningOutput) ToNrqlAlertConditionWarningPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NrqlAlertConditionWarning) *NrqlAlertConditionWarning {
		return &v
	}).(NrqlAlertConditionWarningPtrOutput)
}

// Violations will not change system health status for this term.
func (o NrqlAlertConditionWarningOutput) DisableHealthStatusReporting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *bool { return v.DisableHealthStatusReporting }).(pulumi.BoolPtrOutput)
}

// In minutes, must be in the range of 1 to 120 (inclusive).
//
// Deprecated: use `thresholdDuration` attribute instead
func (o NrqlAlertConditionWarningOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *int { return v.Duration }).(pulumi.IntPtrOutput)
}

// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
func (o NrqlAlertConditionWarningOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *string { return v.Operator }).(pulumi.StringPtrOutput)
}

// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
func (o NrqlAlertConditionWarningOutput) Prediction() NrqlAlertConditionWarningPredictionPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *NrqlAlertConditionWarningPrediction { return v.Prediction }).(NrqlAlertConditionWarningPredictionPtrOutput)
}

// For baseline conditions must be in range [1, 1000].
func (o NrqlAlertConditionWarningOutput) Threshold() pulumi.Float64Output {
	return o.ApplyT(func(v NrqlAlertConditionWarning) float64 { return v.Threshold }).(pulumi.Float64Output)
}

// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
func (o NrqlAlertConditionWarningOutput) ThresholdDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *int { return v.ThresholdDuration }).(pulumi.IntPtrOutput)
}

// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
func (o NrqlAlertConditionWarningOutput) ThresholdOccurrences() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *string { return v.ThresholdOccurrences }).(pulumi.StringPtrOutput)
}

// Valid values are: 'all' or 'any'
//
// Deprecated: use `thresholdOccurrences` attribute instead
func (o NrqlAlertConditionWarningOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarning) *string { return v.TimeFunction }).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionWarningPtrOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionWarningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionWarning)(nil)).Elem()
}

func (o NrqlAlertConditionWarningPtrOutput) ToNrqlAlertConditionWarningPtrOutput() NrqlAlertConditionWarningPtrOutput {
	return o
}

func (o NrqlAlertConditionWarningPtrOutput) ToNrqlAlertConditionWarningPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPtrOutput {
	return o
}

func (o NrqlAlertConditionWarningPtrOutput) Elem() NrqlAlertConditionWarningOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) NrqlAlertConditionWarning {
		if v != nil {
			return *v
		}
		var ret NrqlAlertConditionWarning
		return ret
	}).(NrqlAlertConditionWarningOutput)
}

// Violations will not change system health status for this term.
func (o NrqlAlertConditionWarningPtrOutput) DisableHealthStatusReporting() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *bool {
		if v == nil {
			return nil
		}
		return v.DisableHealthStatusReporting
	}).(pulumi.BoolPtrOutput)
}

// In minutes, must be in the range of 1 to 120 (inclusive).
//
// Deprecated: use `thresholdDuration` attribute instead
func (o NrqlAlertConditionWarningPtrOutput) Duration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *int {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.IntPtrOutput)
}

// One of (above, above_or_equals, below, below_or_equals, equals, not_equals). Defaults to 'equals'.
func (o NrqlAlertConditionWarningPtrOutput) Operator() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.Operator
	}).(pulumi.StringPtrOutput)
}

// BETA PREVIEW: the `prediction` field is in limited release and only enabled for preview on a per-account basis. - Use `prediction` to open alerts when your static threshold is predicted to be reached in the future. The `prediction` field is only available for static conditions.
func (o NrqlAlertConditionWarningPtrOutput) Prediction() NrqlAlertConditionWarningPredictionPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *NrqlAlertConditionWarningPrediction {
		if v == nil {
			return nil
		}
		return v.Prediction
	}).(NrqlAlertConditionWarningPredictionPtrOutput)
}

// For baseline conditions must be in range [1, 1000].
func (o NrqlAlertConditionWarningPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *float64 {
		if v == nil {
			return nil
		}
		return &v.Threshold
	}).(pulumi.Float64PtrOutput)
}

// The duration, in seconds, that the threshold must violate in order to create an incident. Value must be a multiple of the 'aggregation_window' (which has a default of 60 seconds). Value must be within 120-86400 seconds for baseline conditions, and within 60-86400 seconds for static conditions
func (o NrqlAlertConditionWarningPtrOutput) ThresholdDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *int {
		if v == nil {
			return nil
		}
		return v.ThresholdDuration
	}).(pulumi.IntPtrOutput)
}

// The criteria for how many data points must be in violation for the specified threshold duration. Valid values are: 'ALL' or 'AT_LEAST_ONCE' (case insensitive).
func (o NrqlAlertConditionWarningPtrOutput) ThresholdOccurrences() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.ThresholdOccurrences
	}).(pulumi.StringPtrOutput)
}

// Valid values are: 'all' or 'any'
//
// Deprecated: use `thresholdOccurrences` attribute instead
func (o NrqlAlertConditionWarningPtrOutput) TimeFunction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarning) *string {
		if v == nil {
			return nil
		}
		return v.TimeFunction
	}).(pulumi.StringPtrOutput)
}

type NrqlAlertConditionWarningPrediction struct {
	// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
	PredictBy *int `pulumi:"predictBy"`
	// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
	PreferPredictionViolation *bool `pulumi:"preferPredictionViolation"`
}

// NrqlAlertConditionWarningPredictionInput is an input type that accepts NrqlAlertConditionWarningPredictionArgs and NrqlAlertConditionWarningPredictionOutput values.
// You can construct a concrete instance of `NrqlAlertConditionWarningPredictionInput` via:
//
//	NrqlAlertConditionWarningPredictionArgs{...}
type NrqlAlertConditionWarningPredictionInput interface {
	pulumi.Input

	ToNrqlAlertConditionWarningPredictionOutput() NrqlAlertConditionWarningPredictionOutput
	ToNrqlAlertConditionWarningPredictionOutputWithContext(context.Context) NrqlAlertConditionWarningPredictionOutput
}

type NrqlAlertConditionWarningPredictionArgs struct {
	// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
	PredictBy pulumi.IntPtrInput `pulumi:"predictBy"`
	// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
	PreferPredictionViolation pulumi.BoolPtrInput `pulumi:"preferPredictionViolation"`
}

func (NrqlAlertConditionWarningPredictionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionWarningPrediction)(nil)).Elem()
}

func (i NrqlAlertConditionWarningPredictionArgs) ToNrqlAlertConditionWarningPredictionOutput() NrqlAlertConditionWarningPredictionOutput {
	return i.ToNrqlAlertConditionWarningPredictionOutputWithContext(context.Background())
}

func (i NrqlAlertConditionWarningPredictionArgs) ToNrqlAlertConditionWarningPredictionOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPredictionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionWarningPredictionOutput)
}

func (i NrqlAlertConditionWarningPredictionArgs) ToNrqlAlertConditionWarningPredictionPtrOutput() NrqlAlertConditionWarningPredictionPtrOutput {
	return i.ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(context.Background())
}

func (i NrqlAlertConditionWarningPredictionArgs) ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPredictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionWarningPredictionOutput).ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(ctx)
}

// NrqlAlertConditionWarningPredictionPtrInput is an input type that accepts NrqlAlertConditionWarningPredictionArgs, NrqlAlertConditionWarningPredictionPtr and NrqlAlertConditionWarningPredictionPtrOutput values.
// You can construct a concrete instance of `NrqlAlertConditionWarningPredictionPtrInput` via:
//
//	        NrqlAlertConditionWarningPredictionArgs{...}
//
//	or:
//
//	        nil
type NrqlAlertConditionWarningPredictionPtrInput interface {
	pulumi.Input

	ToNrqlAlertConditionWarningPredictionPtrOutput() NrqlAlertConditionWarningPredictionPtrOutput
	ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(context.Context) NrqlAlertConditionWarningPredictionPtrOutput
}

type nrqlAlertConditionWarningPredictionPtrType NrqlAlertConditionWarningPredictionArgs

func NrqlAlertConditionWarningPredictionPtr(v *NrqlAlertConditionWarningPredictionArgs) NrqlAlertConditionWarningPredictionPtrInput {
	return (*nrqlAlertConditionWarningPredictionPtrType)(v)
}

func (*nrqlAlertConditionWarningPredictionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionWarningPrediction)(nil)).Elem()
}

func (i *nrqlAlertConditionWarningPredictionPtrType) ToNrqlAlertConditionWarningPredictionPtrOutput() NrqlAlertConditionWarningPredictionPtrOutput {
	return i.ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(context.Background())
}

func (i *nrqlAlertConditionWarningPredictionPtrType) ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPredictionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NrqlAlertConditionWarningPredictionPtrOutput)
}

type NrqlAlertConditionWarningPredictionOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionWarningPredictionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NrqlAlertConditionWarningPrediction)(nil)).Elem()
}

func (o NrqlAlertConditionWarningPredictionOutput) ToNrqlAlertConditionWarningPredictionOutput() NrqlAlertConditionWarningPredictionOutput {
	return o
}

func (o NrqlAlertConditionWarningPredictionOutput) ToNrqlAlertConditionWarningPredictionOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPredictionOutput {
	return o
}

func (o NrqlAlertConditionWarningPredictionOutput) ToNrqlAlertConditionWarningPredictionPtrOutput() NrqlAlertConditionWarningPredictionPtrOutput {
	return o.ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(context.Background())
}

func (o NrqlAlertConditionWarningPredictionOutput) ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPredictionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NrqlAlertConditionWarningPrediction) *NrqlAlertConditionWarningPrediction {
		return &v
	}).(NrqlAlertConditionWarningPredictionPtrOutput)
}

// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
func (o NrqlAlertConditionWarningPredictionOutput) PredictBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarningPrediction) *int { return v.PredictBy }).(pulumi.IntPtrOutput)
}

// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
func (o NrqlAlertConditionWarningPredictionOutput) PreferPredictionViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v NrqlAlertConditionWarningPrediction) *bool { return v.PreferPredictionViolation }).(pulumi.BoolPtrOutput)
}

type NrqlAlertConditionWarningPredictionPtrOutput struct{ *pulumi.OutputState }

func (NrqlAlertConditionWarningPredictionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NrqlAlertConditionWarningPrediction)(nil)).Elem()
}

func (o NrqlAlertConditionWarningPredictionPtrOutput) ToNrqlAlertConditionWarningPredictionPtrOutput() NrqlAlertConditionWarningPredictionPtrOutput {
	return o
}

func (o NrqlAlertConditionWarningPredictionPtrOutput) ToNrqlAlertConditionWarningPredictionPtrOutputWithContext(ctx context.Context) NrqlAlertConditionWarningPredictionPtrOutput {
	return o
}

func (o NrqlAlertConditionWarningPredictionPtrOutput) Elem() NrqlAlertConditionWarningPredictionOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarningPrediction) NrqlAlertConditionWarningPrediction {
		if v != nil {
			return *v
		}
		var ret NrqlAlertConditionWarningPrediction
		return ret
	}).(NrqlAlertConditionWarningPredictionOutput)
}

// BETA PREVIEW: the `predictBy` field is in limited release and only enabled for preview on a per-account basis. - The duration, in seconds, that the prediction should look into the future.
func (o NrqlAlertConditionWarningPredictionPtrOutput) PredictBy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarningPrediction) *int {
		if v == nil {
			return nil
		}
		return v.PredictBy
	}).(pulumi.IntPtrOutput)
}

// BETA PREVIEW: the `preferPredictionViolation` field is in limited release and only enabled for preview on a per-account basis. - If a prediction incident is open when a term's static threshold is breached by the actual signal, default behavior is to close the prediction incident and open a static incident. Setting `preferPredictionViolation` to `true` overrides this behavior leaving the prediction incident open and preventing a static incident from opening.
func (o NrqlAlertConditionWarningPredictionPtrOutput) PreferPredictionViolation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *NrqlAlertConditionWarningPrediction) *bool {
		if v == nil {
			return nil
		}
		return v.PreferPredictionViolation
	}).(pulumi.BoolPtrOutput)
}

type ObfuscationRuleAction struct {
	// Attribute names for action. An empty list applies the action to all the attributes.
	Attributes []string `pulumi:"attributes"`
	// Expression Id for action.
	ExpressionId string `pulumi:"expressionId"`
	// Obfuscation method to use. Methods for replacing obfuscated values are `HASH_SHA256` and `MASK`.
	Method string `pulumi:"method"`
}

// ObfuscationRuleActionInput is an input type that accepts ObfuscationRuleActionArgs and ObfuscationRuleActionOutput values.
// You can construct a concrete instance of `ObfuscationRuleActionInput` via:
//
//	ObfuscationRuleActionArgs{...}
type ObfuscationRuleActionInput interface {
	pulumi.Input

	ToObfuscationRuleActionOutput() ObfuscationRuleActionOutput
	ToObfuscationRuleActionOutputWithContext(context.Context) ObfuscationRuleActionOutput
}

type ObfuscationRuleActionArgs struct {
	// Attribute names for action. An empty list applies the action to all the attributes.
	Attributes pulumi.StringArrayInput `pulumi:"attributes"`
	// Expression Id for action.
	ExpressionId pulumi.StringInput `pulumi:"expressionId"`
	// Obfuscation method to use. Methods for replacing obfuscated values are `HASH_SHA256` and `MASK`.
	Method pulumi.StringInput `pulumi:"method"`
}

func (ObfuscationRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObfuscationRuleAction)(nil)).Elem()
}

func (i ObfuscationRuleActionArgs) ToObfuscationRuleActionOutput() ObfuscationRuleActionOutput {
	return i.ToObfuscationRuleActionOutputWithContext(context.Background())
}

func (i ObfuscationRuleActionArgs) ToObfuscationRuleActionOutputWithContext(ctx context.Context) ObfuscationRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObfuscationRuleActionOutput)
}

// ObfuscationRuleActionArrayInput is an input type that accepts ObfuscationRuleActionArray and ObfuscationRuleActionArrayOutput values.
// You can construct a concrete instance of `ObfuscationRuleActionArrayInput` via:
//
//	ObfuscationRuleActionArray{ ObfuscationRuleActionArgs{...} }
type ObfuscationRuleActionArrayInput interface {
	pulumi.Input

	ToObfuscationRuleActionArrayOutput() ObfuscationRuleActionArrayOutput
	ToObfuscationRuleActionArrayOutputWithContext(context.Context) ObfuscationRuleActionArrayOutput
}

type ObfuscationRuleActionArray []ObfuscationRuleActionInput

func (ObfuscationRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObfuscationRuleAction)(nil)).Elem()
}

func (i ObfuscationRuleActionArray) ToObfuscationRuleActionArrayOutput() ObfuscationRuleActionArrayOutput {
	return i.ToObfuscationRuleActionArrayOutputWithContext(context.Background())
}

func (i ObfuscationRuleActionArray) ToObfuscationRuleActionArrayOutputWithContext(ctx context.Context) ObfuscationRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObfuscationRuleActionArrayOutput)
}

type ObfuscationRuleActionOutput struct{ *pulumi.OutputState }

func (ObfuscationRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObfuscationRuleAction)(nil)).Elem()
}

func (o ObfuscationRuleActionOutput) ToObfuscationRuleActionOutput() ObfuscationRuleActionOutput {
	return o
}

func (o ObfuscationRuleActionOutput) ToObfuscationRuleActionOutputWithContext(ctx context.Context) ObfuscationRuleActionOutput {
	return o
}

// Attribute names for action. An empty list applies the action to all the attributes.
func (o ObfuscationRuleActionOutput) Attributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ObfuscationRuleAction) []string { return v.Attributes }).(pulumi.StringArrayOutput)
}

// Expression Id for action.
func (o ObfuscationRuleActionOutput) ExpressionId() pulumi.StringOutput {
	return o.ApplyT(func(v ObfuscationRuleAction) string { return v.ExpressionId }).(pulumi.StringOutput)
}

// Obfuscation method to use. Methods for replacing obfuscated values are `HASH_SHA256` and `MASK`.
func (o ObfuscationRuleActionOutput) Method() pulumi.StringOutput {
	return o.ApplyT(func(v ObfuscationRuleAction) string { return v.Method }).(pulumi.StringOutput)
}

type ObfuscationRuleActionArrayOutput struct{ *pulumi.OutputState }

func (ObfuscationRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ObfuscationRuleAction)(nil)).Elem()
}

func (o ObfuscationRuleActionArrayOutput) ToObfuscationRuleActionArrayOutput() ObfuscationRuleActionArrayOutput {
	return o
}

func (o ObfuscationRuleActionArrayOutput) ToObfuscationRuleActionArrayOutputWithContext(ctx context.Context) ObfuscationRuleActionArrayOutput {
	return o
}

func (o ObfuscationRuleActionArrayOutput) Index(i pulumi.IntInput) ObfuscationRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ObfuscationRuleAction {
		return vs[0].([]ObfuscationRuleAction)[vs[1].(int)]
	}).(ObfuscationRuleActionOutput)
}

type OneDashboardPage struct {
	// Brief text describing the dashboard.
	Description *string `pulumi:"description"`
	// The unique entity identifier of the dashboard page in New Relic.
	Guid *string `pulumi:"guid"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// An area widget.
	WidgetAreas []OneDashboardPageWidgetArea `pulumi:"widgetAreas"`
	// A bar widget.
	WidgetBars []OneDashboardPageWidgetBar `pulumi:"widgetBars"`
	// A billboard widget.
	WidgetBillboards []OneDashboardPageWidgetBillboard `pulumi:"widgetBillboards"`
	// A bullet widget.
	WidgetBullets []OneDashboardPageWidgetBullet `pulumi:"widgetBullets"`
	// A funnel widget.
	WidgetFunnels []OneDashboardPageWidgetFunnel `pulumi:"widgetFunnels"`
	// A heatmap widget.
	WidgetHeatmaps []OneDashboardPageWidgetHeatmap `pulumi:"widgetHeatmaps"`
	// A histogram widget.
	WidgetHistograms []OneDashboardPageWidgetHistogram `pulumi:"widgetHistograms"`
	// A JSON widget.
	WidgetJsons []OneDashboardPageWidgetJson `pulumi:"widgetJsons"`
	// A line widget.
	WidgetLines []OneDashboardPageWidgetLine `pulumi:"widgetLines"`
	// A log table widget.
	WidgetLogTables []OneDashboardPageWidgetLogTable `pulumi:"widgetLogTables"`
	// A markdown widget.
	WidgetMarkdowns []OneDashboardPageWidgetMarkdown `pulumi:"widgetMarkdowns"`
	// A pie widget.
	WidgetPies []OneDashboardPageWidgetPy `pulumi:"widgetPies"`
	// A stacked bar widget.
	WidgetStackedBars []OneDashboardPageWidgetStackedBar `pulumi:"widgetStackedBars"`
	// A table widget.
	WidgetTables []OneDashboardPageWidgetTable `pulumi:"widgetTables"`
}

// OneDashboardPageInput is an input type that accepts OneDashboardPageArgs and OneDashboardPageOutput values.
// You can construct a concrete instance of `OneDashboardPageInput` via:
//
//	OneDashboardPageArgs{...}
type OneDashboardPageInput interface {
	pulumi.Input

	ToOneDashboardPageOutput() OneDashboardPageOutput
	ToOneDashboardPageOutputWithContext(context.Context) OneDashboardPageOutput
}

type OneDashboardPageArgs struct {
	// Brief text describing the dashboard.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The unique entity identifier of the dashboard page in New Relic.
	Guid pulumi.StringPtrInput `pulumi:"guid"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// An area widget.
	WidgetAreas OneDashboardPageWidgetAreaArrayInput `pulumi:"widgetAreas"`
	// A bar widget.
	WidgetBars OneDashboardPageWidgetBarArrayInput `pulumi:"widgetBars"`
	// A billboard widget.
	WidgetBillboards OneDashboardPageWidgetBillboardArrayInput `pulumi:"widgetBillboards"`
	// A bullet widget.
	WidgetBullets OneDashboardPageWidgetBulletArrayInput `pulumi:"widgetBullets"`
	// A funnel widget.
	WidgetFunnels OneDashboardPageWidgetFunnelArrayInput `pulumi:"widgetFunnels"`
	// A heatmap widget.
	WidgetHeatmaps OneDashboardPageWidgetHeatmapArrayInput `pulumi:"widgetHeatmaps"`
	// A histogram widget.
	WidgetHistograms OneDashboardPageWidgetHistogramArrayInput `pulumi:"widgetHistograms"`
	// A JSON widget.
	WidgetJsons OneDashboardPageWidgetJsonArrayInput `pulumi:"widgetJsons"`
	// A line widget.
	WidgetLines OneDashboardPageWidgetLineArrayInput `pulumi:"widgetLines"`
	// A log table widget.
	WidgetLogTables OneDashboardPageWidgetLogTableArrayInput `pulumi:"widgetLogTables"`
	// A markdown widget.
	WidgetMarkdowns OneDashboardPageWidgetMarkdownArrayInput `pulumi:"widgetMarkdowns"`
	// A pie widget.
	WidgetPies OneDashboardPageWidgetPyArrayInput `pulumi:"widgetPies"`
	// A stacked bar widget.
	WidgetStackedBars OneDashboardPageWidgetStackedBarArrayInput `pulumi:"widgetStackedBars"`
	// A table widget.
	WidgetTables OneDashboardPageWidgetTableArrayInput `pulumi:"widgetTables"`
}

func (OneDashboardPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPage)(nil)).Elem()
}

func (i OneDashboardPageArgs) ToOneDashboardPageOutput() OneDashboardPageOutput {
	return i.ToOneDashboardPageOutputWithContext(context.Background())
}

func (i OneDashboardPageArgs) ToOneDashboardPageOutputWithContext(ctx context.Context) OneDashboardPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageOutput)
}

// OneDashboardPageArrayInput is an input type that accepts OneDashboardPageArray and OneDashboardPageArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageArrayInput` via:
//
//	OneDashboardPageArray{ OneDashboardPageArgs{...} }
type OneDashboardPageArrayInput interface {
	pulumi.Input

	ToOneDashboardPageArrayOutput() OneDashboardPageArrayOutput
	ToOneDashboardPageArrayOutputWithContext(context.Context) OneDashboardPageArrayOutput
}

type OneDashboardPageArray []OneDashboardPageInput

func (OneDashboardPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPage)(nil)).Elem()
}

func (i OneDashboardPageArray) ToOneDashboardPageArrayOutput() OneDashboardPageArrayOutput {
	return i.ToOneDashboardPageArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageArray) ToOneDashboardPageArrayOutputWithContext(ctx context.Context) OneDashboardPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageArrayOutput)
}

type OneDashboardPageOutput struct{ *pulumi.OutputState }

func (OneDashboardPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPage)(nil)).Elem()
}

func (o OneDashboardPageOutput) ToOneDashboardPageOutput() OneDashboardPageOutput {
	return o
}

func (o OneDashboardPageOutput) ToOneDashboardPageOutputWithContext(ctx context.Context) OneDashboardPageOutput {
	return o
}

// Brief text describing the dashboard.
func (o OneDashboardPageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPage) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique entity identifier of the dashboard page in New Relic.
func (o OneDashboardPageOutput) Guid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPage) *string { return v.Guid }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPage) string { return v.Name }).(pulumi.StringOutput)
}

// An area widget.
func (o OneDashboardPageOutput) WidgetAreas() OneDashboardPageWidgetAreaArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetArea { return v.WidgetAreas }).(OneDashboardPageWidgetAreaArrayOutput)
}

// A bar widget.
func (o OneDashboardPageOutput) WidgetBars() OneDashboardPageWidgetBarArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetBar { return v.WidgetBars }).(OneDashboardPageWidgetBarArrayOutput)
}

// A billboard widget.
func (o OneDashboardPageOutput) WidgetBillboards() OneDashboardPageWidgetBillboardArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetBillboard { return v.WidgetBillboards }).(OneDashboardPageWidgetBillboardArrayOutput)
}

// A bullet widget.
func (o OneDashboardPageOutput) WidgetBullets() OneDashboardPageWidgetBulletArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetBullet { return v.WidgetBullets }).(OneDashboardPageWidgetBulletArrayOutput)
}

// A funnel widget.
func (o OneDashboardPageOutput) WidgetFunnels() OneDashboardPageWidgetFunnelArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetFunnel { return v.WidgetFunnels }).(OneDashboardPageWidgetFunnelArrayOutput)
}

// A heatmap widget.
func (o OneDashboardPageOutput) WidgetHeatmaps() OneDashboardPageWidgetHeatmapArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetHeatmap { return v.WidgetHeatmaps }).(OneDashboardPageWidgetHeatmapArrayOutput)
}

// A histogram widget.
func (o OneDashboardPageOutput) WidgetHistograms() OneDashboardPageWidgetHistogramArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetHistogram { return v.WidgetHistograms }).(OneDashboardPageWidgetHistogramArrayOutput)
}

// A JSON widget.
func (o OneDashboardPageOutput) WidgetJsons() OneDashboardPageWidgetJsonArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetJson { return v.WidgetJsons }).(OneDashboardPageWidgetJsonArrayOutput)
}

// A line widget.
func (o OneDashboardPageOutput) WidgetLines() OneDashboardPageWidgetLineArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetLine { return v.WidgetLines }).(OneDashboardPageWidgetLineArrayOutput)
}

// A log table widget.
func (o OneDashboardPageOutput) WidgetLogTables() OneDashboardPageWidgetLogTableArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetLogTable { return v.WidgetLogTables }).(OneDashboardPageWidgetLogTableArrayOutput)
}

// A markdown widget.
func (o OneDashboardPageOutput) WidgetMarkdowns() OneDashboardPageWidgetMarkdownArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetMarkdown { return v.WidgetMarkdowns }).(OneDashboardPageWidgetMarkdownArrayOutput)
}

// A pie widget.
func (o OneDashboardPageOutput) WidgetPies() OneDashboardPageWidgetPyArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetPy { return v.WidgetPies }).(OneDashboardPageWidgetPyArrayOutput)
}

// A stacked bar widget.
func (o OneDashboardPageOutput) WidgetStackedBars() OneDashboardPageWidgetStackedBarArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetStackedBar { return v.WidgetStackedBars }).(OneDashboardPageWidgetStackedBarArrayOutput)
}

// A table widget.
func (o OneDashboardPageOutput) WidgetTables() OneDashboardPageWidgetTableArrayOutput {
	return o.ApplyT(func(v OneDashboardPage) []OneDashboardPageWidgetTable { return v.WidgetTables }).(OneDashboardPageWidgetTableArrayOutput)
}

type OneDashboardPageArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPage)(nil)).Elem()
}

func (o OneDashboardPageArrayOutput) ToOneDashboardPageArrayOutput() OneDashboardPageArrayOutput {
	return o
}

func (o OneDashboardPageArrayOutput) ToOneDashboardPageArrayOutputWithContext(ctx context.Context) OneDashboardPageArrayOutput {
	return o
}

func (o OneDashboardPageArrayOutput) Index(i pulumi.IntInput) OneDashboardPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPage {
		return vs[0].([]OneDashboardPage)[vs[1].(int)]
	}).(OneDashboardPageOutput)
}

type OneDashboardPageWidgetArea struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetAreaColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetAreaDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetAreaInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetAreaNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetAreaNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetAreaUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetAreaInput is an input type that accepts OneDashboardPageWidgetAreaArgs and OneDashboardPageWidgetAreaOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaInput` via:
//
//	OneDashboardPageWidgetAreaArgs{...}
type OneDashboardPageWidgetAreaInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaOutput() OneDashboardPageWidgetAreaOutput
	ToOneDashboardPageWidgetAreaOutputWithContext(context.Context) OneDashboardPageWidgetAreaOutput
}

type OneDashboardPageWidgetAreaArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetAreaColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetAreaDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetAreaInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetAreaNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetAreaNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetAreaUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetAreaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetArea)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaArgs) ToOneDashboardPageWidgetAreaOutput() OneDashboardPageWidgetAreaOutput {
	return i.ToOneDashboardPageWidgetAreaOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaArgs) ToOneDashboardPageWidgetAreaOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaOutput)
}

// OneDashboardPageWidgetAreaArrayInput is an input type that accepts OneDashboardPageWidgetAreaArray and OneDashboardPageWidgetAreaArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaArrayInput` via:
//
//	OneDashboardPageWidgetAreaArray{ OneDashboardPageWidgetAreaArgs{...} }
type OneDashboardPageWidgetAreaArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaArrayOutput() OneDashboardPageWidgetAreaArrayOutput
	ToOneDashboardPageWidgetAreaArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaArrayOutput
}

type OneDashboardPageWidgetAreaArray []OneDashboardPageWidgetAreaInput

func (OneDashboardPageWidgetAreaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetArea)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaArray) ToOneDashboardPageWidgetAreaArrayOutput() OneDashboardPageWidgetAreaArrayOutput {
	return i.ToOneDashboardPageWidgetAreaArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaArray) ToOneDashboardPageWidgetAreaArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaArrayOutput)
}

type OneDashboardPageWidgetAreaOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetArea)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaOutput) ToOneDashboardPageWidgetAreaOutput() OneDashboardPageWidgetAreaOutput {
	return o
}

func (o OneDashboardPageWidgetAreaOutput) ToOneDashboardPageWidgetAreaOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetAreaOutput) Colors() OneDashboardPageWidgetAreaColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) []OneDashboardPageWidgetAreaColor { return v.Colors }).(OneDashboardPageWidgetAreaColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetAreaOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetAreaOutput) DataFormats() OneDashboardPageWidgetAreaDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) []OneDashboardPageWidgetAreaDataFormat { return v.DataFormats }).(OneDashboardPageWidgetAreaDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetAreaOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetAreaOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetAreaOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetAreaOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetAreaOutput) InitialSorting() OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *OneDashboardPageWidgetAreaInitialSorting { return v.InitialSorting }).(OneDashboardPageWidgetAreaInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetAreaOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetAreaOutput) NrqlQueries() OneDashboardPageWidgetAreaNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) []OneDashboardPageWidgetAreaNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetAreaNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetAreaOutput) NullValues() OneDashboardPageWidgetAreaNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) []OneDashboardPageWidgetAreaNullValue { return v.NullValues }).(OneDashboardPageWidgetAreaNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetAreaOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetAreaOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetAreaOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetAreaOutput) Units() OneDashboardPageWidgetAreaUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) []OneDashboardPageWidgetAreaUnit { return v.Units }).(OneDashboardPageWidgetAreaUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetAreaOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetAreaOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetAreaOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetArea) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetAreaArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetArea)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaArrayOutput) ToOneDashboardPageWidgetAreaArrayOutput() OneDashboardPageWidgetAreaArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaArrayOutput) ToOneDashboardPageWidgetAreaArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetArea {
		return vs[0].([]OneDashboardPageWidgetArea)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaOutput)
}

type OneDashboardPageWidgetAreaColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetAreaColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetAreaColorInput is an input type that accepts OneDashboardPageWidgetAreaColorArgs and OneDashboardPageWidgetAreaColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaColorInput` via:
//
//	OneDashboardPageWidgetAreaColorArgs{...}
type OneDashboardPageWidgetAreaColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaColorOutput() OneDashboardPageWidgetAreaColorOutput
	ToOneDashboardPageWidgetAreaColorOutputWithContext(context.Context) OneDashboardPageWidgetAreaColorOutput
}

type OneDashboardPageWidgetAreaColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetAreaColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetAreaColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaColorArgs) ToOneDashboardPageWidgetAreaColorOutput() OneDashboardPageWidgetAreaColorOutput {
	return i.ToOneDashboardPageWidgetAreaColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaColorArgs) ToOneDashboardPageWidgetAreaColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaColorOutput)
}

// OneDashboardPageWidgetAreaColorArrayInput is an input type that accepts OneDashboardPageWidgetAreaColorArray and OneDashboardPageWidgetAreaColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaColorArrayInput` via:
//
//	OneDashboardPageWidgetAreaColorArray{ OneDashboardPageWidgetAreaColorArgs{...} }
type OneDashboardPageWidgetAreaColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaColorArrayOutput() OneDashboardPageWidgetAreaColorArrayOutput
	ToOneDashboardPageWidgetAreaColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaColorArrayOutput
}

type OneDashboardPageWidgetAreaColorArray []OneDashboardPageWidgetAreaColorInput

func (OneDashboardPageWidgetAreaColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaColorArray) ToOneDashboardPageWidgetAreaColorArrayOutput() OneDashboardPageWidgetAreaColorArrayOutput {
	return i.ToOneDashboardPageWidgetAreaColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaColorArray) ToOneDashboardPageWidgetAreaColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaColorArrayOutput)
}

type OneDashboardPageWidgetAreaColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaColorOutput) ToOneDashboardPageWidgetAreaColorOutput() OneDashboardPageWidgetAreaColorOutput {
	return o
}

func (o OneDashboardPageWidgetAreaColorOutput) ToOneDashboardPageWidgetAreaColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetAreaColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetAreaColorOutput) SeriesOverrides() OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaColor) []OneDashboardPageWidgetAreaColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetAreaColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaColorArrayOutput) ToOneDashboardPageWidgetAreaColorArrayOutput() OneDashboardPageWidgetAreaColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaColorArrayOutput) ToOneDashboardPageWidgetAreaColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaColor {
		return vs[0].([]OneDashboardPageWidgetAreaColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaColorOutput)
}

type OneDashboardPageWidgetAreaColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetAreaColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetAreaColorSeriesOverrideArgs and OneDashboardPageWidgetAreaColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetAreaColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetAreaColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaColorSeriesOverrideOutput() OneDashboardPageWidgetAreaColorSeriesOverrideOutput
	ToOneDashboardPageWidgetAreaColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetAreaColorSeriesOverrideOutput
}

type OneDashboardPageWidgetAreaColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetAreaColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaColorSeriesOverrideArgs) ToOneDashboardPageWidgetAreaColorSeriesOverrideOutput() OneDashboardPageWidgetAreaColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetAreaColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaColorSeriesOverrideArgs) ToOneDashboardPageWidgetAreaColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetAreaColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetAreaColorSeriesOverrideArray and OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetAreaColorSeriesOverrideArray{ OneDashboardPageWidgetAreaColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetAreaColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetAreaColorSeriesOverrideArray []OneDashboardPageWidgetAreaColorSeriesOverrideInput

func (OneDashboardPageWidgetAreaColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaColorSeriesOverrideArray) ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaColorSeriesOverrideArray) ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetAreaColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaColorSeriesOverrideOutput) ToOneDashboardPageWidgetAreaColorSeriesOverrideOutput() OneDashboardPageWidgetAreaColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetAreaColorSeriesOverrideOutput) ToOneDashboardPageWidgetAreaColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetAreaColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetAreaColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetAreaColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetAreaColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetAreaDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetAreaDataFormatInput is an input type that accepts OneDashboardPageWidgetAreaDataFormatArgs and OneDashboardPageWidgetAreaDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaDataFormatInput` via:
//
//	OneDashboardPageWidgetAreaDataFormatArgs{...}
type OneDashboardPageWidgetAreaDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaDataFormatOutput() OneDashboardPageWidgetAreaDataFormatOutput
	ToOneDashboardPageWidgetAreaDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetAreaDataFormatOutput
}

type OneDashboardPageWidgetAreaDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetAreaDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaDataFormatArgs) ToOneDashboardPageWidgetAreaDataFormatOutput() OneDashboardPageWidgetAreaDataFormatOutput {
	return i.ToOneDashboardPageWidgetAreaDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaDataFormatArgs) ToOneDashboardPageWidgetAreaDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaDataFormatOutput)
}

// OneDashboardPageWidgetAreaDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetAreaDataFormatArray and OneDashboardPageWidgetAreaDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetAreaDataFormatArray{ OneDashboardPageWidgetAreaDataFormatArgs{...} }
type OneDashboardPageWidgetAreaDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaDataFormatArrayOutput() OneDashboardPageWidgetAreaDataFormatArrayOutput
	ToOneDashboardPageWidgetAreaDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaDataFormatArrayOutput
}

type OneDashboardPageWidgetAreaDataFormatArray []OneDashboardPageWidgetAreaDataFormatInput

func (OneDashboardPageWidgetAreaDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaDataFormatArray) ToOneDashboardPageWidgetAreaDataFormatArrayOutput() OneDashboardPageWidgetAreaDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetAreaDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaDataFormatArray) ToOneDashboardPageWidgetAreaDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaDataFormatArrayOutput)
}

type OneDashboardPageWidgetAreaDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaDataFormatOutput) ToOneDashboardPageWidgetAreaDataFormatOutput() OneDashboardPageWidgetAreaDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetAreaDataFormatOutput) ToOneDashboardPageWidgetAreaDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetAreaDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetAreaDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetAreaDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetAreaDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetAreaDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaDataFormatArrayOutput) ToOneDashboardPageWidgetAreaDataFormatArrayOutput() OneDashboardPageWidgetAreaDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaDataFormatArrayOutput) ToOneDashboardPageWidgetAreaDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaDataFormat {
		return vs[0].([]OneDashboardPageWidgetAreaDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaDataFormatOutput)
}

type OneDashboardPageWidgetAreaInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetAreaInitialSortingInput is an input type that accepts OneDashboardPageWidgetAreaInitialSortingArgs and OneDashboardPageWidgetAreaInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaInitialSortingInput` via:
//
//	OneDashboardPageWidgetAreaInitialSortingArgs{...}
type OneDashboardPageWidgetAreaInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaInitialSortingOutput() OneDashboardPageWidgetAreaInitialSortingOutput
	ToOneDashboardPageWidgetAreaInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetAreaInitialSortingOutput
}

type OneDashboardPageWidgetAreaInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetAreaInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaInitialSortingArgs) ToOneDashboardPageWidgetAreaInitialSortingOutput() OneDashboardPageWidgetAreaInitialSortingOutput {
	return i.ToOneDashboardPageWidgetAreaInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaInitialSortingArgs) ToOneDashboardPageWidgetAreaInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaInitialSortingOutput)
}

func (i OneDashboardPageWidgetAreaInitialSortingArgs) ToOneDashboardPageWidgetAreaInitialSortingPtrOutput() OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaInitialSortingArgs) ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaInitialSortingOutput).ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetAreaInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetAreaInitialSortingArgs, OneDashboardPageWidgetAreaInitialSortingPtr and OneDashboardPageWidgetAreaInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetAreaInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetAreaInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaInitialSortingPtrOutput() OneDashboardPageWidgetAreaInitialSortingPtrOutput
	ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetAreaInitialSortingPtrOutput
}

type oneDashboardPageWidgetAreaInitialSortingPtrType OneDashboardPageWidgetAreaInitialSortingArgs

func OneDashboardPageWidgetAreaInitialSortingPtr(v *OneDashboardPageWidgetAreaInitialSortingArgs) OneDashboardPageWidgetAreaInitialSortingPtrInput {
	return (*oneDashboardPageWidgetAreaInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetAreaInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetAreaInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetAreaInitialSortingPtrType) ToOneDashboardPageWidgetAreaInitialSortingPtrOutput() OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetAreaInitialSortingPtrType) ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaInitialSortingPtrOutput)
}

type OneDashboardPageWidgetAreaInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaInitialSortingOutput) ToOneDashboardPageWidgetAreaInitialSortingOutput() OneDashboardPageWidgetAreaInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetAreaInitialSortingOutput) ToOneDashboardPageWidgetAreaInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetAreaInitialSortingOutput) ToOneDashboardPageWidgetAreaInitialSortingPtrOutput() OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetAreaInitialSortingOutput) ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetAreaInitialSorting) *OneDashboardPageWidgetAreaInitialSorting {
		return &v
	}).(OneDashboardPageWidgetAreaInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetAreaInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetAreaInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetAreaInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetAreaInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaInitialSortingPtrOutput) ToOneDashboardPageWidgetAreaInitialSortingPtrOutput() OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetAreaInitialSortingPtrOutput) ToOneDashboardPageWidgetAreaInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetAreaInitialSortingPtrOutput) Elem() OneDashboardPageWidgetAreaInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetAreaInitialSorting) OneDashboardPageWidgetAreaInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetAreaInitialSorting
		return ret
	}).(OneDashboardPageWidgetAreaInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetAreaInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetAreaInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetAreaInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetAreaInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetAreaNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetAreaNrqlQueryInput is an input type that accepts OneDashboardPageWidgetAreaNrqlQueryArgs and OneDashboardPageWidgetAreaNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaNrqlQueryInput` via:
//
//	OneDashboardPageWidgetAreaNrqlQueryArgs{...}
type OneDashboardPageWidgetAreaNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaNrqlQueryOutput() OneDashboardPageWidgetAreaNrqlQueryOutput
	ToOneDashboardPageWidgetAreaNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetAreaNrqlQueryOutput
}

type OneDashboardPageWidgetAreaNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetAreaNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaNrqlQueryArgs) ToOneDashboardPageWidgetAreaNrqlQueryOutput() OneDashboardPageWidgetAreaNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetAreaNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaNrqlQueryArgs) ToOneDashboardPageWidgetAreaNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaNrqlQueryOutput)
}

// OneDashboardPageWidgetAreaNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetAreaNrqlQueryArray and OneDashboardPageWidgetAreaNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetAreaNrqlQueryArray{ OneDashboardPageWidgetAreaNrqlQueryArgs{...} }
type OneDashboardPageWidgetAreaNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaNrqlQueryArrayOutput() OneDashboardPageWidgetAreaNrqlQueryArrayOutput
	ToOneDashboardPageWidgetAreaNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaNrqlQueryArrayOutput
}

type OneDashboardPageWidgetAreaNrqlQueryArray []OneDashboardPageWidgetAreaNrqlQueryInput

func (OneDashboardPageWidgetAreaNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaNrqlQueryArray) ToOneDashboardPageWidgetAreaNrqlQueryArrayOutput() OneDashboardPageWidgetAreaNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetAreaNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaNrqlQueryArray) ToOneDashboardPageWidgetAreaNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetAreaNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaNrqlQueryOutput) ToOneDashboardPageWidgetAreaNrqlQueryOutput() OneDashboardPageWidgetAreaNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNrqlQueryOutput) ToOneDashboardPageWidgetAreaNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetAreaNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetAreaNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetAreaNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaNrqlQueryArrayOutput) ToOneDashboardPageWidgetAreaNrqlQueryArrayOutput() OneDashboardPageWidgetAreaNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNrqlQueryArrayOutput) ToOneDashboardPageWidgetAreaNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetAreaNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaNrqlQueryOutput)
}

type OneDashboardPageWidgetAreaNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetAreaNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetAreaNullValueInput is an input type that accepts OneDashboardPageWidgetAreaNullValueArgs and OneDashboardPageWidgetAreaNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaNullValueInput` via:
//
//	OneDashboardPageWidgetAreaNullValueArgs{...}
type OneDashboardPageWidgetAreaNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaNullValueOutput() OneDashboardPageWidgetAreaNullValueOutput
	ToOneDashboardPageWidgetAreaNullValueOutputWithContext(context.Context) OneDashboardPageWidgetAreaNullValueOutput
}

type OneDashboardPageWidgetAreaNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetAreaNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaNullValueArgs) ToOneDashboardPageWidgetAreaNullValueOutput() OneDashboardPageWidgetAreaNullValueOutput {
	return i.ToOneDashboardPageWidgetAreaNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaNullValueArgs) ToOneDashboardPageWidgetAreaNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaNullValueOutput)
}

// OneDashboardPageWidgetAreaNullValueArrayInput is an input type that accepts OneDashboardPageWidgetAreaNullValueArray and OneDashboardPageWidgetAreaNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaNullValueArrayInput` via:
//
//	OneDashboardPageWidgetAreaNullValueArray{ OneDashboardPageWidgetAreaNullValueArgs{...} }
type OneDashboardPageWidgetAreaNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaNullValueArrayOutput() OneDashboardPageWidgetAreaNullValueArrayOutput
	ToOneDashboardPageWidgetAreaNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaNullValueArrayOutput
}

type OneDashboardPageWidgetAreaNullValueArray []OneDashboardPageWidgetAreaNullValueInput

func (OneDashboardPageWidgetAreaNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaNullValueArray) ToOneDashboardPageWidgetAreaNullValueArrayOutput() OneDashboardPageWidgetAreaNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetAreaNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaNullValueArray) ToOneDashboardPageWidgetAreaNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaNullValueArrayOutput)
}

type OneDashboardPageWidgetAreaNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaNullValueOutput) ToOneDashboardPageWidgetAreaNullValueOutput() OneDashboardPageWidgetAreaNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNullValueOutput) ToOneDashboardPageWidgetAreaNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetAreaNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetAreaNullValueOutput) SeriesOverrides() OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaNullValue) []OneDashboardPageWidgetAreaNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetAreaNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaNullValueArrayOutput) ToOneDashboardPageWidgetAreaNullValueArrayOutput() OneDashboardPageWidgetAreaNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNullValueArrayOutput) ToOneDashboardPageWidgetAreaNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaNullValue {
		return vs[0].([]OneDashboardPageWidgetAreaNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaNullValueOutput)
}

type OneDashboardPageWidgetAreaNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetAreaNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs and OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetAreaNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutput() OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutput() OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetAreaNullValueSeriesOverrideArray and OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetAreaNullValueSeriesOverrideArray{ OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetAreaNullValueSeriesOverrideArray []OneDashboardPageWidgetAreaNullValueSeriesOverrideInput

func (OneDashboardPageWidgetAreaNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaNullValueSeriesOverrideArray) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaNullValueSeriesOverrideArray) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutput() OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetAreaNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetAreaUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetAreaUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetAreaUnitInput is an input type that accepts OneDashboardPageWidgetAreaUnitArgs and OneDashboardPageWidgetAreaUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaUnitInput` via:
//
//	OneDashboardPageWidgetAreaUnitArgs{...}
type OneDashboardPageWidgetAreaUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaUnitOutput() OneDashboardPageWidgetAreaUnitOutput
	ToOneDashboardPageWidgetAreaUnitOutputWithContext(context.Context) OneDashboardPageWidgetAreaUnitOutput
}

type OneDashboardPageWidgetAreaUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetAreaUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetAreaUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaUnitArgs) ToOneDashboardPageWidgetAreaUnitOutput() OneDashboardPageWidgetAreaUnitOutput {
	return i.ToOneDashboardPageWidgetAreaUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaUnitArgs) ToOneDashboardPageWidgetAreaUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaUnitOutput)
}

// OneDashboardPageWidgetAreaUnitArrayInput is an input type that accepts OneDashboardPageWidgetAreaUnitArray and OneDashboardPageWidgetAreaUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaUnitArrayInput` via:
//
//	OneDashboardPageWidgetAreaUnitArray{ OneDashboardPageWidgetAreaUnitArgs{...} }
type OneDashboardPageWidgetAreaUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaUnitArrayOutput() OneDashboardPageWidgetAreaUnitArrayOutput
	ToOneDashboardPageWidgetAreaUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaUnitArrayOutput
}

type OneDashboardPageWidgetAreaUnitArray []OneDashboardPageWidgetAreaUnitInput

func (OneDashboardPageWidgetAreaUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaUnitArray) ToOneDashboardPageWidgetAreaUnitArrayOutput() OneDashboardPageWidgetAreaUnitArrayOutput {
	return i.ToOneDashboardPageWidgetAreaUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaUnitArray) ToOneDashboardPageWidgetAreaUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaUnitArrayOutput)
}

type OneDashboardPageWidgetAreaUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaUnitOutput) ToOneDashboardPageWidgetAreaUnitOutput() OneDashboardPageWidgetAreaUnitOutput {
	return o
}

func (o OneDashboardPageWidgetAreaUnitOutput) ToOneDashboardPageWidgetAreaUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetAreaUnitOutput) SeriesOverrides() OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaUnit) []OneDashboardPageWidgetAreaUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetAreaUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetAreaUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaUnitArrayOutput) ToOneDashboardPageWidgetAreaUnitArrayOutput() OneDashboardPageWidgetAreaUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaUnitArrayOutput) ToOneDashboardPageWidgetAreaUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaUnit {
		return vs[0].([]OneDashboardPageWidgetAreaUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaUnitOutput)
}

type OneDashboardPageWidgetAreaUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetAreaUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetAreaUnitSeriesOverrideArgs and OneDashboardPageWidgetAreaUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetAreaUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetAreaUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutput() OneDashboardPageWidgetAreaUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetAreaUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetAreaUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetAreaUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaUnitSeriesOverrideArgs) ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutput() OneDashboardPageWidgetAreaUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaUnitSeriesOverrideArgs) ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetAreaUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetAreaUnitSeriesOverrideArray and OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetAreaUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetAreaUnitSeriesOverrideArray{ OneDashboardPageWidgetAreaUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetAreaUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetAreaUnitSeriesOverrideArray []OneDashboardPageWidgetAreaUnitSeriesOverrideInput

func (OneDashboardPageWidgetAreaUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetAreaUnitSeriesOverrideArray) ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetAreaUnitSeriesOverrideArray) ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetAreaUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetAreaUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaUnitSeriesOverrideOutput) ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutput() OneDashboardPageWidgetAreaUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetAreaUnitSeriesOverrideOutput) ToOneDashboardPageWidgetAreaUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetAreaUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetAreaUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetAreaUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetAreaUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetAreaUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetAreaUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetAreaUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetAreaUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetBar struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetBarColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetBarDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard *bool `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetBarInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids []string `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetBarNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetBarNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetBarUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetBarInput is an input type that accepts OneDashboardPageWidgetBarArgs and OneDashboardPageWidgetBarOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarInput` via:
//
//	OneDashboardPageWidgetBarArgs{...}
type OneDashboardPageWidgetBarInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarOutput() OneDashboardPageWidgetBarOutput
	ToOneDashboardPageWidgetBarOutputWithContext(context.Context) OneDashboardPageWidgetBarOutput
}

type OneDashboardPageWidgetBarArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetBarColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetBarDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard pulumi.BoolPtrInput `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetBarInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids pulumi.StringArrayInput `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetBarNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetBarNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetBarUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetBarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBar)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarArgs) ToOneDashboardPageWidgetBarOutput() OneDashboardPageWidgetBarOutput {
	return i.ToOneDashboardPageWidgetBarOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarArgs) ToOneDashboardPageWidgetBarOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarOutput)
}

// OneDashboardPageWidgetBarArrayInput is an input type that accepts OneDashboardPageWidgetBarArray and OneDashboardPageWidgetBarArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarArrayInput` via:
//
//	OneDashboardPageWidgetBarArray{ OneDashboardPageWidgetBarArgs{...} }
type OneDashboardPageWidgetBarArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarArrayOutput() OneDashboardPageWidgetBarArrayOutput
	ToOneDashboardPageWidgetBarArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarArrayOutput
}

type OneDashboardPageWidgetBarArray []OneDashboardPageWidgetBarInput

func (OneDashboardPageWidgetBarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBar)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarArray) ToOneDashboardPageWidgetBarArrayOutput() OneDashboardPageWidgetBarArrayOutput {
	return i.ToOneDashboardPageWidgetBarArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarArray) ToOneDashboardPageWidgetBarArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarArrayOutput)
}

type OneDashboardPageWidgetBarOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBar)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarOutput) ToOneDashboardPageWidgetBarOutput() OneDashboardPageWidgetBarOutput {
	return o
}

func (o OneDashboardPageWidgetBarOutput) ToOneDashboardPageWidgetBarOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetBarOutput) Colors() OneDashboardPageWidgetBarColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) []OneDashboardPageWidgetBarColor { return v.Colors }).(OneDashboardPageWidgetBarColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetBarOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetBarOutput) DataFormats() OneDashboardPageWidgetBarDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) []OneDashboardPageWidgetBarDataFormat { return v.DataFormats }).(OneDashboardPageWidgetBarDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetBarOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Use this item to filter the current dashboard.
func (o OneDashboardPageWidgetBarOutput) FilterCurrentDashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *bool { return v.FilterCurrentDashboard }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetBarOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetBarOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetBarOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetBarOutput) InitialSorting() OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *OneDashboardPageWidgetBarInitialSorting { return v.InitialSorting }).(OneDashboardPageWidgetBarInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetBarOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
func (o OneDashboardPageWidgetBarOutput) LinkedEntityGuids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) []string { return v.LinkedEntityGuids }).(pulumi.StringArrayOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetBarOutput) NrqlQueries() OneDashboardPageWidgetBarNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) []OneDashboardPageWidgetBarNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetBarNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetBarOutput) NullValues() OneDashboardPageWidgetBarNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) []OneDashboardPageWidgetBarNullValue { return v.NullValues }).(OneDashboardPageWidgetBarNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetBarOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetBarOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetBarOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetBarOutput) Units() OneDashboardPageWidgetBarUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) []OneDashboardPageWidgetBarUnit { return v.Units }).(OneDashboardPageWidgetBarUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetBarOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetBarOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetBarOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBar) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetBarArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBar)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarArrayOutput) ToOneDashboardPageWidgetBarArrayOutput() OneDashboardPageWidgetBarArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarArrayOutput) ToOneDashboardPageWidgetBarArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBar {
		return vs[0].([]OneDashboardPageWidgetBar)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarOutput)
}

type OneDashboardPageWidgetBarColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBarColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetBarColorInput is an input type that accepts OneDashboardPageWidgetBarColorArgs and OneDashboardPageWidgetBarColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarColorInput` via:
//
//	OneDashboardPageWidgetBarColorArgs{...}
type OneDashboardPageWidgetBarColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarColorOutput() OneDashboardPageWidgetBarColorOutput
	ToOneDashboardPageWidgetBarColorOutputWithContext(context.Context) OneDashboardPageWidgetBarColorOutput
}

type OneDashboardPageWidgetBarColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBarColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetBarColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarColorArgs) ToOneDashboardPageWidgetBarColorOutput() OneDashboardPageWidgetBarColorOutput {
	return i.ToOneDashboardPageWidgetBarColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarColorArgs) ToOneDashboardPageWidgetBarColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarColorOutput)
}

// OneDashboardPageWidgetBarColorArrayInput is an input type that accepts OneDashboardPageWidgetBarColorArray and OneDashboardPageWidgetBarColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarColorArrayInput` via:
//
//	OneDashboardPageWidgetBarColorArray{ OneDashboardPageWidgetBarColorArgs{...} }
type OneDashboardPageWidgetBarColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarColorArrayOutput() OneDashboardPageWidgetBarColorArrayOutput
	ToOneDashboardPageWidgetBarColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarColorArrayOutput
}

type OneDashboardPageWidgetBarColorArray []OneDashboardPageWidgetBarColorInput

func (OneDashboardPageWidgetBarColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarColorArray) ToOneDashboardPageWidgetBarColorArrayOutput() OneDashboardPageWidgetBarColorArrayOutput {
	return i.ToOneDashboardPageWidgetBarColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarColorArray) ToOneDashboardPageWidgetBarColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarColorArrayOutput)
}

type OneDashboardPageWidgetBarColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarColorOutput) ToOneDashboardPageWidgetBarColorOutput() OneDashboardPageWidgetBarColorOutput {
	return o
}

func (o OneDashboardPageWidgetBarColorOutput) ToOneDashboardPageWidgetBarColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetBarColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBarColorOutput) SeriesOverrides() OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarColor) []OneDashboardPageWidgetBarColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBarColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarColorArrayOutput) ToOneDashboardPageWidgetBarColorArrayOutput() OneDashboardPageWidgetBarColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarColorArrayOutput) ToOneDashboardPageWidgetBarColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarColor {
		return vs[0].([]OneDashboardPageWidgetBarColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarColorOutput)
}

type OneDashboardPageWidgetBarColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetBarColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBarColorSeriesOverrideArgs and OneDashboardPageWidgetBarColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBarColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetBarColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarColorSeriesOverrideOutput() OneDashboardPageWidgetBarColorSeriesOverrideOutput
	ToOneDashboardPageWidgetBarColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBarColorSeriesOverrideOutput
}

type OneDashboardPageWidgetBarColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetBarColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarColorSeriesOverrideArgs) ToOneDashboardPageWidgetBarColorSeriesOverrideOutput() OneDashboardPageWidgetBarColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBarColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarColorSeriesOverrideArgs) ToOneDashboardPageWidgetBarColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetBarColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBarColorSeriesOverrideArray and OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBarColorSeriesOverrideArray{ OneDashboardPageWidgetBarColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBarColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBarColorSeriesOverrideArray []OneDashboardPageWidgetBarColorSeriesOverrideInput

func (OneDashboardPageWidgetBarColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarColorSeriesOverrideArray) ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarColorSeriesOverrideArray) ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBarColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarColorSeriesOverrideOutput) ToOneDashboardPageWidgetBarColorSeriesOverrideOutput() OneDashboardPageWidgetBarColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBarColorSeriesOverrideOutput) ToOneDashboardPageWidgetBarColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetBarColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetBarColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBarColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBarColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetBarDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetBarDataFormatInput is an input type that accepts OneDashboardPageWidgetBarDataFormatArgs and OneDashboardPageWidgetBarDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarDataFormatInput` via:
//
//	OneDashboardPageWidgetBarDataFormatArgs{...}
type OneDashboardPageWidgetBarDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarDataFormatOutput() OneDashboardPageWidgetBarDataFormatOutput
	ToOneDashboardPageWidgetBarDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetBarDataFormatOutput
}

type OneDashboardPageWidgetBarDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetBarDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarDataFormatArgs) ToOneDashboardPageWidgetBarDataFormatOutput() OneDashboardPageWidgetBarDataFormatOutput {
	return i.ToOneDashboardPageWidgetBarDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarDataFormatArgs) ToOneDashboardPageWidgetBarDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarDataFormatOutput)
}

// OneDashboardPageWidgetBarDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetBarDataFormatArray and OneDashboardPageWidgetBarDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetBarDataFormatArray{ OneDashboardPageWidgetBarDataFormatArgs{...} }
type OneDashboardPageWidgetBarDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarDataFormatArrayOutput() OneDashboardPageWidgetBarDataFormatArrayOutput
	ToOneDashboardPageWidgetBarDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarDataFormatArrayOutput
}

type OneDashboardPageWidgetBarDataFormatArray []OneDashboardPageWidgetBarDataFormatInput

func (OneDashboardPageWidgetBarDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarDataFormatArray) ToOneDashboardPageWidgetBarDataFormatArrayOutput() OneDashboardPageWidgetBarDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetBarDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarDataFormatArray) ToOneDashboardPageWidgetBarDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarDataFormatArrayOutput)
}

type OneDashboardPageWidgetBarDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarDataFormatOutput) ToOneDashboardPageWidgetBarDataFormatOutput() OneDashboardPageWidgetBarDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetBarDataFormatOutput) ToOneDashboardPageWidgetBarDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetBarDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBarDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetBarDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetBarDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBarDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarDataFormatArrayOutput) ToOneDashboardPageWidgetBarDataFormatArrayOutput() OneDashboardPageWidgetBarDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarDataFormatArrayOutput) ToOneDashboardPageWidgetBarDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarDataFormat {
		return vs[0].([]OneDashboardPageWidgetBarDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarDataFormatOutput)
}

type OneDashboardPageWidgetBarInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetBarInitialSortingInput is an input type that accepts OneDashboardPageWidgetBarInitialSortingArgs and OneDashboardPageWidgetBarInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarInitialSortingInput` via:
//
//	OneDashboardPageWidgetBarInitialSortingArgs{...}
type OneDashboardPageWidgetBarInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarInitialSortingOutput() OneDashboardPageWidgetBarInitialSortingOutput
	ToOneDashboardPageWidgetBarInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetBarInitialSortingOutput
}

type OneDashboardPageWidgetBarInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetBarInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarInitialSortingArgs) ToOneDashboardPageWidgetBarInitialSortingOutput() OneDashboardPageWidgetBarInitialSortingOutput {
	return i.ToOneDashboardPageWidgetBarInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarInitialSortingArgs) ToOneDashboardPageWidgetBarInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarInitialSortingOutput)
}

func (i OneDashboardPageWidgetBarInitialSortingArgs) ToOneDashboardPageWidgetBarInitialSortingPtrOutput() OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarInitialSortingArgs) ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarInitialSortingOutput).ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetBarInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetBarInitialSortingArgs, OneDashboardPageWidgetBarInitialSortingPtr and OneDashboardPageWidgetBarInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetBarInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetBarInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarInitialSortingPtrOutput() OneDashboardPageWidgetBarInitialSortingPtrOutput
	ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetBarInitialSortingPtrOutput
}

type oneDashboardPageWidgetBarInitialSortingPtrType OneDashboardPageWidgetBarInitialSortingArgs

func OneDashboardPageWidgetBarInitialSortingPtr(v *OneDashboardPageWidgetBarInitialSortingArgs) OneDashboardPageWidgetBarInitialSortingPtrInput {
	return (*oneDashboardPageWidgetBarInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetBarInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetBarInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetBarInitialSortingPtrType) ToOneDashboardPageWidgetBarInitialSortingPtrOutput() OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetBarInitialSortingPtrType) ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarInitialSortingPtrOutput)
}

type OneDashboardPageWidgetBarInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarInitialSortingOutput) ToOneDashboardPageWidgetBarInitialSortingOutput() OneDashboardPageWidgetBarInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetBarInitialSortingOutput) ToOneDashboardPageWidgetBarInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetBarInitialSortingOutput) ToOneDashboardPageWidgetBarInitialSortingPtrOutput() OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetBarInitialSortingOutput) ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetBarInitialSorting) *OneDashboardPageWidgetBarInitialSorting {
		return &v
	}).(OneDashboardPageWidgetBarInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetBarInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBarInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBarInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetBarInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarInitialSortingPtrOutput) ToOneDashboardPageWidgetBarInitialSortingPtrOutput() OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetBarInitialSortingPtrOutput) ToOneDashboardPageWidgetBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetBarInitialSortingPtrOutput) Elem() OneDashboardPageWidgetBarInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBarInitialSorting) OneDashboardPageWidgetBarInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetBarInitialSorting
		return ret
	}).(OneDashboardPageWidgetBarInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetBarInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBarInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBarInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBarInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBarNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetBarNrqlQueryInput is an input type that accepts OneDashboardPageWidgetBarNrqlQueryArgs and OneDashboardPageWidgetBarNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarNrqlQueryInput` via:
//
//	OneDashboardPageWidgetBarNrqlQueryArgs{...}
type OneDashboardPageWidgetBarNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarNrqlQueryOutput() OneDashboardPageWidgetBarNrqlQueryOutput
	ToOneDashboardPageWidgetBarNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetBarNrqlQueryOutput
}

type OneDashboardPageWidgetBarNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetBarNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarNrqlQueryArgs) ToOneDashboardPageWidgetBarNrqlQueryOutput() OneDashboardPageWidgetBarNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetBarNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarNrqlQueryArgs) ToOneDashboardPageWidgetBarNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarNrqlQueryOutput)
}

// OneDashboardPageWidgetBarNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetBarNrqlQueryArray and OneDashboardPageWidgetBarNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetBarNrqlQueryArray{ OneDashboardPageWidgetBarNrqlQueryArgs{...} }
type OneDashboardPageWidgetBarNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarNrqlQueryArrayOutput() OneDashboardPageWidgetBarNrqlQueryArrayOutput
	ToOneDashboardPageWidgetBarNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarNrqlQueryArrayOutput
}

type OneDashboardPageWidgetBarNrqlQueryArray []OneDashboardPageWidgetBarNrqlQueryInput

func (OneDashboardPageWidgetBarNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarNrqlQueryArray) ToOneDashboardPageWidgetBarNrqlQueryArrayOutput() OneDashboardPageWidgetBarNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetBarNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarNrqlQueryArray) ToOneDashboardPageWidgetBarNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetBarNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarNrqlQueryOutput) ToOneDashboardPageWidgetBarNrqlQueryOutput() OneDashboardPageWidgetBarNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetBarNrqlQueryOutput) ToOneDashboardPageWidgetBarNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetBarNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetBarNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBarNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarNrqlQueryArrayOutput) ToOneDashboardPageWidgetBarNrqlQueryArrayOutput() OneDashboardPageWidgetBarNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarNrqlQueryArrayOutput) ToOneDashboardPageWidgetBarNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetBarNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarNrqlQueryOutput)
}

type OneDashboardPageWidgetBarNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBarNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetBarNullValueInput is an input type that accepts OneDashboardPageWidgetBarNullValueArgs and OneDashboardPageWidgetBarNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarNullValueInput` via:
//
//	OneDashboardPageWidgetBarNullValueArgs{...}
type OneDashboardPageWidgetBarNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarNullValueOutput() OneDashboardPageWidgetBarNullValueOutput
	ToOneDashboardPageWidgetBarNullValueOutputWithContext(context.Context) OneDashboardPageWidgetBarNullValueOutput
}

type OneDashboardPageWidgetBarNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBarNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetBarNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarNullValueArgs) ToOneDashboardPageWidgetBarNullValueOutput() OneDashboardPageWidgetBarNullValueOutput {
	return i.ToOneDashboardPageWidgetBarNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarNullValueArgs) ToOneDashboardPageWidgetBarNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarNullValueOutput)
}

// OneDashboardPageWidgetBarNullValueArrayInput is an input type that accepts OneDashboardPageWidgetBarNullValueArray and OneDashboardPageWidgetBarNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarNullValueArrayInput` via:
//
//	OneDashboardPageWidgetBarNullValueArray{ OneDashboardPageWidgetBarNullValueArgs{...} }
type OneDashboardPageWidgetBarNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarNullValueArrayOutput() OneDashboardPageWidgetBarNullValueArrayOutput
	ToOneDashboardPageWidgetBarNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarNullValueArrayOutput
}

type OneDashboardPageWidgetBarNullValueArray []OneDashboardPageWidgetBarNullValueInput

func (OneDashboardPageWidgetBarNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarNullValueArray) ToOneDashboardPageWidgetBarNullValueArrayOutput() OneDashboardPageWidgetBarNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetBarNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarNullValueArray) ToOneDashboardPageWidgetBarNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarNullValueArrayOutput)
}

type OneDashboardPageWidgetBarNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarNullValueOutput) ToOneDashboardPageWidgetBarNullValueOutput() OneDashboardPageWidgetBarNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetBarNullValueOutput) ToOneDashboardPageWidgetBarNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetBarNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBarNullValueOutput) SeriesOverrides() OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarNullValue) []OneDashboardPageWidgetBarNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBarNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarNullValueArrayOutput) ToOneDashboardPageWidgetBarNullValueArrayOutput() OneDashboardPageWidgetBarNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarNullValueArrayOutput) ToOneDashboardPageWidgetBarNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarNullValue {
		return vs[0].([]OneDashboardPageWidgetBarNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarNullValueOutput)
}

type OneDashboardPageWidgetBarNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetBarNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBarNullValueSeriesOverrideArgs and OneDashboardPageWidgetBarNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBarNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetBarNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutput() OneDashboardPageWidgetBarNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBarNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetBarNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetBarNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutput() OneDashboardPageWidgetBarNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetBarNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBarNullValueSeriesOverrideArray and OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBarNullValueSeriesOverrideArray{ OneDashboardPageWidgetBarNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBarNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBarNullValueSeriesOverrideArray []OneDashboardPageWidgetBarNullValueSeriesOverrideInput

func (OneDashboardPageWidgetBarNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarNullValueSeriesOverrideArray) ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarNullValueSeriesOverrideArray) ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBarNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutput() OneDashboardPageWidgetBarNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBarNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetBarNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetBarNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetBarNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBarNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetBarUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBarUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetBarUnitInput is an input type that accepts OneDashboardPageWidgetBarUnitArgs and OneDashboardPageWidgetBarUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarUnitInput` via:
//
//	OneDashboardPageWidgetBarUnitArgs{...}
type OneDashboardPageWidgetBarUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarUnitOutput() OneDashboardPageWidgetBarUnitOutput
	ToOneDashboardPageWidgetBarUnitOutputWithContext(context.Context) OneDashboardPageWidgetBarUnitOutput
}

type OneDashboardPageWidgetBarUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBarUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetBarUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarUnitArgs) ToOneDashboardPageWidgetBarUnitOutput() OneDashboardPageWidgetBarUnitOutput {
	return i.ToOneDashboardPageWidgetBarUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarUnitArgs) ToOneDashboardPageWidgetBarUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarUnitOutput)
}

// OneDashboardPageWidgetBarUnitArrayInput is an input type that accepts OneDashboardPageWidgetBarUnitArray and OneDashboardPageWidgetBarUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarUnitArrayInput` via:
//
//	OneDashboardPageWidgetBarUnitArray{ OneDashboardPageWidgetBarUnitArgs{...} }
type OneDashboardPageWidgetBarUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarUnitArrayOutput() OneDashboardPageWidgetBarUnitArrayOutput
	ToOneDashboardPageWidgetBarUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarUnitArrayOutput
}

type OneDashboardPageWidgetBarUnitArray []OneDashboardPageWidgetBarUnitInput

func (OneDashboardPageWidgetBarUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarUnitArray) ToOneDashboardPageWidgetBarUnitArrayOutput() OneDashboardPageWidgetBarUnitArrayOutput {
	return i.ToOneDashboardPageWidgetBarUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarUnitArray) ToOneDashboardPageWidgetBarUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarUnitArrayOutput)
}

type OneDashboardPageWidgetBarUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarUnitOutput) ToOneDashboardPageWidgetBarUnitOutput() OneDashboardPageWidgetBarUnitOutput {
	return o
}

func (o OneDashboardPageWidgetBarUnitOutput) ToOneDashboardPageWidgetBarUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBarUnitOutput) SeriesOverrides() OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarUnit) []OneDashboardPageWidgetBarUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetBarUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBarUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarUnitArrayOutput) ToOneDashboardPageWidgetBarUnitArrayOutput() OneDashboardPageWidgetBarUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarUnitArrayOutput) ToOneDashboardPageWidgetBarUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarUnit {
		return vs[0].([]OneDashboardPageWidgetBarUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarUnitOutput)
}

type OneDashboardPageWidgetBarUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetBarUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBarUnitSeriesOverrideArgs and OneDashboardPageWidgetBarUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBarUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetBarUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarUnitSeriesOverrideOutput() OneDashboardPageWidgetBarUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetBarUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBarUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetBarUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetBarUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarUnitSeriesOverrideArgs) ToOneDashboardPageWidgetBarUnitSeriesOverrideOutput() OneDashboardPageWidgetBarUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBarUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarUnitSeriesOverrideArgs) ToOneDashboardPageWidgetBarUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetBarUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBarUnitSeriesOverrideArray and OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBarUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBarUnitSeriesOverrideArray{ OneDashboardPageWidgetBarUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBarUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBarUnitSeriesOverrideArray []OneDashboardPageWidgetBarUnitSeriesOverrideInput

func (OneDashboardPageWidgetBarUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBarUnitSeriesOverrideArray) ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBarUnitSeriesOverrideArray) ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBarUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBarUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarUnitSeriesOverrideOutput) ToOneDashboardPageWidgetBarUnitSeriesOverrideOutput() OneDashboardPageWidgetBarUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBarUnitSeriesOverrideOutput) ToOneDashboardPageWidgetBarUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetBarUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetBarUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBarUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBarUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBarUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBarUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBarUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBarUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBarUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetBillboard struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetBillboardColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) Threshold above which the displayed value will be styled with a red color.
	Critical *string `pulumi:"critical"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetBillboardDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetBillboardInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetBillboardNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetBillboardNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetBillboardUnit `pulumi:"units"`
	// (Optional) Threshold above which the displayed value will be styled with a yellow color.
	Warning *string `pulumi:"warning"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetBillboardInput is an input type that accepts OneDashboardPageWidgetBillboardArgs and OneDashboardPageWidgetBillboardOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardInput` via:
//
//	OneDashboardPageWidgetBillboardArgs{...}
type OneDashboardPageWidgetBillboardInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardOutput() OneDashboardPageWidgetBillboardOutput
	ToOneDashboardPageWidgetBillboardOutputWithContext(context.Context) OneDashboardPageWidgetBillboardOutput
}

type OneDashboardPageWidgetBillboardArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetBillboardColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) Threshold above which the displayed value will be styled with a red color.
	Critical pulumi.StringPtrInput `pulumi:"critical"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetBillboardDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetBillboardInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetBillboardNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetBillboardNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetBillboardUnitArrayInput `pulumi:"units"`
	// (Optional) Threshold above which the displayed value will be styled with a yellow color.
	Warning pulumi.StringPtrInput `pulumi:"warning"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetBillboardArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboard)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardArgs) ToOneDashboardPageWidgetBillboardOutput() OneDashboardPageWidgetBillboardOutput {
	return i.ToOneDashboardPageWidgetBillboardOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardArgs) ToOneDashboardPageWidgetBillboardOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardOutput)
}

// OneDashboardPageWidgetBillboardArrayInput is an input type that accepts OneDashboardPageWidgetBillboardArray and OneDashboardPageWidgetBillboardArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardArrayInput` via:
//
//	OneDashboardPageWidgetBillboardArray{ OneDashboardPageWidgetBillboardArgs{...} }
type OneDashboardPageWidgetBillboardArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardArrayOutput() OneDashboardPageWidgetBillboardArrayOutput
	ToOneDashboardPageWidgetBillboardArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardArrayOutput
}

type OneDashboardPageWidgetBillboardArray []OneDashboardPageWidgetBillboardInput

func (OneDashboardPageWidgetBillboardArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboard)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardArray) ToOneDashboardPageWidgetBillboardArrayOutput() OneDashboardPageWidgetBillboardArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardArray) ToOneDashboardPageWidgetBillboardArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardArrayOutput)
}

type OneDashboardPageWidgetBillboardOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboard)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardOutput) ToOneDashboardPageWidgetBillboardOutput() OneDashboardPageWidgetBillboardOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardOutput) ToOneDashboardPageWidgetBillboardOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetBillboardOutput) Colors() OneDashboardPageWidgetBillboardColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) []OneDashboardPageWidgetBillboardColor { return v.Colors }).(OneDashboardPageWidgetBillboardColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetBillboardOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) Threshold above which the displayed value will be styled with a red color.
func (o OneDashboardPageWidgetBillboardOutput) Critical() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *string { return v.Critical }).(pulumi.StringPtrOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetBillboardOutput) DataFormats() OneDashboardPageWidgetBillboardDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) []OneDashboardPageWidgetBillboardDataFormat {
		return v.DataFormats
	}).(OneDashboardPageWidgetBillboardDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetBillboardOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetBillboardOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetBillboardOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetBillboardOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetBillboardOutput) InitialSorting() OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *OneDashboardPageWidgetBillboardInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetBillboardInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetBillboardOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetBillboardOutput) NrqlQueries() OneDashboardPageWidgetBillboardNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) []OneDashboardPageWidgetBillboardNrqlQuery {
		return v.NrqlQueries
	}).(OneDashboardPageWidgetBillboardNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetBillboardOutput) NullValues() OneDashboardPageWidgetBillboardNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) []OneDashboardPageWidgetBillboardNullValue {
		return v.NullValues
	}).(OneDashboardPageWidgetBillboardNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetBillboardOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetBillboardOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetBillboardOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetBillboardOutput) Units() OneDashboardPageWidgetBillboardUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) []OneDashboardPageWidgetBillboardUnit { return v.Units }).(OneDashboardPageWidgetBillboardUnitArrayOutput)
}

// (Optional) Threshold above which the displayed value will be styled with a yellow color.
func (o OneDashboardPageWidgetBillboardOutput) Warning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *string { return v.Warning }).(pulumi.StringPtrOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetBillboardOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetBillboardOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetBillboardOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboard) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetBillboardArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboard)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardArrayOutput) ToOneDashboardPageWidgetBillboardArrayOutput() OneDashboardPageWidgetBillboardArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardArrayOutput) ToOneDashboardPageWidgetBillboardArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboard {
		return vs[0].([]OneDashboardPageWidgetBillboard)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardOutput)
}

type OneDashboardPageWidgetBillboardColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBillboardColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetBillboardColorInput is an input type that accepts OneDashboardPageWidgetBillboardColorArgs and OneDashboardPageWidgetBillboardColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardColorInput` via:
//
//	OneDashboardPageWidgetBillboardColorArgs{...}
type OneDashboardPageWidgetBillboardColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardColorOutput() OneDashboardPageWidgetBillboardColorOutput
	ToOneDashboardPageWidgetBillboardColorOutputWithContext(context.Context) OneDashboardPageWidgetBillboardColorOutput
}

type OneDashboardPageWidgetBillboardColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBillboardColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetBillboardColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardColorArgs) ToOneDashboardPageWidgetBillboardColorOutput() OneDashboardPageWidgetBillboardColorOutput {
	return i.ToOneDashboardPageWidgetBillboardColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardColorArgs) ToOneDashboardPageWidgetBillboardColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardColorOutput)
}

// OneDashboardPageWidgetBillboardColorArrayInput is an input type that accepts OneDashboardPageWidgetBillboardColorArray and OneDashboardPageWidgetBillboardColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardColorArrayInput` via:
//
//	OneDashboardPageWidgetBillboardColorArray{ OneDashboardPageWidgetBillboardColorArgs{...} }
type OneDashboardPageWidgetBillboardColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardColorArrayOutput() OneDashboardPageWidgetBillboardColorArrayOutput
	ToOneDashboardPageWidgetBillboardColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardColorArrayOutput
}

type OneDashboardPageWidgetBillboardColorArray []OneDashboardPageWidgetBillboardColorInput

func (OneDashboardPageWidgetBillboardColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardColorArray) ToOneDashboardPageWidgetBillboardColorArrayOutput() OneDashboardPageWidgetBillboardColorArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardColorArray) ToOneDashboardPageWidgetBillboardColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardColorArrayOutput)
}

type OneDashboardPageWidgetBillboardColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardColorOutput) ToOneDashboardPageWidgetBillboardColorOutput() OneDashboardPageWidgetBillboardColorOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardColorOutput) ToOneDashboardPageWidgetBillboardColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetBillboardColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBillboardColorOutput) SeriesOverrides() OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardColor) []OneDashboardPageWidgetBillboardColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBillboardColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardColorArrayOutput) ToOneDashboardPageWidgetBillboardColorArrayOutput() OneDashboardPageWidgetBillboardColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardColorArrayOutput) ToOneDashboardPageWidgetBillboardColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardColor {
		return vs[0].([]OneDashboardPageWidgetBillboardColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardColorOutput)
}

type OneDashboardPageWidgetBillboardColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetBillboardColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBillboardColorSeriesOverrideArgs and OneDashboardPageWidgetBillboardColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBillboardColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetBillboardColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutput() OneDashboardPageWidgetBillboardColorSeriesOverrideOutput
	ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBillboardColorSeriesOverrideOutput
}

type OneDashboardPageWidgetBillboardColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetBillboardColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardColorSeriesOverrideArgs) ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutput() OneDashboardPageWidgetBillboardColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardColorSeriesOverrideArgs) ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetBillboardColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBillboardColorSeriesOverrideArray and OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBillboardColorSeriesOverrideArray{ OneDashboardPageWidgetBillboardColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBillboardColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBillboardColorSeriesOverrideArray []OneDashboardPageWidgetBillboardColorSeriesOverrideInput

func (OneDashboardPageWidgetBillboardColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardColorSeriesOverrideArray) ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardColorSeriesOverrideArray) ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBillboardColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardColorSeriesOverrideOutput) ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutput() OneDashboardPageWidgetBillboardColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardColorSeriesOverrideOutput) ToOneDashboardPageWidgetBillboardColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetBillboardColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetBillboardColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBillboardColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetBillboardDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetBillboardDataFormatInput is an input type that accepts OneDashboardPageWidgetBillboardDataFormatArgs and OneDashboardPageWidgetBillboardDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardDataFormatInput` via:
//
//	OneDashboardPageWidgetBillboardDataFormatArgs{...}
type OneDashboardPageWidgetBillboardDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardDataFormatOutput() OneDashboardPageWidgetBillboardDataFormatOutput
	ToOneDashboardPageWidgetBillboardDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetBillboardDataFormatOutput
}

type OneDashboardPageWidgetBillboardDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetBillboardDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardDataFormatArgs) ToOneDashboardPageWidgetBillboardDataFormatOutput() OneDashboardPageWidgetBillboardDataFormatOutput {
	return i.ToOneDashboardPageWidgetBillboardDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardDataFormatArgs) ToOneDashboardPageWidgetBillboardDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardDataFormatOutput)
}

// OneDashboardPageWidgetBillboardDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetBillboardDataFormatArray and OneDashboardPageWidgetBillboardDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetBillboardDataFormatArray{ OneDashboardPageWidgetBillboardDataFormatArgs{...} }
type OneDashboardPageWidgetBillboardDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardDataFormatArrayOutput() OneDashboardPageWidgetBillboardDataFormatArrayOutput
	ToOneDashboardPageWidgetBillboardDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardDataFormatArrayOutput
}

type OneDashboardPageWidgetBillboardDataFormatArray []OneDashboardPageWidgetBillboardDataFormatInput

func (OneDashboardPageWidgetBillboardDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardDataFormatArray) ToOneDashboardPageWidgetBillboardDataFormatArrayOutput() OneDashboardPageWidgetBillboardDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardDataFormatArray) ToOneDashboardPageWidgetBillboardDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardDataFormatArrayOutput)
}

type OneDashboardPageWidgetBillboardDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardDataFormatOutput) ToOneDashboardPageWidgetBillboardDataFormatOutput() OneDashboardPageWidgetBillboardDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardDataFormatOutput) ToOneDashboardPageWidgetBillboardDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetBillboardDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBillboardDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetBillboardDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetBillboardDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBillboardDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardDataFormatArrayOutput) ToOneDashboardPageWidgetBillboardDataFormatArrayOutput() OneDashboardPageWidgetBillboardDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardDataFormatArrayOutput) ToOneDashboardPageWidgetBillboardDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardDataFormat {
		return vs[0].([]OneDashboardPageWidgetBillboardDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardDataFormatOutput)
}

type OneDashboardPageWidgetBillboardInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetBillboardInitialSortingInput is an input type that accepts OneDashboardPageWidgetBillboardInitialSortingArgs and OneDashboardPageWidgetBillboardInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardInitialSortingInput` via:
//
//	OneDashboardPageWidgetBillboardInitialSortingArgs{...}
type OneDashboardPageWidgetBillboardInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardInitialSortingOutput() OneDashboardPageWidgetBillboardInitialSortingOutput
	ToOneDashboardPageWidgetBillboardInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetBillboardInitialSortingOutput
}

type OneDashboardPageWidgetBillboardInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetBillboardInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardInitialSortingArgs) ToOneDashboardPageWidgetBillboardInitialSortingOutput() OneDashboardPageWidgetBillboardInitialSortingOutput {
	return i.ToOneDashboardPageWidgetBillboardInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardInitialSortingArgs) ToOneDashboardPageWidgetBillboardInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardInitialSortingOutput)
}

func (i OneDashboardPageWidgetBillboardInitialSortingArgs) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutput() OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardInitialSortingArgs) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardInitialSortingOutput).ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetBillboardInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetBillboardInitialSortingArgs, OneDashboardPageWidgetBillboardInitialSortingPtr and OneDashboardPageWidgetBillboardInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetBillboardInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetBillboardInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardInitialSortingPtrOutput() OneDashboardPageWidgetBillboardInitialSortingPtrOutput
	ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetBillboardInitialSortingPtrOutput
}

type oneDashboardPageWidgetBillboardInitialSortingPtrType OneDashboardPageWidgetBillboardInitialSortingArgs

func OneDashboardPageWidgetBillboardInitialSortingPtr(v *OneDashboardPageWidgetBillboardInitialSortingArgs) OneDashboardPageWidgetBillboardInitialSortingPtrInput {
	return (*oneDashboardPageWidgetBillboardInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetBillboardInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetBillboardInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetBillboardInitialSortingPtrType) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutput() OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetBillboardInitialSortingPtrType) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardInitialSortingPtrOutput)
}

type OneDashboardPageWidgetBillboardInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardInitialSortingOutput) ToOneDashboardPageWidgetBillboardInitialSortingOutput() OneDashboardPageWidgetBillboardInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardInitialSortingOutput) ToOneDashboardPageWidgetBillboardInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardInitialSortingOutput) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutput() OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetBillboardInitialSortingOutput) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetBillboardInitialSorting) *OneDashboardPageWidgetBillboardInitialSorting {
		return &v
	}).(OneDashboardPageWidgetBillboardInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetBillboardInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBillboardInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBillboardInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetBillboardInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardInitialSortingPtrOutput) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutput() OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardInitialSortingPtrOutput) ToOneDashboardPageWidgetBillboardInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardInitialSortingPtrOutput) Elem() OneDashboardPageWidgetBillboardInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBillboardInitialSorting) OneDashboardPageWidgetBillboardInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetBillboardInitialSorting
		return ret
	}).(OneDashboardPageWidgetBillboardInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetBillboardInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBillboardInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBillboardInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBillboardInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBillboardNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetBillboardNrqlQueryInput is an input type that accepts OneDashboardPageWidgetBillboardNrqlQueryArgs and OneDashboardPageWidgetBillboardNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardNrqlQueryInput` via:
//
//	OneDashboardPageWidgetBillboardNrqlQueryArgs{...}
type OneDashboardPageWidgetBillboardNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardNrqlQueryOutput() OneDashboardPageWidgetBillboardNrqlQueryOutput
	ToOneDashboardPageWidgetBillboardNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetBillboardNrqlQueryOutput
}

type OneDashboardPageWidgetBillboardNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetBillboardNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardNrqlQueryArgs) ToOneDashboardPageWidgetBillboardNrqlQueryOutput() OneDashboardPageWidgetBillboardNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetBillboardNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardNrqlQueryArgs) ToOneDashboardPageWidgetBillboardNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardNrqlQueryOutput)
}

// OneDashboardPageWidgetBillboardNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetBillboardNrqlQueryArray and OneDashboardPageWidgetBillboardNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetBillboardNrqlQueryArray{ OneDashboardPageWidgetBillboardNrqlQueryArgs{...} }
type OneDashboardPageWidgetBillboardNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutput() OneDashboardPageWidgetBillboardNrqlQueryArrayOutput
	ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardNrqlQueryArrayOutput
}

type OneDashboardPageWidgetBillboardNrqlQueryArray []OneDashboardPageWidgetBillboardNrqlQueryInput

func (OneDashboardPageWidgetBillboardNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardNrqlQueryArray) ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutput() OneDashboardPageWidgetBillboardNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardNrqlQueryArray) ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetBillboardNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardNrqlQueryOutput) ToOneDashboardPageWidgetBillboardNrqlQueryOutput() OneDashboardPageWidgetBillboardNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNrqlQueryOutput) ToOneDashboardPageWidgetBillboardNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetBillboardNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetBillboardNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBillboardNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardNrqlQueryArrayOutput) ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutput() OneDashboardPageWidgetBillboardNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNrqlQueryArrayOutput) ToOneDashboardPageWidgetBillboardNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetBillboardNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardNrqlQueryOutput)
}

type OneDashboardPageWidgetBillboardNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBillboardNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetBillboardNullValueInput is an input type that accepts OneDashboardPageWidgetBillboardNullValueArgs and OneDashboardPageWidgetBillboardNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardNullValueInput` via:
//
//	OneDashboardPageWidgetBillboardNullValueArgs{...}
type OneDashboardPageWidgetBillboardNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardNullValueOutput() OneDashboardPageWidgetBillboardNullValueOutput
	ToOneDashboardPageWidgetBillboardNullValueOutputWithContext(context.Context) OneDashboardPageWidgetBillboardNullValueOutput
}

type OneDashboardPageWidgetBillboardNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetBillboardNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardNullValueArgs) ToOneDashboardPageWidgetBillboardNullValueOutput() OneDashboardPageWidgetBillboardNullValueOutput {
	return i.ToOneDashboardPageWidgetBillboardNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardNullValueArgs) ToOneDashboardPageWidgetBillboardNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardNullValueOutput)
}

// OneDashboardPageWidgetBillboardNullValueArrayInput is an input type that accepts OneDashboardPageWidgetBillboardNullValueArray and OneDashboardPageWidgetBillboardNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardNullValueArrayInput` via:
//
//	OneDashboardPageWidgetBillboardNullValueArray{ OneDashboardPageWidgetBillboardNullValueArgs{...} }
type OneDashboardPageWidgetBillboardNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardNullValueArrayOutput() OneDashboardPageWidgetBillboardNullValueArrayOutput
	ToOneDashboardPageWidgetBillboardNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardNullValueArrayOutput
}

type OneDashboardPageWidgetBillboardNullValueArray []OneDashboardPageWidgetBillboardNullValueInput

func (OneDashboardPageWidgetBillboardNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardNullValueArray) ToOneDashboardPageWidgetBillboardNullValueArrayOutput() OneDashboardPageWidgetBillboardNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardNullValueArray) ToOneDashboardPageWidgetBillboardNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardNullValueArrayOutput)
}

type OneDashboardPageWidgetBillboardNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardNullValueOutput) ToOneDashboardPageWidgetBillboardNullValueOutput() OneDashboardPageWidgetBillboardNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNullValueOutput) ToOneDashboardPageWidgetBillboardNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetBillboardNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBillboardNullValueOutput) SeriesOverrides() OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardNullValue) []OneDashboardPageWidgetBillboardNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBillboardNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardNullValueArrayOutput) ToOneDashboardPageWidgetBillboardNullValueArrayOutput() OneDashboardPageWidgetBillboardNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNullValueArrayOutput) ToOneDashboardPageWidgetBillboardNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardNullValue {
		return vs[0].([]OneDashboardPageWidgetBillboardNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardNullValueOutput)
}

type OneDashboardPageWidgetBillboardNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetBillboardNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs and OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetBillboardNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput() OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput() OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray and OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray{ OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray []OneDashboardPageWidgetBillboardNullValueSeriesOverrideInput

func (OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput() OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBillboardNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetBillboardUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBillboardUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetBillboardUnitInput is an input type that accepts OneDashboardPageWidgetBillboardUnitArgs and OneDashboardPageWidgetBillboardUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardUnitInput` via:
//
//	OneDashboardPageWidgetBillboardUnitArgs{...}
type OneDashboardPageWidgetBillboardUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardUnitOutput() OneDashboardPageWidgetBillboardUnitOutput
	ToOneDashboardPageWidgetBillboardUnitOutputWithContext(context.Context) OneDashboardPageWidgetBillboardUnitOutput
}

type OneDashboardPageWidgetBillboardUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetBillboardUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardUnitArgs) ToOneDashboardPageWidgetBillboardUnitOutput() OneDashboardPageWidgetBillboardUnitOutput {
	return i.ToOneDashboardPageWidgetBillboardUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardUnitArgs) ToOneDashboardPageWidgetBillboardUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardUnitOutput)
}

// OneDashboardPageWidgetBillboardUnitArrayInput is an input type that accepts OneDashboardPageWidgetBillboardUnitArray and OneDashboardPageWidgetBillboardUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardUnitArrayInput` via:
//
//	OneDashboardPageWidgetBillboardUnitArray{ OneDashboardPageWidgetBillboardUnitArgs{...} }
type OneDashboardPageWidgetBillboardUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardUnitArrayOutput() OneDashboardPageWidgetBillboardUnitArrayOutput
	ToOneDashboardPageWidgetBillboardUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardUnitArrayOutput
}

type OneDashboardPageWidgetBillboardUnitArray []OneDashboardPageWidgetBillboardUnitInput

func (OneDashboardPageWidgetBillboardUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardUnitArray) ToOneDashboardPageWidgetBillboardUnitArrayOutput() OneDashboardPageWidgetBillboardUnitArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardUnitArray) ToOneDashboardPageWidgetBillboardUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardUnitArrayOutput)
}

type OneDashboardPageWidgetBillboardUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardUnitOutput) ToOneDashboardPageWidgetBillboardUnitOutput() OneDashboardPageWidgetBillboardUnitOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardUnitOutput) ToOneDashboardPageWidgetBillboardUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBillboardUnitOutput) SeriesOverrides() OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardUnit) []OneDashboardPageWidgetBillboardUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetBillboardUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBillboardUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardUnitArrayOutput) ToOneDashboardPageWidgetBillboardUnitArrayOutput() OneDashboardPageWidgetBillboardUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardUnitArrayOutput) ToOneDashboardPageWidgetBillboardUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardUnit {
		return vs[0].([]OneDashboardPageWidgetBillboardUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardUnitOutput)
}

type OneDashboardPageWidgetBillboardUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetBillboardUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs and OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetBillboardUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutput() OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutput() OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBillboardUnitSeriesOverrideArray and OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBillboardUnitSeriesOverrideArray{ OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBillboardUnitSeriesOverrideArray []OneDashboardPageWidgetBillboardUnitSeriesOverrideInput

func (OneDashboardPageWidgetBillboardUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBillboardUnitSeriesOverrideArray) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBillboardUnitSeriesOverrideArray) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBillboardUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutput() OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBillboardUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBillboardUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBillboardUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBillboardUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetBullet struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetBulletColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetBulletDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetBulletInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Required) Visualization limit for the widget.
	Limit float64 `pulumi:"limit"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetBulletNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetBulletNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetBulletUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetBulletInput is an input type that accepts OneDashboardPageWidgetBulletArgs and OneDashboardPageWidgetBulletOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletInput` via:
//
//	OneDashboardPageWidgetBulletArgs{...}
type OneDashboardPageWidgetBulletInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletOutput() OneDashboardPageWidgetBulletOutput
	ToOneDashboardPageWidgetBulletOutputWithContext(context.Context) OneDashboardPageWidgetBulletOutput
}

type OneDashboardPageWidgetBulletArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetBulletColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetBulletDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetBulletInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Required) Visualization limit for the widget.
	Limit pulumi.Float64Input `pulumi:"limit"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetBulletNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetBulletNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetBulletUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetBulletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBullet)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletArgs) ToOneDashboardPageWidgetBulletOutput() OneDashboardPageWidgetBulletOutput {
	return i.ToOneDashboardPageWidgetBulletOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletArgs) ToOneDashboardPageWidgetBulletOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletOutput)
}

// OneDashboardPageWidgetBulletArrayInput is an input type that accepts OneDashboardPageWidgetBulletArray and OneDashboardPageWidgetBulletArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletArrayInput` via:
//
//	OneDashboardPageWidgetBulletArray{ OneDashboardPageWidgetBulletArgs{...} }
type OneDashboardPageWidgetBulletArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletArrayOutput() OneDashboardPageWidgetBulletArrayOutput
	ToOneDashboardPageWidgetBulletArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletArrayOutput
}

type OneDashboardPageWidgetBulletArray []OneDashboardPageWidgetBulletInput

func (OneDashboardPageWidgetBulletArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBullet)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletArray) ToOneDashboardPageWidgetBulletArrayOutput() OneDashboardPageWidgetBulletArrayOutput {
	return i.ToOneDashboardPageWidgetBulletArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletArray) ToOneDashboardPageWidgetBulletArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletArrayOutput)
}

type OneDashboardPageWidgetBulletOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBullet)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletOutput) ToOneDashboardPageWidgetBulletOutput() OneDashboardPageWidgetBulletOutput {
	return o
}

func (o OneDashboardPageWidgetBulletOutput) ToOneDashboardPageWidgetBulletOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetBulletOutput) Colors() OneDashboardPageWidgetBulletColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) []OneDashboardPageWidgetBulletColor { return v.Colors }).(OneDashboardPageWidgetBulletColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetBulletOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetBulletOutput) DataFormats() OneDashboardPageWidgetBulletDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) []OneDashboardPageWidgetBulletDataFormat { return v.DataFormats }).(OneDashboardPageWidgetBulletDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetBulletOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetBulletOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetBulletOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetBulletOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetBulletOutput) InitialSorting() OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *OneDashboardPageWidgetBulletInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetBulletInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetBulletOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Required) Visualization limit for the widget.
func (o OneDashboardPageWidgetBulletOutput) Limit() pulumi.Float64Output {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) float64 { return v.Limit }).(pulumi.Float64Output)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetBulletOutput) NrqlQueries() OneDashboardPageWidgetBulletNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) []OneDashboardPageWidgetBulletNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetBulletNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetBulletOutput) NullValues() OneDashboardPageWidgetBulletNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) []OneDashboardPageWidgetBulletNullValue { return v.NullValues }).(OneDashboardPageWidgetBulletNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetBulletOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetBulletOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetBulletOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetBulletOutput) Units() OneDashboardPageWidgetBulletUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) []OneDashboardPageWidgetBulletUnit { return v.Units }).(OneDashboardPageWidgetBulletUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetBulletOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetBulletOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetBulletOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBullet) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetBulletArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBullet)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletArrayOutput) ToOneDashboardPageWidgetBulletArrayOutput() OneDashboardPageWidgetBulletArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletArrayOutput) ToOneDashboardPageWidgetBulletArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBullet {
		return vs[0].([]OneDashboardPageWidgetBullet)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletOutput)
}

type OneDashboardPageWidgetBulletColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBulletColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetBulletColorInput is an input type that accepts OneDashboardPageWidgetBulletColorArgs and OneDashboardPageWidgetBulletColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletColorInput` via:
//
//	OneDashboardPageWidgetBulletColorArgs{...}
type OneDashboardPageWidgetBulletColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletColorOutput() OneDashboardPageWidgetBulletColorOutput
	ToOneDashboardPageWidgetBulletColorOutputWithContext(context.Context) OneDashboardPageWidgetBulletColorOutput
}

type OneDashboardPageWidgetBulletColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBulletColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetBulletColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletColorArgs) ToOneDashboardPageWidgetBulletColorOutput() OneDashboardPageWidgetBulletColorOutput {
	return i.ToOneDashboardPageWidgetBulletColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletColorArgs) ToOneDashboardPageWidgetBulletColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletColorOutput)
}

// OneDashboardPageWidgetBulletColorArrayInput is an input type that accepts OneDashboardPageWidgetBulletColorArray and OneDashboardPageWidgetBulletColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletColorArrayInput` via:
//
//	OneDashboardPageWidgetBulletColorArray{ OneDashboardPageWidgetBulletColorArgs{...} }
type OneDashboardPageWidgetBulletColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletColorArrayOutput() OneDashboardPageWidgetBulletColorArrayOutput
	ToOneDashboardPageWidgetBulletColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletColorArrayOutput
}

type OneDashboardPageWidgetBulletColorArray []OneDashboardPageWidgetBulletColorInput

func (OneDashboardPageWidgetBulletColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletColorArray) ToOneDashboardPageWidgetBulletColorArrayOutput() OneDashboardPageWidgetBulletColorArrayOutput {
	return i.ToOneDashboardPageWidgetBulletColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletColorArray) ToOneDashboardPageWidgetBulletColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletColorArrayOutput)
}

type OneDashboardPageWidgetBulletColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletColorOutput) ToOneDashboardPageWidgetBulletColorOutput() OneDashboardPageWidgetBulletColorOutput {
	return o
}

func (o OneDashboardPageWidgetBulletColorOutput) ToOneDashboardPageWidgetBulletColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetBulletColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBulletColorOutput) SeriesOverrides() OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletColor) []OneDashboardPageWidgetBulletColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBulletColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletColorArrayOutput) ToOneDashboardPageWidgetBulletColorArrayOutput() OneDashboardPageWidgetBulletColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletColorArrayOutput) ToOneDashboardPageWidgetBulletColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletColor {
		return vs[0].([]OneDashboardPageWidgetBulletColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletColorOutput)
}

type OneDashboardPageWidgetBulletColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetBulletColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBulletColorSeriesOverrideArgs and OneDashboardPageWidgetBulletColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBulletColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetBulletColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletColorSeriesOverrideOutput() OneDashboardPageWidgetBulletColorSeriesOverrideOutput
	ToOneDashboardPageWidgetBulletColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBulletColorSeriesOverrideOutput
}

type OneDashboardPageWidgetBulletColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetBulletColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletColorSeriesOverrideArgs) ToOneDashboardPageWidgetBulletColorSeriesOverrideOutput() OneDashboardPageWidgetBulletColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBulletColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletColorSeriesOverrideArgs) ToOneDashboardPageWidgetBulletColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetBulletColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBulletColorSeriesOverrideArray and OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBulletColorSeriesOverrideArray{ OneDashboardPageWidgetBulletColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBulletColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBulletColorSeriesOverrideArray []OneDashboardPageWidgetBulletColorSeriesOverrideInput

func (OneDashboardPageWidgetBulletColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletColorSeriesOverrideArray) ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletColorSeriesOverrideArray) ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBulletColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletColorSeriesOverrideOutput) ToOneDashboardPageWidgetBulletColorSeriesOverrideOutput() OneDashboardPageWidgetBulletColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBulletColorSeriesOverrideOutput) ToOneDashboardPageWidgetBulletColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetBulletColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetBulletColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBulletColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBulletColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetBulletDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetBulletDataFormatInput is an input type that accepts OneDashboardPageWidgetBulletDataFormatArgs and OneDashboardPageWidgetBulletDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletDataFormatInput` via:
//
//	OneDashboardPageWidgetBulletDataFormatArgs{...}
type OneDashboardPageWidgetBulletDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletDataFormatOutput() OneDashboardPageWidgetBulletDataFormatOutput
	ToOneDashboardPageWidgetBulletDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetBulletDataFormatOutput
}

type OneDashboardPageWidgetBulletDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetBulletDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletDataFormatArgs) ToOneDashboardPageWidgetBulletDataFormatOutput() OneDashboardPageWidgetBulletDataFormatOutput {
	return i.ToOneDashboardPageWidgetBulletDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletDataFormatArgs) ToOneDashboardPageWidgetBulletDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletDataFormatOutput)
}

// OneDashboardPageWidgetBulletDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetBulletDataFormatArray and OneDashboardPageWidgetBulletDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetBulletDataFormatArray{ OneDashboardPageWidgetBulletDataFormatArgs{...} }
type OneDashboardPageWidgetBulletDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletDataFormatArrayOutput() OneDashboardPageWidgetBulletDataFormatArrayOutput
	ToOneDashboardPageWidgetBulletDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletDataFormatArrayOutput
}

type OneDashboardPageWidgetBulletDataFormatArray []OneDashboardPageWidgetBulletDataFormatInput

func (OneDashboardPageWidgetBulletDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletDataFormatArray) ToOneDashboardPageWidgetBulletDataFormatArrayOutput() OneDashboardPageWidgetBulletDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetBulletDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletDataFormatArray) ToOneDashboardPageWidgetBulletDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletDataFormatArrayOutput)
}

type OneDashboardPageWidgetBulletDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletDataFormatOutput) ToOneDashboardPageWidgetBulletDataFormatOutput() OneDashboardPageWidgetBulletDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetBulletDataFormatOutput) ToOneDashboardPageWidgetBulletDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetBulletDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBulletDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetBulletDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetBulletDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBulletDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletDataFormatArrayOutput) ToOneDashboardPageWidgetBulletDataFormatArrayOutput() OneDashboardPageWidgetBulletDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletDataFormatArrayOutput) ToOneDashboardPageWidgetBulletDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletDataFormat {
		return vs[0].([]OneDashboardPageWidgetBulletDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletDataFormatOutput)
}

type OneDashboardPageWidgetBulletInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetBulletInitialSortingInput is an input type that accepts OneDashboardPageWidgetBulletInitialSortingArgs and OneDashboardPageWidgetBulletInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletInitialSortingInput` via:
//
//	OneDashboardPageWidgetBulletInitialSortingArgs{...}
type OneDashboardPageWidgetBulletInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletInitialSortingOutput() OneDashboardPageWidgetBulletInitialSortingOutput
	ToOneDashboardPageWidgetBulletInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetBulletInitialSortingOutput
}

type OneDashboardPageWidgetBulletInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetBulletInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletInitialSortingArgs) ToOneDashboardPageWidgetBulletInitialSortingOutput() OneDashboardPageWidgetBulletInitialSortingOutput {
	return i.ToOneDashboardPageWidgetBulletInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletInitialSortingArgs) ToOneDashboardPageWidgetBulletInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletInitialSortingOutput)
}

func (i OneDashboardPageWidgetBulletInitialSortingArgs) ToOneDashboardPageWidgetBulletInitialSortingPtrOutput() OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletInitialSortingArgs) ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletInitialSortingOutput).ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetBulletInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetBulletInitialSortingArgs, OneDashboardPageWidgetBulletInitialSortingPtr and OneDashboardPageWidgetBulletInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetBulletInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetBulletInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletInitialSortingPtrOutput() OneDashboardPageWidgetBulletInitialSortingPtrOutput
	ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetBulletInitialSortingPtrOutput
}

type oneDashboardPageWidgetBulletInitialSortingPtrType OneDashboardPageWidgetBulletInitialSortingArgs

func OneDashboardPageWidgetBulletInitialSortingPtr(v *OneDashboardPageWidgetBulletInitialSortingArgs) OneDashboardPageWidgetBulletInitialSortingPtrInput {
	return (*oneDashboardPageWidgetBulletInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetBulletInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetBulletInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetBulletInitialSortingPtrType) ToOneDashboardPageWidgetBulletInitialSortingPtrOutput() OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetBulletInitialSortingPtrType) ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletInitialSortingPtrOutput)
}

type OneDashboardPageWidgetBulletInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletInitialSortingOutput) ToOneDashboardPageWidgetBulletInitialSortingOutput() OneDashboardPageWidgetBulletInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetBulletInitialSortingOutput) ToOneDashboardPageWidgetBulletInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetBulletInitialSortingOutput) ToOneDashboardPageWidgetBulletInitialSortingPtrOutput() OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetBulletInitialSortingOutput) ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetBulletInitialSorting) *OneDashboardPageWidgetBulletInitialSorting {
		return &v
	}).(OneDashboardPageWidgetBulletInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetBulletInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBulletInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBulletInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetBulletInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletInitialSortingPtrOutput) ToOneDashboardPageWidgetBulletInitialSortingPtrOutput() OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetBulletInitialSortingPtrOutput) ToOneDashboardPageWidgetBulletInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetBulletInitialSortingPtrOutput) Elem() OneDashboardPageWidgetBulletInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBulletInitialSorting) OneDashboardPageWidgetBulletInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetBulletInitialSorting
		return ret
	}).(OneDashboardPageWidgetBulletInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetBulletInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBulletInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetBulletInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetBulletInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBulletNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetBulletNrqlQueryInput is an input type that accepts OneDashboardPageWidgetBulletNrqlQueryArgs and OneDashboardPageWidgetBulletNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletNrqlQueryInput` via:
//
//	OneDashboardPageWidgetBulletNrqlQueryArgs{...}
type OneDashboardPageWidgetBulletNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletNrqlQueryOutput() OneDashboardPageWidgetBulletNrqlQueryOutput
	ToOneDashboardPageWidgetBulletNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetBulletNrqlQueryOutput
}

type OneDashboardPageWidgetBulletNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetBulletNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletNrqlQueryArgs) ToOneDashboardPageWidgetBulletNrqlQueryOutput() OneDashboardPageWidgetBulletNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetBulletNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletNrqlQueryArgs) ToOneDashboardPageWidgetBulletNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletNrqlQueryOutput)
}

// OneDashboardPageWidgetBulletNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetBulletNrqlQueryArray and OneDashboardPageWidgetBulletNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetBulletNrqlQueryArray{ OneDashboardPageWidgetBulletNrqlQueryArgs{...} }
type OneDashboardPageWidgetBulletNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletNrqlQueryArrayOutput() OneDashboardPageWidgetBulletNrqlQueryArrayOutput
	ToOneDashboardPageWidgetBulletNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletNrqlQueryArrayOutput
}

type OneDashboardPageWidgetBulletNrqlQueryArray []OneDashboardPageWidgetBulletNrqlQueryInput

func (OneDashboardPageWidgetBulletNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletNrqlQueryArray) ToOneDashboardPageWidgetBulletNrqlQueryArrayOutput() OneDashboardPageWidgetBulletNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetBulletNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletNrqlQueryArray) ToOneDashboardPageWidgetBulletNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetBulletNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletNrqlQueryOutput) ToOneDashboardPageWidgetBulletNrqlQueryOutput() OneDashboardPageWidgetBulletNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNrqlQueryOutput) ToOneDashboardPageWidgetBulletNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetBulletNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetBulletNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetBulletNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletNrqlQueryArrayOutput) ToOneDashboardPageWidgetBulletNrqlQueryArrayOutput() OneDashboardPageWidgetBulletNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNrqlQueryArrayOutput) ToOneDashboardPageWidgetBulletNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetBulletNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletNrqlQueryOutput)
}

type OneDashboardPageWidgetBulletNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBulletNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetBulletNullValueInput is an input type that accepts OneDashboardPageWidgetBulletNullValueArgs and OneDashboardPageWidgetBulletNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletNullValueInput` via:
//
//	OneDashboardPageWidgetBulletNullValueArgs{...}
type OneDashboardPageWidgetBulletNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletNullValueOutput() OneDashboardPageWidgetBulletNullValueOutput
	ToOneDashboardPageWidgetBulletNullValueOutputWithContext(context.Context) OneDashboardPageWidgetBulletNullValueOutput
}

type OneDashboardPageWidgetBulletNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetBulletNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletNullValueArgs) ToOneDashboardPageWidgetBulletNullValueOutput() OneDashboardPageWidgetBulletNullValueOutput {
	return i.ToOneDashboardPageWidgetBulletNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletNullValueArgs) ToOneDashboardPageWidgetBulletNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletNullValueOutput)
}

// OneDashboardPageWidgetBulletNullValueArrayInput is an input type that accepts OneDashboardPageWidgetBulletNullValueArray and OneDashboardPageWidgetBulletNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletNullValueArrayInput` via:
//
//	OneDashboardPageWidgetBulletNullValueArray{ OneDashboardPageWidgetBulletNullValueArgs{...} }
type OneDashboardPageWidgetBulletNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletNullValueArrayOutput() OneDashboardPageWidgetBulletNullValueArrayOutput
	ToOneDashboardPageWidgetBulletNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletNullValueArrayOutput
}

type OneDashboardPageWidgetBulletNullValueArray []OneDashboardPageWidgetBulletNullValueInput

func (OneDashboardPageWidgetBulletNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletNullValueArray) ToOneDashboardPageWidgetBulletNullValueArrayOutput() OneDashboardPageWidgetBulletNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetBulletNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletNullValueArray) ToOneDashboardPageWidgetBulletNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletNullValueArrayOutput)
}

type OneDashboardPageWidgetBulletNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletNullValueOutput) ToOneDashboardPageWidgetBulletNullValueOutput() OneDashboardPageWidgetBulletNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNullValueOutput) ToOneDashboardPageWidgetBulletNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetBulletNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBulletNullValueOutput) SeriesOverrides() OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletNullValue) []OneDashboardPageWidgetBulletNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBulletNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletNullValueArrayOutput) ToOneDashboardPageWidgetBulletNullValueArrayOutput() OneDashboardPageWidgetBulletNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNullValueArrayOutput) ToOneDashboardPageWidgetBulletNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletNullValue {
		return vs[0].([]OneDashboardPageWidgetBulletNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletNullValueOutput)
}

type OneDashboardPageWidgetBulletNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetBulletNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs and OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetBulletNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutput() OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutput() OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBulletNullValueSeriesOverrideArray and OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBulletNullValueSeriesOverrideArray{ OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBulletNullValueSeriesOverrideArray []OneDashboardPageWidgetBulletNullValueSeriesOverrideInput

func (OneDashboardPageWidgetBulletNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletNullValueSeriesOverrideArray) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletNullValueSeriesOverrideArray) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutput() OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBulletNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetBulletUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetBulletUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetBulletUnitInput is an input type that accepts OneDashboardPageWidgetBulletUnitArgs and OneDashboardPageWidgetBulletUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletUnitInput` via:
//
//	OneDashboardPageWidgetBulletUnitArgs{...}
type OneDashboardPageWidgetBulletUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletUnitOutput() OneDashboardPageWidgetBulletUnitOutput
	ToOneDashboardPageWidgetBulletUnitOutputWithContext(context.Context) OneDashboardPageWidgetBulletUnitOutput
}

type OneDashboardPageWidgetBulletUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetBulletUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetBulletUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletUnitArgs) ToOneDashboardPageWidgetBulletUnitOutput() OneDashboardPageWidgetBulletUnitOutput {
	return i.ToOneDashboardPageWidgetBulletUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletUnitArgs) ToOneDashboardPageWidgetBulletUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletUnitOutput)
}

// OneDashboardPageWidgetBulletUnitArrayInput is an input type that accepts OneDashboardPageWidgetBulletUnitArray and OneDashboardPageWidgetBulletUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletUnitArrayInput` via:
//
//	OneDashboardPageWidgetBulletUnitArray{ OneDashboardPageWidgetBulletUnitArgs{...} }
type OneDashboardPageWidgetBulletUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletUnitArrayOutput() OneDashboardPageWidgetBulletUnitArrayOutput
	ToOneDashboardPageWidgetBulletUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletUnitArrayOutput
}

type OneDashboardPageWidgetBulletUnitArray []OneDashboardPageWidgetBulletUnitInput

func (OneDashboardPageWidgetBulletUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletUnitArray) ToOneDashboardPageWidgetBulletUnitArrayOutput() OneDashboardPageWidgetBulletUnitArrayOutput {
	return i.ToOneDashboardPageWidgetBulletUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletUnitArray) ToOneDashboardPageWidgetBulletUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletUnitArrayOutput)
}

type OneDashboardPageWidgetBulletUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletUnitOutput) ToOneDashboardPageWidgetBulletUnitOutput() OneDashboardPageWidgetBulletUnitOutput {
	return o
}

func (o OneDashboardPageWidgetBulletUnitOutput) ToOneDashboardPageWidgetBulletUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetBulletUnitOutput) SeriesOverrides() OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletUnit) []OneDashboardPageWidgetBulletUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetBulletUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBulletUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletUnitArrayOutput) ToOneDashboardPageWidgetBulletUnitArrayOutput() OneDashboardPageWidgetBulletUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletUnitArrayOutput) ToOneDashboardPageWidgetBulletUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletUnit {
		return vs[0].([]OneDashboardPageWidgetBulletUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletUnitOutput)
}

type OneDashboardPageWidgetBulletUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetBulletUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetBulletUnitSeriesOverrideArgs and OneDashboardPageWidgetBulletUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetBulletUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetBulletUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutput() OneDashboardPageWidgetBulletUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetBulletUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetBulletUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetBulletUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletUnitSeriesOverrideArgs) ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutput() OneDashboardPageWidgetBulletUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletUnitSeriesOverrideArgs) ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetBulletUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetBulletUnitSeriesOverrideArray and OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetBulletUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetBulletUnitSeriesOverrideArray{ OneDashboardPageWidgetBulletUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetBulletUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetBulletUnitSeriesOverrideArray []OneDashboardPageWidgetBulletUnitSeriesOverrideInput

func (OneDashboardPageWidgetBulletUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetBulletUnitSeriesOverrideArray) ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetBulletUnitSeriesOverrideArray) ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetBulletUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetBulletUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletUnitSeriesOverrideOutput) ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutput() OneDashboardPageWidgetBulletUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetBulletUnitSeriesOverrideOutput) ToOneDashboardPageWidgetBulletUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetBulletUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetBulletUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetBulletUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetBulletUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetBulletUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetBulletUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetBulletUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetBulletUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetFunnel struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetFunnelColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetFunnelDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetFunnelInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetFunnelNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetFunnelNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetFunnelUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetFunnelInput is an input type that accepts OneDashboardPageWidgetFunnelArgs and OneDashboardPageWidgetFunnelOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelInput` via:
//
//	OneDashboardPageWidgetFunnelArgs{...}
type OneDashboardPageWidgetFunnelInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelOutput() OneDashboardPageWidgetFunnelOutput
	ToOneDashboardPageWidgetFunnelOutputWithContext(context.Context) OneDashboardPageWidgetFunnelOutput
}

type OneDashboardPageWidgetFunnelArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetFunnelColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetFunnelDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetFunnelInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetFunnelNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetFunnelNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetFunnelUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetFunnelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnel)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelArgs) ToOneDashboardPageWidgetFunnelOutput() OneDashboardPageWidgetFunnelOutput {
	return i.ToOneDashboardPageWidgetFunnelOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelArgs) ToOneDashboardPageWidgetFunnelOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelOutput)
}

// OneDashboardPageWidgetFunnelArrayInput is an input type that accepts OneDashboardPageWidgetFunnelArray and OneDashboardPageWidgetFunnelArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelArrayInput` via:
//
//	OneDashboardPageWidgetFunnelArray{ OneDashboardPageWidgetFunnelArgs{...} }
type OneDashboardPageWidgetFunnelArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelArrayOutput() OneDashboardPageWidgetFunnelArrayOutput
	ToOneDashboardPageWidgetFunnelArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelArrayOutput
}

type OneDashboardPageWidgetFunnelArray []OneDashboardPageWidgetFunnelInput

func (OneDashboardPageWidgetFunnelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnel)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelArray) ToOneDashboardPageWidgetFunnelArrayOutput() OneDashboardPageWidgetFunnelArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelArray) ToOneDashboardPageWidgetFunnelArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelArrayOutput)
}

type OneDashboardPageWidgetFunnelOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnel)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelOutput) ToOneDashboardPageWidgetFunnelOutput() OneDashboardPageWidgetFunnelOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelOutput) ToOneDashboardPageWidgetFunnelOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetFunnelOutput) Colors() OneDashboardPageWidgetFunnelColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) []OneDashboardPageWidgetFunnelColor { return v.Colors }).(OneDashboardPageWidgetFunnelColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetFunnelOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetFunnelOutput) DataFormats() OneDashboardPageWidgetFunnelDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) []OneDashboardPageWidgetFunnelDataFormat { return v.DataFormats }).(OneDashboardPageWidgetFunnelDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetFunnelOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetFunnelOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetFunnelOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetFunnelOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetFunnelOutput) InitialSorting() OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *OneDashboardPageWidgetFunnelInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetFunnelInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetFunnelOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetFunnelOutput) NrqlQueries() OneDashboardPageWidgetFunnelNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) []OneDashboardPageWidgetFunnelNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetFunnelNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetFunnelOutput) NullValues() OneDashboardPageWidgetFunnelNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) []OneDashboardPageWidgetFunnelNullValue { return v.NullValues }).(OneDashboardPageWidgetFunnelNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetFunnelOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetFunnelOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetFunnelOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetFunnelOutput) Units() OneDashboardPageWidgetFunnelUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) []OneDashboardPageWidgetFunnelUnit { return v.Units }).(OneDashboardPageWidgetFunnelUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetFunnelOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetFunnelOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetFunnelOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnel) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetFunnelArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnel)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelArrayOutput) ToOneDashboardPageWidgetFunnelArrayOutput() OneDashboardPageWidgetFunnelArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelArrayOutput) ToOneDashboardPageWidgetFunnelArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnel {
		return vs[0].([]OneDashboardPageWidgetFunnel)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelOutput)
}

type OneDashboardPageWidgetFunnelColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetFunnelColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetFunnelColorInput is an input type that accepts OneDashboardPageWidgetFunnelColorArgs and OneDashboardPageWidgetFunnelColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelColorInput` via:
//
//	OneDashboardPageWidgetFunnelColorArgs{...}
type OneDashboardPageWidgetFunnelColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelColorOutput() OneDashboardPageWidgetFunnelColorOutput
	ToOneDashboardPageWidgetFunnelColorOutputWithContext(context.Context) OneDashboardPageWidgetFunnelColorOutput
}

type OneDashboardPageWidgetFunnelColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetFunnelColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetFunnelColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelColorArgs) ToOneDashboardPageWidgetFunnelColorOutput() OneDashboardPageWidgetFunnelColorOutput {
	return i.ToOneDashboardPageWidgetFunnelColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelColorArgs) ToOneDashboardPageWidgetFunnelColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelColorOutput)
}

// OneDashboardPageWidgetFunnelColorArrayInput is an input type that accepts OneDashboardPageWidgetFunnelColorArray and OneDashboardPageWidgetFunnelColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelColorArrayInput` via:
//
//	OneDashboardPageWidgetFunnelColorArray{ OneDashboardPageWidgetFunnelColorArgs{...} }
type OneDashboardPageWidgetFunnelColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelColorArrayOutput() OneDashboardPageWidgetFunnelColorArrayOutput
	ToOneDashboardPageWidgetFunnelColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelColorArrayOutput
}

type OneDashboardPageWidgetFunnelColorArray []OneDashboardPageWidgetFunnelColorInput

func (OneDashboardPageWidgetFunnelColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelColorArray) ToOneDashboardPageWidgetFunnelColorArrayOutput() OneDashboardPageWidgetFunnelColorArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelColorArray) ToOneDashboardPageWidgetFunnelColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelColorArrayOutput)
}

type OneDashboardPageWidgetFunnelColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelColorOutput) ToOneDashboardPageWidgetFunnelColorOutput() OneDashboardPageWidgetFunnelColorOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelColorOutput) ToOneDashboardPageWidgetFunnelColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetFunnelColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetFunnelColorOutput) SeriesOverrides() OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelColor) []OneDashboardPageWidgetFunnelColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetFunnelColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelColorArrayOutput) ToOneDashboardPageWidgetFunnelColorArrayOutput() OneDashboardPageWidgetFunnelColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelColorArrayOutput) ToOneDashboardPageWidgetFunnelColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelColor {
		return vs[0].([]OneDashboardPageWidgetFunnelColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelColorOutput)
}

type OneDashboardPageWidgetFunnelColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetFunnelColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetFunnelColorSeriesOverrideArgs and OneDashboardPageWidgetFunnelColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetFunnelColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetFunnelColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutput() OneDashboardPageWidgetFunnelColorSeriesOverrideOutput
	ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetFunnelColorSeriesOverrideOutput
}

type OneDashboardPageWidgetFunnelColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetFunnelColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelColorSeriesOverrideArgs) ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutput() OneDashboardPageWidgetFunnelColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelColorSeriesOverrideArgs) ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetFunnelColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetFunnelColorSeriesOverrideArray and OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetFunnelColorSeriesOverrideArray{ OneDashboardPageWidgetFunnelColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetFunnelColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetFunnelColorSeriesOverrideArray []OneDashboardPageWidgetFunnelColorSeriesOverrideInput

func (OneDashboardPageWidgetFunnelColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelColorSeriesOverrideArray) ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelColorSeriesOverrideArray) ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetFunnelColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelColorSeriesOverrideOutput) ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutput() OneDashboardPageWidgetFunnelColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelColorSeriesOverrideOutput) ToOneDashboardPageWidgetFunnelColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetFunnelColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetFunnelColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetFunnelColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetFunnelDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetFunnelDataFormatInput is an input type that accepts OneDashboardPageWidgetFunnelDataFormatArgs and OneDashboardPageWidgetFunnelDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelDataFormatInput` via:
//
//	OneDashboardPageWidgetFunnelDataFormatArgs{...}
type OneDashboardPageWidgetFunnelDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelDataFormatOutput() OneDashboardPageWidgetFunnelDataFormatOutput
	ToOneDashboardPageWidgetFunnelDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetFunnelDataFormatOutput
}

type OneDashboardPageWidgetFunnelDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetFunnelDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelDataFormatArgs) ToOneDashboardPageWidgetFunnelDataFormatOutput() OneDashboardPageWidgetFunnelDataFormatOutput {
	return i.ToOneDashboardPageWidgetFunnelDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelDataFormatArgs) ToOneDashboardPageWidgetFunnelDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelDataFormatOutput)
}

// OneDashboardPageWidgetFunnelDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetFunnelDataFormatArray and OneDashboardPageWidgetFunnelDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetFunnelDataFormatArray{ OneDashboardPageWidgetFunnelDataFormatArgs{...} }
type OneDashboardPageWidgetFunnelDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelDataFormatArrayOutput() OneDashboardPageWidgetFunnelDataFormatArrayOutput
	ToOneDashboardPageWidgetFunnelDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelDataFormatArrayOutput
}

type OneDashboardPageWidgetFunnelDataFormatArray []OneDashboardPageWidgetFunnelDataFormatInput

func (OneDashboardPageWidgetFunnelDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelDataFormatArray) ToOneDashboardPageWidgetFunnelDataFormatArrayOutput() OneDashboardPageWidgetFunnelDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelDataFormatArray) ToOneDashboardPageWidgetFunnelDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelDataFormatArrayOutput)
}

type OneDashboardPageWidgetFunnelDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelDataFormatOutput) ToOneDashboardPageWidgetFunnelDataFormatOutput() OneDashboardPageWidgetFunnelDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelDataFormatOutput) ToOneDashboardPageWidgetFunnelDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetFunnelDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetFunnelDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetFunnelDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetFunnelDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetFunnelDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelDataFormatArrayOutput) ToOneDashboardPageWidgetFunnelDataFormatArrayOutput() OneDashboardPageWidgetFunnelDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelDataFormatArrayOutput) ToOneDashboardPageWidgetFunnelDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelDataFormat {
		return vs[0].([]OneDashboardPageWidgetFunnelDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelDataFormatOutput)
}

type OneDashboardPageWidgetFunnelInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetFunnelInitialSortingInput is an input type that accepts OneDashboardPageWidgetFunnelInitialSortingArgs and OneDashboardPageWidgetFunnelInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelInitialSortingInput` via:
//
//	OneDashboardPageWidgetFunnelInitialSortingArgs{...}
type OneDashboardPageWidgetFunnelInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelInitialSortingOutput() OneDashboardPageWidgetFunnelInitialSortingOutput
	ToOneDashboardPageWidgetFunnelInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetFunnelInitialSortingOutput
}

type OneDashboardPageWidgetFunnelInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetFunnelInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelInitialSortingArgs) ToOneDashboardPageWidgetFunnelInitialSortingOutput() OneDashboardPageWidgetFunnelInitialSortingOutput {
	return i.ToOneDashboardPageWidgetFunnelInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelInitialSortingArgs) ToOneDashboardPageWidgetFunnelInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelInitialSortingOutput)
}

func (i OneDashboardPageWidgetFunnelInitialSortingArgs) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutput() OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelInitialSortingArgs) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelInitialSortingOutput).ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetFunnelInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetFunnelInitialSortingArgs, OneDashboardPageWidgetFunnelInitialSortingPtr and OneDashboardPageWidgetFunnelInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetFunnelInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetFunnelInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelInitialSortingPtrOutput() OneDashboardPageWidgetFunnelInitialSortingPtrOutput
	ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetFunnelInitialSortingPtrOutput
}

type oneDashboardPageWidgetFunnelInitialSortingPtrType OneDashboardPageWidgetFunnelInitialSortingArgs

func OneDashboardPageWidgetFunnelInitialSortingPtr(v *OneDashboardPageWidgetFunnelInitialSortingArgs) OneDashboardPageWidgetFunnelInitialSortingPtrInput {
	return (*oneDashboardPageWidgetFunnelInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetFunnelInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetFunnelInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetFunnelInitialSortingPtrType) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutput() OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetFunnelInitialSortingPtrType) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelInitialSortingPtrOutput)
}

type OneDashboardPageWidgetFunnelInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelInitialSortingOutput) ToOneDashboardPageWidgetFunnelInitialSortingOutput() OneDashboardPageWidgetFunnelInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelInitialSortingOutput) ToOneDashboardPageWidgetFunnelInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelInitialSortingOutput) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutput() OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetFunnelInitialSortingOutput) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetFunnelInitialSorting) *OneDashboardPageWidgetFunnelInitialSorting {
		return &v
	}).(OneDashboardPageWidgetFunnelInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetFunnelInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetFunnelInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetFunnelInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetFunnelInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelInitialSortingPtrOutput) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutput() OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelInitialSortingPtrOutput) ToOneDashboardPageWidgetFunnelInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelInitialSortingPtrOutput) Elem() OneDashboardPageWidgetFunnelInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetFunnelInitialSorting) OneDashboardPageWidgetFunnelInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetFunnelInitialSorting
		return ret
	}).(OneDashboardPageWidgetFunnelInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetFunnelInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetFunnelInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetFunnelInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetFunnelInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetFunnelNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetFunnelNrqlQueryInput is an input type that accepts OneDashboardPageWidgetFunnelNrqlQueryArgs and OneDashboardPageWidgetFunnelNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelNrqlQueryInput` via:
//
//	OneDashboardPageWidgetFunnelNrqlQueryArgs{...}
type OneDashboardPageWidgetFunnelNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelNrqlQueryOutput() OneDashboardPageWidgetFunnelNrqlQueryOutput
	ToOneDashboardPageWidgetFunnelNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetFunnelNrqlQueryOutput
}

type OneDashboardPageWidgetFunnelNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetFunnelNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelNrqlQueryArgs) ToOneDashboardPageWidgetFunnelNrqlQueryOutput() OneDashboardPageWidgetFunnelNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetFunnelNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelNrqlQueryArgs) ToOneDashboardPageWidgetFunnelNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelNrqlQueryOutput)
}

// OneDashboardPageWidgetFunnelNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetFunnelNrqlQueryArray and OneDashboardPageWidgetFunnelNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetFunnelNrqlQueryArray{ OneDashboardPageWidgetFunnelNrqlQueryArgs{...} }
type OneDashboardPageWidgetFunnelNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutput() OneDashboardPageWidgetFunnelNrqlQueryArrayOutput
	ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelNrqlQueryArrayOutput
}

type OneDashboardPageWidgetFunnelNrqlQueryArray []OneDashboardPageWidgetFunnelNrqlQueryInput

func (OneDashboardPageWidgetFunnelNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelNrqlQueryArray) ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutput() OneDashboardPageWidgetFunnelNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelNrqlQueryArray) ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetFunnelNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelNrqlQueryOutput) ToOneDashboardPageWidgetFunnelNrqlQueryOutput() OneDashboardPageWidgetFunnelNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNrqlQueryOutput) ToOneDashboardPageWidgetFunnelNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetFunnelNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetFunnelNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetFunnelNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelNrqlQueryArrayOutput) ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutput() OneDashboardPageWidgetFunnelNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNrqlQueryArrayOutput) ToOneDashboardPageWidgetFunnelNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetFunnelNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelNrqlQueryOutput)
}

type OneDashboardPageWidgetFunnelNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetFunnelNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetFunnelNullValueInput is an input type that accepts OneDashboardPageWidgetFunnelNullValueArgs and OneDashboardPageWidgetFunnelNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelNullValueInput` via:
//
//	OneDashboardPageWidgetFunnelNullValueArgs{...}
type OneDashboardPageWidgetFunnelNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelNullValueOutput() OneDashboardPageWidgetFunnelNullValueOutput
	ToOneDashboardPageWidgetFunnelNullValueOutputWithContext(context.Context) OneDashboardPageWidgetFunnelNullValueOutput
}

type OneDashboardPageWidgetFunnelNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetFunnelNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelNullValueArgs) ToOneDashboardPageWidgetFunnelNullValueOutput() OneDashboardPageWidgetFunnelNullValueOutput {
	return i.ToOneDashboardPageWidgetFunnelNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelNullValueArgs) ToOneDashboardPageWidgetFunnelNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelNullValueOutput)
}

// OneDashboardPageWidgetFunnelNullValueArrayInput is an input type that accepts OneDashboardPageWidgetFunnelNullValueArray and OneDashboardPageWidgetFunnelNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelNullValueArrayInput` via:
//
//	OneDashboardPageWidgetFunnelNullValueArray{ OneDashboardPageWidgetFunnelNullValueArgs{...} }
type OneDashboardPageWidgetFunnelNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelNullValueArrayOutput() OneDashboardPageWidgetFunnelNullValueArrayOutput
	ToOneDashboardPageWidgetFunnelNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelNullValueArrayOutput
}

type OneDashboardPageWidgetFunnelNullValueArray []OneDashboardPageWidgetFunnelNullValueInput

func (OneDashboardPageWidgetFunnelNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelNullValueArray) ToOneDashboardPageWidgetFunnelNullValueArrayOutput() OneDashboardPageWidgetFunnelNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelNullValueArray) ToOneDashboardPageWidgetFunnelNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelNullValueArrayOutput)
}

type OneDashboardPageWidgetFunnelNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelNullValueOutput) ToOneDashboardPageWidgetFunnelNullValueOutput() OneDashboardPageWidgetFunnelNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNullValueOutput) ToOneDashboardPageWidgetFunnelNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetFunnelNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetFunnelNullValueOutput) SeriesOverrides() OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelNullValue) []OneDashboardPageWidgetFunnelNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetFunnelNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelNullValueArrayOutput) ToOneDashboardPageWidgetFunnelNullValueArrayOutput() OneDashboardPageWidgetFunnelNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNullValueArrayOutput) ToOneDashboardPageWidgetFunnelNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelNullValue {
		return vs[0].([]OneDashboardPageWidgetFunnelNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelNullValueOutput)
}

type OneDashboardPageWidgetFunnelNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetFunnelNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs and OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetFunnelNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput() OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput() OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray and OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray{ OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray []OneDashboardPageWidgetFunnelNullValueSeriesOverrideInput

func (OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput() OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetFunnelNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetFunnelUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetFunnelUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetFunnelUnitInput is an input type that accepts OneDashboardPageWidgetFunnelUnitArgs and OneDashboardPageWidgetFunnelUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelUnitInput` via:
//
//	OneDashboardPageWidgetFunnelUnitArgs{...}
type OneDashboardPageWidgetFunnelUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelUnitOutput() OneDashboardPageWidgetFunnelUnitOutput
	ToOneDashboardPageWidgetFunnelUnitOutputWithContext(context.Context) OneDashboardPageWidgetFunnelUnitOutput
}

type OneDashboardPageWidgetFunnelUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetFunnelUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelUnitArgs) ToOneDashboardPageWidgetFunnelUnitOutput() OneDashboardPageWidgetFunnelUnitOutput {
	return i.ToOneDashboardPageWidgetFunnelUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelUnitArgs) ToOneDashboardPageWidgetFunnelUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelUnitOutput)
}

// OneDashboardPageWidgetFunnelUnitArrayInput is an input type that accepts OneDashboardPageWidgetFunnelUnitArray and OneDashboardPageWidgetFunnelUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelUnitArrayInput` via:
//
//	OneDashboardPageWidgetFunnelUnitArray{ OneDashboardPageWidgetFunnelUnitArgs{...} }
type OneDashboardPageWidgetFunnelUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelUnitArrayOutput() OneDashboardPageWidgetFunnelUnitArrayOutput
	ToOneDashboardPageWidgetFunnelUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelUnitArrayOutput
}

type OneDashboardPageWidgetFunnelUnitArray []OneDashboardPageWidgetFunnelUnitInput

func (OneDashboardPageWidgetFunnelUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelUnitArray) ToOneDashboardPageWidgetFunnelUnitArrayOutput() OneDashboardPageWidgetFunnelUnitArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelUnitArray) ToOneDashboardPageWidgetFunnelUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelUnitArrayOutput)
}

type OneDashboardPageWidgetFunnelUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelUnitOutput) ToOneDashboardPageWidgetFunnelUnitOutput() OneDashboardPageWidgetFunnelUnitOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelUnitOutput) ToOneDashboardPageWidgetFunnelUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetFunnelUnitOutput) SeriesOverrides() OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelUnit) []OneDashboardPageWidgetFunnelUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetFunnelUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetFunnelUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelUnitArrayOutput) ToOneDashboardPageWidgetFunnelUnitArrayOutput() OneDashboardPageWidgetFunnelUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelUnitArrayOutput) ToOneDashboardPageWidgetFunnelUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelUnit {
		return vs[0].([]OneDashboardPageWidgetFunnelUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelUnitOutput)
}

type OneDashboardPageWidgetFunnelUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetFunnelUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs and OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetFunnelUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutput() OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutput() OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetFunnelUnitSeriesOverrideArray and OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetFunnelUnitSeriesOverrideArray{ OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetFunnelUnitSeriesOverrideArray []OneDashboardPageWidgetFunnelUnitSeriesOverrideInput

func (OneDashboardPageWidgetFunnelUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetFunnelUnitSeriesOverrideArray) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetFunnelUnitSeriesOverrideArray) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetFunnelUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutput() OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetFunnelUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetFunnelUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetFunnelUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetFunnelUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetHeatmap struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetHeatmapColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetHeatmapDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard *bool `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetHeatmapInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids []string `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetHeatmapNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetHeatmapNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetHeatmapUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetHeatmapInput is an input type that accepts OneDashboardPageWidgetHeatmapArgs and OneDashboardPageWidgetHeatmapOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapInput` via:
//
//	OneDashboardPageWidgetHeatmapArgs{...}
type OneDashboardPageWidgetHeatmapInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapOutput() OneDashboardPageWidgetHeatmapOutput
	ToOneDashboardPageWidgetHeatmapOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapOutput
}

type OneDashboardPageWidgetHeatmapArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetHeatmapColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetHeatmapDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard pulumi.BoolPtrInput `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetHeatmapInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids pulumi.StringArrayInput `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetHeatmapNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetHeatmapNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetHeatmapUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetHeatmapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmap)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapArgs) ToOneDashboardPageWidgetHeatmapOutput() OneDashboardPageWidgetHeatmapOutput {
	return i.ToOneDashboardPageWidgetHeatmapOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapArgs) ToOneDashboardPageWidgetHeatmapOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapOutput)
}

// OneDashboardPageWidgetHeatmapArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapArray and OneDashboardPageWidgetHeatmapArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapArray{ OneDashboardPageWidgetHeatmapArgs{...} }
type OneDashboardPageWidgetHeatmapArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapArrayOutput() OneDashboardPageWidgetHeatmapArrayOutput
	ToOneDashboardPageWidgetHeatmapArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapArrayOutput
}

type OneDashboardPageWidgetHeatmapArray []OneDashboardPageWidgetHeatmapInput

func (OneDashboardPageWidgetHeatmapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmap)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapArray) ToOneDashboardPageWidgetHeatmapArrayOutput() OneDashboardPageWidgetHeatmapArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapArray) ToOneDashboardPageWidgetHeatmapArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapArrayOutput)
}

type OneDashboardPageWidgetHeatmapOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmap)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapOutput) ToOneDashboardPageWidgetHeatmapOutput() OneDashboardPageWidgetHeatmapOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapOutput) ToOneDashboardPageWidgetHeatmapOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetHeatmapOutput) Colors() OneDashboardPageWidgetHeatmapColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) []OneDashboardPageWidgetHeatmapColor { return v.Colors }).(OneDashboardPageWidgetHeatmapColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetHeatmapOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetHeatmapOutput) DataFormats() OneDashboardPageWidgetHeatmapDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) []OneDashboardPageWidgetHeatmapDataFormat { return v.DataFormats }).(OneDashboardPageWidgetHeatmapDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetHeatmapOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Use this item to filter the current dashboard.
func (o OneDashboardPageWidgetHeatmapOutput) FilterCurrentDashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *bool { return v.FilterCurrentDashboard }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetHeatmapOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetHeatmapOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetHeatmapOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetHeatmapOutput) InitialSorting() OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *OneDashboardPageWidgetHeatmapInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetHeatmapInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetHeatmapOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
func (o OneDashboardPageWidgetHeatmapOutput) LinkedEntityGuids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) []string { return v.LinkedEntityGuids }).(pulumi.StringArrayOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetHeatmapOutput) NrqlQueries() OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) []OneDashboardPageWidgetHeatmapNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetHeatmapOutput) NullValues() OneDashboardPageWidgetHeatmapNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) []OneDashboardPageWidgetHeatmapNullValue { return v.NullValues }).(OneDashboardPageWidgetHeatmapNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetHeatmapOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetHeatmapOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetHeatmapOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetHeatmapOutput) Units() OneDashboardPageWidgetHeatmapUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) []OneDashboardPageWidgetHeatmapUnit { return v.Units }).(OneDashboardPageWidgetHeatmapUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetHeatmapOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetHeatmapOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetHeatmapOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmap) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetHeatmapArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmap)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapArrayOutput) ToOneDashboardPageWidgetHeatmapArrayOutput() OneDashboardPageWidgetHeatmapArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapArrayOutput) ToOneDashboardPageWidgetHeatmapArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmap {
		return vs[0].([]OneDashboardPageWidgetHeatmap)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapOutput)
}

type OneDashboardPageWidgetHeatmapColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetHeatmapColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetHeatmapColorInput is an input type that accepts OneDashboardPageWidgetHeatmapColorArgs and OneDashboardPageWidgetHeatmapColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapColorInput` via:
//
//	OneDashboardPageWidgetHeatmapColorArgs{...}
type OneDashboardPageWidgetHeatmapColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapColorOutput() OneDashboardPageWidgetHeatmapColorOutput
	ToOneDashboardPageWidgetHeatmapColorOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapColorOutput
}

type OneDashboardPageWidgetHeatmapColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetHeatmapColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapColorArgs) ToOneDashboardPageWidgetHeatmapColorOutput() OneDashboardPageWidgetHeatmapColorOutput {
	return i.ToOneDashboardPageWidgetHeatmapColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapColorArgs) ToOneDashboardPageWidgetHeatmapColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapColorOutput)
}

// OneDashboardPageWidgetHeatmapColorArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapColorArray and OneDashboardPageWidgetHeatmapColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapColorArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapColorArray{ OneDashboardPageWidgetHeatmapColorArgs{...} }
type OneDashboardPageWidgetHeatmapColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapColorArrayOutput() OneDashboardPageWidgetHeatmapColorArrayOutput
	ToOneDashboardPageWidgetHeatmapColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapColorArrayOutput
}

type OneDashboardPageWidgetHeatmapColorArray []OneDashboardPageWidgetHeatmapColorInput

func (OneDashboardPageWidgetHeatmapColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapColorArray) ToOneDashboardPageWidgetHeatmapColorArrayOutput() OneDashboardPageWidgetHeatmapColorArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapColorArray) ToOneDashboardPageWidgetHeatmapColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapColorArrayOutput)
}

type OneDashboardPageWidgetHeatmapColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapColorOutput) ToOneDashboardPageWidgetHeatmapColorOutput() OneDashboardPageWidgetHeatmapColorOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapColorOutput) ToOneDashboardPageWidgetHeatmapColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetHeatmapColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetHeatmapColorOutput) SeriesOverrides() OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapColor) []OneDashboardPageWidgetHeatmapColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHeatmapColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapColorArrayOutput) ToOneDashboardPageWidgetHeatmapColorArrayOutput() OneDashboardPageWidgetHeatmapColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapColorArrayOutput) ToOneDashboardPageWidgetHeatmapColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapColor {
		return vs[0].([]OneDashboardPageWidgetHeatmapColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapColorOutput)
}

type OneDashboardPageWidgetHeatmapColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetHeatmapColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs and OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetHeatmapColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutput() OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput
	ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput
}

type OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutput() OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapColorSeriesOverrideArray and OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapColorSeriesOverrideArray{ OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetHeatmapColorSeriesOverrideArray []OneDashboardPageWidgetHeatmapColorSeriesOverrideInput

func (OneDashboardPageWidgetHeatmapColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapColorSeriesOverrideArray) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapColorSeriesOverrideArray) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutput() OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetHeatmapColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetHeatmapDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetHeatmapDataFormatInput is an input type that accepts OneDashboardPageWidgetHeatmapDataFormatArgs and OneDashboardPageWidgetHeatmapDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapDataFormatInput` via:
//
//	OneDashboardPageWidgetHeatmapDataFormatArgs{...}
type OneDashboardPageWidgetHeatmapDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapDataFormatOutput() OneDashboardPageWidgetHeatmapDataFormatOutput
	ToOneDashboardPageWidgetHeatmapDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapDataFormatOutput
}

type OneDashboardPageWidgetHeatmapDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetHeatmapDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapDataFormatArgs) ToOneDashboardPageWidgetHeatmapDataFormatOutput() OneDashboardPageWidgetHeatmapDataFormatOutput {
	return i.ToOneDashboardPageWidgetHeatmapDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapDataFormatArgs) ToOneDashboardPageWidgetHeatmapDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapDataFormatOutput)
}

// OneDashboardPageWidgetHeatmapDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapDataFormatArray and OneDashboardPageWidgetHeatmapDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapDataFormatArray{ OneDashboardPageWidgetHeatmapDataFormatArgs{...} }
type OneDashboardPageWidgetHeatmapDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapDataFormatArrayOutput() OneDashboardPageWidgetHeatmapDataFormatArrayOutput
	ToOneDashboardPageWidgetHeatmapDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapDataFormatArrayOutput
}

type OneDashboardPageWidgetHeatmapDataFormatArray []OneDashboardPageWidgetHeatmapDataFormatInput

func (OneDashboardPageWidgetHeatmapDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapDataFormatArray) ToOneDashboardPageWidgetHeatmapDataFormatArrayOutput() OneDashboardPageWidgetHeatmapDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapDataFormatArray) ToOneDashboardPageWidgetHeatmapDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapDataFormatArrayOutput)
}

type OneDashboardPageWidgetHeatmapDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapDataFormatOutput) ToOneDashboardPageWidgetHeatmapDataFormatOutput() OneDashboardPageWidgetHeatmapDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapDataFormatOutput) ToOneDashboardPageWidgetHeatmapDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetHeatmapDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetHeatmapDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetHeatmapDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetHeatmapDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetHeatmapDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapDataFormatArrayOutput) ToOneDashboardPageWidgetHeatmapDataFormatArrayOutput() OneDashboardPageWidgetHeatmapDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapDataFormatArrayOutput) ToOneDashboardPageWidgetHeatmapDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapDataFormat {
		return vs[0].([]OneDashboardPageWidgetHeatmapDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapDataFormatOutput)
}

type OneDashboardPageWidgetHeatmapInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetHeatmapInitialSortingInput is an input type that accepts OneDashboardPageWidgetHeatmapInitialSortingArgs and OneDashboardPageWidgetHeatmapInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapInitialSortingInput` via:
//
//	OneDashboardPageWidgetHeatmapInitialSortingArgs{...}
type OneDashboardPageWidgetHeatmapInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapInitialSortingOutput() OneDashboardPageWidgetHeatmapInitialSortingOutput
	ToOneDashboardPageWidgetHeatmapInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapInitialSortingOutput
}

type OneDashboardPageWidgetHeatmapInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetHeatmapInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapInitialSortingArgs) ToOneDashboardPageWidgetHeatmapInitialSortingOutput() OneDashboardPageWidgetHeatmapInitialSortingOutput {
	return i.ToOneDashboardPageWidgetHeatmapInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapInitialSortingArgs) ToOneDashboardPageWidgetHeatmapInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapInitialSortingOutput)
}

func (i OneDashboardPageWidgetHeatmapInitialSortingArgs) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutput() OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapInitialSortingArgs) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapInitialSortingOutput).ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetHeatmapInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetHeatmapInitialSortingArgs, OneDashboardPageWidgetHeatmapInitialSortingPtr and OneDashboardPageWidgetHeatmapInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetHeatmapInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetHeatmapInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutput() OneDashboardPageWidgetHeatmapInitialSortingPtrOutput
	ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapInitialSortingPtrOutput
}

type oneDashboardPageWidgetHeatmapInitialSortingPtrType OneDashboardPageWidgetHeatmapInitialSortingArgs

func OneDashboardPageWidgetHeatmapInitialSortingPtr(v *OneDashboardPageWidgetHeatmapInitialSortingArgs) OneDashboardPageWidgetHeatmapInitialSortingPtrInput {
	return (*oneDashboardPageWidgetHeatmapInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetHeatmapInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetHeatmapInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetHeatmapInitialSortingPtrType) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutput() OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetHeatmapInitialSortingPtrType) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapInitialSortingPtrOutput)
}

type OneDashboardPageWidgetHeatmapInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapInitialSortingOutput) ToOneDashboardPageWidgetHeatmapInitialSortingOutput() OneDashboardPageWidgetHeatmapInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapInitialSortingOutput) ToOneDashboardPageWidgetHeatmapInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapInitialSortingOutput) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutput() OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetHeatmapInitialSortingOutput) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetHeatmapInitialSorting) *OneDashboardPageWidgetHeatmapInitialSorting {
		return &v
	}).(OneDashboardPageWidgetHeatmapInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetHeatmapInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetHeatmapInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetHeatmapInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetHeatmapInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapInitialSortingPtrOutput) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutput() OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapInitialSortingPtrOutput) ToOneDashboardPageWidgetHeatmapInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapInitialSortingPtrOutput) Elem() OneDashboardPageWidgetHeatmapInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetHeatmapInitialSorting) OneDashboardPageWidgetHeatmapInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetHeatmapInitialSorting
		return ret
	}).(OneDashboardPageWidgetHeatmapInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetHeatmapInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetHeatmapInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetHeatmapInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetHeatmapInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHeatmapNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetHeatmapNrqlQueryInput is an input type that accepts OneDashboardPageWidgetHeatmapNrqlQueryArgs and OneDashboardPageWidgetHeatmapNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapNrqlQueryInput` via:
//
//	OneDashboardPageWidgetHeatmapNrqlQueryArgs{...}
type OneDashboardPageWidgetHeatmapNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapNrqlQueryOutput() OneDashboardPageWidgetHeatmapNrqlQueryOutput
	ToOneDashboardPageWidgetHeatmapNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapNrqlQueryOutput
}

type OneDashboardPageWidgetHeatmapNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetHeatmapNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapNrqlQueryArgs) ToOneDashboardPageWidgetHeatmapNrqlQueryOutput() OneDashboardPageWidgetHeatmapNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetHeatmapNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapNrqlQueryArgs) ToOneDashboardPageWidgetHeatmapNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapNrqlQueryOutput)
}

// OneDashboardPageWidgetHeatmapNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapNrqlQueryArray and OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapNrqlQueryArray{ OneDashboardPageWidgetHeatmapNrqlQueryArgs{...} }
type OneDashboardPageWidgetHeatmapNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutput() OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput
	ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput
}

type OneDashboardPageWidgetHeatmapNrqlQueryArray []OneDashboardPageWidgetHeatmapNrqlQueryInput

func (OneDashboardPageWidgetHeatmapNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapNrqlQueryArray) ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutput() OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapNrqlQueryArray) ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetHeatmapNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapNrqlQueryOutput) ToOneDashboardPageWidgetHeatmapNrqlQueryOutput() OneDashboardPageWidgetHeatmapNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNrqlQueryOutput) ToOneDashboardPageWidgetHeatmapNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetHeatmapNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetHeatmapNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput) ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutput() OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput) ToOneDashboardPageWidgetHeatmapNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetHeatmapNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapNrqlQueryOutput)
}

type OneDashboardPageWidgetHeatmapNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetHeatmapNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetHeatmapNullValueInput is an input type that accepts OneDashboardPageWidgetHeatmapNullValueArgs and OneDashboardPageWidgetHeatmapNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapNullValueInput` via:
//
//	OneDashboardPageWidgetHeatmapNullValueArgs{...}
type OneDashboardPageWidgetHeatmapNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapNullValueOutput() OneDashboardPageWidgetHeatmapNullValueOutput
	ToOneDashboardPageWidgetHeatmapNullValueOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapNullValueOutput
}

type OneDashboardPageWidgetHeatmapNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetHeatmapNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapNullValueArgs) ToOneDashboardPageWidgetHeatmapNullValueOutput() OneDashboardPageWidgetHeatmapNullValueOutput {
	return i.ToOneDashboardPageWidgetHeatmapNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapNullValueArgs) ToOneDashboardPageWidgetHeatmapNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapNullValueOutput)
}

// OneDashboardPageWidgetHeatmapNullValueArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapNullValueArray and OneDashboardPageWidgetHeatmapNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapNullValueArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapNullValueArray{ OneDashboardPageWidgetHeatmapNullValueArgs{...} }
type OneDashboardPageWidgetHeatmapNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapNullValueArrayOutput() OneDashboardPageWidgetHeatmapNullValueArrayOutput
	ToOneDashboardPageWidgetHeatmapNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapNullValueArrayOutput
}

type OneDashboardPageWidgetHeatmapNullValueArray []OneDashboardPageWidgetHeatmapNullValueInput

func (OneDashboardPageWidgetHeatmapNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapNullValueArray) ToOneDashboardPageWidgetHeatmapNullValueArrayOutput() OneDashboardPageWidgetHeatmapNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapNullValueArray) ToOneDashboardPageWidgetHeatmapNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapNullValueArrayOutput)
}

type OneDashboardPageWidgetHeatmapNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapNullValueOutput) ToOneDashboardPageWidgetHeatmapNullValueOutput() OneDashboardPageWidgetHeatmapNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNullValueOutput) ToOneDashboardPageWidgetHeatmapNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetHeatmapNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetHeatmapNullValueOutput) SeriesOverrides() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapNullValue) []OneDashboardPageWidgetHeatmapNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHeatmapNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapNullValueArrayOutput) ToOneDashboardPageWidgetHeatmapNullValueArrayOutput() OneDashboardPageWidgetHeatmapNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNullValueArrayOutput) ToOneDashboardPageWidgetHeatmapNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapNullValue {
		return vs[0].([]OneDashboardPageWidgetHeatmapNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapNullValueOutput)
}

type OneDashboardPageWidgetHeatmapNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetHeatmapNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs and OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetHeatmapNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray and OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray{ OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray []OneDashboardPageWidgetHeatmapNullValueSeriesOverrideInput

func (OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetHeatmapNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetHeatmapUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetHeatmapUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetHeatmapUnitInput is an input type that accepts OneDashboardPageWidgetHeatmapUnitArgs and OneDashboardPageWidgetHeatmapUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapUnitInput` via:
//
//	OneDashboardPageWidgetHeatmapUnitArgs{...}
type OneDashboardPageWidgetHeatmapUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapUnitOutput() OneDashboardPageWidgetHeatmapUnitOutput
	ToOneDashboardPageWidgetHeatmapUnitOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapUnitOutput
}

type OneDashboardPageWidgetHeatmapUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetHeatmapUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapUnitArgs) ToOneDashboardPageWidgetHeatmapUnitOutput() OneDashboardPageWidgetHeatmapUnitOutput {
	return i.ToOneDashboardPageWidgetHeatmapUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapUnitArgs) ToOneDashboardPageWidgetHeatmapUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapUnitOutput)
}

// OneDashboardPageWidgetHeatmapUnitArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapUnitArray and OneDashboardPageWidgetHeatmapUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapUnitArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapUnitArray{ OneDashboardPageWidgetHeatmapUnitArgs{...} }
type OneDashboardPageWidgetHeatmapUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapUnitArrayOutput() OneDashboardPageWidgetHeatmapUnitArrayOutput
	ToOneDashboardPageWidgetHeatmapUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapUnitArrayOutput
}

type OneDashboardPageWidgetHeatmapUnitArray []OneDashboardPageWidgetHeatmapUnitInput

func (OneDashboardPageWidgetHeatmapUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapUnitArray) ToOneDashboardPageWidgetHeatmapUnitArrayOutput() OneDashboardPageWidgetHeatmapUnitArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapUnitArray) ToOneDashboardPageWidgetHeatmapUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapUnitArrayOutput)
}

type OneDashboardPageWidgetHeatmapUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapUnitOutput) ToOneDashboardPageWidgetHeatmapUnitOutput() OneDashboardPageWidgetHeatmapUnitOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapUnitOutput) ToOneDashboardPageWidgetHeatmapUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetHeatmapUnitOutput) SeriesOverrides() OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapUnit) []OneDashboardPageWidgetHeatmapUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetHeatmapUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHeatmapUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapUnitArrayOutput) ToOneDashboardPageWidgetHeatmapUnitArrayOutput() OneDashboardPageWidgetHeatmapUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapUnitArrayOutput) ToOneDashboardPageWidgetHeatmapUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapUnit {
		return vs[0].([]OneDashboardPageWidgetHeatmapUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapUnitOutput)
}

type OneDashboardPageWidgetHeatmapUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetHeatmapUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs and OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetHeatmapUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput() OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput() OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray and OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray{ OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray []OneDashboardPageWidgetHeatmapUnitSeriesOverrideInput

func (OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput() OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHeatmapUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHeatmapUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHeatmapUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetHeatmapUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetHistogram struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetHistogramColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetHistogramDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetHistogramInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetHistogramNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetHistogramNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetHistogramUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetHistogramInput is an input type that accepts OneDashboardPageWidgetHistogramArgs and OneDashboardPageWidgetHistogramOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramInput` via:
//
//	OneDashboardPageWidgetHistogramArgs{...}
type OneDashboardPageWidgetHistogramInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramOutput() OneDashboardPageWidgetHistogramOutput
	ToOneDashboardPageWidgetHistogramOutputWithContext(context.Context) OneDashboardPageWidgetHistogramOutput
}

type OneDashboardPageWidgetHistogramArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetHistogramColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetHistogramDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetHistogramInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetHistogramNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetHistogramNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetHistogramUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetHistogramArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogram)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramArgs) ToOneDashboardPageWidgetHistogramOutput() OneDashboardPageWidgetHistogramOutput {
	return i.ToOneDashboardPageWidgetHistogramOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramArgs) ToOneDashboardPageWidgetHistogramOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramOutput)
}

// OneDashboardPageWidgetHistogramArrayInput is an input type that accepts OneDashboardPageWidgetHistogramArray and OneDashboardPageWidgetHistogramArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramArrayInput` via:
//
//	OneDashboardPageWidgetHistogramArray{ OneDashboardPageWidgetHistogramArgs{...} }
type OneDashboardPageWidgetHistogramArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramArrayOutput() OneDashboardPageWidgetHistogramArrayOutput
	ToOneDashboardPageWidgetHistogramArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramArrayOutput
}

type OneDashboardPageWidgetHistogramArray []OneDashboardPageWidgetHistogramInput

func (OneDashboardPageWidgetHistogramArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogram)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramArray) ToOneDashboardPageWidgetHistogramArrayOutput() OneDashboardPageWidgetHistogramArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramArray) ToOneDashboardPageWidgetHistogramArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramArrayOutput)
}

type OneDashboardPageWidgetHistogramOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogram)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramOutput) ToOneDashboardPageWidgetHistogramOutput() OneDashboardPageWidgetHistogramOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramOutput) ToOneDashboardPageWidgetHistogramOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetHistogramOutput) Colors() OneDashboardPageWidgetHistogramColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) []OneDashboardPageWidgetHistogramColor { return v.Colors }).(OneDashboardPageWidgetHistogramColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetHistogramOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetHistogramOutput) DataFormats() OneDashboardPageWidgetHistogramDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) []OneDashboardPageWidgetHistogramDataFormat {
		return v.DataFormats
	}).(OneDashboardPageWidgetHistogramDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetHistogramOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetHistogramOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetHistogramOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetHistogramOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetHistogramOutput) InitialSorting() OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *OneDashboardPageWidgetHistogramInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetHistogramInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetHistogramOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetHistogramOutput) NrqlQueries() OneDashboardPageWidgetHistogramNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) []OneDashboardPageWidgetHistogramNrqlQuery {
		return v.NrqlQueries
	}).(OneDashboardPageWidgetHistogramNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetHistogramOutput) NullValues() OneDashboardPageWidgetHistogramNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) []OneDashboardPageWidgetHistogramNullValue {
		return v.NullValues
	}).(OneDashboardPageWidgetHistogramNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetHistogramOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetHistogramOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetHistogramOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetHistogramOutput) Units() OneDashboardPageWidgetHistogramUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) []OneDashboardPageWidgetHistogramUnit { return v.Units }).(OneDashboardPageWidgetHistogramUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetHistogramOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetHistogramOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetHistogramOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogram) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetHistogramArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogram)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramArrayOutput) ToOneDashboardPageWidgetHistogramArrayOutput() OneDashboardPageWidgetHistogramArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramArrayOutput) ToOneDashboardPageWidgetHistogramArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogram {
		return vs[0].([]OneDashboardPageWidgetHistogram)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramOutput)
}

type OneDashboardPageWidgetHistogramColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetHistogramColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetHistogramColorInput is an input type that accepts OneDashboardPageWidgetHistogramColorArgs and OneDashboardPageWidgetHistogramColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramColorInput` via:
//
//	OneDashboardPageWidgetHistogramColorArgs{...}
type OneDashboardPageWidgetHistogramColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramColorOutput() OneDashboardPageWidgetHistogramColorOutput
	ToOneDashboardPageWidgetHistogramColorOutputWithContext(context.Context) OneDashboardPageWidgetHistogramColorOutput
}

type OneDashboardPageWidgetHistogramColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetHistogramColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetHistogramColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramColorArgs) ToOneDashboardPageWidgetHistogramColorOutput() OneDashboardPageWidgetHistogramColorOutput {
	return i.ToOneDashboardPageWidgetHistogramColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramColorArgs) ToOneDashboardPageWidgetHistogramColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramColorOutput)
}

// OneDashboardPageWidgetHistogramColorArrayInput is an input type that accepts OneDashboardPageWidgetHistogramColorArray and OneDashboardPageWidgetHistogramColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramColorArrayInput` via:
//
//	OneDashboardPageWidgetHistogramColorArray{ OneDashboardPageWidgetHistogramColorArgs{...} }
type OneDashboardPageWidgetHistogramColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramColorArrayOutput() OneDashboardPageWidgetHistogramColorArrayOutput
	ToOneDashboardPageWidgetHistogramColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramColorArrayOutput
}

type OneDashboardPageWidgetHistogramColorArray []OneDashboardPageWidgetHistogramColorInput

func (OneDashboardPageWidgetHistogramColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramColorArray) ToOneDashboardPageWidgetHistogramColorArrayOutput() OneDashboardPageWidgetHistogramColorArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramColorArray) ToOneDashboardPageWidgetHistogramColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramColorArrayOutput)
}

type OneDashboardPageWidgetHistogramColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramColorOutput) ToOneDashboardPageWidgetHistogramColorOutput() OneDashboardPageWidgetHistogramColorOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramColorOutput) ToOneDashboardPageWidgetHistogramColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetHistogramColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetHistogramColorOutput) SeriesOverrides() OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramColor) []OneDashboardPageWidgetHistogramColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHistogramColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramColorArrayOutput) ToOneDashboardPageWidgetHistogramColorArrayOutput() OneDashboardPageWidgetHistogramColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramColorArrayOutput) ToOneDashboardPageWidgetHistogramColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramColor {
		return vs[0].([]OneDashboardPageWidgetHistogramColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramColorOutput)
}

type OneDashboardPageWidgetHistogramColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetHistogramColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetHistogramColorSeriesOverrideArgs and OneDashboardPageWidgetHistogramColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetHistogramColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetHistogramColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutput() OneDashboardPageWidgetHistogramColorSeriesOverrideOutput
	ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetHistogramColorSeriesOverrideOutput
}

type OneDashboardPageWidgetHistogramColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetHistogramColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramColorSeriesOverrideArgs) ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutput() OneDashboardPageWidgetHistogramColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramColorSeriesOverrideArgs) ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetHistogramColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetHistogramColorSeriesOverrideArray and OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetHistogramColorSeriesOverrideArray{ OneDashboardPageWidgetHistogramColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetHistogramColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetHistogramColorSeriesOverrideArray []OneDashboardPageWidgetHistogramColorSeriesOverrideInput

func (OneDashboardPageWidgetHistogramColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramColorSeriesOverrideArray) ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramColorSeriesOverrideArray) ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHistogramColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramColorSeriesOverrideOutput) ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutput() OneDashboardPageWidgetHistogramColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramColorSeriesOverrideOutput) ToOneDashboardPageWidgetHistogramColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetHistogramColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetHistogramColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetHistogramColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetHistogramDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetHistogramDataFormatInput is an input type that accepts OneDashboardPageWidgetHistogramDataFormatArgs and OneDashboardPageWidgetHistogramDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramDataFormatInput` via:
//
//	OneDashboardPageWidgetHistogramDataFormatArgs{...}
type OneDashboardPageWidgetHistogramDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramDataFormatOutput() OneDashboardPageWidgetHistogramDataFormatOutput
	ToOneDashboardPageWidgetHistogramDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetHistogramDataFormatOutput
}

type OneDashboardPageWidgetHistogramDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetHistogramDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramDataFormatArgs) ToOneDashboardPageWidgetHistogramDataFormatOutput() OneDashboardPageWidgetHistogramDataFormatOutput {
	return i.ToOneDashboardPageWidgetHistogramDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramDataFormatArgs) ToOneDashboardPageWidgetHistogramDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramDataFormatOutput)
}

// OneDashboardPageWidgetHistogramDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetHistogramDataFormatArray and OneDashboardPageWidgetHistogramDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetHistogramDataFormatArray{ OneDashboardPageWidgetHistogramDataFormatArgs{...} }
type OneDashboardPageWidgetHistogramDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramDataFormatArrayOutput() OneDashboardPageWidgetHistogramDataFormatArrayOutput
	ToOneDashboardPageWidgetHistogramDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramDataFormatArrayOutput
}

type OneDashboardPageWidgetHistogramDataFormatArray []OneDashboardPageWidgetHistogramDataFormatInput

func (OneDashboardPageWidgetHistogramDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramDataFormatArray) ToOneDashboardPageWidgetHistogramDataFormatArrayOutput() OneDashboardPageWidgetHistogramDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramDataFormatArray) ToOneDashboardPageWidgetHistogramDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramDataFormatArrayOutput)
}

type OneDashboardPageWidgetHistogramDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramDataFormatOutput) ToOneDashboardPageWidgetHistogramDataFormatOutput() OneDashboardPageWidgetHistogramDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramDataFormatOutput) ToOneDashboardPageWidgetHistogramDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetHistogramDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetHistogramDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetHistogramDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetHistogramDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetHistogramDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramDataFormatArrayOutput) ToOneDashboardPageWidgetHistogramDataFormatArrayOutput() OneDashboardPageWidgetHistogramDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramDataFormatArrayOutput) ToOneDashboardPageWidgetHistogramDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramDataFormat {
		return vs[0].([]OneDashboardPageWidgetHistogramDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramDataFormatOutput)
}

type OneDashboardPageWidgetHistogramInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetHistogramInitialSortingInput is an input type that accepts OneDashboardPageWidgetHistogramInitialSortingArgs and OneDashboardPageWidgetHistogramInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramInitialSortingInput` via:
//
//	OneDashboardPageWidgetHistogramInitialSortingArgs{...}
type OneDashboardPageWidgetHistogramInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramInitialSortingOutput() OneDashboardPageWidgetHistogramInitialSortingOutput
	ToOneDashboardPageWidgetHistogramInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetHistogramInitialSortingOutput
}

type OneDashboardPageWidgetHistogramInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetHistogramInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramInitialSortingArgs) ToOneDashboardPageWidgetHistogramInitialSortingOutput() OneDashboardPageWidgetHistogramInitialSortingOutput {
	return i.ToOneDashboardPageWidgetHistogramInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramInitialSortingArgs) ToOneDashboardPageWidgetHistogramInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramInitialSortingOutput)
}

func (i OneDashboardPageWidgetHistogramInitialSortingArgs) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutput() OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramInitialSortingArgs) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramInitialSortingOutput).ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetHistogramInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetHistogramInitialSortingArgs, OneDashboardPageWidgetHistogramInitialSortingPtr and OneDashboardPageWidgetHistogramInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetHistogramInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetHistogramInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramInitialSortingPtrOutput() OneDashboardPageWidgetHistogramInitialSortingPtrOutput
	ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetHistogramInitialSortingPtrOutput
}

type oneDashboardPageWidgetHistogramInitialSortingPtrType OneDashboardPageWidgetHistogramInitialSortingArgs

func OneDashboardPageWidgetHistogramInitialSortingPtr(v *OneDashboardPageWidgetHistogramInitialSortingArgs) OneDashboardPageWidgetHistogramInitialSortingPtrInput {
	return (*oneDashboardPageWidgetHistogramInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetHistogramInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetHistogramInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetHistogramInitialSortingPtrType) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutput() OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetHistogramInitialSortingPtrType) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramInitialSortingPtrOutput)
}

type OneDashboardPageWidgetHistogramInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramInitialSortingOutput) ToOneDashboardPageWidgetHistogramInitialSortingOutput() OneDashboardPageWidgetHistogramInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramInitialSortingOutput) ToOneDashboardPageWidgetHistogramInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramInitialSortingOutput) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutput() OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetHistogramInitialSortingOutput) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetHistogramInitialSorting) *OneDashboardPageWidgetHistogramInitialSorting {
		return &v
	}).(OneDashboardPageWidgetHistogramInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetHistogramInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetHistogramInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetHistogramInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetHistogramInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramInitialSortingPtrOutput) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutput() OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramInitialSortingPtrOutput) ToOneDashboardPageWidgetHistogramInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramInitialSortingPtrOutput) Elem() OneDashboardPageWidgetHistogramInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetHistogramInitialSorting) OneDashboardPageWidgetHistogramInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetHistogramInitialSorting
		return ret
	}).(OneDashboardPageWidgetHistogramInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetHistogramInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetHistogramInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetHistogramInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetHistogramInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHistogramNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetHistogramNrqlQueryInput is an input type that accepts OneDashboardPageWidgetHistogramNrqlQueryArgs and OneDashboardPageWidgetHistogramNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramNrqlQueryInput` via:
//
//	OneDashboardPageWidgetHistogramNrqlQueryArgs{...}
type OneDashboardPageWidgetHistogramNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramNrqlQueryOutput() OneDashboardPageWidgetHistogramNrqlQueryOutput
	ToOneDashboardPageWidgetHistogramNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetHistogramNrqlQueryOutput
}

type OneDashboardPageWidgetHistogramNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetHistogramNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramNrqlQueryArgs) ToOneDashboardPageWidgetHistogramNrqlQueryOutput() OneDashboardPageWidgetHistogramNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetHistogramNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramNrqlQueryArgs) ToOneDashboardPageWidgetHistogramNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramNrqlQueryOutput)
}

// OneDashboardPageWidgetHistogramNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetHistogramNrqlQueryArray and OneDashboardPageWidgetHistogramNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetHistogramNrqlQueryArray{ OneDashboardPageWidgetHistogramNrqlQueryArgs{...} }
type OneDashboardPageWidgetHistogramNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutput() OneDashboardPageWidgetHistogramNrqlQueryArrayOutput
	ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramNrqlQueryArrayOutput
}

type OneDashboardPageWidgetHistogramNrqlQueryArray []OneDashboardPageWidgetHistogramNrqlQueryInput

func (OneDashboardPageWidgetHistogramNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramNrqlQueryArray) ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutput() OneDashboardPageWidgetHistogramNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramNrqlQueryArray) ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetHistogramNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramNrqlQueryOutput) ToOneDashboardPageWidgetHistogramNrqlQueryOutput() OneDashboardPageWidgetHistogramNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNrqlQueryOutput) ToOneDashboardPageWidgetHistogramNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetHistogramNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetHistogramNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetHistogramNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramNrqlQueryArrayOutput) ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutput() OneDashboardPageWidgetHistogramNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNrqlQueryArrayOutput) ToOneDashboardPageWidgetHistogramNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetHistogramNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramNrqlQueryOutput)
}

type OneDashboardPageWidgetHistogramNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetHistogramNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetHistogramNullValueInput is an input type that accepts OneDashboardPageWidgetHistogramNullValueArgs and OneDashboardPageWidgetHistogramNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramNullValueInput` via:
//
//	OneDashboardPageWidgetHistogramNullValueArgs{...}
type OneDashboardPageWidgetHistogramNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramNullValueOutput() OneDashboardPageWidgetHistogramNullValueOutput
	ToOneDashboardPageWidgetHistogramNullValueOutputWithContext(context.Context) OneDashboardPageWidgetHistogramNullValueOutput
}

type OneDashboardPageWidgetHistogramNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetHistogramNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramNullValueArgs) ToOneDashboardPageWidgetHistogramNullValueOutput() OneDashboardPageWidgetHistogramNullValueOutput {
	return i.ToOneDashboardPageWidgetHistogramNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramNullValueArgs) ToOneDashboardPageWidgetHistogramNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramNullValueOutput)
}

// OneDashboardPageWidgetHistogramNullValueArrayInput is an input type that accepts OneDashboardPageWidgetHistogramNullValueArray and OneDashboardPageWidgetHistogramNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramNullValueArrayInput` via:
//
//	OneDashboardPageWidgetHistogramNullValueArray{ OneDashboardPageWidgetHistogramNullValueArgs{...} }
type OneDashboardPageWidgetHistogramNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramNullValueArrayOutput() OneDashboardPageWidgetHistogramNullValueArrayOutput
	ToOneDashboardPageWidgetHistogramNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramNullValueArrayOutput
}

type OneDashboardPageWidgetHistogramNullValueArray []OneDashboardPageWidgetHistogramNullValueInput

func (OneDashboardPageWidgetHistogramNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramNullValueArray) ToOneDashboardPageWidgetHistogramNullValueArrayOutput() OneDashboardPageWidgetHistogramNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramNullValueArray) ToOneDashboardPageWidgetHistogramNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramNullValueArrayOutput)
}

type OneDashboardPageWidgetHistogramNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramNullValueOutput) ToOneDashboardPageWidgetHistogramNullValueOutput() OneDashboardPageWidgetHistogramNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNullValueOutput) ToOneDashboardPageWidgetHistogramNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetHistogramNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetHistogramNullValueOutput) SeriesOverrides() OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramNullValue) []OneDashboardPageWidgetHistogramNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHistogramNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramNullValueArrayOutput) ToOneDashboardPageWidgetHistogramNullValueArrayOutput() OneDashboardPageWidgetHistogramNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNullValueArrayOutput) ToOneDashboardPageWidgetHistogramNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramNullValue {
		return vs[0].([]OneDashboardPageWidgetHistogramNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramNullValueOutput)
}

type OneDashboardPageWidgetHistogramNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetHistogramNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs and OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetHistogramNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput() OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput() OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray and OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray{ OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray []OneDashboardPageWidgetHistogramNullValueSeriesOverrideInput

func (OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput() OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetHistogramNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetHistogramUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetHistogramUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetHistogramUnitInput is an input type that accepts OneDashboardPageWidgetHistogramUnitArgs and OneDashboardPageWidgetHistogramUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramUnitInput` via:
//
//	OneDashboardPageWidgetHistogramUnitArgs{...}
type OneDashboardPageWidgetHistogramUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramUnitOutput() OneDashboardPageWidgetHistogramUnitOutput
	ToOneDashboardPageWidgetHistogramUnitOutputWithContext(context.Context) OneDashboardPageWidgetHistogramUnitOutput
}

type OneDashboardPageWidgetHistogramUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetHistogramUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramUnitArgs) ToOneDashboardPageWidgetHistogramUnitOutput() OneDashboardPageWidgetHistogramUnitOutput {
	return i.ToOneDashboardPageWidgetHistogramUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramUnitArgs) ToOneDashboardPageWidgetHistogramUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramUnitOutput)
}

// OneDashboardPageWidgetHistogramUnitArrayInput is an input type that accepts OneDashboardPageWidgetHistogramUnitArray and OneDashboardPageWidgetHistogramUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramUnitArrayInput` via:
//
//	OneDashboardPageWidgetHistogramUnitArray{ OneDashboardPageWidgetHistogramUnitArgs{...} }
type OneDashboardPageWidgetHistogramUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramUnitArrayOutput() OneDashboardPageWidgetHistogramUnitArrayOutput
	ToOneDashboardPageWidgetHistogramUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramUnitArrayOutput
}

type OneDashboardPageWidgetHistogramUnitArray []OneDashboardPageWidgetHistogramUnitInput

func (OneDashboardPageWidgetHistogramUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramUnitArray) ToOneDashboardPageWidgetHistogramUnitArrayOutput() OneDashboardPageWidgetHistogramUnitArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramUnitArray) ToOneDashboardPageWidgetHistogramUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramUnitArrayOutput)
}

type OneDashboardPageWidgetHistogramUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramUnitOutput) ToOneDashboardPageWidgetHistogramUnitOutput() OneDashboardPageWidgetHistogramUnitOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramUnitOutput) ToOneDashboardPageWidgetHistogramUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetHistogramUnitOutput) SeriesOverrides() OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramUnit) []OneDashboardPageWidgetHistogramUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetHistogramUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHistogramUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramUnitArrayOutput) ToOneDashboardPageWidgetHistogramUnitArrayOutput() OneDashboardPageWidgetHistogramUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramUnitArrayOutput) ToOneDashboardPageWidgetHistogramUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramUnit {
		return vs[0].([]OneDashboardPageWidgetHistogramUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramUnitOutput)
}

type OneDashboardPageWidgetHistogramUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetHistogramUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs and OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetHistogramUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutput() OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutput() OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetHistogramUnitSeriesOverrideArray and OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetHistogramUnitSeriesOverrideArray{ OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetHistogramUnitSeriesOverrideArray []OneDashboardPageWidgetHistogramUnitSeriesOverrideInput

func (OneDashboardPageWidgetHistogramUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetHistogramUnitSeriesOverrideArray) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetHistogramUnitSeriesOverrideArray) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetHistogramUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutput() OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetHistogramUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetHistogramUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetHistogramUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetHistogramUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetJson struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetJsonColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetJsonDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetJsonInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetJsonNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetJsonNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetJsonUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetJsonInput is an input type that accepts OneDashboardPageWidgetJsonArgs and OneDashboardPageWidgetJsonOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonInput` via:
//
//	OneDashboardPageWidgetJsonArgs{...}
type OneDashboardPageWidgetJsonInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonOutput() OneDashboardPageWidgetJsonOutput
	ToOneDashboardPageWidgetJsonOutputWithContext(context.Context) OneDashboardPageWidgetJsonOutput
}

type OneDashboardPageWidgetJsonArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetJsonColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetJsonDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetJsonInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetJsonNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetJsonNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetJsonUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJson)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonArgs) ToOneDashboardPageWidgetJsonOutput() OneDashboardPageWidgetJsonOutput {
	return i.ToOneDashboardPageWidgetJsonOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonArgs) ToOneDashboardPageWidgetJsonOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonOutput)
}

// OneDashboardPageWidgetJsonArrayInput is an input type that accepts OneDashboardPageWidgetJsonArray and OneDashboardPageWidgetJsonArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonArrayInput` via:
//
//	OneDashboardPageWidgetJsonArray{ OneDashboardPageWidgetJsonArgs{...} }
type OneDashboardPageWidgetJsonArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonArrayOutput() OneDashboardPageWidgetJsonArrayOutput
	ToOneDashboardPageWidgetJsonArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonArrayOutput
}

type OneDashboardPageWidgetJsonArray []OneDashboardPageWidgetJsonInput

func (OneDashboardPageWidgetJsonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJson)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonArray) ToOneDashboardPageWidgetJsonArrayOutput() OneDashboardPageWidgetJsonArrayOutput {
	return i.ToOneDashboardPageWidgetJsonArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonArray) ToOneDashboardPageWidgetJsonArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonArrayOutput)
}

type OneDashboardPageWidgetJsonOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJson)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonOutput) ToOneDashboardPageWidgetJsonOutput() OneDashboardPageWidgetJsonOutput {
	return o
}

func (o OneDashboardPageWidgetJsonOutput) ToOneDashboardPageWidgetJsonOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetJsonOutput) Colors() OneDashboardPageWidgetJsonColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) []OneDashboardPageWidgetJsonColor { return v.Colors }).(OneDashboardPageWidgetJsonColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetJsonOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetJsonOutput) DataFormats() OneDashboardPageWidgetJsonDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) []OneDashboardPageWidgetJsonDataFormat { return v.DataFormats }).(OneDashboardPageWidgetJsonDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetJsonOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetJsonOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetJsonOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetJsonOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetJsonOutput) InitialSorting() OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *OneDashboardPageWidgetJsonInitialSorting { return v.InitialSorting }).(OneDashboardPageWidgetJsonInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetJsonOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetJsonOutput) NrqlQueries() OneDashboardPageWidgetJsonNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) []OneDashboardPageWidgetJsonNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetJsonNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetJsonOutput) NullValues() OneDashboardPageWidgetJsonNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) []OneDashboardPageWidgetJsonNullValue { return v.NullValues }).(OneDashboardPageWidgetJsonNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetJsonOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetJsonOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetJsonOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetJsonOutput) Units() OneDashboardPageWidgetJsonUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) []OneDashboardPageWidgetJsonUnit { return v.Units }).(OneDashboardPageWidgetJsonUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetJsonOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetJsonOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetJsonOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJson) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetJsonArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJson)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonArrayOutput) ToOneDashboardPageWidgetJsonArrayOutput() OneDashboardPageWidgetJsonArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonArrayOutput) ToOneDashboardPageWidgetJsonArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJson {
		return vs[0].([]OneDashboardPageWidgetJson)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonOutput)
}

type OneDashboardPageWidgetJsonColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetJsonColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetJsonColorInput is an input type that accepts OneDashboardPageWidgetJsonColorArgs and OneDashboardPageWidgetJsonColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonColorInput` via:
//
//	OneDashboardPageWidgetJsonColorArgs{...}
type OneDashboardPageWidgetJsonColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonColorOutput() OneDashboardPageWidgetJsonColorOutput
	ToOneDashboardPageWidgetJsonColorOutputWithContext(context.Context) OneDashboardPageWidgetJsonColorOutput
}

type OneDashboardPageWidgetJsonColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetJsonColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetJsonColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonColorArgs) ToOneDashboardPageWidgetJsonColorOutput() OneDashboardPageWidgetJsonColorOutput {
	return i.ToOneDashboardPageWidgetJsonColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonColorArgs) ToOneDashboardPageWidgetJsonColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonColorOutput)
}

// OneDashboardPageWidgetJsonColorArrayInput is an input type that accepts OneDashboardPageWidgetJsonColorArray and OneDashboardPageWidgetJsonColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonColorArrayInput` via:
//
//	OneDashboardPageWidgetJsonColorArray{ OneDashboardPageWidgetJsonColorArgs{...} }
type OneDashboardPageWidgetJsonColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonColorArrayOutput() OneDashboardPageWidgetJsonColorArrayOutput
	ToOneDashboardPageWidgetJsonColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonColorArrayOutput
}

type OneDashboardPageWidgetJsonColorArray []OneDashboardPageWidgetJsonColorInput

func (OneDashboardPageWidgetJsonColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonColorArray) ToOneDashboardPageWidgetJsonColorArrayOutput() OneDashboardPageWidgetJsonColorArrayOutput {
	return i.ToOneDashboardPageWidgetJsonColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonColorArray) ToOneDashboardPageWidgetJsonColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonColorArrayOutput)
}

type OneDashboardPageWidgetJsonColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonColorOutput) ToOneDashboardPageWidgetJsonColorOutput() OneDashboardPageWidgetJsonColorOutput {
	return o
}

func (o OneDashboardPageWidgetJsonColorOutput) ToOneDashboardPageWidgetJsonColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetJsonColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetJsonColorOutput) SeriesOverrides() OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonColor) []OneDashboardPageWidgetJsonColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetJsonColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonColorArrayOutput) ToOneDashboardPageWidgetJsonColorArrayOutput() OneDashboardPageWidgetJsonColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonColorArrayOutput) ToOneDashboardPageWidgetJsonColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonColor {
		return vs[0].([]OneDashboardPageWidgetJsonColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonColorOutput)
}

type OneDashboardPageWidgetJsonColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetJsonColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetJsonColorSeriesOverrideArgs and OneDashboardPageWidgetJsonColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetJsonColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetJsonColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonColorSeriesOverrideOutput() OneDashboardPageWidgetJsonColorSeriesOverrideOutput
	ToOneDashboardPageWidgetJsonColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetJsonColorSeriesOverrideOutput
}

type OneDashboardPageWidgetJsonColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetJsonColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonColorSeriesOverrideArgs) ToOneDashboardPageWidgetJsonColorSeriesOverrideOutput() OneDashboardPageWidgetJsonColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetJsonColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonColorSeriesOverrideArgs) ToOneDashboardPageWidgetJsonColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetJsonColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetJsonColorSeriesOverrideArray and OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetJsonColorSeriesOverrideArray{ OneDashboardPageWidgetJsonColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetJsonColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetJsonColorSeriesOverrideArray []OneDashboardPageWidgetJsonColorSeriesOverrideInput

func (OneDashboardPageWidgetJsonColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonColorSeriesOverrideArray) ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonColorSeriesOverrideArray) ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetJsonColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonColorSeriesOverrideOutput) ToOneDashboardPageWidgetJsonColorSeriesOverrideOutput() OneDashboardPageWidgetJsonColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetJsonColorSeriesOverrideOutput) ToOneDashboardPageWidgetJsonColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetJsonColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetJsonColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetJsonColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetJsonColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetJsonDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetJsonDataFormatInput is an input type that accepts OneDashboardPageWidgetJsonDataFormatArgs and OneDashboardPageWidgetJsonDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonDataFormatInput` via:
//
//	OneDashboardPageWidgetJsonDataFormatArgs{...}
type OneDashboardPageWidgetJsonDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonDataFormatOutput() OneDashboardPageWidgetJsonDataFormatOutput
	ToOneDashboardPageWidgetJsonDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetJsonDataFormatOutput
}

type OneDashboardPageWidgetJsonDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetJsonDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonDataFormatArgs) ToOneDashboardPageWidgetJsonDataFormatOutput() OneDashboardPageWidgetJsonDataFormatOutput {
	return i.ToOneDashboardPageWidgetJsonDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonDataFormatArgs) ToOneDashboardPageWidgetJsonDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonDataFormatOutput)
}

// OneDashboardPageWidgetJsonDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetJsonDataFormatArray and OneDashboardPageWidgetJsonDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetJsonDataFormatArray{ OneDashboardPageWidgetJsonDataFormatArgs{...} }
type OneDashboardPageWidgetJsonDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonDataFormatArrayOutput() OneDashboardPageWidgetJsonDataFormatArrayOutput
	ToOneDashboardPageWidgetJsonDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonDataFormatArrayOutput
}

type OneDashboardPageWidgetJsonDataFormatArray []OneDashboardPageWidgetJsonDataFormatInput

func (OneDashboardPageWidgetJsonDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonDataFormatArray) ToOneDashboardPageWidgetJsonDataFormatArrayOutput() OneDashboardPageWidgetJsonDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetJsonDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonDataFormatArray) ToOneDashboardPageWidgetJsonDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonDataFormatArrayOutput)
}

type OneDashboardPageWidgetJsonDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonDataFormatOutput) ToOneDashboardPageWidgetJsonDataFormatOutput() OneDashboardPageWidgetJsonDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetJsonDataFormatOutput) ToOneDashboardPageWidgetJsonDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetJsonDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetJsonDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetJsonDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetJsonDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetJsonDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonDataFormatArrayOutput) ToOneDashboardPageWidgetJsonDataFormatArrayOutput() OneDashboardPageWidgetJsonDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonDataFormatArrayOutput) ToOneDashboardPageWidgetJsonDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonDataFormat {
		return vs[0].([]OneDashboardPageWidgetJsonDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonDataFormatOutput)
}

type OneDashboardPageWidgetJsonInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetJsonInitialSortingInput is an input type that accepts OneDashboardPageWidgetJsonInitialSortingArgs and OneDashboardPageWidgetJsonInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonInitialSortingInput` via:
//
//	OneDashboardPageWidgetJsonInitialSortingArgs{...}
type OneDashboardPageWidgetJsonInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonInitialSortingOutput() OneDashboardPageWidgetJsonInitialSortingOutput
	ToOneDashboardPageWidgetJsonInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetJsonInitialSortingOutput
}

type OneDashboardPageWidgetJsonInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetJsonInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonInitialSortingArgs) ToOneDashboardPageWidgetJsonInitialSortingOutput() OneDashboardPageWidgetJsonInitialSortingOutput {
	return i.ToOneDashboardPageWidgetJsonInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonInitialSortingArgs) ToOneDashboardPageWidgetJsonInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonInitialSortingOutput)
}

func (i OneDashboardPageWidgetJsonInitialSortingArgs) ToOneDashboardPageWidgetJsonInitialSortingPtrOutput() OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonInitialSortingArgs) ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonInitialSortingOutput).ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetJsonInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetJsonInitialSortingArgs, OneDashboardPageWidgetJsonInitialSortingPtr and OneDashboardPageWidgetJsonInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetJsonInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetJsonInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonInitialSortingPtrOutput() OneDashboardPageWidgetJsonInitialSortingPtrOutput
	ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetJsonInitialSortingPtrOutput
}

type oneDashboardPageWidgetJsonInitialSortingPtrType OneDashboardPageWidgetJsonInitialSortingArgs

func OneDashboardPageWidgetJsonInitialSortingPtr(v *OneDashboardPageWidgetJsonInitialSortingArgs) OneDashboardPageWidgetJsonInitialSortingPtrInput {
	return (*oneDashboardPageWidgetJsonInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetJsonInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetJsonInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetJsonInitialSortingPtrType) ToOneDashboardPageWidgetJsonInitialSortingPtrOutput() OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetJsonInitialSortingPtrType) ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonInitialSortingPtrOutput)
}

type OneDashboardPageWidgetJsonInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonInitialSortingOutput) ToOneDashboardPageWidgetJsonInitialSortingOutput() OneDashboardPageWidgetJsonInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetJsonInitialSortingOutput) ToOneDashboardPageWidgetJsonInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetJsonInitialSortingOutput) ToOneDashboardPageWidgetJsonInitialSortingPtrOutput() OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetJsonInitialSortingOutput) ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetJsonInitialSorting) *OneDashboardPageWidgetJsonInitialSorting {
		return &v
	}).(OneDashboardPageWidgetJsonInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetJsonInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetJsonInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetJsonInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetJsonInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonInitialSortingPtrOutput) ToOneDashboardPageWidgetJsonInitialSortingPtrOutput() OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetJsonInitialSortingPtrOutput) ToOneDashboardPageWidgetJsonInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetJsonInitialSortingPtrOutput) Elem() OneDashboardPageWidgetJsonInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetJsonInitialSorting) OneDashboardPageWidgetJsonInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetJsonInitialSorting
		return ret
	}).(OneDashboardPageWidgetJsonInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetJsonInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetJsonInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetJsonInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetJsonInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetJsonNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetJsonNrqlQueryInput is an input type that accepts OneDashboardPageWidgetJsonNrqlQueryArgs and OneDashboardPageWidgetJsonNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonNrqlQueryInput` via:
//
//	OneDashboardPageWidgetJsonNrqlQueryArgs{...}
type OneDashboardPageWidgetJsonNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonNrqlQueryOutput() OneDashboardPageWidgetJsonNrqlQueryOutput
	ToOneDashboardPageWidgetJsonNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetJsonNrqlQueryOutput
}

type OneDashboardPageWidgetJsonNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetJsonNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonNrqlQueryArgs) ToOneDashboardPageWidgetJsonNrqlQueryOutput() OneDashboardPageWidgetJsonNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetJsonNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonNrqlQueryArgs) ToOneDashboardPageWidgetJsonNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonNrqlQueryOutput)
}

// OneDashboardPageWidgetJsonNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetJsonNrqlQueryArray and OneDashboardPageWidgetJsonNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetJsonNrqlQueryArray{ OneDashboardPageWidgetJsonNrqlQueryArgs{...} }
type OneDashboardPageWidgetJsonNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonNrqlQueryArrayOutput() OneDashboardPageWidgetJsonNrqlQueryArrayOutput
	ToOneDashboardPageWidgetJsonNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonNrqlQueryArrayOutput
}

type OneDashboardPageWidgetJsonNrqlQueryArray []OneDashboardPageWidgetJsonNrqlQueryInput

func (OneDashboardPageWidgetJsonNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonNrqlQueryArray) ToOneDashboardPageWidgetJsonNrqlQueryArrayOutput() OneDashboardPageWidgetJsonNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetJsonNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonNrqlQueryArray) ToOneDashboardPageWidgetJsonNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetJsonNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonNrqlQueryOutput) ToOneDashboardPageWidgetJsonNrqlQueryOutput() OneDashboardPageWidgetJsonNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNrqlQueryOutput) ToOneDashboardPageWidgetJsonNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetJsonNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetJsonNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetJsonNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonNrqlQueryArrayOutput) ToOneDashboardPageWidgetJsonNrqlQueryArrayOutput() OneDashboardPageWidgetJsonNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNrqlQueryArrayOutput) ToOneDashboardPageWidgetJsonNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetJsonNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonNrqlQueryOutput)
}

type OneDashboardPageWidgetJsonNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetJsonNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetJsonNullValueInput is an input type that accepts OneDashboardPageWidgetJsonNullValueArgs and OneDashboardPageWidgetJsonNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonNullValueInput` via:
//
//	OneDashboardPageWidgetJsonNullValueArgs{...}
type OneDashboardPageWidgetJsonNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonNullValueOutput() OneDashboardPageWidgetJsonNullValueOutput
	ToOneDashboardPageWidgetJsonNullValueOutputWithContext(context.Context) OneDashboardPageWidgetJsonNullValueOutput
}

type OneDashboardPageWidgetJsonNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetJsonNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonNullValueArgs) ToOneDashboardPageWidgetJsonNullValueOutput() OneDashboardPageWidgetJsonNullValueOutput {
	return i.ToOneDashboardPageWidgetJsonNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonNullValueArgs) ToOneDashboardPageWidgetJsonNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonNullValueOutput)
}

// OneDashboardPageWidgetJsonNullValueArrayInput is an input type that accepts OneDashboardPageWidgetJsonNullValueArray and OneDashboardPageWidgetJsonNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonNullValueArrayInput` via:
//
//	OneDashboardPageWidgetJsonNullValueArray{ OneDashboardPageWidgetJsonNullValueArgs{...} }
type OneDashboardPageWidgetJsonNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonNullValueArrayOutput() OneDashboardPageWidgetJsonNullValueArrayOutput
	ToOneDashboardPageWidgetJsonNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonNullValueArrayOutput
}

type OneDashboardPageWidgetJsonNullValueArray []OneDashboardPageWidgetJsonNullValueInput

func (OneDashboardPageWidgetJsonNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonNullValueArray) ToOneDashboardPageWidgetJsonNullValueArrayOutput() OneDashboardPageWidgetJsonNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetJsonNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonNullValueArray) ToOneDashboardPageWidgetJsonNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonNullValueArrayOutput)
}

type OneDashboardPageWidgetJsonNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonNullValueOutput) ToOneDashboardPageWidgetJsonNullValueOutput() OneDashboardPageWidgetJsonNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNullValueOutput) ToOneDashboardPageWidgetJsonNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetJsonNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetJsonNullValueOutput) SeriesOverrides() OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonNullValue) []OneDashboardPageWidgetJsonNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetJsonNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonNullValueArrayOutput) ToOneDashboardPageWidgetJsonNullValueArrayOutput() OneDashboardPageWidgetJsonNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNullValueArrayOutput) ToOneDashboardPageWidgetJsonNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonNullValue {
		return vs[0].([]OneDashboardPageWidgetJsonNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonNullValueOutput)
}

type OneDashboardPageWidgetJsonNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetJsonNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs and OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetJsonNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutput() OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutput() OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetJsonNullValueSeriesOverrideArray and OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetJsonNullValueSeriesOverrideArray{ OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetJsonNullValueSeriesOverrideArray []OneDashboardPageWidgetJsonNullValueSeriesOverrideInput

func (OneDashboardPageWidgetJsonNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonNullValueSeriesOverrideArray) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonNullValueSeriesOverrideArray) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutput() OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetJsonNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetJsonUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetJsonUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetJsonUnitInput is an input type that accepts OneDashboardPageWidgetJsonUnitArgs and OneDashboardPageWidgetJsonUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonUnitInput` via:
//
//	OneDashboardPageWidgetJsonUnitArgs{...}
type OneDashboardPageWidgetJsonUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonUnitOutput() OneDashboardPageWidgetJsonUnitOutput
	ToOneDashboardPageWidgetJsonUnitOutputWithContext(context.Context) OneDashboardPageWidgetJsonUnitOutput
}

type OneDashboardPageWidgetJsonUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetJsonUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetJsonUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonUnitArgs) ToOneDashboardPageWidgetJsonUnitOutput() OneDashboardPageWidgetJsonUnitOutput {
	return i.ToOneDashboardPageWidgetJsonUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonUnitArgs) ToOneDashboardPageWidgetJsonUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonUnitOutput)
}

// OneDashboardPageWidgetJsonUnitArrayInput is an input type that accepts OneDashboardPageWidgetJsonUnitArray and OneDashboardPageWidgetJsonUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonUnitArrayInput` via:
//
//	OneDashboardPageWidgetJsonUnitArray{ OneDashboardPageWidgetJsonUnitArgs{...} }
type OneDashboardPageWidgetJsonUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonUnitArrayOutput() OneDashboardPageWidgetJsonUnitArrayOutput
	ToOneDashboardPageWidgetJsonUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonUnitArrayOutput
}

type OneDashboardPageWidgetJsonUnitArray []OneDashboardPageWidgetJsonUnitInput

func (OneDashboardPageWidgetJsonUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonUnitArray) ToOneDashboardPageWidgetJsonUnitArrayOutput() OneDashboardPageWidgetJsonUnitArrayOutput {
	return i.ToOneDashboardPageWidgetJsonUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonUnitArray) ToOneDashboardPageWidgetJsonUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonUnitArrayOutput)
}

type OneDashboardPageWidgetJsonUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonUnitOutput) ToOneDashboardPageWidgetJsonUnitOutput() OneDashboardPageWidgetJsonUnitOutput {
	return o
}

func (o OneDashboardPageWidgetJsonUnitOutput) ToOneDashboardPageWidgetJsonUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetJsonUnitOutput) SeriesOverrides() OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonUnit) []OneDashboardPageWidgetJsonUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetJsonUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetJsonUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonUnitArrayOutput) ToOneDashboardPageWidgetJsonUnitArrayOutput() OneDashboardPageWidgetJsonUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonUnitArrayOutput) ToOneDashboardPageWidgetJsonUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonUnit {
		return vs[0].([]OneDashboardPageWidgetJsonUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonUnitOutput)
}

type OneDashboardPageWidgetJsonUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetJsonUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetJsonUnitSeriesOverrideArgs and OneDashboardPageWidgetJsonUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetJsonUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetJsonUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutput() OneDashboardPageWidgetJsonUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetJsonUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetJsonUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetJsonUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonUnitSeriesOverrideArgs) ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutput() OneDashboardPageWidgetJsonUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonUnitSeriesOverrideArgs) ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetJsonUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetJsonUnitSeriesOverrideArray and OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetJsonUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetJsonUnitSeriesOverrideArray{ OneDashboardPageWidgetJsonUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetJsonUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetJsonUnitSeriesOverrideArray []OneDashboardPageWidgetJsonUnitSeriesOverrideInput

func (OneDashboardPageWidgetJsonUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetJsonUnitSeriesOverrideArray) ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetJsonUnitSeriesOverrideArray) ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetJsonUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetJsonUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonUnitSeriesOverrideOutput) ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutput() OneDashboardPageWidgetJsonUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetJsonUnitSeriesOverrideOutput) ToOneDashboardPageWidgetJsonUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetJsonUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetJsonUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetJsonUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetJsonUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetJsonUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetJsonUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetJsonUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetJsonUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetLine struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetLineColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetLineDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetLineInitialSorting `pulumi:"initialSorting"`
	// (Optional) A boolean value, which when true, sets the label to be visibly displayed within thresholds. In other words, if this attribute is set to true, the _label always visible_ toggle in the _Thresholds_ section in the settings of the widget is enabled.
	IsLabelVisible *bool `pulumi:"isLabelVisible"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetLineNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetLineNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a table widget. The `threshold` attribute requires specifying the following attributes in a nested block -
	Thresholds []OneDashboardPageWidgetLineThreshold `pulumi:"thresholds"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetLineUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
	// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisLeftMin` (or 0 if it is not defined) to `yAxisLeftMax`. Use `yAxisLeftZero = true` with a combination of `yAxisLeftMin` and `yAxisLeftMax` to render values from 0 or the specified minimum to the maximum, and `yAxisLeftZero = false` to fit the graph to scale.
	YAxisLeftZero *bool `pulumi:"yAxisLeftZero"`
	// (Optional) An attribute which helps specify the configuration of the Y-Axis displayed on the right side of the line widget. This is a nested block, which includes the following attributes:
	YAxisRight *OneDashboardPageWidgetLineYAxisRight `pulumi:"yAxisRight"`
}

// OneDashboardPageWidgetLineInput is an input type that accepts OneDashboardPageWidgetLineArgs and OneDashboardPageWidgetLineOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineInput` via:
//
//	OneDashboardPageWidgetLineArgs{...}
type OneDashboardPageWidgetLineInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineOutput() OneDashboardPageWidgetLineOutput
	ToOneDashboardPageWidgetLineOutputWithContext(context.Context) OneDashboardPageWidgetLineOutput
}

type OneDashboardPageWidgetLineArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetLineColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetLineDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetLineInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) A boolean value, which when true, sets the label to be visibly displayed within thresholds. In other words, if this attribute is set to true, the _label always visible_ toggle in the _Thresholds_ section in the settings of the widget is enabled.
	IsLabelVisible pulumi.BoolPtrInput `pulumi:"isLabelVisible"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetLineNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetLineNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a table widget. The `threshold` attribute requires specifying the following attributes in a nested block -
	Thresholds OneDashboardPageWidgetLineThresholdArrayInput `pulumi:"thresholds"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetLineUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
	// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisLeftMin` (or 0 if it is not defined) to `yAxisLeftMax`. Use `yAxisLeftZero = true` with a combination of `yAxisLeftMin` and `yAxisLeftMax` to render values from 0 or the specified minimum to the maximum, and `yAxisLeftZero = false` to fit the graph to scale.
	YAxisLeftZero pulumi.BoolPtrInput `pulumi:"yAxisLeftZero"`
	// (Optional) An attribute which helps specify the configuration of the Y-Axis displayed on the right side of the line widget. This is a nested block, which includes the following attributes:
	YAxisRight OneDashboardPageWidgetLineYAxisRightPtrInput `pulumi:"yAxisRight"`
}

func (OneDashboardPageWidgetLineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLine)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineArgs) ToOneDashboardPageWidgetLineOutput() OneDashboardPageWidgetLineOutput {
	return i.ToOneDashboardPageWidgetLineOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineArgs) ToOneDashboardPageWidgetLineOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineOutput)
}

// OneDashboardPageWidgetLineArrayInput is an input type that accepts OneDashboardPageWidgetLineArray and OneDashboardPageWidgetLineArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineArrayInput` via:
//
//	OneDashboardPageWidgetLineArray{ OneDashboardPageWidgetLineArgs{...} }
type OneDashboardPageWidgetLineArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineArrayOutput() OneDashboardPageWidgetLineArrayOutput
	ToOneDashboardPageWidgetLineArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineArrayOutput
}

type OneDashboardPageWidgetLineArray []OneDashboardPageWidgetLineInput

func (OneDashboardPageWidgetLineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLine)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineArray) ToOneDashboardPageWidgetLineArrayOutput() OneDashboardPageWidgetLineArrayOutput {
	return i.ToOneDashboardPageWidgetLineArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineArray) ToOneDashboardPageWidgetLineArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineArrayOutput)
}

type OneDashboardPageWidgetLineOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLine)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineOutput) ToOneDashboardPageWidgetLineOutput() OneDashboardPageWidgetLineOutput {
	return o
}

func (o OneDashboardPageWidgetLineOutput) ToOneDashboardPageWidgetLineOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetLineOutput) Colors() OneDashboardPageWidgetLineColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) []OneDashboardPageWidgetLineColor { return v.Colors }).(OneDashboardPageWidgetLineColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetLineOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetLineOutput) DataFormats() OneDashboardPageWidgetLineDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) []OneDashboardPageWidgetLineDataFormat { return v.DataFormats }).(OneDashboardPageWidgetLineDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetLineOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetLineOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetLineOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetLineOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetLineOutput) InitialSorting() OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *OneDashboardPageWidgetLineInitialSorting { return v.InitialSorting }).(OneDashboardPageWidgetLineInitialSortingPtrOutput)
}

// (Optional) A boolean value, which when true, sets the label to be visibly displayed within thresholds. In other words, if this attribute is set to true, the _label always visible_ toggle in the _Thresholds_ section in the settings of the widget is enabled.
func (o OneDashboardPageWidgetLineOutput) IsLabelVisible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *bool { return v.IsLabelVisible }).(pulumi.BoolPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetLineOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetLineOutput) NrqlQueries() OneDashboardPageWidgetLineNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) []OneDashboardPageWidgetLineNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetLineNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetLineOutput) NullValues() OneDashboardPageWidgetLineNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) []OneDashboardPageWidgetLineNullValue { return v.NullValues }).(OneDashboardPageWidgetLineNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetLineOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetLineOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a table widget. The `threshold` attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetLineOutput) Thresholds() OneDashboardPageWidgetLineThresholdArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) []OneDashboardPageWidgetLineThreshold { return v.Thresholds }).(OneDashboardPageWidgetLineThresholdArrayOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetLineOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetLineOutput) Units() OneDashboardPageWidgetLineUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) []OneDashboardPageWidgetLineUnit { return v.Units }).(OneDashboardPageWidgetLineUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetLineOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetLineOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetLineOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisLeftMin` (or 0 if it is not defined) to `yAxisLeftMax`. Use `yAxisLeftZero = true` with a combination of `yAxisLeftMin` and `yAxisLeftMax` to render values from 0 or the specified minimum to the maximum, and `yAxisLeftZero = false` to fit the graph to scale.
func (o OneDashboardPageWidgetLineOutput) YAxisLeftZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *bool { return v.YAxisLeftZero }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute which helps specify the configuration of the Y-Axis displayed on the right side of the line widget. This is a nested block, which includes the following attributes:
func (o OneDashboardPageWidgetLineOutput) YAxisRight() OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLine) *OneDashboardPageWidgetLineYAxisRight { return v.YAxisRight }).(OneDashboardPageWidgetLineYAxisRightPtrOutput)
}

type OneDashboardPageWidgetLineArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLine)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineArrayOutput) ToOneDashboardPageWidgetLineArrayOutput() OneDashboardPageWidgetLineArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineArrayOutput) ToOneDashboardPageWidgetLineArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLine {
		return vs[0].([]OneDashboardPageWidgetLine)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineOutput)
}

type OneDashboardPageWidgetLineColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetLineColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetLineColorInput is an input type that accepts OneDashboardPageWidgetLineColorArgs and OneDashboardPageWidgetLineColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineColorInput` via:
//
//	OneDashboardPageWidgetLineColorArgs{...}
type OneDashboardPageWidgetLineColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineColorOutput() OneDashboardPageWidgetLineColorOutput
	ToOneDashboardPageWidgetLineColorOutputWithContext(context.Context) OneDashboardPageWidgetLineColorOutput
}

type OneDashboardPageWidgetLineColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetLineColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetLineColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineColorArgs) ToOneDashboardPageWidgetLineColorOutput() OneDashboardPageWidgetLineColorOutput {
	return i.ToOneDashboardPageWidgetLineColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineColorArgs) ToOneDashboardPageWidgetLineColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineColorOutput)
}

// OneDashboardPageWidgetLineColorArrayInput is an input type that accepts OneDashboardPageWidgetLineColorArray and OneDashboardPageWidgetLineColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineColorArrayInput` via:
//
//	OneDashboardPageWidgetLineColorArray{ OneDashboardPageWidgetLineColorArgs{...} }
type OneDashboardPageWidgetLineColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineColorArrayOutput() OneDashboardPageWidgetLineColorArrayOutput
	ToOneDashboardPageWidgetLineColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineColorArrayOutput
}

type OneDashboardPageWidgetLineColorArray []OneDashboardPageWidgetLineColorInput

func (OneDashboardPageWidgetLineColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineColorArray) ToOneDashboardPageWidgetLineColorArrayOutput() OneDashboardPageWidgetLineColorArrayOutput {
	return i.ToOneDashboardPageWidgetLineColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineColorArray) ToOneDashboardPageWidgetLineColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineColorArrayOutput)
}

type OneDashboardPageWidgetLineColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineColorOutput) ToOneDashboardPageWidgetLineColorOutput() OneDashboardPageWidgetLineColorOutput {
	return o
}

func (o OneDashboardPageWidgetLineColorOutput) ToOneDashboardPageWidgetLineColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetLineColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetLineColorOutput) SeriesOverrides() OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineColor) []OneDashboardPageWidgetLineColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLineColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineColorArrayOutput) ToOneDashboardPageWidgetLineColorArrayOutput() OneDashboardPageWidgetLineColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineColorArrayOutput) ToOneDashboardPageWidgetLineColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineColor {
		return vs[0].([]OneDashboardPageWidgetLineColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineColorOutput)
}

type OneDashboardPageWidgetLineColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetLineColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetLineColorSeriesOverrideArgs and OneDashboardPageWidgetLineColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetLineColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetLineColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineColorSeriesOverrideOutput() OneDashboardPageWidgetLineColorSeriesOverrideOutput
	ToOneDashboardPageWidgetLineColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetLineColorSeriesOverrideOutput
}

type OneDashboardPageWidgetLineColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetLineColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineColorSeriesOverrideArgs) ToOneDashboardPageWidgetLineColorSeriesOverrideOutput() OneDashboardPageWidgetLineColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetLineColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineColorSeriesOverrideArgs) ToOneDashboardPageWidgetLineColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetLineColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetLineColorSeriesOverrideArray and OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetLineColorSeriesOverrideArray{ OneDashboardPageWidgetLineColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetLineColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutput() OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetLineColorSeriesOverrideArray []OneDashboardPageWidgetLineColorSeriesOverrideInput

func (OneDashboardPageWidgetLineColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineColorSeriesOverrideArray) ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutput() OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineColorSeriesOverrideArray) ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLineColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineColorSeriesOverrideOutput) ToOneDashboardPageWidgetLineColorSeriesOverrideOutput() OneDashboardPageWidgetLineColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetLineColorSeriesOverrideOutput) ToOneDashboardPageWidgetLineColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetLineColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetLineColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutput() OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLineColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetLineColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetLineDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetLineDataFormatInput is an input type that accepts OneDashboardPageWidgetLineDataFormatArgs and OneDashboardPageWidgetLineDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineDataFormatInput` via:
//
//	OneDashboardPageWidgetLineDataFormatArgs{...}
type OneDashboardPageWidgetLineDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineDataFormatOutput() OneDashboardPageWidgetLineDataFormatOutput
	ToOneDashboardPageWidgetLineDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetLineDataFormatOutput
}

type OneDashboardPageWidgetLineDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetLineDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineDataFormatArgs) ToOneDashboardPageWidgetLineDataFormatOutput() OneDashboardPageWidgetLineDataFormatOutput {
	return i.ToOneDashboardPageWidgetLineDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineDataFormatArgs) ToOneDashboardPageWidgetLineDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineDataFormatOutput)
}

// OneDashboardPageWidgetLineDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetLineDataFormatArray and OneDashboardPageWidgetLineDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetLineDataFormatArray{ OneDashboardPageWidgetLineDataFormatArgs{...} }
type OneDashboardPageWidgetLineDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineDataFormatArrayOutput() OneDashboardPageWidgetLineDataFormatArrayOutput
	ToOneDashboardPageWidgetLineDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineDataFormatArrayOutput
}

type OneDashboardPageWidgetLineDataFormatArray []OneDashboardPageWidgetLineDataFormatInput

func (OneDashboardPageWidgetLineDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineDataFormatArray) ToOneDashboardPageWidgetLineDataFormatArrayOutput() OneDashboardPageWidgetLineDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetLineDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineDataFormatArray) ToOneDashboardPageWidgetLineDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineDataFormatArrayOutput)
}

type OneDashboardPageWidgetLineDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineDataFormatOutput) ToOneDashboardPageWidgetLineDataFormatOutput() OneDashboardPageWidgetLineDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetLineDataFormatOutput) ToOneDashboardPageWidgetLineDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetLineDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLineDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetLineDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetLineDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetLineDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineDataFormatArrayOutput) ToOneDashboardPageWidgetLineDataFormatArrayOutput() OneDashboardPageWidgetLineDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineDataFormatArrayOutput) ToOneDashboardPageWidgetLineDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineDataFormat {
		return vs[0].([]OneDashboardPageWidgetLineDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineDataFormatOutput)
}

type OneDashboardPageWidgetLineInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetLineInitialSortingInput is an input type that accepts OneDashboardPageWidgetLineInitialSortingArgs and OneDashboardPageWidgetLineInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineInitialSortingInput` via:
//
//	OneDashboardPageWidgetLineInitialSortingArgs{...}
type OneDashboardPageWidgetLineInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineInitialSortingOutput() OneDashboardPageWidgetLineInitialSortingOutput
	ToOneDashboardPageWidgetLineInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetLineInitialSortingOutput
}

type OneDashboardPageWidgetLineInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetLineInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineInitialSortingArgs) ToOneDashboardPageWidgetLineInitialSortingOutput() OneDashboardPageWidgetLineInitialSortingOutput {
	return i.ToOneDashboardPageWidgetLineInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineInitialSortingArgs) ToOneDashboardPageWidgetLineInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineInitialSortingOutput)
}

func (i OneDashboardPageWidgetLineInitialSortingArgs) ToOneDashboardPageWidgetLineInitialSortingPtrOutput() OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineInitialSortingArgs) ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineInitialSortingOutput).ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetLineInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetLineInitialSortingArgs, OneDashboardPageWidgetLineInitialSortingPtr and OneDashboardPageWidgetLineInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetLineInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetLineInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineInitialSortingPtrOutput() OneDashboardPageWidgetLineInitialSortingPtrOutput
	ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetLineInitialSortingPtrOutput
}

type oneDashboardPageWidgetLineInitialSortingPtrType OneDashboardPageWidgetLineInitialSortingArgs

func OneDashboardPageWidgetLineInitialSortingPtr(v *OneDashboardPageWidgetLineInitialSortingArgs) OneDashboardPageWidgetLineInitialSortingPtrInput {
	return (*oneDashboardPageWidgetLineInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetLineInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetLineInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetLineInitialSortingPtrType) ToOneDashboardPageWidgetLineInitialSortingPtrOutput() OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetLineInitialSortingPtrType) ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineInitialSortingPtrOutput)
}

type OneDashboardPageWidgetLineInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineInitialSortingOutput) ToOneDashboardPageWidgetLineInitialSortingOutput() OneDashboardPageWidgetLineInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetLineInitialSortingOutput) ToOneDashboardPageWidgetLineInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetLineInitialSortingOutput) ToOneDashboardPageWidgetLineInitialSortingPtrOutput() OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetLineInitialSortingOutput) ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetLineInitialSorting) *OneDashboardPageWidgetLineInitialSorting {
		return &v
	}).(OneDashboardPageWidgetLineInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetLineInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLineInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetLineInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetLineInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineInitialSortingPtrOutput) ToOneDashboardPageWidgetLineInitialSortingPtrOutput() OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetLineInitialSortingPtrOutput) ToOneDashboardPageWidgetLineInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetLineInitialSortingPtrOutput) Elem() OneDashboardPageWidgetLineInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineInitialSorting) OneDashboardPageWidgetLineInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetLineInitialSorting
		return ret
	}).(OneDashboardPageWidgetLineInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetLineInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLineInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLineNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetLineNrqlQueryInput is an input type that accepts OneDashboardPageWidgetLineNrqlQueryArgs and OneDashboardPageWidgetLineNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineNrqlQueryInput` via:
//
//	OneDashboardPageWidgetLineNrqlQueryArgs{...}
type OneDashboardPageWidgetLineNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineNrqlQueryOutput() OneDashboardPageWidgetLineNrqlQueryOutput
	ToOneDashboardPageWidgetLineNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetLineNrqlQueryOutput
}

type OneDashboardPageWidgetLineNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetLineNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineNrqlQueryArgs) ToOneDashboardPageWidgetLineNrqlQueryOutput() OneDashboardPageWidgetLineNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetLineNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineNrqlQueryArgs) ToOneDashboardPageWidgetLineNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineNrqlQueryOutput)
}

// OneDashboardPageWidgetLineNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetLineNrqlQueryArray and OneDashboardPageWidgetLineNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetLineNrqlQueryArray{ OneDashboardPageWidgetLineNrqlQueryArgs{...} }
type OneDashboardPageWidgetLineNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineNrqlQueryArrayOutput() OneDashboardPageWidgetLineNrqlQueryArrayOutput
	ToOneDashboardPageWidgetLineNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineNrqlQueryArrayOutput
}

type OneDashboardPageWidgetLineNrqlQueryArray []OneDashboardPageWidgetLineNrqlQueryInput

func (OneDashboardPageWidgetLineNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineNrqlQueryArray) ToOneDashboardPageWidgetLineNrqlQueryArrayOutput() OneDashboardPageWidgetLineNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetLineNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineNrqlQueryArray) ToOneDashboardPageWidgetLineNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetLineNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineNrqlQueryOutput) ToOneDashboardPageWidgetLineNrqlQueryOutput() OneDashboardPageWidgetLineNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetLineNrqlQueryOutput) ToOneDashboardPageWidgetLineNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetLineNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetLineNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetLineNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineNrqlQueryArrayOutput) ToOneDashboardPageWidgetLineNrqlQueryArrayOutput() OneDashboardPageWidgetLineNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineNrqlQueryArrayOutput) ToOneDashboardPageWidgetLineNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetLineNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineNrqlQueryOutput)
}

type OneDashboardPageWidgetLineNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetLineNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetLineNullValueInput is an input type that accepts OneDashboardPageWidgetLineNullValueArgs and OneDashboardPageWidgetLineNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineNullValueInput` via:
//
//	OneDashboardPageWidgetLineNullValueArgs{...}
type OneDashboardPageWidgetLineNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineNullValueOutput() OneDashboardPageWidgetLineNullValueOutput
	ToOneDashboardPageWidgetLineNullValueOutputWithContext(context.Context) OneDashboardPageWidgetLineNullValueOutput
}

type OneDashboardPageWidgetLineNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetLineNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetLineNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineNullValueArgs) ToOneDashboardPageWidgetLineNullValueOutput() OneDashboardPageWidgetLineNullValueOutput {
	return i.ToOneDashboardPageWidgetLineNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineNullValueArgs) ToOneDashboardPageWidgetLineNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineNullValueOutput)
}

// OneDashboardPageWidgetLineNullValueArrayInput is an input type that accepts OneDashboardPageWidgetLineNullValueArray and OneDashboardPageWidgetLineNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineNullValueArrayInput` via:
//
//	OneDashboardPageWidgetLineNullValueArray{ OneDashboardPageWidgetLineNullValueArgs{...} }
type OneDashboardPageWidgetLineNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineNullValueArrayOutput() OneDashboardPageWidgetLineNullValueArrayOutput
	ToOneDashboardPageWidgetLineNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineNullValueArrayOutput
}

type OneDashboardPageWidgetLineNullValueArray []OneDashboardPageWidgetLineNullValueInput

func (OneDashboardPageWidgetLineNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineNullValueArray) ToOneDashboardPageWidgetLineNullValueArrayOutput() OneDashboardPageWidgetLineNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetLineNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineNullValueArray) ToOneDashboardPageWidgetLineNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineNullValueArrayOutput)
}

type OneDashboardPageWidgetLineNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineNullValueOutput) ToOneDashboardPageWidgetLineNullValueOutput() OneDashboardPageWidgetLineNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetLineNullValueOutput) ToOneDashboardPageWidgetLineNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetLineNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetLineNullValueOutput) SeriesOverrides() OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineNullValue) []OneDashboardPageWidgetLineNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLineNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineNullValueArrayOutput) ToOneDashboardPageWidgetLineNullValueArrayOutput() OneDashboardPageWidgetLineNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineNullValueArrayOutput) ToOneDashboardPageWidgetLineNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineNullValue {
		return vs[0].([]OneDashboardPageWidgetLineNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineNullValueOutput)
}

type OneDashboardPageWidgetLineNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetLineNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetLineNullValueSeriesOverrideArgs and OneDashboardPageWidgetLineNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetLineNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetLineNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutput() OneDashboardPageWidgetLineNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetLineNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetLineNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetLineNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutput() OneDashboardPageWidgetLineNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetLineNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetLineNullValueSeriesOverrideArray and OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetLineNullValueSeriesOverrideArray{ OneDashboardPageWidgetLineNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetLineNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetLineNullValueSeriesOverrideArray []OneDashboardPageWidgetLineNullValueSeriesOverrideInput

func (OneDashboardPageWidgetLineNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineNullValueSeriesOverrideArray) ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineNullValueSeriesOverrideArray) ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLineNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutput() OneDashboardPageWidgetLineNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetLineNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetLineNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetLineNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetLineNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetLineNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetLineThreshold struct {
	// The value 'from' which the threshold would need to be applied.
	From *string `pulumi:"from"`
	// The title of the dashboard.
	Name *string `pulumi:"name"`
	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
	Severity *string `pulumi:"severity"`
	// The value until which the threshold would need to be applied.
	To *string `pulumi:"to"`
}

// OneDashboardPageWidgetLineThresholdInput is an input type that accepts OneDashboardPageWidgetLineThresholdArgs and OneDashboardPageWidgetLineThresholdOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineThresholdInput` via:
//
//	OneDashboardPageWidgetLineThresholdArgs{...}
type OneDashboardPageWidgetLineThresholdInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineThresholdOutput() OneDashboardPageWidgetLineThresholdOutput
	ToOneDashboardPageWidgetLineThresholdOutputWithContext(context.Context) OneDashboardPageWidgetLineThresholdOutput
}

type OneDashboardPageWidgetLineThresholdArgs struct {
	// The value 'from' which the threshold would need to be applied.
	From pulumi.StringPtrInput `pulumi:"from"`
	// The title of the dashboard.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The value until which the threshold would need to be applied.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (OneDashboardPageWidgetLineThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineThreshold)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineThresholdArgs) ToOneDashboardPageWidgetLineThresholdOutput() OneDashboardPageWidgetLineThresholdOutput {
	return i.ToOneDashboardPageWidgetLineThresholdOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineThresholdArgs) ToOneDashboardPageWidgetLineThresholdOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineThresholdOutput)
}

// OneDashboardPageWidgetLineThresholdArrayInput is an input type that accepts OneDashboardPageWidgetLineThresholdArray and OneDashboardPageWidgetLineThresholdArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineThresholdArrayInput` via:
//
//	OneDashboardPageWidgetLineThresholdArray{ OneDashboardPageWidgetLineThresholdArgs{...} }
type OneDashboardPageWidgetLineThresholdArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineThresholdArrayOutput() OneDashboardPageWidgetLineThresholdArrayOutput
	ToOneDashboardPageWidgetLineThresholdArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineThresholdArrayOutput
}

type OneDashboardPageWidgetLineThresholdArray []OneDashboardPageWidgetLineThresholdInput

func (OneDashboardPageWidgetLineThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineThreshold)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineThresholdArray) ToOneDashboardPageWidgetLineThresholdArrayOutput() OneDashboardPageWidgetLineThresholdArrayOutput {
	return i.ToOneDashboardPageWidgetLineThresholdArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineThresholdArray) ToOneDashboardPageWidgetLineThresholdArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineThresholdArrayOutput)
}

type OneDashboardPageWidgetLineThresholdOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineThreshold)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineThresholdOutput) ToOneDashboardPageWidgetLineThresholdOutput() OneDashboardPageWidgetLineThresholdOutput {
	return o
}

func (o OneDashboardPageWidgetLineThresholdOutput) ToOneDashboardPageWidgetLineThresholdOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineThresholdOutput {
	return o
}

// The value 'from' which the threshold would need to be applied.
func (o OneDashboardPageWidgetLineThresholdOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineThreshold) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLineThresholdOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineThreshold) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
func (o OneDashboardPageWidgetLineThresholdOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineThreshold) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The value until which the threshold would need to be applied.
func (o OneDashboardPageWidgetLineThresholdOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineThreshold) *string { return v.To }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLineThresholdArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineThreshold)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineThresholdArrayOutput) ToOneDashboardPageWidgetLineThresholdArrayOutput() OneDashboardPageWidgetLineThresholdArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineThresholdArrayOutput) ToOneDashboardPageWidgetLineThresholdArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineThresholdArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineThresholdArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineThreshold {
		return vs[0].([]OneDashboardPageWidgetLineThreshold)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineThresholdOutput)
}

type OneDashboardPageWidgetLineUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetLineUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetLineUnitInput is an input type that accepts OneDashboardPageWidgetLineUnitArgs and OneDashboardPageWidgetLineUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineUnitInput` via:
//
//	OneDashboardPageWidgetLineUnitArgs{...}
type OneDashboardPageWidgetLineUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineUnitOutput() OneDashboardPageWidgetLineUnitOutput
	ToOneDashboardPageWidgetLineUnitOutputWithContext(context.Context) OneDashboardPageWidgetLineUnitOutput
}

type OneDashboardPageWidgetLineUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetLineUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetLineUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineUnitArgs) ToOneDashboardPageWidgetLineUnitOutput() OneDashboardPageWidgetLineUnitOutput {
	return i.ToOneDashboardPageWidgetLineUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineUnitArgs) ToOneDashboardPageWidgetLineUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineUnitOutput)
}

// OneDashboardPageWidgetLineUnitArrayInput is an input type that accepts OneDashboardPageWidgetLineUnitArray and OneDashboardPageWidgetLineUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineUnitArrayInput` via:
//
//	OneDashboardPageWidgetLineUnitArray{ OneDashboardPageWidgetLineUnitArgs{...} }
type OneDashboardPageWidgetLineUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineUnitArrayOutput() OneDashboardPageWidgetLineUnitArrayOutput
	ToOneDashboardPageWidgetLineUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineUnitArrayOutput
}

type OneDashboardPageWidgetLineUnitArray []OneDashboardPageWidgetLineUnitInput

func (OneDashboardPageWidgetLineUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineUnitArray) ToOneDashboardPageWidgetLineUnitArrayOutput() OneDashboardPageWidgetLineUnitArrayOutput {
	return i.ToOneDashboardPageWidgetLineUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineUnitArray) ToOneDashboardPageWidgetLineUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineUnitArrayOutput)
}

type OneDashboardPageWidgetLineUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineUnitOutput) ToOneDashboardPageWidgetLineUnitOutput() OneDashboardPageWidgetLineUnitOutput {
	return o
}

func (o OneDashboardPageWidgetLineUnitOutput) ToOneDashboardPageWidgetLineUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetLineUnitOutput) SeriesOverrides() OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineUnit) []OneDashboardPageWidgetLineUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetLineUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLineUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineUnitArrayOutput) ToOneDashboardPageWidgetLineUnitArrayOutput() OneDashboardPageWidgetLineUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineUnitArrayOutput) ToOneDashboardPageWidgetLineUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineUnit {
		return vs[0].([]OneDashboardPageWidgetLineUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineUnitOutput)
}

type OneDashboardPageWidgetLineUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetLineUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetLineUnitSeriesOverrideArgs and OneDashboardPageWidgetLineUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetLineUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetLineUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineUnitSeriesOverrideOutput() OneDashboardPageWidgetLineUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetLineUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetLineUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetLineUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetLineUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineUnitSeriesOverrideArgs) ToOneDashboardPageWidgetLineUnitSeriesOverrideOutput() OneDashboardPageWidgetLineUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetLineUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineUnitSeriesOverrideArgs) ToOneDashboardPageWidgetLineUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetLineUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetLineUnitSeriesOverrideArray and OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetLineUnitSeriesOverrideArray{ OneDashboardPageWidgetLineUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetLineUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetLineUnitSeriesOverrideArray []OneDashboardPageWidgetLineUnitSeriesOverrideInput

func (OneDashboardPageWidgetLineUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineUnitSeriesOverrideArray) ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineUnitSeriesOverrideArray) ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLineUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineUnitSeriesOverrideOutput) ToOneDashboardPageWidgetLineUnitSeriesOverrideOutput() OneDashboardPageWidgetLineUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetLineUnitSeriesOverrideOutput) ToOneDashboardPageWidgetLineUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetLineUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetLineUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLineUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLineUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLineUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLineUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetLineUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetLineUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetLineYAxisRight struct {
	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	YAxisRightMax *float64 `pulumi:"yAxisRightMax"`
	// , `yAxisRightMax` - (Optional) Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
	YAxisRightMin *float64 `pulumi:"yAxisRightMin"`
	// (Optional) An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
	YAxisRightSeries []string `pulumi:"yAxisRightSeries"`
	// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisRightMin` (or 0 if it is not defined) to `yAxisRightMax`. Use `yAxisRightZero = true` with a combination of `yAxisRightMin` and `yAxisRightMax` to render values from 0 or the specified minimum to the maximum, and `yAxisRightZero = false` to fit the graph to scale.
	YAxisRightZero *bool `pulumi:"yAxisRightZero"`
}

// OneDashboardPageWidgetLineYAxisRightInput is an input type that accepts OneDashboardPageWidgetLineYAxisRightArgs and OneDashboardPageWidgetLineYAxisRightOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineYAxisRightInput` via:
//
//	OneDashboardPageWidgetLineYAxisRightArgs{...}
type OneDashboardPageWidgetLineYAxisRightInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineYAxisRightOutput() OneDashboardPageWidgetLineYAxisRightOutput
	ToOneDashboardPageWidgetLineYAxisRightOutputWithContext(context.Context) OneDashboardPageWidgetLineYAxisRightOutput
}

type OneDashboardPageWidgetLineYAxisRightArgs struct {
	// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
	YAxisRightMax pulumi.Float64PtrInput `pulumi:"yAxisRightMax"`
	// , `yAxisRightMax` - (Optional) Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
	YAxisRightMin pulumi.Float64PtrInput `pulumi:"yAxisRightMin"`
	// (Optional) An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
	YAxisRightSeries pulumi.StringArrayInput `pulumi:"yAxisRightSeries"`
	// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisRightMin` (or 0 if it is not defined) to `yAxisRightMax`. Use `yAxisRightZero = true` with a combination of `yAxisRightMin` and `yAxisRightMax` to render values from 0 or the specified minimum to the maximum, and `yAxisRightZero = false` to fit the graph to scale.
	YAxisRightZero pulumi.BoolPtrInput `pulumi:"yAxisRightZero"`
}

func (OneDashboardPageWidgetLineYAxisRightArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineYAxisRight)(nil)).Elem()
}

func (i OneDashboardPageWidgetLineYAxisRightArgs) ToOneDashboardPageWidgetLineYAxisRightOutput() OneDashboardPageWidgetLineYAxisRightOutput {
	return i.ToOneDashboardPageWidgetLineYAxisRightOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineYAxisRightArgs) ToOneDashboardPageWidgetLineYAxisRightOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineYAxisRightOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineYAxisRightOutput)
}

func (i OneDashboardPageWidgetLineYAxisRightArgs) ToOneDashboardPageWidgetLineYAxisRightPtrOutput() OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return i.ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLineYAxisRightArgs) ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineYAxisRightOutput).ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetLineYAxisRightPtrInput is an input type that accepts OneDashboardPageWidgetLineYAxisRightArgs, OneDashboardPageWidgetLineYAxisRightPtr and OneDashboardPageWidgetLineYAxisRightPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLineYAxisRightPtrInput` via:
//
//	        OneDashboardPageWidgetLineYAxisRightArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetLineYAxisRightPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLineYAxisRightPtrOutput() OneDashboardPageWidgetLineYAxisRightPtrOutput
	ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(context.Context) OneDashboardPageWidgetLineYAxisRightPtrOutput
}

type oneDashboardPageWidgetLineYAxisRightPtrType OneDashboardPageWidgetLineYAxisRightArgs

func OneDashboardPageWidgetLineYAxisRightPtr(v *OneDashboardPageWidgetLineYAxisRightArgs) OneDashboardPageWidgetLineYAxisRightPtrInput {
	return (*oneDashboardPageWidgetLineYAxisRightPtrType)(v)
}

func (*oneDashboardPageWidgetLineYAxisRightPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetLineYAxisRight)(nil)).Elem()
}

func (i *oneDashboardPageWidgetLineYAxisRightPtrType) ToOneDashboardPageWidgetLineYAxisRightPtrOutput() OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return i.ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetLineYAxisRightPtrType) ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLineYAxisRightPtrOutput)
}

type OneDashboardPageWidgetLineYAxisRightOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineYAxisRightOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLineYAxisRight)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineYAxisRightOutput) ToOneDashboardPageWidgetLineYAxisRightOutput() OneDashboardPageWidgetLineYAxisRightOutput {
	return o
}

func (o OneDashboardPageWidgetLineYAxisRightOutput) ToOneDashboardPageWidgetLineYAxisRightOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineYAxisRightOutput {
	return o
}

func (o OneDashboardPageWidgetLineYAxisRightOutput) ToOneDashboardPageWidgetLineYAxisRightPtrOutput() OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return o.ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetLineYAxisRightOutput) ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetLineYAxisRight) *OneDashboardPageWidgetLineYAxisRight {
		return &v
	}).(OneDashboardPageWidgetLineYAxisRightPtrOutput)
}

// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
func (o OneDashboardPageWidgetLineYAxisRightOutput) YAxisRightMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineYAxisRight) *float64 { return v.YAxisRightMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisRightMax` - (Optional) Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
func (o OneDashboardPageWidgetLineYAxisRightOutput) YAxisRightMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineYAxisRight) *float64 { return v.YAxisRightMin }).(pulumi.Float64PtrOutput)
}

// (Optional) An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
func (o OneDashboardPageWidgetLineYAxisRightOutput) YAxisRightSeries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineYAxisRight) []string { return v.YAxisRightSeries }).(pulumi.StringArrayOutput)
}

// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisRightMin` (or 0 if it is not defined) to `yAxisRightMax`. Use `yAxisRightZero = true` with a combination of `yAxisRightMin` and `yAxisRightMax` to render values from 0 or the specified minimum to the maximum, and `yAxisRightZero = false` to fit the graph to scale.
func (o OneDashboardPageWidgetLineYAxisRightOutput) YAxisRightZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLineYAxisRight) *bool { return v.YAxisRightZero }).(pulumi.BoolPtrOutput)
}

type OneDashboardPageWidgetLineYAxisRightPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLineYAxisRightPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetLineYAxisRight)(nil)).Elem()
}

func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) ToOneDashboardPageWidgetLineYAxisRightPtrOutput() OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return o
}

func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) ToOneDashboardPageWidgetLineYAxisRightPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLineYAxisRightPtrOutput {
	return o
}

func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) Elem() OneDashboardPageWidgetLineYAxisRightOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineYAxisRight) OneDashboardPageWidgetLineYAxisRight {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetLineYAxisRight
		return ret
	}).(OneDashboardPageWidgetLineYAxisRightOutput)
}

// Minimum value of the range to be specified with the Y-Axis on the right of the line widget.
func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) YAxisRightMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineYAxisRight) *float64 {
		if v == nil {
			return nil
		}
		return v.YAxisRightMax
	}).(pulumi.Float64PtrOutput)
}

// , `yAxisRightMax` - (Optional) Attributes which help specify a range of minimum and maximum values, which adjust the right Y axis to display the data within the specified minimum and maximum value for the axis.
func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) YAxisRightMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineYAxisRight) *float64 {
		if v == nil {
			return nil
		}
		return v.YAxisRightMin
	}).(pulumi.Float64PtrOutput)
}

// (Optional) An attribute which takes a list of strings, specifying a selection of series' displayed in the line chart to be adjusted against the values of the right Y-axis.
func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) YAxisRightSeries() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineYAxisRight) []string {
		if v == nil {
			return nil
		}
		return v.YAxisRightSeries
	}).(pulumi.StringArrayOutput)
}

// (Optional) An attribute that specifies if the values on the graph to be rendered need to be fit to scale, or printed within the specified range from `yAxisRightMin` (or 0 if it is not defined) to `yAxisRightMax`. Use `yAxisRightZero = true` with a combination of `yAxisRightMin` and `yAxisRightMax` to render values from 0 or the specified minimum to the maximum, and `yAxisRightZero = false` to fit the graph to scale.
func (o OneDashboardPageWidgetLineYAxisRightPtrOutput) YAxisRightZero() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLineYAxisRight) *bool {
		if v == nil {
			return nil
		}
		return v.YAxisRightZero
	}).(pulumi.BoolPtrOutput)
}

type OneDashboardPageWidgetLogTable struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetLogTableColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetLogTableDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetLogTableInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetLogTableNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetLogTableNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetLogTableUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetLogTableInput is an input type that accepts OneDashboardPageWidgetLogTableArgs and OneDashboardPageWidgetLogTableOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableInput` via:
//
//	OneDashboardPageWidgetLogTableArgs{...}
type OneDashboardPageWidgetLogTableInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableOutput() OneDashboardPageWidgetLogTableOutput
	ToOneDashboardPageWidgetLogTableOutputWithContext(context.Context) OneDashboardPageWidgetLogTableOutput
}

type OneDashboardPageWidgetLogTableArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetLogTableColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetLogTableDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetLogTableInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetLogTableNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetLogTableNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetLogTableUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetLogTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTable)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableArgs) ToOneDashboardPageWidgetLogTableOutput() OneDashboardPageWidgetLogTableOutput {
	return i.ToOneDashboardPageWidgetLogTableOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableArgs) ToOneDashboardPageWidgetLogTableOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableOutput)
}

// OneDashboardPageWidgetLogTableArrayInput is an input type that accepts OneDashboardPageWidgetLogTableArray and OneDashboardPageWidgetLogTableArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableArrayInput` via:
//
//	OneDashboardPageWidgetLogTableArray{ OneDashboardPageWidgetLogTableArgs{...} }
type OneDashboardPageWidgetLogTableArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableArrayOutput() OneDashboardPageWidgetLogTableArrayOutput
	ToOneDashboardPageWidgetLogTableArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableArrayOutput
}

type OneDashboardPageWidgetLogTableArray []OneDashboardPageWidgetLogTableInput

func (OneDashboardPageWidgetLogTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTable)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableArray) ToOneDashboardPageWidgetLogTableArrayOutput() OneDashboardPageWidgetLogTableArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableArray) ToOneDashboardPageWidgetLogTableArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableArrayOutput)
}

type OneDashboardPageWidgetLogTableOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTable)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableOutput) ToOneDashboardPageWidgetLogTableOutput() OneDashboardPageWidgetLogTableOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableOutput) ToOneDashboardPageWidgetLogTableOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetLogTableOutput) Colors() OneDashboardPageWidgetLogTableColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) []OneDashboardPageWidgetLogTableColor { return v.Colors }).(OneDashboardPageWidgetLogTableColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetLogTableOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetLogTableOutput) DataFormats() OneDashboardPageWidgetLogTableDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) []OneDashboardPageWidgetLogTableDataFormat {
		return v.DataFormats
	}).(OneDashboardPageWidgetLogTableDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetLogTableOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetLogTableOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetLogTableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetLogTableOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetLogTableOutput) InitialSorting() OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *OneDashboardPageWidgetLogTableInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetLogTableInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetLogTableOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetLogTableOutput) NrqlQueries() OneDashboardPageWidgetLogTableNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) []OneDashboardPageWidgetLogTableNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetLogTableNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetLogTableOutput) NullValues() OneDashboardPageWidgetLogTableNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) []OneDashboardPageWidgetLogTableNullValue { return v.NullValues }).(OneDashboardPageWidgetLogTableNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetLogTableOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetLogTableOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetLogTableOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetLogTableOutput) Units() OneDashboardPageWidgetLogTableUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) []OneDashboardPageWidgetLogTableUnit { return v.Units }).(OneDashboardPageWidgetLogTableUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetLogTableOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetLogTableOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetLogTableOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTable) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetLogTableArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTable)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableArrayOutput) ToOneDashboardPageWidgetLogTableArrayOutput() OneDashboardPageWidgetLogTableArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableArrayOutput) ToOneDashboardPageWidgetLogTableArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTable {
		return vs[0].([]OneDashboardPageWidgetLogTable)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableOutput)
}

type OneDashboardPageWidgetLogTableColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetLogTableColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetLogTableColorInput is an input type that accepts OneDashboardPageWidgetLogTableColorArgs and OneDashboardPageWidgetLogTableColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableColorInput` via:
//
//	OneDashboardPageWidgetLogTableColorArgs{...}
type OneDashboardPageWidgetLogTableColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableColorOutput() OneDashboardPageWidgetLogTableColorOutput
	ToOneDashboardPageWidgetLogTableColorOutputWithContext(context.Context) OneDashboardPageWidgetLogTableColorOutput
}

type OneDashboardPageWidgetLogTableColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetLogTableColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetLogTableColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableColorArgs) ToOneDashboardPageWidgetLogTableColorOutput() OneDashboardPageWidgetLogTableColorOutput {
	return i.ToOneDashboardPageWidgetLogTableColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableColorArgs) ToOneDashboardPageWidgetLogTableColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableColorOutput)
}

// OneDashboardPageWidgetLogTableColorArrayInput is an input type that accepts OneDashboardPageWidgetLogTableColorArray and OneDashboardPageWidgetLogTableColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableColorArrayInput` via:
//
//	OneDashboardPageWidgetLogTableColorArray{ OneDashboardPageWidgetLogTableColorArgs{...} }
type OneDashboardPageWidgetLogTableColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableColorArrayOutput() OneDashboardPageWidgetLogTableColorArrayOutput
	ToOneDashboardPageWidgetLogTableColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableColorArrayOutput
}

type OneDashboardPageWidgetLogTableColorArray []OneDashboardPageWidgetLogTableColorInput

func (OneDashboardPageWidgetLogTableColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableColorArray) ToOneDashboardPageWidgetLogTableColorArrayOutput() OneDashboardPageWidgetLogTableColorArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableColorArray) ToOneDashboardPageWidgetLogTableColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableColorArrayOutput)
}

type OneDashboardPageWidgetLogTableColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableColorOutput) ToOneDashboardPageWidgetLogTableColorOutput() OneDashboardPageWidgetLogTableColorOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableColorOutput) ToOneDashboardPageWidgetLogTableColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetLogTableColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetLogTableColorOutput) SeriesOverrides() OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableColor) []OneDashboardPageWidgetLogTableColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLogTableColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableColorArrayOutput) ToOneDashboardPageWidgetLogTableColorArrayOutput() OneDashboardPageWidgetLogTableColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableColorArrayOutput) ToOneDashboardPageWidgetLogTableColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableColor {
		return vs[0].([]OneDashboardPageWidgetLogTableColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableColorOutput)
}

type OneDashboardPageWidgetLogTableColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetLogTableColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetLogTableColorSeriesOverrideArgs and OneDashboardPageWidgetLogTableColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetLogTableColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetLogTableColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutput() OneDashboardPageWidgetLogTableColorSeriesOverrideOutput
	ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetLogTableColorSeriesOverrideOutput
}

type OneDashboardPageWidgetLogTableColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetLogTableColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableColorSeriesOverrideArgs) ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutput() OneDashboardPageWidgetLogTableColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableColorSeriesOverrideArgs) ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetLogTableColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetLogTableColorSeriesOverrideArray and OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetLogTableColorSeriesOverrideArray{ OneDashboardPageWidgetLogTableColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetLogTableColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetLogTableColorSeriesOverrideArray []OneDashboardPageWidgetLogTableColorSeriesOverrideInput

func (OneDashboardPageWidgetLogTableColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableColorSeriesOverrideArray) ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableColorSeriesOverrideArray) ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLogTableColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableColorSeriesOverrideOutput) ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutput() OneDashboardPageWidgetLogTableColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableColorSeriesOverrideOutput) ToOneDashboardPageWidgetLogTableColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetLogTableColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetLogTableColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetLogTableColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetLogTableDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetLogTableDataFormatInput is an input type that accepts OneDashboardPageWidgetLogTableDataFormatArgs and OneDashboardPageWidgetLogTableDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableDataFormatInput` via:
//
//	OneDashboardPageWidgetLogTableDataFormatArgs{...}
type OneDashboardPageWidgetLogTableDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableDataFormatOutput() OneDashboardPageWidgetLogTableDataFormatOutput
	ToOneDashboardPageWidgetLogTableDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetLogTableDataFormatOutput
}

type OneDashboardPageWidgetLogTableDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetLogTableDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableDataFormatArgs) ToOneDashboardPageWidgetLogTableDataFormatOutput() OneDashboardPageWidgetLogTableDataFormatOutput {
	return i.ToOneDashboardPageWidgetLogTableDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableDataFormatArgs) ToOneDashboardPageWidgetLogTableDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableDataFormatOutput)
}

// OneDashboardPageWidgetLogTableDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetLogTableDataFormatArray and OneDashboardPageWidgetLogTableDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetLogTableDataFormatArray{ OneDashboardPageWidgetLogTableDataFormatArgs{...} }
type OneDashboardPageWidgetLogTableDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableDataFormatArrayOutput() OneDashboardPageWidgetLogTableDataFormatArrayOutput
	ToOneDashboardPageWidgetLogTableDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableDataFormatArrayOutput
}

type OneDashboardPageWidgetLogTableDataFormatArray []OneDashboardPageWidgetLogTableDataFormatInput

func (OneDashboardPageWidgetLogTableDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableDataFormatArray) ToOneDashboardPageWidgetLogTableDataFormatArrayOutput() OneDashboardPageWidgetLogTableDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableDataFormatArray) ToOneDashboardPageWidgetLogTableDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableDataFormatArrayOutput)
}

type OneDashboardPageWidgetLogTableDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableDataFormatOutput) ToOneDashboardPageWidgetLogTableDataFormatOutput() OneDashboardPageWidgetLogTableDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableDataFormatOutput) ToOneDashboardPageWidgetLogTableDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetLogTableDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLogTableDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetLogTableDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetLogTableDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetLogTableDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableDataFormatArrayOutput) ToOneDashboardPageWidgetLogTableDataFormatArrayOutput() OneDashboardPageWidgetLogTableDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableDataFormatArrayOutput) ToOneDashboardPageWidgetLogTableDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableDataFormat {
		return vs[0].([]OneDashboardPageWidgetLogTableDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableDataFormatOutput)
}

type OneDashboardPageWidgetLogTableInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetLogTableInitialSortingInput is an input type that accepts OneDashboardPageWidgetLogTableInitialSortingArgs and OneDashboardPageWidgetLogTableInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableInitialSortingInput` via:
//
//	OneDashboardPageWidgetLogTableInitialSortingArgs{...}
type OneDashboardPageWidgetLogTableInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableInitialSortingOutput() OneDashboardPageWidgetLogTableInitialSortingOutput
	ToOneDashboardPageWidgetLogTableInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetLogTableInitialSortingOutput
}

type OneDashboardPageWidgetLogTableInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetLogTableInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableInitialSortingArgs) ToOneDashboardPageWidgetLogTableInitialSortingOutput() OneDashboardPageWidgetLogTableInitialSortingOutput {
	return i.ToOneDashboardPageWidgetLogTableInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableInitialSortingArgs) ToOneDashboardPageWidgetLogTableInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableInitialSortingOutput)
}

func (i OneDashboardPageWidgetLogTableInitialSortingArgs) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutput() OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableInitialSortingArgs) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableInitialSortingOutput).ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetLogTableInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetLogTableInitialSortingArgs, OneDashboardPageWidgetLogTableInitialSortingPtr and OneDashboardPageWidgetLogTableInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetLogTableInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetLogTableInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableInitialSortingPtrOutput() OneDashboardPageWidgetLogTableInitialSortingPtrOutput
	ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetLogTableInitialSortingPtrOutput
}

type oneDashboardPageWidgetLogTableInitialSortingPtrType OneDashboardPageWidgetLogTableInitialSortingArgs

func OneDashboardPageWidgetLogTableInitialSortingPtr(v *OneDashboardPageWidgetLogTableInitialSortingArgs) OneDashboardPageWidgetLogTableInitialSortingPtrInput {
	return (*oneDashboardPageWidgetLogTableInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetLogTableInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetLogTableInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetLogTableInitialSortingPtrType) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutput() OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetLogTableInitialSortingPtrType) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableInitialSortingPtrOutput)
}

type OneDashboardPageWidgetLogTableInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableInitialSortingOutput) ToOneDashboardPageWidgetLogTableInitialSortingOutput() OneDashboardPageWidgetLogTableInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableInitialSortingOutput) ToOneDashboardPageWidgetLogTableInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableInitialSortingOutput) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutput() OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetLogTableInitialSortingOutput) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetLogTableInitialSorting) *OneDashboardPageWidgetLogTableInitialSorting {
		return &v
	}).(OneDashboardPageWidgetLogTableInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetLogTableInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLogTableInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetLogTableInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetLogTableInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableInitialSortingPtrOutput) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutput() OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableInitialSortingPtrOutput) ToOneDashboardPageWidgetLogTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableInitialSortingPtrOutput) Elem() OneDashboardPageWidgetLogTableInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLogTableInitialSorting) OneDashboardPageWidgetLogTableInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetLogTableInitialSorting
		return ret
	}).(OneDashboardPageWidgetLogTableInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetLogTableInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLogTableInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetLogTableInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetLogTableInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLogTableNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetLogTableNrqlQueryInput is an input type that accepts OneDashboardPageWidgetLogTableNrqlQueryArgs and OneDashboardPageWidgetLogTableNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableNrqlQueryInput` via:
//
//	OneDashboardPageWidgetLogTableNrqlQueryArgs{...}
type OneDashboardPageWidgetLogTableNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableNrqlQueryOutput() OneDashboardPageWidgetLogTableNrqlQueryOutput
	ToOneDashboardPageWidgetLogTableNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetLogTableNrqlQueryOutput
}

type OneDashboardPageWidgetLogTableNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetLogTableNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableNrqlQueryArgs) ToOneDashboardPageWidgetLogTableNrqlQueryOutput() OneDashboardPageWidgetLogTableNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetLogTableNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableNrqlQueryArgs) ToOneDashboardPageWidgetLogTableNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableNrqlQueryOutput)
}

// OneDashboardPageWidgetLogTableNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetLogTableNrqlQueryArray and OneDashboardPageWidgetLogTableNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetLogTableNrqlQueryArray{ OneDashboardPageWidgetLogTableNrqlQueryArgs{...} }
type OneDashboardPageWidgetLogTableNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutput() OneDashboardPageWidgetLogTableNrqlQueryArrayOutput
	ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableNrqlQueryArrayOutput
}

type OneDashboardPageWidgetLogTableNrqlQueryArray []OneDashboardPageWidgetLogTableNrqlQueryInput

func (OneDashboardPageWidgetLogTableNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableNrqlQueryArray) ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutput() OneDashboardPageWidgetLogTableNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableNrqlQueryArray) ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetLogTableNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableNrqlQueryOutput) ToOneDashboardPageWidgetLogTableNrqlQueryOutput() OneDashboardPageWidgetLogTableNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNrqlQueryOutput) ToOneDashboardPageWidgetLogTableNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetLogTableNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetLogTableNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetLogTableNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableNrqlQueryArrayOutput) ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutput() OneDashboardPageWidgetLogTableNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNrqlQueryArrayOutput) ToOneDashboardPageWidgetLogTableNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetLogTableNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableNrqlQueryOutput)
}

type OneDashboardPageWidgetLogTableNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetLogTableNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetLogTableNullValueInput is an input type that accepts OneDashboardPageWidgetLogTableNullValueArgs and OneDashboardPageWidgetLogTableNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableNullValueInput` via:
//
//	OneDashboardPageWidgetLogTableNullValueArgs{...}
type OneDashboardPageWidgetLogTableNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableNullValueOutput() OneDashboardPageWidgetLogTableNullValueOutput
	ToOneDashboardPageWidgetLogTableNullValueOutputWithContext(context.Context) OneDashboardPageWidgetLogTableNullValueOutput
}

type OneDashboardPageWidgetLogTableNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetLogTableNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableNullValueArgs) ToOneDashboardPageWidgetLogTableNullValueOutput() OneDashboardPageWidgetLogTableNullValueOutput {
	return i.ToOneDashboardPageWidgetLogTableNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableNullValueArgs) ToOneDashboardPageWidgetLogTableNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableNullValueOutput)
}

// OneDashboardPageWidgetLogTableNullValueArrayInput is an input type that accepts OneDashboardPageWidgetLogTableNullValueArray and OneDashboardPageWidgetLogTableNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableNullValueArrayInput` via:
//
//	OneDashboardPageWidgetLogTableNullValueArray{ OneDashboardPageWidgetLogTableNullValueArgs{...} }
type OneDashboardPageWidgetLogTableNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableNullValueArrayOutput() OneDashboardPageWidgetLogTableNullValueArrayOutput
	ToOneDashboardPageWidgetLogTableNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableNullValueArrayOutput
}

type OneDashboardPageWidgetLogTableNullValueArray []OneDashboardPageWidgetLogTableNullValueInput

func (OneDashboardPageWidgetLogTableNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableNullValueArray) ToOneDashboardPageWidgetLogTableNullValueArrayOutput() OneDashboardPageWidgetLogTableNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableNullValueArray) ToOneDashboardPageWidgetLogTableNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableNullValueArrayOutput)
}

type OneDashboardPageWidgetLogTableNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableNullValueOutput) ToOneDashboardPageWidgetLogTableNullValueOutput() OneDashboardPageWidgetLogTableNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNullValueOutput) ToOneDashboardPageWidgetLogTableNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetLogTableNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetLogTableNullValueOutput) SeriesOverrides() OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableNullValue) []OneDashboardPageWidgetLogTableNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLogTableNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableNullValueArrayOutput) ToOneDashboardPageWidgetLogTableNullValueArrayOutput() OneDashboardPageWidgetLogTableNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNullValueArrayOutput) ToOneDashboardPageWidgetLogTableNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableNullValue {
		return vs[0].([]OneDashboardPageWidgetLogTableNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableNullValueOutput)
}

type OneDashboardPageWidgetLogTableNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetLogTableNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs and OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetLogTableNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput() OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput() OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray and OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray{ OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray []OneDashboardPageWidgetLogTableNullValueSeriesOverrideInput

func (OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput() OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetLogTableNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetLogTableUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetLogTableUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetLogTableUnitInput is an input type that accepts OneDashboardPageWidgetLogTableUnitArgs and OneDashboardPageWidgetLogTableUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableUnitInput` via:
//
//	OneDashboardPageWidgetLogTableUnitArgs{...}
type OneDashboardPageWidgetLogTableUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableUnitOutput() OneDashboardPageWidgetLogTableUnitOutput
	ToOneDashboardPageWidgetLogTableUnitOutputWithContext(context.Context) OneDashboardPageWidgetLogTableUnitOutput
}

type OneDashboardPageWidgetLogTableUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetLogTableUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableUnitArgs) ToOneDashboardPageWidgetLogTableUnitOutput() OneDashboardPageWidgetLogTableUnitOutput {
	return i.ToOneDashboardPageWidgetLogTableUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableUnitArgs) ToOneDashboardPageWidgetLogTableUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableUnitOutput)
}

// OneDashboardPageWidgetLogTableUnitArrayInput is an input type that accepts OneDashboardPageWidgetLogTableUnitArray and OneDashboardPageWidgetLogTableUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableUnitArrayInput` via:
//
//	OneDashboardPageWidgetLogTableUnitArray{ OneDashboardPageWidgetLogTableUnitArgs{...} }
type OneDashboardPageWidgetLogTableUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableUnitArrayOutput() OneDashboardPageWidgetLogTableUnitArrayOutput
	ToOneDashboardPageWidgetLogTableUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableUnitArrayOutput
}

type OneDashboardPageWidgetLogTableUnitArray []OneDashboardPageWidgetLogTableUnitInput

func (OneDashboardPageWidgetLogTableUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableUnitArray) ToOneDashboardPageWidgetLogTableUnitArrayOutput() OneDashboardPageWidgetLogTableUnitArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableUnitArray) ToOneDashboardPageWidgetLogTableUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableUnitArrayOutput)
}

type OneDashboardPageWidgetLogTableUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableUnitOutput) ToOneDashboardPageWidgetLogTableUnitOutput() OneDashboardPageWidgetLogTableUnitOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableUnitOutput) ToOneDashboardPageWidgetLogTableUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetLogTableUnitOutput) SeriesOverrides() OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableUnit) []OneDashboardPageWidgetLogTableUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetLogTableUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLogTableUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableUnitArrayOutput) ToOneDashboardPageWidgetLogTableUnitArrayOutput() OneDashboardPageWidgetLogTableUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableUnitArrayOutput) ToOneDashboardPageWidgetLogTableUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableUnit {
		return vs[0].([]OneDashboardPageWidgetLogTableUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableUnitOutput)
}

type OneDashboardPageWidgetLogTableUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetLogTableUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs and OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetLogTableUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutput() OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutput() OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetLogTableUnitSeriesOverrideArray and OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetLogTableUnitSeriesOverrideArray{ OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetLogTableUnitSeriesOverrideArray []OneDashboardPageWidgetLogTableUnitSeriesOverrideInput

func (OneDashboardPageWidgetLogTableUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetLogTableUnitSeriesOverrideArray) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetLogTableUnitSeriesOverrideArray) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetLogTableUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutput() OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetLogTableUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetLogTableUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetLogTableUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetLogTableUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetMarkdown struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetMarkdownColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetMarkdownDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetMarkdownInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetMarkdownNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Required) The markdown source to be rendered in the widget.
	Text string `pulumi:"text"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetMarkdownUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetMarkdownInput is an input type that accepts OneDashboardPageWidgetMarkdownArgs and OneDashboardPageWidgetMarkdownOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownInput` via:
//
//	OneDashboardPageWidgetMarkdownArgs{...}
type OneDashboardPageWidgetMarkdownInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownOutput() OneDashboardPageWidgetMarkdownOutput
	ToOneDashboardPageWidgetMarkdownOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownOutput
}

type OneDashboardPageWidgetMarkdownArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetMarkdownColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetMarkdownDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetMarkdownInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetMarkdownNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Required) The markdown source to be rendered in the widget.
	Text pulumi.StringInput `pulumi:"text"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetMarkdownUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetMarkdownArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdown)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownArgs) ToOneDashboardPageWidgetMarkdownOutput() OneDashboardPageWidgetMarkdownOutput {
	return i.ToOneDashboardPageWidgetMarkdownOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownArgs) ToOneDashboardPageWidgetMarkdownOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownOutput)
}

// OneDashboardPageWidgetMarkdownArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownArray and OneDashboardPageWidgetMarkdownArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownArray{ OneDashboardPageWidgetMarkdownArgs{...} }
type OneDashboardPageWidgetMarkdownArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownArrayOutput() OneDashboardPageWidgetMarkdownArrayOutput
	ToOneDashboardPageWidgetMarkdownArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownArrayOutput
}

type OneDashboardPageWidgetMarkdownArray []OneDashboardPageWidgetMarkdownInput

func (OneDashboardPageWidgetMarkdownArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdown)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownArray) ToOneDashboardPageWidgetMarkdownArrayOutput() OneDashboardPageWidgetMarkdownArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownArray) ToOneDashboardPageWidgetMarkdownArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownArrayOutput)
}

type OneDashboardPageWidgetMarkdownOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdown)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownOutput) ToOneDashboardPageWidgetMarkdownOutput() OneDashboardPageWidgetMarkdownOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownOutput) ToOneDashboardPageWidgetMarkdownOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetMarkdownOutput) Colors() OneDashboardPageWidgetMarkdownColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) []OneDashboardPageWidgetMarkdownColor { return v.Colors }).(OneDashboardPageWidgetMarkdownColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetMarkdownOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetMarkdownOutput) DataFormats() OneDashboardPageWidgetMarkdownDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) []OneDashboardPageWidgetMarkdownDataFormat {
		return v.DataFormats
	}).(OneDashboardPageWidgetMarkdownDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetMarkdownOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetMarkdownOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetMarkdownOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetMarkdownOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetMarkdownOutput) InitialSorting() OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *OneDashboardPageWidgetMarkdownInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetMarkdownInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetMarkdownOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetMarkdownOutput) NullValues() OneDashboardPageWidgetMarkdownNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) []OneDashboardPageWidgetMarkdownNullValue { return v.NullValues }).(OneDashboardPageWidgetMarkdownNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetMarkdownOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetMarkdownOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) int { return v.Row }).(pulumi.IntOutput)
}

// (Required) The markdown source to be rendered in the widget.
func (o OneDashboardPageWidgetMarkdownOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) string { return v.Text }).(pulumi.StringOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetMarkdownOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetMarkdownOutput) Units() OneDashboardPageWidgetMarkdownUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) []OneDashboardPageWidgetMarkdownUnit { return v.Units }).(OneDashboardPageWidgetMarkdownUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetMarkdownOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetMarkdownOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetMarkdownOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdown) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetMarkdownArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdown)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownArrayOutput) ToOneDashboardPageWidgetMarkdownArrayOutput() OneDashboardPageWidgetMarkdownArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownArrayOutput) ToOneDashboardPageWidgetMarkdownArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdown {
		return vs[0].([]OneDashboardPageWidgetMarkdown)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownOutput)
}

type OneDashboardPageWidgetMarkdownColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetMarkdownColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetMarkdownColorInput is an input type that accepts OneDashboardPageWidgetMarkdownColorArgs and OneDashboardPageWidgetMarkdownColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownColorInput` via:
//
//	OneDashboardPageWidgetMarkdownColorArgs{...}
type OneDashboardPageWidgetMarkdownColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownColorOutput() OneDashboardPageWidgetMarkdownColorOutput
	ToOneDashboardPageWidgetMarkdownColorOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownColorOutput
}

type OneDashboardPageWidgetMarkdownColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetMarkdownColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownColorArgs) ToOneDashboardPageWidgetMarkdownColorOutput() OneDashboardPageWidgetMarkdownColorOutput {
	return i.ToOneDashboardPageWidgetMarkdownColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownColorArgs) ToOneDashboardPageWidgetMarkdownColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownColorOutput)
}

// OneDashboardPageWidgetMarkdownColorArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownColorArray and OneDashboardPageWidgetMarkdownColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownColorArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownColorArray{ OneDashboardPageWidgetMarkdownColorArgs{...} }
type OneDashboardPageWidgetMarkdownColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownColorArrayOutput() OneDashboardPageWidgetMarkdownColorArrayOutput
	ToOneDashboardPageWidgetMarkdownColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownColorArrayOutput
}

type OneDashboardPageWidgetMarkdownColorArray []OneDashboardPageWidgetMarkdownColorInput

func (OneDashboardPageWidgetMarkdownColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownColorArray) ToOneDashboardPageWidgetMarkdownColorArrayOutput() OneDashboardPageWidgetMarkdownColorArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownColorArray) ToOneDashboardPageWidgetMarkdownColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownColorArrayOutput)
}

type OneDashboardPageWidgetMarkdownColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownColorOutput) ToOneDashboardPageWidgetMarkdownColorOutput() OneDashboardPageWidgetMarkdownColorOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownColorOutput) ToOneDashboardPageWidgetMarkdownColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetMarkdownColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetMarkdownColorOutput) SeriesOverrides() OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownColor) []OneDashboardPageWidgetMarkdownColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetMarkdownColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownColorArrayOutput) ToOneDashboardPageWidgetMarkdownColorArrayOutput() OneDashboardPageWidgetMarkdownColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownColorArrayOutput) ToOneDashboardPageWidgetMarkdownColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownColor {
		return vs[0].([]OneDashboardPageWidgetMarkdownColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownColorOutput)
}

type OneDashboardPageWidgetMarkdownColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetMarkdownColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs and OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetMarkdownColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutput() OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput
	ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput
}

type OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutput() OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownColorSeriesOverrideArray and OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownColorSeriesOverrideArray{ OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetMarkdownColorSeriesOverrideArray []OneDashboardPageWidgetMarkdownColorSeriesOverrideInput

func (OneDashboardPageWidgetMarkdownColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownColorSeriesOverrideArray) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownColorSeriesOverrideArray) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutput() OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetMarkdownColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetMarkdownDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetMarkdownDataFormatInput is an input type that accepts OneDashboardPageWidgetMarkdownDataFormatArgs and OneDashboardPageWidgetMarkdownDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownDataFormatInput` via:
//
//	OneDashboardPageWidgetMarkdownDataFormatArgs{...}
type OneDashboardPageWidgetMarkdownDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownDataFormatOutput() OneDashboardPageWidgetMarkdownDataFormatOutput
	ToOneDashboardPageWidgetMarkdownDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownDataFormatOutput
}

type OneDashboardPageWidgetMarkdownDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetMarkdownDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownDataFormatArgs) ToOneDashboardPageWidgetMarkdownDataFormatOutput() OneDashboardPageWidgetMarkdownDataFormatOutput {
	return i.ToOneDashboardPageWidgetMarkdownDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownDataFormatArgs) ToOneDashboardPageWidgetMarkdownDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownDataFormatOutput)
}

// OneDashboardPageWidgetMarkdownDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownDataFormatArray and OneDashboardPageWidgetMarkdownDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownDataFormatArray{ OneDashboardPageWidgetMarkdownDataFormatArgs{...} }
type OneDashboardPageWidgetMarkdownDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownDataFormatArrayOutput() OneDashboardPageWidgetMarkdownDataFormatArrayOutput
	ToOneDashboardPageWidgetMarkdownDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownDataFormatArrayOutput
}

type OneDashboardPageWidgetMarkdownDataFormatArray []OneDashboardPageWidgetMarkdownDataFormatInput

func (OneDashboardPageWidgetMarkdownDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownDataFormatArray) ToOneDashboardPageWidgetMarkdownDataFormatArrayOutput() OneDashboardPageWidgetMarkdownDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownDataFormatArray) ToOneDashboardPageWidgetMarkdownDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownDataFormatArrayOutput)
}

type OneDashboardPageWidgetMarkdownDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownDataFormatOutput) ToOneDashboardPageWidgetMarkdownDataFormatOutput() OneDashboardPageWidgetMarkdownDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownDataFormatOutput) ToOneDashboardPageWidgetMarkdownDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetMarkdownDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetMarkdownDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetMarkdownDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetMarkdownDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetMarkdownDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownDataFormatArrayOutput) ToOneDashboardPageWidgetMarkdownDataFormatArrayOutput() OneDashboardPageWidgetMarkdownDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownDataFormatArrayOutput) ToOneDashboardPageWidgetMarkdownDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownDataFormat {
		return vs[0].([]OneDashboardPageWidgetMarkdownDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownDataFormatOutput)
}

type OneDashboardPageWidgetMarkdownInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetMarkdownInitialSortingInput is an input type that accepts OneDashboardPageWidgetMarkdownInitialSortingArgs and OneDashboardPageWidgetMarkdownInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownInitialSortingInput` via:
//
//	OneDashboardPageWidgetMarkdownInitialSortingArgs{...}
type OneDashboardPageWidgetMarkdownInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownInitialSortingOutput() OneDashboardPageWidgetMarkdownInitialSortingOutput
	ToOneDashboardPageWidgetMarkdownInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownInitialSortingOutput
}

type OneDashboardPageWidgetMarkdownInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetMarkdownInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownInitialSortingArgs) ToOneDashboardPageWidgetMarkdownInitialSortingOutput() OneDashboardPageWidgetMarkdownInitialSortingOutput {
	return i.ToOneDashboardPageWidgetMarkdownInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownInitialSortingArgs) ToOneDashboardPageWidgetMarkdownInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownInitialSortingOutput)
}

func (i OneDashboardPageWidgetMarkdownInitialSortingArgs) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutput() OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownInitialSortingArgs) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownInitialSortingOutput).ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetMarkdownInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetMarkdownInitialSortingArgs, OneDashboardPageWidgetMarkdownInitialSortingPtr and OneDashboardPageWidgetMarkdownInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetMarkdownInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetMarkdownInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutput() OneDashboardPageWidgetMarkdownInitialSortingPtrOutput
	ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownInitialSortingPtrOutput
}

type oneDashboardPageWidgetMarkdownInitialSortingPtrType OneDashboardPageWidgetMarkdownInitialSortingArgs

func OneDashboardPageWidgetMarkdownInitialSortingPtr(v *OneDashboardPageWidgetMarkdownInitialSortingArgs) OneDashboardPageWidgetMarkdownInitialSortingPtrInput {
	return (*oneDashboardPageWidgetMarkdownInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetMarkdownInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetMarkdownInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetMarkdownInitialSortingPtrType) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutput() OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetMarkdownInitialSortingPtrType) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownInitialSortingPtrOutput)
}

type OneDashboardPageWidgetMarkdownInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownInitialSortingOutput) ToOneDashboardPageWidgetMarkdownInitialSortingOutput() OneDashboardPageWidgetMarkdownInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownInitialSortingOutput) ToOneDashboardPageWidgetMarkdownInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownInitialSortingOutput) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutput() OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetMarkdownInitialSortingOutput) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetMarkdownInitialSorting) *OneDashboardPageWidgetMarkdownInitialSorting {
		return &v
	}).(OneDashboardPageWidgetMarkdownInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetMarkdownInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetMarkdownInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetMarkdownInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetMarkdownInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownInitialSortingPtrOutput) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutput() OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownInitialSortingPtrOutput) ToOneDashboardPageWidgetMarkdownInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownInitialSortingPtrOutput) Elem() OneDashboardPageWidgetMarkdownInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetMarkdownInitialSorting) OneDashboardPageWidgetMarkdownInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetMarkdownInitialSorting
		return ret
	}).(OneDashboardPageWidgetMarkdownInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetMarkdownInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetMarkdownInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetMarkdownInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetMarkdownInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetMarkdownNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetMarkdownNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetMarkdownNullValueInput is an input type that accepts OneDashboardPageWidgetMarkdownNullValueArgs and OneDashboardPageWidgetMarkdownNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownNullValueInput` via:
//
//	OneDashboardPageWidgetMarkdownNullValueArgs{...}
type OneDashboardPageWidgetMarkdownNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownNullValueOutput() OneDashboardPageWidgetMarkdownNullValueOutput
	ToOneDashboardPageWidgetMarkdownNullValueOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownNullValueOutput
}

type OneDashboardPageWidgetMarkdownNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetMarkdownNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownNullValueArgs) ToOneDashboardPageWidgetMarkdownNullValueOutput() OneDashboardPageWidgetMarkdownNullValueOutput {
	return i.ToOneDashboardPageWidgetMarkdownNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownNullValueArgs) ToOneDashboardPageWidgetMarkdownNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownNullValueOutput)
}

// OneDashboardPageWidgetMarkdownNullValueArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownNullValueArray and OneDashboardPageWidgetMarkdownNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownNullValueArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownNullValueArray{ OneDashboardPageWidgetMarkdownNullValueArgs{...} }
type OneDashboardPageWidgetMarkdownNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownNullValueArrayOutput() OneDashboardPageWidgetMarkdownNullValueArrayOutput
	ToOneDashboardPageWidgetMarkdownNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownNullValueArrayOutput
}

type OneDashboardPageWidgetMarkdownNullValueArray []OneDashboardPageWidgetMarkdownNullValueInput

func (OneDashboardPageWidgetMarkdownNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownNullValueArray) ToOneDashboardPageWidgetMarkdownNullValueArrayOutput() OneDashboardPageWidgetMarkdownNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownNullValueArray) ToOneDashboardPageWidgetMarkdownNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownNullValueArrayOutput)
}

type OneDashboardPageWidgetMarkdownNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownNullValueOutput) ToOneDashboardPageWidgetMarkdownNullValueOutput() OneDashboardPageWidgetMarkdownNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownNullValueOutput) ToOneDashboardPageWidgetMarkdownNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetMarkdownNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetMarkdownNullValueOutput) SeriesOverrides() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownNullValue) []OneDashboardPageWidgetMarkdownNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetMarkdownNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownNullValueArrayOutput) ToOneDashboardPageWidgetMarkdownNullValueArrayOutput() OneDashboardPageWidgetMarkdownNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownNullValueArrayOutput) ToOneDashboardPageWidgetMarkdownNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownNullValue {
		return vs[0].([]OneDashboardPageWidgetMarkdownNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownNullValueOutput)
}

type OneDashboardPageWidgetMarkdownNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetMarkdownNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs and OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetMarkdownNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray and OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray{ OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray []OneDashboardPageWidgetMarkdownNullValueSeriesOverrideInput

func (OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetMarkdownNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetMarkdownUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetMarkdownUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetMarkdownUnitInput is an input type that accepts OneDashboardPageWidgetMarkdownUnitArgs and OneDashboardPageWidgetMarkdownUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownUnitInput` via:
//
//	OneDashboardPageWidgetMarkdownUnitArgs{...}
type OneDashboardPageWidgetMarkdownUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownUnitOutput() OneDashboardPageWidgetMarkdownUnitOutput
	ToOneDashboardPageWidgetMarkdownUnitOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownUnitOutput
}

type OneDashboardPageWidgetMarkdownUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetMarkdownUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownUnitArgs) ToOneDashboardPageWidgetMarkdownUnitOutput() OneDashboardPageWidgetMarkdownUnitOutput {
	return i.ToOneDashboardPageWidgetMarkdownUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownUnitArgs) ToOneDashboardPageWidgetMarkdownUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownUnitOutput)
}

// OneDashboardPageWidgetMarkdownUnitArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownUnitArray and OneDashboardPageWidgetMarkdownUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownUnitArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownUnitArray{ OneDashboardPageWidgetMarkdownUnitArgs{...} }
type OneDashboardPageWidgetMarkdownUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownUnitArrayOutput() OneDashboardPageWidgetMarkdownUnitArrayOutput
	ToOneDashboardPageWidgetMarkdownUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownUnitArrayOutput
}

type OneDashboardPageWidgetMarkdownUnitArray []OneDashboardPageWidgetMarkdownUnitInput

func (OneDashboardPageWidgetMarkdownUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownUnitArray) ToOneDashboardPageWidgetMarkdownUnitArrayOutput() OneDashboardPageWidgetMarkdownUnitArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownUnitArray) ToOneDashboardPageWidgetMarkdownUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownUnitArrayOutput)
}

type OneDashboardPageWidgetMarkdownUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownUnitOutput) ToOneDashboardPageWidgetMarkdownUnitOutput() OneDashboardPageWidgetMarkdownUnitOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownUnitOutput) ToOneDashboardPageWidgetMarkdownUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetMarkdownUnitOutput) SeriesOverrides() OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownUnit) []OneDashboardPageWidgetMarkdownUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetMarkdownUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetMarkdownUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownUnitArrayOutput) ToOneDashboardPageWidgetMarkdownUnitArrayOutput() OneDashboardPageWidgetMarkdownUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownUnitArrayOutput) ToOneDashboardPageWidgetMarkdownUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownUnit {
		return vs[0].([]OneDashboardPageWidgetMarkdownUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownUnitOutput)
}

type OneDashboardPageWidgetMarkdownUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetMarkdownUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs and OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetMarkdownUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput() OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput() OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray and OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray{ OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray []OneDashboardPageWidgetMarkdownUnitSeriesOverrideInput

func (OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput() OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetMarkdownUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetMarkdownUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetMarkdownUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetMarkdownUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetPy struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetPyColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetPyDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard *bool `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetPyInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids []string `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetPyNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetPyNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetPyUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetPyInput is an input type that accepts OneDashboardPageWidgetPyArgs and OneDashboardPageWidgetPyOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyInput` via:
//
//	OneDashboardPageWidgetPyArgs{...}
type OneDashboardPageWidgetPyInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyOutput() OneDashboardPageWidgetPyOutput
	ToOneDashboardPageWidgetPyOutputWithContext(context.Context) OneDashboardPageWidgetPyOutput
}

type OneDashboardPageWidgetPyArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetPyColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetPyDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard pulumi.BoolPtrInput `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetPyInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids pulumi.StringArrayInput `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetPyNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetPyNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetPyUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetPyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPy)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyArgs) ToOneDashboardPageWidgetPyOutput() OneDashboardPageWidgetPyOutput {
	return i.ToOneDashboardPageWidgetPyOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyArgs) ToOneDashboardPageWidgetPyOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyOutput)
}

// OneDashboardPageWidgetPyArrayInput is an input type that accepts OneDashboardPageWidgetPyArray and OneDashboardPageWidgetPyArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyArrayInput` via:
//
//	OneDashboardPageWidgetPyArray{ OneDashboardPageWidgetPyArgs{...} }
type OneDashboardPageWidgetPyArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyArrayOutput() OneDashboardPageWidgetPyArrayOutput
	ToOneDashboardPageWidgetPyArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyArrayOutput
}

type OneDashboardPageWidgetPyArray []OneDashboardPageWidgetPyInput

func (OneDashboardPageWidgetPyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPy)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyArray) ToOneDashboardPageWidgetPyArrayOutput() OneDashboardPageWidgetPyArrayOutput {
	return i.ToOneDashboardPageWidgetPyArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyArray) ToOneDashboardPageWidgetPyArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyArrayOutput)
}

type OneDashboardPageWidgetPyOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPy)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyOutput) ToOneDashboardPageWidgetPyOutput() OneDashboardPageWidgetPyOutput {
	return o
}

func (o OneDashboardPageWidgetPyOutput) ToOneDashboardPageWidgetPyOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetPyOutput) Colors() OneDashboardPageWidgetPyColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) []OneDashboardPageWidgetPyColor { return v.Colors }).(OneDashboardPageWidgetPyColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetPyOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetPyOutput) DataFormats() OneDashboardPageWidgetPyDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) []OneDashboardPageWidgetPyDataFormat { return v.DataFormats }).(OneDashboardPageWidgetPyDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetPyOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Use this item to filter the current dashboard.
func (o OneDashboardPageWidgetPyOutput) FilterCurrentDashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *bool { return v.FilterCurrentDashboard }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetPyOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetPyOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetPyOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetPyOutput) InitialSorting() OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *OneDashboardPageWidgetPyInitialSorting { return v.InitialSorting }).(OneDashboardPageWidgetPyInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetPyOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
func (o OneDashboardPageWidgetPyOutput) LinkedEntityGuids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) []string { return v.LinkedEntityGuids }).(pulumi.StringArrayOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetPyOutput) NrqlQueries() OneDashboardPageWidgetPyNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) []OneDashboardPageWidgetPyNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetPyNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetPyOutput) NullValues() OneDashboardPageWidgetPyNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) []OneDashboardPageWidgetPyNullValue { return v.NullValues }).(OneDashboardPageWidgetPyNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetPyOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetPyOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetPyOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetPyOutput) Units() OneDashboardPageWidgetPyUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) []OneDashboardPageWidgetPyUnit { return v.Units }).(OneDashboardPageWidgetPyUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetPyOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetPyOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetPyOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPy) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetPyArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPy)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyArrayOutput) ToOneDashboardPageWidgetPyArrayOutput() OneDashboardPageWidgetPyArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyArrayOutput) ToOneDashboardPageWidgetPyArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPy {
		return vs[0].([]OneDashboardPageWidgetPy)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyOutput)
}

type OneDashboardPageWidgetPyColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetPyColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetPyColorInput is an input type that accepts OneDashboardPageWidgetPyColorArgs and OneDashboardPageWidgetPyColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyColorInput` via:
//
//	OneDashboardPageWidgetPyColorArgs{...}
type OneDashboardPageWidgetPyColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyColorOutput() OneDashboardPageWidgetPyColorOutput
	ToOneDashboardPageWidgetPyColorOutputWithContext(context.Context) OneDashboardPageWidgetPyColorOutput
}

type OneDashboardPageWidgetPyColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetPyColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetPyColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyColorArgs) ToOneDashboardPageWidgetPyColorOutput() OneDashboardPageWidgetPyColorOutput {
	return i.ToOneDashboardPageWidgetPyColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyColorArgs) ToOneDashboardPageWidgetPyColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyColorOutput)
}

// OneDashboardPageWidgetPyColorArrayInput is an input type that accepts OneDashboardPageWidgetPyColorArray and OneDashboardPageWidgetPyColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyColorArrayInput` via:
//
//	OneDashboardPageWidgetPyColorArray{ OneDashboardPageWidgetPyColorArgs{...} }
type OneDashboardPageWidgetPyColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyColorArrayOutput() OneDashboardPageWidgetPyColorArrayOutput
	ToOneDashboardPageWidgetPyColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyColorArrayOutput
}

type OneDashboardPageWidgetPyColorArray []OneDashboardPageWidgetPyColorInput

func (OneDashboardPageWidgetPyColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyColorArray) ToOneDashboardPageWidgetPyColorArrayOutput() OneDashboardPageWidgetPyColorArrayOutput {
	return i.ToOneDashboardPageWidgetPyColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyColorArray) ToOneDashboardPageWidgetPyColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyColorArrayOutput)
}

type OneDashboardPageWidgetPyColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyColorOutput) ToOneDashboardPageWidgetPyColorOutput() OneDashboardPageWidgetPyColorOutput {
	return o
}

func (o OneDashboardPageWidgetPyColorOutput) ToOneDashboardPageWidgetPyColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetPyColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetPyColorOutput) SeriesOverrides() OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyColor) []OneDashboardPageWidgetPyColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetPyColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyColorArrayOutput) ToOneDashboardPageWidgetPyColorArrayOutput() OneDashboardPageWidgetPyColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyColorArrayOutput) ToOneDashboardPageWidgetPyColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyColor {
		return vs[0].([]OneDashboardPageWidgetPyColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyColorOutput)
}

type OneDashboardPageWidgetPyColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetPyColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetPyColorSeriesOverrideArgs and OneDashboardPageWidgetPyColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetPyColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetPyColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyColorSeriesOverrideOutput() OneDashboardPageWidgetPyColorSeriesOverrideOutput
	ToOneDashboardPageWidgetPyColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetPyColorSeriesOverrideOutput
}

type OneDashboardPageWidgetPyColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetPyColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyColorSeriesOverrideArgs) ToOneDashboardPageWidgetPyColorSeriesOverrideOutput() OneDashboardPageWidgetPyColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetPyColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyColorSeriesOverrideArgs) ToOneDashboardPageWidgetPyColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetPyColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetPyColorSeriesOverrideArray and OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetPyColorSeriesOverrideArray{ OneDashboardPageWidgetPyColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetPyColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutput() OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetPyColorSeriesOverrideArray []OneDashboardPageWidgetPyColorSeriesOverrideInput

func (OneDashboardPageWidgetPyColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyColorSeriesOverrideArray) ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutput() OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyColorSeriesOverrideArray) ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetPyColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyColorSeriesOverrideOutput) ToOneDashboardPageWidgetPyColorSeriesOverrideOutput() OneDashboardPageWidgetPyColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetPyColorSeriesOverrideOutput) ToOneDashboardPageWidgetPyColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetPyColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetPyColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutput() OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetPyColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetPyColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetPyDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetPyDataFormatInput is an input type that accepts OneDashboardPageWidgetPyDataFormatArgs and OneDashboardPageWidgetPyDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyDataFormatInput` via:
//
//	OneDashboardPageWidgetPyDataFormatArgs{...}
type OneDashboardPageWidgetPyDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyDataFormatOutput() OneDashboardPageWidgetPyDataFormatOutput
	ToOneDashboardPageWidgetPyDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetPyDataFormatOutput
}

type OneDashboardPageWidgetPyDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetPyDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyDataFormatArgs) ToOneDashboardPageWidgetPyDataFormatOutput() OneDashboardPageWidgetPyDataFormatOutput {
	return i.ToOneDashboardPageWidgetPyDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyDataFormatArgs) ToOneDashboardPageWidgetPyDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyDataFormatOutput)
}

// OneDashboardPageWidgetPyDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetPyDataFormatArray and OneDashboardPageWidgetPyDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetPyDataFormatArray{ OneDashboardPageWidgetPyDataFormatArgs{...} }
type OneDashboardPageWidgetPyDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyDataFormatArrayOutput() OneDashboardPageWidgetPyDataFormatArrayOutput
	ToOneDashboardPageWidgetPyDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyDataFormatArrayOutput
}

type OneDashboardPageWidgetPyDataFormatArray []OneDashboardPageWidgetPyDataFormatInput

func (OneDashboardPageWidgetPyDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyDataFormatArray) ToOneDashboardPageWidgetPyDataFormatArrayOutput() OneDashboardPageWidgetPyDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetPyDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyDataFormatArray) ToOneDashboardPageWidgetPyDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyDataFormatArrayOutput)
}

type OneDashboardPageWidgetPyDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyDataFormatOutput) ToOneDashboardPageWidgetPyDataFormatOutput() OneDashboardPageWidgetPyDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetPyDataFormatOutput) ToOneDashboardPageWidgetPyDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetPyDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetPyDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetPyDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetPyDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetPyDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyDataFormatArrayOutput) ToOneDashboardPageWidgetPyDataFormatArrayOutput() OneDashboardPageWidgetPyDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyDataFormatArrayOutput) ToOneDashboardPageWidgetPyDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyDataFormat {
		return vs[0].([]OneDashboardPageWidgetPyDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyDataFormatOutput)
}

type OneDashboardPageWidgetPyInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetPyInitialSortingInput is an input type that accepts OneDashboardPageWidgetPyInitialSortingArgs and OneDashboardPageWidgetPyInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyInitialSortingInput` via:
//
//	OneDashboardPageWidgetPyInitialSortingArgs{...}
type OneDashboardPageWidgetPyInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyInitialSortingOutput() OneDashboardPageWidgetPyInitialSortingOutput
	ToOneDashboardPageWidgetPyInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetPyInitialSortingOutput
}

type OneDashboardPageWidgetPyInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetPyInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyInitialSortingArgs) ToOneDashboardPageWidgetPyInitialSortingOutput() OneDashboardPageWidgetPyInitialSortingOutput {
	return i.ToOneDashboardPageWidgetPyInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyInitialSortingArgs) ToOneDashboardPageWidgetPyInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyInitialSortingOutput)
}

func (i OneDashboardPageWidgetPyInitialSortingArgs) ToOneDashboardPageWidgetPyInitialSortingPtrOutput() OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyInitialSortingArgs) ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyInitialSortingOutput).ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetPyInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetPyInitialSortingArgs, OneDashboardPageWidgetPyInitialSortingPtr and OneDashboardPageWidgetPyInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetPyInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetPyInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyInitialSortingPtrOutput() OneDashboardPageWidgetPyInitialSortingPtrOutput
	ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetPyInitialSortingPtrOutput
}

type oneDashboardPageWidgetPyInitialSortingPtrType OneDashboardPageWidgetPyInitialSortingArgs

func OneDashboardPageWidgetPyInitialSortingPtr(v *OneDashboardPageWidgetPyInitialSortingArgs) OneDashboardPageWidgetPyInitialSortingPtrInput {
	return (*oneDashboardPageWidgetPyInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetPyInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetPyInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetPyInitialSortingPtrType) ToOneDashboardPageWidgetPyInitialSortingPtrOutput() OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetPyInitialSortingPtrType) ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyInitialSortingPtrOutput)
}

type OneDashboardPageWidgetPyInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyInitialSortingOutput) ToOneDashboardPageWidgetPyInitialSortingOutput() OneDashboardPageWidgetPyInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetPyInitialSortingOutput) ToOneDashboardPageWidgetPyInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetPyInitialSortingOutput) ToOneDashboardPageWidgetPyInitialSortingPtrOutput() OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetPyInitialSortingOutput) ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetPyInitialSorting) *OneDashboardPageWidgetPyInitialSorting {
		return &v
	}).(OneDashboardPageWidgetPyInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetPyInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetPyInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetPyInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetPyInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyInitialSortingPtrOutput) ToOneDashboardPageWidgetPyInitialSortingPtrOutput() OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetPyInitialSortingPtrOutput) ToOneDashboardPageWidgetPyInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetPyInitialSortingPtrOutput) Elem() OneDashboardPageWidgetPyInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetPyInitialSorting) OneDashboardPageWidgetPyInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetPyInitialSorting
		return ret
	}).(OneDashboardPageWidgetPyInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetPyInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetPyInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetPyInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetPyInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetPyNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetPyNrqlQueryInput is an input type that accepts OneDashboardPageWidgetPyNrqlQueryArgs and OneDashboardPageWidgetPyNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyNrqlQueryInput` via:
//
//	OneDashboardPageWidgetPyNrqlQueryArgs{...}
type OneDashboardPageWidgetPyNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyNrqlQueryOutput() OneDashboardPageWidgetPyNrqlQueryOutput
	ToOneDashboardPageWidgetPyNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetPyNrqlQueryOutput
}

type OneDashboardPageWidgetPyNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetPyNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyNrqlQueryArgs) ToOneDashboardPageWidgetPyNrqlQueryOutput() OneDashboardPageWidgetPyNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetPyNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyNrqlQueryArgs) ToOneDashboardPageWidgetPyNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyNrqlQueryOutput)
}

// OneDashboardPageWidgetPyNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetPyNrqlQueryArray and OneDashboardPageWidgetPyNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetPyNrqlQueryArray{ OneDashboardPageWidgetPyNrqlQueryArgs{...} }
type OneDashboardPageWidgetPyNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyNrqlQueryArrayOutput() OneDashboardPageWidgetPyNrqlQueryArrayOutput
	ToOneDashboardPageWidgetPyNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyNrqlQueryArrayOutput
}

type OneDashboardPageWidgetPyNrqlQueryArray []OneDashboardPageWidgetPyNrqlQueryInput

func (OneDashboardPageWidgetPyNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyNrqlQueryArray) ToOneDashboardPageWidgetPyNrqlQueryArrayOutput() OneDashboardPageWidgetPyNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetPyNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyNrqlQueryArray) ToOneDashboardPageWidgetPyNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetPyNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyNrqlQueryOutput) ToOneDashboardPageWidgetPyNrqlQueryOutput() OneDashboardPageWidgetPyNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetPyNrqlQueryOutput) ToOneDashboardPageWidgetPyNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetPyNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetPyNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetPyNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyNrqlQueryArrayOutput) ToOneDashboardPageWidgetPyNrqlQueryArrayOutput() OneDashboardPageWidgetPyNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyNrqlQueryArrayOutput) ToOneDashboardPageWidgetPyNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetPyNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyNrqlQueryOutput)
}

type OneDashboardPageWidgetPyNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetPyNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetPyNullValueInput is an input type that accepts OneDashboardPageWidgetPyNullValueArgs and OneDashboardPageWidgetPyNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyNullValueInput` via:
//
//	OneDashboardPageWidgetPyNullValueArgs{...}
type OneDashboardPageWidgetPyNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyNullValueOutput() OneDashboardPageWidgetPyNullValueOutput
	ToOneDashboardPageWidgetPyNullValueOutputWithContext(context.Context) OneDashboardPageWidgetPyNullValueOutput
}

type OneDashboardPageWidgetPyNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetPyNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetPyNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyNullValueArgs) ToOneDashboardPageWidgetPyNullValueOutput() OneDashboardPageWidgetPyNullValueOutput {
	return i.ToOneDashboardPageWidgetPyNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyNullValueArgs) ToOneDashboardPageWidgetPyNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyNullValueOutput)
}

// OneDashboardPageWidgetPyNullValueArrayInput is an input type that accepts OneDashboardPageWidgetPyNullValueArray and OneDashboardPageWidgetPyNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyNullValueArrayInput` via:
//
//	OneDashboardPageWidgetPyNullValueArray{ OneDashboardPageWidgetPyNullValueArgs{...} }
type OneDashboardPageWidgetPyNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyNullValueArrayOutput() OneDashboardPageWidgetPyNullValueArrayOutput
	ToOneDashboardPageWidgetPyNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyNullValueArrayOutput
}

type OneDashboardPageWidgetPyNullValueArray []OneDashboardPageWidgetPyNullValueInput

func (OneDashboardPageWidgetPyNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyNullValueArray) ToOneDashboardPageWidgetPyNullValueArrayOutput() OneDashboardPageWidgetPyNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetPyNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyNullValueArray) ToOneDashboardPageWidgetPyNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyNullValueArrayOutput)
}

type OneDashboardPageWidgetPyNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyNullValueOutput) ToOneDashboardPageWidgetPyNullValueOutput() OneDashboardPageWidgetPyNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetPyNullValueOutput) ToOneDashboardPageWidgetPyNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetPyNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetPyNullValueOutput) SeriesOverrides() OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyNullValue) []OneDashboardPageWidgetPyNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetPyNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyNullValueArrayOutput) ToOneDashboardPageWidgetPyNullValueArrayOutput() OneDashboardPageWidgetPyNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyNullValueArrayOutput) ToOneDashboardPageWidgetPyNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyNullValue {
		return vs[0].([]OneDashboardPageWidgetPyNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyNullValueOutput)
}

type OneDashboardPageWidgetPyNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetPyNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetPyNullValueSeriesOverrideArgs and OneDashboardPageWidgetPyNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetPyNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetPyNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutput() OneDashboardPageWidgetPyNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetPyNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetPyNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetPyNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutput() OneDashboardPageWidgetPyNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetPyNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetPyNullValueSeriesOverrideArray and OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetPyNullValueSeriesOverrideArray{ OneDashboardPageWidgetPyNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetPyNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetPyNullValueSeriesOverrideArray []OneDashboardPageWidgetPyNullValueSeriesOverrideInput

func (OneDashboardPageWidgetPyNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyNullValueSeriesOverrideArray) ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyNullValueSeriesOverrideArray) ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetPyNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutput() OneDashboardPageWidgetPyNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetPyNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetPyNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetPyNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetPyNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetPyNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetPyUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetPyUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetPyUnitInput is an input type that accepts OneDashboardPageWidgetPyUnitArgs and OneDashboardPageWidgetPyUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyUnitInput` via:
//
//	OneDashboardPageWidgetPyUnitArgs{...}
type OneDashboardPageWidgetPyUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyUnitOutput() OneDashboardPageWidgetPyUnitOutput
	ToOneDashboardPageWidgetPyUnitOutputWithContext(context.Context) OneDashboardPageWidgetPyUnitOutput
}

type OneDashboardPageWidgetPyUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetPyUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetPyUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyUnitArgs) ToOneDashboardPageWidgetPyUnitOutput() OneDashboardPageWidgetPyUnitOutput {
	return i.ToOneDashboardPageWidgetPyUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyUnitArgs) ToOneDashboardPageWidgetPyUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyUnitOutput)
}

// OneDashboardPageWidgetPyUnitArrayInput is an input type that accepts OneDashboardPageWidgetPyUnitArray and OneDashboardPageWidgetPyUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyUnitArrayInput` via:
//
//	OneDashboardPageWidgetPyUnitArray{ OneDashboardPageWidgetPyUnitArgs{...} }
type OneDashboardPageWidgetPyUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyUnitArrayOutput() OneDashboardPageWidgetPyUnitArrayOutput
	ToOneDashboardPageWidgetPyUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyUnitArrayOutput
}

type OneDashboardPageWidgetPyUnitArray []OneDashboardPageWidgetPyUnitInput

func (OneDashboardPageWidgetPyUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyUnitArray) ToOneDashboardPageWidgetPyUnitArrayOutput() OneDashboardPageWidgetPyUnitArrayOutput {
	return i.ToOneDashboardPageWidgetPyUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyUnitArray) ToOneDashboardPageWidgetPyUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyUnitArrayOutput)
}

type OneDashboardPageWidgetPyUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyUnitOutput) ToOneDashboardPageWidgetPyUnitOutput() OneDashboardPageWidgetPyUnitOutput {
	return o
}

func (o OneDashboardPageWidgetPyUnitOutput) ToOneDashboardPageWidgetPyUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetPyUnitOutput) SeriesOverrides() OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyUnit) []OneDashboardPageWidgetPyUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetPyUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetPyUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyUnitArrayOutput) ToOneDashboardPageWidgetPyUnitArrayOutput() OneDashboardPageWidgetPyUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyUnitArrayOutput) ToOneDashboardPageWidgetPyUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyUnit {
		return vs[0].([]OneDashboardPageWidgetPyUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyUnitOutput)
}

type OneDashboardPageWidgetPyUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetPyUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetPyUnitSeriesOverrideArgs and OneDashboardPageWidgetPyUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetPyUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetPyUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyUnitSeriesOverrideOutput() OneDashboardPageWidgetPyUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetPyUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetPyUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetPyUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetPyUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyUnitSeriesOverrideArgs) ToOneDashboardPageWidgetPyUnitSeriesOverrideOutput() OneDashboardPageWidgetPyUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetPyUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyUnitSeriesOverrideArgs) ToOneDashboardPageWidgetPyUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetPyUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetPyUnitSeriesOverrideArray and OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetPyUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetPyUnitSeriesOverrideArray{ OneDashboardPageWidgetPyUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetPyUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetPyUnitSeriesOverrideArray []OneDashboardPageWidgetPyUnitSeriesOverrideInput

func (OneDashboardPageWidgetPyUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetPyUnitSeriesOverrideArray) ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetPyUnitSeriesOverrideArray) ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetPyUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetPyUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyUnitSeriesOverrideOutput) ToOneDashboardPageWidgetPyUnitSeriesOverrideOutput() OneDashboardPageWidgetPyUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetPyUnitSeriesOverrideOutput) ToOneDashboardPageWidgetPyUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetPyUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetPyUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetPyUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetPyUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetPyUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetPyUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetPyUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetPyUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetPyUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetStackedBar struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetStackedBarColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetStackedBarDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetStackedBarInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetStackedBarNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetStackedBarNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetStackedBarUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetStackedBarInput is an input type that accepts OneDashboardPageWidgetStackedBarArgs and OneDashboardPageWidgetStackedBarOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarInput` via:
//
//	OneDashboardPageWidgetStackedBarArgs{...}
type OneDashboardPageWidgetStackedBarInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarOutput() OneDashboardPageWidgetStackedBarOutput
	ToOneDashboardPageWidgetStackedBarOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarOutput
}

type OneDashboardPageWidgetStackedBarArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetStackedBarColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetStackedBarDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetStackedBarInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetStackedBarNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetStackedBarNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetStackedBarUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetStackedBarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBar)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarArgs) ToOneDashboardPageWidgetStackedBarOutput() OneDashboardPageWidgetStackedBarOutput {
	return i.ToOneDashboardPageWidgetStackedBarOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarArgs) ToOneDashboardPageWidgetStackedBarOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarOutput)
}

// OneDashboardPageWidgetStackedBarArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarArray and OneDashboardPageWidgetStackedBarArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarArray{ OneDashboardPageWidgetStackedBarArgs{...} }
type OneDashboardPageWidgetStackedBarArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarArrayOutput() OneDashboardPageWidgetStackedBarArrayOutput
	ToOneDashboardPageWidgetStackedBarArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarArrayOutput
}

type OneDashboardPageWidgetStackedBarArray []OneDashboardPageWidgetStackedBarInput

func (OneDashboardPageWidgetStackedBarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBar)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarArray) ToOneDashboardPageWidgetStackedBarArrayOutput() OneDashboardPageWidgetStackedBarArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarArray) ToOneDashboardPageWidgetStackedBarArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarArrayOutput)
}

type OneDashboardPageWidgetStackedBarOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBar)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarOutput) ToOneDashboardPageWidgetStackedBarOutput() OneDashboardPageWidgetStackedBarOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarOutput) ToOneDashboardPageWidgetStackedBarOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetStackedBarOutput) Colors() OneDashboardPageWidgetStackedBarColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) []OneDashboardPageWidgetStackedBarColor { return v.Colors }).(OneDashboardPageWidgetStackedBarColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetStackedBarOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetStackedBarOutput) DataFormats() OneDashboardPageWidgetStackedBarDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) []OneDashboardPageWidgetStackedBarDataFormat {
		return v.DataFormats
	}).(OneDashboardPageWidgetStackedBarDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetStackedBarOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetStackedBarOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetStackedBarOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetStackedBarOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetStackedBarOutput) InitialSorting() OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *OneDashboardPageWidgetStackedBarInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetStackedBarInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetStackedBarOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetStackedBarOutput) NrqlQueries() OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) []OneDashboardPageWidgetStackedBarNrqlQuery {
		return v.NrqlQueries
	}).(OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetStackedBarOutput) NullValues() OneDashboardPageWidgetStackedBarNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) []OneDashboardPageWidgetStackedBarNullValue {
		return v.NullValues
	}).(OneDashboardPageWidgetStackedBarNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetStackedBarOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetStackedBarOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetStackedBarOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetStackedBarOutput) Units() OneDashboardPageWidgetStackedBarUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) []OneDashboardPageWidgetStackedBarUnit { return v.Units }).(OneDashboardPageWidgetStackedBarUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetStackedBarOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetStackedBarOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetStackedBarOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBar) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetStackedBarArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBar)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarArrayOutput) ToOneDashboardPageWidgetStackedBarArrayOutput() OneDashboardPageWidgetStackedBarArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarArrayOutput) ToOneDashboardPageWidgetStackedBarArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBar {
		return vs[0].([]OneDashboardPageWidgetStackedBar)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarOutput)
}

type OneDashboardPageWidgetStackedBarColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetStackedBarColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetStackedBarColorInput is an input type that accepts OneDashboardPageWidgetStackedBarColorArgs and OneDashboardPageWidgetStackedBarColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarColorInput` via:
//
//	OneDashboardPageWidgetStackedBarColorArgs{...}
type OneDashboardPageWidgetStackedBarColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarColorOutput() OneDashboardPageWidgetStackedBarColorOutput
	ToOneDashboardPageWidgetStackedBarColorOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarColorOutput
}

type OneDashboardPageWidgetStackedBarColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetStackedBarColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarColorArgs) ToOneDashboardPageWidgetStackedBarColorOutput() OneDashboardPageWidgetStackedBarColorOutput {
	return i.ToOneDashboardPageWidgetStackedBarColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarColorArgs) ToOneDashboardPageWidgetStackedBarColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarColorOutput)
}

// OneDashboardPageWidgetStackedBarColorArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarColorArray and OneDashboardPageWidgetStackedBarColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarColorArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarColorArray{ OneDashboardPageWidgetStackedBarColorArgs{...} }
type OneDashboardPageWidgetStackedBarColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarColorArrayOutput() OneDashboardPageWidgetStackedBarColorArrayOutput
	ToOneDashboardPageWidgetStackedBarColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarColorArrayOutput
}

type OneDashboardPageWidgetStackedBarColorArray []OneDashboardPageWidgetStackedBarColorInput

func (OneDashboardPageWidgetStackedBarColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarColorArray) ToOneDashboardPageWidgetStackedBarColorArrayOutput() OneDashboardPageWidgetStackedBarColorArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarColorArray) ToOneDashboardPageWidgetStackedBarColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarColorArrayOutput)
}

type OneDashboardPageWidgetStackedBarColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarColorOutput) ToOneDashboardPageWidgetStackedBarColorOutput() OneDashboardPageWidgetStackedBarColorOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarColorOutput) ToOneDashboardPageWidgetStackedBarColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetStackedBarColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetStackedBarColorOutput) SeriesOverrides() OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarColor) []OneDashboardPageWidgetStackedBarColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetStackedBarColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarColorArrayOutput) ToOneDashboardPageWidgetStackedBarColorArrayOutput() OneDashboardPageWidgetStackedBarColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarColorArrayOutput) ToOneDashboardPageWidgetStackedBarColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarColor {
		return vs[0].([]OneDashboardPageWidgetStackedBarColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarColorOutput)
}

type OneDashboardPageWidgetStackedBarColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetStackedBarColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs and OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetStackedBarColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutput() OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput
	ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput
}

type OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutput() OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarColorSeriesOverrideArray and OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarColorSeriesOverrideArray{ OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetStackedBarColorSeriesOverrideArray []OneDashboardPageWidgetStackedBarColorSeriesOverrideInput

func (OneDashboardPageWidgetStackedBarColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarColorSeriesOverrideArray) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarColorSeriesOverrideArray) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutput() OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetStackedBarColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetStackedBarDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetStackedBarDataFormatInput is an input type that accepts OneDashboardPageWidgetStackedBarDataFormatArgs and OneDashboardPageWidgetStackedBarDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarDataFormatInput` via:
//
//	OneDashboardPageWidgetStackedBarDataFormatArgs{...}
type OneDashboardPageWidgetStackedBarDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarDataFormatOutput() OneDashboardPageWidgetStackedBarDataFormatOutput
	ToOneDashboardPageWidgetStackedBarDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarDataFormatOutput
}

type OneDashboardPageWidgetStackedBarDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetStackedBarDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarDataFormatArgs) ToOneDashboardPageWidgetStackedBarDataFormatOutput() OneDashboardPageWidgetStackedBarDataFormatOutput {
	return i.ToOneDashboardPageWidgetStackedBarDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarDataFormatArgs) ToOneDashboardPageWidgetStackedBarDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarDataFormatOutput)
}

// OneDashboardPageWidgetStackedBarDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarDataFormatArray and OneDashboardPageWidgetStackedBarDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarDataFormatArray{ OneDashboardPageWidgetStackedBarDataFormatArgs{...} }
type OneDashboardPageWidgetStackedBarDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarDataFormatArrayOutput() OneDashboardPageWidgetStackedBarDataFormatArrayOutput
	ToOneDashboardPageWidgetStackedBarDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarDataFormatArrayOutput
}

type OneDashboardPageWidgetStackedBarDataFormatArray []OneDashboardPageWidgetStackedBarDataFormatInput

func (OneDashboardPageWidgetStackedBarDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarDataFormatArray) ToOneDashboardPageWidgetStackedBarDataFormatArrayOutput() OneDashboardPageWidgetStackedBarDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarDataFormatArray) ToOneDashboardPageWidgetStackedBarDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarDataFormatArrayOutput)
}

type OneDashboardPageWidgetStackedBarDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarDataFormatOutput) ToOneDashboardPageWidgetStackedBarDataFormatOutput() OneDashboardPageWidgetStackedBarDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarDataFormatOutput) ToOneDashboardPageWidgetStackedBarDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetStackedBarDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetStackedBarDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetStackedBarDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetStackedBarDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetStackedBarDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarDataFormatArrayOutput) ToOneDashboardPageWidgetStackedBarDataFormatArrayOutput() OneDashboardPageWidgetStackedBarDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarDataFormatArrayOutput) ToOneDashboardPageWidgetStackedBarDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarDataFormat {
		return vs[0].([]OneDashboardPageWidgetStackedBarDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarDataFormatOutput)
}

type OneDashboardPageWidgetStackedBarInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetStackedBarInitialSortingInput is an input type that accepts OneDashboardPageWidgetStackedBarInitialSortingArgs and OneDashboardPageWidgetStackedBarInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarInitialSortingInput` via:
//
//	OneDashboardPageWidgetStackedBarInitialSortingArgs{...}
type OneDashboardPageWidgetStackedBarInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarInitialSortingOutput() OneDashboardPageWidgetStackedBarInitialSortingOutput
	ToOneDashboardPageWidgetStackedBarInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarInitialSortingOutput
}

type OneDashboardPageWidgetStackedBarInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetStackedBarInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarInitialSortingArgs) ToOneDashboardPageWidgetStackedBarInitialSortingOutput() OneDashboardPageWidgetStackedBarInitialSortingOutput {
	return i.ToOneDashboardPageWidgetStackedBarInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarInitialSortingArgs) ToOneDashboardPageWidgetStackedBarInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarInitialSortingOutput)
}

func (i OneDashboardPageWidgetStackedBarInitialSortingArgs) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutput() OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarInitialSortingArgs) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarInitialSortingOutput).ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetStackedBarInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetStackedBarInitialSortingArgs, OneDashboardPageWidgetStackedBarInitialSortingPtr and OneDashboardPageWidgetStackedBarInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetStackedBarInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetStackedBarInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutput() OneDashboardPageWidgetStackedBarInitialSortingPtrOutput
	ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarInitialSortingPtrOutput
}

type oneDashboardPageWidgetStackedBarInitialSortingPtrType OneDashboardPageWidgetStackedBarInitialSortingArgs

func OneDashboardPageWidgetStackedBarInitialSortingPtr(v *OneDashboardPageWidgetStackedBarInitialSortingArgs) OneDashboardPageWidgetStackedBarInitialSortingPtrInput {
	return (*oneDashboardPageWidgetStackedBarInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetStackedBarInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetStackedBarInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetStackedBarInitialSortingPtrType) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutput() OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetStackedBarInitialSortingPtrType) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarInitialSortingPtrOutput)
}

type OneDashboardPageWidgetStackedBarInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarInitialSortingOutput) ToOneDashboardPageWidgetStackedBarInitialSortingOutput() OneDashboardPageWidgetStackedBarInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarInitialSortingOutput) ToOneDashboardPageWidgetStackedBarInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarInitialSortingOutput) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutput() OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetStackedBarInitialSortingOutput) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetStackedBarInitialSorting) *OneDashboardPageWidgetStackedBarInitialSorting {
		return &v
	}).(OneDashboardPageWidgetStackedBarInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetStackedBarInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetStackedBarInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetStackedBarInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetStackedBarInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarInitialSortingPtrOutput) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutput() OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarInitialSortingPtrOutput) ToOneDashboardPageWidgetStackedBarInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarInitialSortingPtrOutput) Elem() OneDashboardPageWidgetStackedBarInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetStackedBarInitialSorting) OneDashboardPageWidgetStackedBarInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetStackedBarInitialSorting
		return ret
	}).(OneDashboardPageWidgetStackedBarInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetStackedBarInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetStackedBarInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetStackedBarInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetStackedBarInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetStackedBarNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetStackedBarNrqlQueryInput is an input type that accepts OneDashboardPageWidgetStackedBarNrqlQueryArgs and OneDashboardPageWidgetStackedBarNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarNrqlQueryInput` via:
//
//	OneDashboardPageWidgetStackedBarNrqlQueryArgs{...}
type OneDashboardPageWidgetStackedBarNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarNrqlQueryOutput() OneDashboardPageWidgetStackedBarNrqlQueryOutput
	ToOneDashboardPageWidgetStackedBarNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarNrqlQueryOutput
}

type OneDashboardPageWidgetStackedBarNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetStackedBarNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarNrqlQueryArgs) ToOneDashboardPageWidgetStackedBarNrqlQueryOutput() OneDashboardPageWidgetStackedBarNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetStackedBarNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarNrqlQueryArgs) ToOneDashboardPageWidgetStackedBarNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarNrqlQueryOutput)
}

// OneDashboardPageWidgetStackedBarNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarNrqlQueryArray and OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarNrqlQueryArray{ OneDashboardPageWidgetStackedBarNrqlQueryArgs{...} }
type OneDashboardPageWidgetStackedBarNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutput() OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput
	ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput
}

type OneDashboardPageWidgetStackedBarNrqlQueryArray []OneDashboardPageWidgetStackedBarNrqlQueryInput

func (OneDashboardPageWidgetStackedBarNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarNrqlQueryArray) ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutput() OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarNrqlQueryArray) ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetStackedBarNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarNrqlQueryOutput) ToOneDashboardPageWidgetStackedBarNrqlQueryOutput() OneDashboardPageWidgetStackedBarNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNrqlQueryOutput) ToOneDashboardPageWidgetStackedBarNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetStackedBarNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetStackedBarNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput) ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutput() OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput) ToOneDashboardPageWidgetStackedBarNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetStackedBarNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarNrqlQueryOutput)
}

type OneDashboardPageWidgetStackedBarNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetStackedBarNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetStackedBarNullValueInput is an input type that accepts OneDashboardPageWidgetStackedBarNullValueArgs and OneDashboardPageWidgetStackedBarNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarNullValueInput` via:
//
//	OneDashboardPageWidgetStackedBarNullValueArgs{...}
type OneDashboardPageWidgetStackedBarNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarNullValueOutput() OneDashboardPageWidgetStackedBarNullValueOutput
	ToOneDashboardPageWidgetStackedBarNullValueOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarNullValueOutput
}

type OneDashboardPageWidgetStackedBarNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetStackedBarNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarNullValueArgs) ToOneDashboardPageWidgetStackedBarNullValueOutput() OneDashboardPageWidgetStackedBarNullValueOutput {
	return i.ToOneDashboardPageWidgetStackedBarNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarNullValueArgs) ToOneDashboardPageWidgetStackedBarNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarNullValueOutput)
}

// OneDashboardPageWidgetStackedBarNullValueArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarNullValueArray and OneDashboardPageWidgetStackedBarNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarNullValueArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarNullValueArray{ OneDashboardPageWidgetStackedBarNullValueArgs{...} }
type OneDashboardPageWidgetStackedBarNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarNullValueArrayOutput() OneDashboardPageWidgetStackedBarNullValueArrayOutput
	ToOneDashboardPageWidgetStackedBarNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarNullValueArrayOutput
}

type OneDashboardPageWidgetStackedBarNullValueArray []OneDashboardPageWidgetStackedBarNullValueInput

func (OneDashboardPageWidgetStackedBarNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarNullValueArray) ToOneDashboardPageWidgetStackedBarNullValueArrayOutput() OneDashboardPageWidgetStackedBarNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarNullValueArray) ToOneDashboardPageWidgetStackedBarNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarNullValueArrayOutput)
}

type OneDashboardPageWidgetStackedBarNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarNullValueOutput) ToOneDashboardPageWidgetStackedBarNullValueOutput() OneDashboardPageWidgetStackedBarNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNullValueOutput) ToOneDashboardPageWidgetStackedBarNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetStackedBarNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetStackedBarNullValueOutput) SeriesOverrides() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarNullValue) []OneDashboardPageWidgetStackedBarNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetStackedBarNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarNullValueArrayOutput) ToOneDashboardPageWidgetStackedBarNullValueArrayOutput() OneDashboardPageWidgetStackedBarNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNullValueArrayOutput) ToOneDashboardPageWidgetStackedBarNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarNullValue {
		return vs[0].([]OneDashboardPageWidgetStackedBarNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarNullValueOutput)
}

type OneDashboardPageWidgetStackedBarNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetStackedBarNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs and OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetStackedBarNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray and OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray{ OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray []OneDashboardPageWidgetStackedBarNullValueSeriesOverrideInput

func (OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetStackedBarNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetStackedBarUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetStackedBarUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetStackedBarUnitInput is an input type that accepts OneDashboardPageWidgetStackedBarUnitArgs and OneDashboardPageWidgetStackedBarUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarUnitInput` via:
//
//	OneDashboardPageWidgetStackedBarUnitArgs{...}
type OneDashboardPageWidgetStackedBarUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarUnitOutput() OneDashboardPageWidgetStackedBarUnitOutput
	ToOneDashboardPageWidgetStackedBarUnitOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarUnitOutput
}

type OneDashboardPageWidgetStackedBarUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetStackedBarUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarUnitArgs) ToOneDashboardPageWidgetStackedBarUnitOutput() OneDashboardPageWidgetStackedBarUnitOutput {
	return i.ToOneDashboardPageWidgetStackedBarUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarUnitArgs) ToOneDashboardPageWidgetStackedBarUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarUnitOutput)
}

// OneDashboardPageWidgetStackedBarUnitArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarUnitArray and OneDashboardPageWidgetStackedBarUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarUnitArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarUnitArray{ OneDashboardPageWidgetStackedBarUnitArgs{...} }
type OneDashboardPageWidgetStackedBarUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarUnitArrayOutput() OneDashboardPageWidgetStackedBarUnitArrayOutput
	ToOneDashboardPageWidgetStackedBarUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarUnitArrayOutput
}

type OneDashboardPageWidgetStackedBarUnitArray []OneDashboardPageWidgetStackedBarUnitInput

func (OneDashboardPageWidgetStackedBarUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarUnitArray) ToOneDashboardPageWidgetStackedBarUnitArrayOutput() OneDashboardPageWidgetStackedBarUnitArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarUnitArray) ToOneDashboardPageWidgetStackedBarUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarUnitArrayOutput)
}

type OneDashboardPageWidgetStackedBarUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarUnitOutput) ToOneDashboardPageWidgetStackedBarUnitOutput() OneDashboardPageWidgetStackedBarUnitOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarUnitOutput) ToOneDashboardPageWidgetStackedBarUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetStackedBarUnitOutput) SeriesOverrides() OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarUnit) []OneDashboardPageWidgetStackedBarUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetStackedBarUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetStackedBarUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarUnitArrayOutput) ToOneDashboardPageWidgetStackedBarUnitArrayOutput() OneDashboardPageWidgetStackedBarUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarUnitArrayOutput) ToOneDashboardPageWidgetStackedBarUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarUnit {
		return vs[0].([]OneDashboardPageWidgetStackedBarUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarUnitOutput)
}

type OneDashboardPageWidgetStackedBarUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetStackedBarUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs and OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetStackedBarUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput() OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput() OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray and OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray{ OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray []OneDashboardPageWidgetStackedBarUnitSeriesOverrideInput

func (OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput() OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetStackedBarUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetStackedBarUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetStackedBarUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetStackedBarUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput)
}

type OneDashboardPageWidgetTable struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors []OneDashboardPageWidgetTableColor `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats []OneDashboardPageWidgetTableDataFormat `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries *bool `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard *bool `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting *OneDashboardPageWidgetTableInitialSorting `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled *bool `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids []string `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries []OneDashboardPageWidgetTableNrqlQuery `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues []OneDashboardPageWidgetTableNullValue `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate *string `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Optional) An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a table widget. The `threshold` attribute requires specifying the following attributes in a nested block -
	Thresholds []OneDashboardPageWidgetTableThreshold `pulumi:"thresholds"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units []OneDashboardPageWidgetTableUnit `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        *int     `pulumi:"width"`
	YAxisLeftMax *float64 `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin *float64 `pulumi:"yAxisLeftMin"`
}

// OneDashboardPageWidgetTableInput is an input type that accepts OneDashboardPageWidgetTableArgs and OneDashboardPageWidgetTableOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableInput` via:
//
//	OneDashboardPageWidgetTableArgs{...}
type OneDashboardPageWidgetTableInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableOutput() OneDashboardPageWidgetTableOutput
	ToOneDashboardPageWidgetTableOutputWithContext(context.Context) OneDashboardPageWidgetTableOutput
}

type OneDashboardPageWidgetTableArgs struct {
	// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
	Colors OneDashboardPageWidgetTableColorArrayInput `pulumi:"colors"`
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
	DataFormats OneDashboardPageWidgetTableDataFormatArrayInput `pulumi:"dataFormats"`
	// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
	FacetShowOtherSeries pulumi.BoolPtrInput `pulumi:"facetShowOtherSeries"`
	// (Optional) Use this item to filter the current dashboard.
	FilterCurrentDashboard pulumi.BoolPtrInput `pulumi:"filterCurrentDashboard"`
	// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
	// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
	InitialSorting OneDashboardPageWidgetTableInitialSortingPtrInput `pulumi:"initialSorting"`
	// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
	LegendEnabled pulumi.BoolPtrInput `pulumi:"legendEnabled"`
	// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
	LinkedEntityGuids pulumi.StringArrayInput `pulumi:"linkedEntityGuids"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQueries OneDashboardPageWidgetTableNrqlQueryArrayInput `pulumi:"nrqlQueries"`
	// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
	NullValues OneDashboardPageWidgetTableNullValueArrayInput `pulumi:"nullValues"`
	// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
	RefreshRate pulumi.StringPtrInput `pulumi:"refreshRate"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Optional) An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a table widget. The `threshold` attribute requires specifying the following attributes in a nested block -
	Thresholds OneDashboardPageWidgetTableThresholdArrayInput `pulumi:"thresholds"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
	Units OneDashboardPageWidgetTableUnitArrayInput `pulumi:"units"`
	// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
	Width        pulumi.IntPtrInput     `pulumi:"width"`
	YAxisLeftMax pulumi.Float64PtrInput `pulumi:"yAxisLeftMax"`
	// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
	YAxisLeftMin pulumi.Float64PtrInput `pulumi:"yAxisLeftMin"`
}

func (OneDashboardPageWidgetTableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTable)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableArgs) ToOneDashboardPageWidgetTableOutput() OneDashboardPageWidgetTableOutput {
	return i.ToOneDashboardPageWidgetTableOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableArgs) ToOneDashboardPageWidgetTableOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableOutput)
}

// OneDashboardPageWidgetTableArrayInput is an input type that accepts OneDashboardPageWidgetTableArray and OneDashboardPageWidgetTableArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableArrayInput` via:
//
//	OneDashboardPageWidgetTableArray{ OneDashboardPageWidgetTableArgs{...} }
type OneDashboardPageWidgetTableArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableArrayOutput() OneDashboardPageWidgetTableArrayOutput
	ToOneDashboardPageWidgetTableArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableArrayOutput
}

type OneDashboardPageWidgetTableArray []OneDashboardPageWidgetTableInput

func (OneDashboardPageWidgetTableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTable)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableArray) ToOneDashboardPageWidgetTableArrayOutput() OneDashboardPageWidgetTableArrayOutput {
	return i.ToOneDashboardPageWidgetTableArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableArray) ToOneDashboardPageWidgetTableArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableArrayOutput)
}

type OneDashboardPageWidgetTableOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTable)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableOutput) ToOneDashboardPageWidgetTableOutput() OneDashboardPageWidgetTableOutput {
	return o
}

func (o OneDashboardPageWidgetTableOutput) ToOneDashboardPageWidgetTableOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableOutput {
	return o
}

// (Optional) A nested block that describes colors of your charts per series. See Nested Colors blocks below for details.
func (o OneDashboardPageWidgetTableOutput) Colors() OneDashboardPageWidgetTableColorArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []OneDashboardPageWidgetTableColor { return v.Colors }).(OneDashboardPageWidgetTableColorArrayOutput)
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetTableOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) int { return v.Column }).(pulumi.IntOutput)
}

// (Optional) A nested block that describes data format. See Nested dataFormat blocks below for details.
func (o OneDashboardPageWidgetTableOutput) DataFormats() OneDashboardPageWidgetTableDataFormatArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []OneDashboardPageWidgetTableDataFormat { return v.DataFormats }).(OneDashboardPageWidgetTableDataFormatArrayOutput)
}

// (Optional) Enable or disable the Other group in visualisations. The other group is used if a facet on a query returns more than 2000 items for bar charts, pie charts, and tables. The other group aggregates the rest of the facets. Defaults to `false`
func (o OneDashboardPageWidgetTableOutput) FacetShowOtherSeries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *bool { return v.FacetShowOtherSeries }).(pulumi.BoolPtrOutput)
}

// (Optional) Use this item to filter the current dashboard.
func (o OneDashboardPageWidgetTableOutput) FilterCurrentDashboard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *bool { return v.FilterCurrentDashboard }).(pulumi.BoolPtrOutput)
}

// (Optional) Height of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `3`.
func (o OneDashboardPageWidgetTableOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardPageWidgetTableOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardPageWidgetTableOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

// (Optional) An attribute that describes the sorting mechanism for the table. This attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetTableOutput) InitialSorting() OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *OneDashboardPageWidgetTableInitialSorting {
		return v.InitialSorting
	}).(OneDashboardPageWidgetTableInitialSortingPtrOutput)
}

// (Optional) With this turned on, the legend will be displayed. Defaults to `true`.
func (o OneDashboardPageWidgetTableOutput) LegendEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *bool { return v.LegendEnabled }).(pulumi.BoolPtrOutput)
}

// (Optional) Related entity GUIDs. Currently only supports Dashboard entity GUIDs.
func (o OneDashboardPageWidgetTableOutput) LinkedEntityGuids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []string { return v.LinkedEntityGuids }).(pulumi.StringArrayOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardPageWidgetTableOutput) NrqlQueries() OneDashboardPageWidgetTableNrqlQueryArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []OneDashboardPageWidgetTableNrqlQuery { return v.NrqlQueries }).(OneDashboardPageWidgetTableNrqlQueryArrayOutput)
}

// (Optional) A nested block that describes a Null Values. See Nested Null Values blocks below for details.
func (o OneDashboardPageWidgetTableOutput) NullValues() OneDashboardPageWidgetTableNullValueArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []OneDashboardPageWidgetTableNullValue { return v.NullValues }).(OneDashboardPageWidgetTableNullValueArrayOutput)
}

// (Optional) This attribute determines the frequency for data refresh specified in milliseconds. Accepted values are `auto` for default value, `0` for no refresh, `5000` for 5 seconds, `30000` for 30 seconds, `60000` for 60 seconds, `300000` for 5 minutes, `1800000` for 30 minutes, `3600000` for 60 minute, `10800000` for 3 hours, `43200000` for 12 hours and `86400000` for 24 hours.
func (o OneDashboardPageWidgetTableOutput) RefreshRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *string { return v.RefreshRate }).(pulumi.StringPtrOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardPageWidgetTableOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) int { return v.Row }).(pulumi.IntOutput)
}

// (Optional) An attribute that helps specify multiple thresholds, each inclusive of a range of values between which the threshold would need to function, the name of the threshold and its severity. Multiple thresholds can be defined in a table widget. The `threshold` attribute requires specifying the following attributes in a nested block -
func (o OneDashboardPageWidgetTableOutput) Thresholds() OneDashboardPageWidgetTableThresholdArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []OneDashboardPageWidgetTableThreshold { return v.Thresholds }).(OneDashboardPageWidgetTableThresholdArrayOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardPageWidgetTableOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) string { return v.Title }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes units on your Y axis. See Nested Units blocks below for details.
func (o OneDashboardPageWidgetTableOutput) Units() OneDashboardPageWidgetTableUnitArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) []OneDashboardPageWidgetTableUnit { return v.Units }).(OneDashboardPageWidgetTableUnitArrayOutput)
}

// (Optional) Width of the widget.  Valid values are `1` to `12` inclusive.  Defaults to `4`.
func (o OneDashboardPageWidgetTableOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *int { return v.Width }).(pulumi.IntPtrOutput)
}

func (o OneDashboardPageWidgetTableOutput) YAxisLeftMax() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *float64 { return v.YAxisLeftMax }).(pulumi.Float64PtrOutput)
}

// , `yAxisLeftMax` - (Optional) Adjust the Y axis to display the data within certain values by setting a minimum and maximum value for the axis for line charts and area charts. If no customization option is selected, dashboards automatically displays the full Y axis from 0 to the top value plus a margin.
func (o OneDashboardPageWidgetTableOutput) YAxisLeftMin() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTable) *float64 { return v.YAxisLeftMin }).(pulumi.Float64PtrOutput)
}

type OneDashboardPageWidgetTableArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTable)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableArrayOutput) ToOneDashboardPageWidgetTableArrayOutput() OneDashboardPageWidgetTableArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableArrayOutput) ToOneDashboardPageWidgetTableArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTable {
		return vs[0].([]OneDashboardPageWidgetTable)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableOutput)
}

type OneDashboardPageWidgetTableColor struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetTableColorSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetTableColorInput is an input type that accepts OneDashboardPageWidgetTableColorArgs and OneDashboardPageWidgetTableColorOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableColorInput` via:
//
//	OneDashboardPageWidgetTableColorArgs{...}
type OneDashboardPageWidgetTableColorInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableColorOutput() OneDashboardPageWidgetTableColorOutput
	ToOneDashboardPageWidgetTableColorOutputWithContext(context.Context) OneDashboardPageWidgetTableColorOutput
}

type OneDashboardPageWidgetTableColorArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetTableColorSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetTableColorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableColorArgs) ToOneDashboardPageWidgetTableColorOutput() OneDashboardPageWidgetTableColorOutput {
	return i.ToOneDashboardPageWidgetTableColorOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableColorArgs) ToOneDashboardPageWidgetTableColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableColorOutput)
}

// OneDashboardPageWidgetTableColorArrayInput is an input type that accepts OneDashboardPageWidgetTableColorArray and OneDashboardPageWidgetTableColorArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableColorArrayInput` via:
//
//	OneDashboardPageWidgetTableColorArray{ OneDashboardPageWidgetTableColorArgs{...} }
type OneDashboardPageWidgetTableColorArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableColorArrayOutput() OneDashboardPageWidgetTableColorArrayOutput
	ToOneDashboardPageWidgetTableColorArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableColorArrayOutput
}

type OneDashboardPageWidgetTableColorArray []OneDashboardPageWidgetTableColorInput

func (OneDashboardPageWidgetTableColorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableColor)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableColorArray) ToOneDashboardPageWidgetTableColorArrayOutput() OneDashboardPageWidgetTableColorArrayOutput {
	return i.ToOneDashboardPageWidgetTableColorArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableColorArray) ToOneDashboardPageWidgetTableColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableColorArrayOutput)
}

type OneDashboardPageWidgetTableColorOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableColorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableColorOutput) ToOneDashboardPageWidgetTableColorOutput() OneDashboardPageWidgetTableColorOutput {
	return o
}

func (o OneDashboardPageWidgetTableColorOutput) ToOneDashboardPageWidgetTableColorOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetTableColorOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableColor) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetTableColorOutput) SeriesOverrides() OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableColor) []OneDashboardPageWidgetTableColorSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetTableColorArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableColorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableColor)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableColorArrayOutput) ToOneDashboardPageWidgetTableColorArrayOutput() OneDashboardPageWidgetTableColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableColorArrayOutput) ToOneDashboardPageWidgetTableColorArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableColorArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableColorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableColor {
		return vs[0].([]OneDashboardPageWidgetTableColor)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableColorOutput)
}

type OneDashboardPageWidgetTableColorSeriesOverride struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color *string `pulumi:"color"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetTableColorSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetTableColorSeriesOverrideArgs and OneDashboardPageWidgetTableColorSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableColorSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetTableColorSeriesOverrideArgs{...}
type OneDashboardPageWidgetTableColorSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableColorSeriesOverrideOutput() OneDashboardPageWidgetTableColorSeriesOverrideOutput
	ToOneDashboardPageWidgetTableColorSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetTableColorSeriesOverrideOutput
}

type OneDashboardPageWidgetTableColorSeriesOverrideArgs struct {
	// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
	Color pulumi.StringPtrInput `pulumi:"color"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetTableColorSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableColorSeriesOverrideArgs) ToOneDashboardPageWidgetTableColorSeriesOverrideOutput() OneDashboardPageWidgetTableColorSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetTableColorSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableColorSeriesOverrideArgs) ToOneDashboardPageWidgetTableColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableColorSeriesOverrideOutput)
}

// OneDashboardPageWidgetTableColorSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetTableColorSeriesOverrideArray and OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableColorSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetTableColorSeriesOverrideArray{ OneDashboardPageWidgetTableColorSeriesOverrideArgs{...} }
type OneDashboardPageWidgetTableColorSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutput() OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetTableColorSeriesOverrideArray []OneDashboardPageWidgetTableColorSeriesOverrideInput

func (OneDashboardPageWidgetTableColorSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableColorSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableColorSeriesOverrideArray) ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutput() OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableColorSeriesOverrideArray) ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetTableColorSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableColorSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableColorSeriesOverrideOutput) ToOneDashboardPageWidgetTableColorSeriesOverrideOutput() OneDashboardPageWidgetTableColorSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetTableColorSeriesOverrideOutput) ToOneDashboardPageWidgetTableColorSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorSeriesOverrideOutput {
	return o
}

// (Optional) Choose a color to customize the color of your charts per series in area, bar, line, pie, and stacked bar charts. Accepted values are RGB, HEX, or HSL code.
func (o OneDashboardPageWidgetTableColorSeriesOverrideOutput) Color() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableColorSeriesOverride) *string { return v.Color }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetTableColorSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableColorSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableColorSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutput() OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput) ToOneDashboardPageWidgetTableColorSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableColorSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableColorSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetTableColorSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableColorSeriesOverrideOutput)
}

type OneDashboardPageWidgetTableDataFormat struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format *string `pulumi:"format"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision *int `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardPageWidgetTableDataFormatInput is an input type that accepts OneDashboardPageWidgetTableDataFormatArgs and OneDashboardPageWidgetTableDataFormatOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableDataFormatInput` via:
//
//	OneDashboardPageWidgetTableDataFormatArgs{...}
type OneDashboardPageWidgetTableDataFormatInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableDataFormatOutput() OneDashboardPageWidgetTableDataFormatOutput
	ToOneDashboardPageWidgetTableDataFormatOutputWithContext(context.Context) OneDashboardPageWidgetTableDataFormatOutput
}

type OneDashboardPageWidgetTableDataFormatArgs struct {
	// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
	Precision pulumi.IntPtrInput `pulumi:"precision"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardPageWidgetTableDataFormatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableDataFormatArgs) ToOneDashboardPageWidgetTableDataFormatOutput() OneDashboardPageWidgetTableDataFormatOutput {
	return i.ToOneDashboardPageWidgetTableDataFormatOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableDataFormatArgs) ToOneDashboardPageWidgetTableDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableDataFormatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableDataFormatOutput)
}

// OneDashboardPageWidgetTableDataFormatArrayInput is an input type that accepts OneDashboardPageWidgetTableDataFormatArray and OneDashboardPageWidgetTableDataFormatArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableDataFormatArrayInput` via:
//
//	OneDashboardPageWidgetTableDataFormatArray{ OneDashboardPageWidgetTableDataFormatArgs{...} }
type OneDashboardPageWidgetTableDataFormatArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableDataFormatArrayOutput() OneDashboardPageWidgetTableDataFormatArrayOutput
	ToOneDashboardPageWidgetTableDataFormatArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableDataFormatArrayOutput
}

type OneDashboardPageWidgetTableDataFormatArray []OneDashboardPageWidgetTableDataFormatInput

func (OneDashboardPageWidgetTableDataFormatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableDataFormat)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableDataFormatArray) ToOneDashboardPageWidgetTableDataFormatArrayOutput() OneDashboardPageWidgetTableDataFormatArrayOutput {
	return i.ToOneDashboardPageWidgetTableDataFormatArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableDataFormatArray) ToOneDashboardPageWidgetTableDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableDataFormatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableDataFormatArrayOutput)
}

type OneDashboardPageWidgetTableDataFormatOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableDataFormatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableDataFormatOutput) ToOneDashboardPageWidgetTableDataFormatOutput() OneDashboardPageWidgetTableDataFormatOutput {
	return o
}

func (o OneDashboardPageWidgetTableDataFormatOutput) ToOneDashboardPageWidgetTableDataFormatOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableDataFormatOutput {
	return o
}

// (Optional) This attribute is provided when the `name` is that of a column comprising date/time values and the `type` attribute is set to `custom` defining the specific date format to be applied to your data.
func (o OneDashboardPageWidgetTableDataFormatOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableDataFormat) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetTableDataFormatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableDataFormat) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) This attribute is utilized when the `type` attribute is set to `decimal`, stipulating the precise number of digits after the decimal point for your data.
func (o OneDashboardPageWidgetTableDataFormatOutput) Precision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableDataFormat) *int { return v.Precision }).(pulumi.IntPtrOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardPageWidgetTableDataFormatOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableDataFormat) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetTableDataFormatArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableDataFormatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableDataFormat)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableDataFormatArrayOutput) ToOneDashboardPageWidgetTableDataFormatArrayOutput() OneDashboardPageWidgetTableDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableDataFormatArrayOutput) ToOneDashboardPageWidgetTableDataFormatArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableDataFormatArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableDataFormatArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableDataFormatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableDataFormat {
		return vs[0].([]OneDashboardPageWidgetTableDataFormat)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableDataFormatOutput)
}

type OneDashboardPageWidgetTableInitialSorting struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction string `pulumi:"direction"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
}

// OneDashboardPageWidgetTableInitialSortingInput is an input type that accepts OneDashboardPageWidgetTableInitialSortingArgs and OneDashboardPageWidgetTableInitialSortingOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableInitialSortingInput` via:
//
//	OneDashboardPageWidgetTableInitialSortingArgs{...}
type OneDashboardPageWidgetTableInitialSortingInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableInitialSortingOutput() OneDashboardPageWidgetTableInitialSortingOutput
	ToOneDashboardPageWidgetTableInitialSortingOutputWithContext(context.Context) OneDashboardPageWidgetTableInitialSortingOutput
}

type OneDashboardPageWidgetTableInitialSortingArgs struct {
	// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
	Direction pulumi.StringInput `pulumi:"direction"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
}

func (OneDashboardPageWidgetTableInitialSortingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableInitialSorting)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableInitialSortingArgs) ToOneDashboardPageWidgetTableInitialSortingOutput() OneDashboardPageWidgetTableInitialSortingOutput {
	return i.ToOneDashboardPageWidgetTableInitialSortingOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableInitialSortingArgs) ToOneDashboardPageWidgetTableInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableInitialSortingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableInitialSortingOutput)
}

func (i OneDashboardPageWidgetTableInitialSortingArgs) ToOneDashboardPageWidgetTableInitialSortingPtrOutput() OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableInitialSortingArgs) ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableInitialSortingOutput).ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(ctx)
}

// OneDashboardPageWidgetTableInitialSortingPtrInput is an input type that accepts OneDashboardPageWidgetTableInitialSortingArgs, OneDashboardPageWidgetTableInitialSortingPtr and OneDashboardPageWidgetTableInitialSortingPtrOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableInitialSortingPtrInput` via:
//
//	        OneDashboardPageWidgetTableInitialSortingArgs{...}
//
//	or:
//
//	        nil
type OneDashboardPageWidgetTableInitialSortingPtrInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableInitialSortingPtrOutput() OneDashboardPageWidgetTableInitialSortingPtrOutput
	ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(context.Context) OneDashboardPageWidgetTableInitialSortingPtrOutput
}

type oneDashboardPageWidgetTableInitialSortingPtrType OneDashboardPageWidgetTableInitialSortingArgs

func OneDashboardPageWidgetTableInitialSortingPtr(v *OneDashboardPageWidgetTableInitialSortingArgs) OneDashboardPageWidgetTableInitialSortingPtrInput {
	return (*oneDashboardPageWidgetTableInitialSortingPtrType)(v)
}

func (*oneDashboardPageWidgetTableInitialSortingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetTableInitialSorting)(nil)).Elem()
}

func (i *oneDashboardPageWidgetTableInitialSortingPtrType) ToOneDashboardPageWidgetTableInitialSortingPtrOutput() OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return i.ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(context.Background())
}

func (i *oneDashboardPageWidgetTableInitialSortingPtrType) ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableInitialSortingPtrOutput)
}

type OneDashboardPageWidgetTableInitialSortingOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableInitialSortingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableInitialSortingOutput) ToOneDashboardPageWidgetTableInitialSortingOutput() OneDashboardPageWidgetTableInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetTableInitialSortingOutput) ToOneDashboardPageWidgetTableInitialSortingOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableInitialSortingOutput {
	return o
}

func (o OneDashboardPageWidgetTableInitialSortingOutput) ToOneDashboardPageWidgetTableInitialSortingPtrOutput() OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return o.ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(context.Background())
}

func (o OneDashboardPageWidgetTableInitialSortingOutput) ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardPageWidgetTableInitialSorting) *OneDashboardPageWidgetTableInitialSorting {
		return &v
	}).(OneDashboardPageWidgetTableInitialSortingPtrOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetTableInitialSortingOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableInitialSorting) string { return v.Direction }).(pulumi.StringOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetTableInitialSortingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableInitialSorting) string { return v.Name }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetTableInitialSortingPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableInitialSortingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardPageWidgetTableInitialSorting)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableInitialSortingPtrOutput) ToOneDashboardPageWidgetTableInitialSortingPtrOutput() OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetTableInitialSortingPtrOutput) ToOneDashboardPageWidgetTableInitialSortingPtrOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableInitialSortingPtrOutput {
	return o
}

func (o OneDashboardPageWidgetTableInitialSortingPtrOutput) Elem() OneDashboardPageWidgetTableInitialSortingOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetTableInitialSorting) OneDashboardPageWidgetTableInitialSorting {
		if v != nil {
			return *v
		}
		var ret OneDashboardPageWidgetTableInitialSorting
		return ret
	}).(OneDashboardPageWidgetTableInitialSortingOutput)
}

// (Required) Defines the sort order. Accepted values are `asc` for ascending or `desc` for descending.
func (o OneDashboardPageWidgetTableInitialSortingPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetTableInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardPageWidgetTableInitialSortingPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardPageWidgetTableInitialSorting) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetTableNrqlQuery struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId *string `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardPageWidgetTableNrqlQueryInput is an input type that accepts OneDashboardPageWidgetTableNrqlQueryArgs and OneDashboardPageWidgetTableNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableNrqlQueryInput` via:
//
//	OneDashboardPageWidgetTableNrqlQueryArgs{...}
type OneDashboardPageWidgetTableNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableNrqlQueryOutput() OneDashboardPageWidgetTableNrqlQueryOutput
	ToOneDashboardPageWidgetTableNrqlQueryOutputWithContext(context.Context) OneDashboardPageWidgetTableNrqlQueryOutput
}

type OneDashboardPageWidgetTableNrqlQueryArgs struct {
	// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardPageWidgetTableNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableNrqlQueryArgs) ToOneDashboardPageWidgetTableNrqlQueryOutput() OneDashboardPageWidgetTableNrqlQueryOutput {
	return i.ToOneDashboardPageWidgetTableNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableNrqlQueryArgs) ToOneDashboardPageWidgetTableNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableNrqlQueryOutput)
}

// OneDashboardPageWidgetTableNrqlQueryArrayInput is an input type that accepts OneDashboardPageWidgetTableNrqlQueryArray and OneDashboardPageWidgetTableNrqlQueryArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableNrqlQueryArrayInput` via:
//
//	OneDashboardPageWidgetTableNrqlQueryArray{ OneDashboardPageWidgetTableNrqlQueryArgs{...} }
type OneDashboardPageWidgetTableNrqlQueryArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableNrqlQueryArrayOutput() OneDashboardPageWidgetTableNrqlQueryArrayOutput
	ToOneDashboardPageWidgetTableNrqlQueryArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableNrqlQueryArrayOutput
}

type OneDashboardPageWidgetTableNrqlQueryArray []OneDashboardPageWidgetTableNrqlQueryInput

func (OneDashboardPageWidgetTableNrqlQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableNrqlQuery)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableNrqlQueryArray) ToOneDashboardPageWidgetTableNrqlQueryArrayOutput() OneDashboardPageWidgetTableNrqlQueryArrayOutput {
	return i.ToOneDashboardPageWidgetTableNrqlQueryArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableNrqlQueryArray) ToOneDashboardPageWidgetTableNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNrqlQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableNrqlQueryArrayOutput)
}

type OneDashboardPageWidgetTableNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableNrqlQueryOutput) ToOneDashboardPageWidgetTableNrqlQueryOutput() OneDashboardPageWidgetTableNrqlQueryOutput {
	return o
}

func (o OneDashboardPageWidgetTableNrqlQueryOutput) ToOneDashboardPageWidgetTableNrqlQueryOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNrqlQueryOutput {
	return o
}

// Determines the New Relic account where the dashboard will be created. Defaults to the account associated with the API key used.
func (o OneDashboardPageWidgetTableNrqlQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableNrqlQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardPageWidgetTableNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardPageWidgetTableNrqlQueryArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableNrqlQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableNrqlQuery)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableNrqlQueryArrayOutput) ToOneDashboardPageWidgetTableNrqlQueryArrayOutput() OneDashboardPageWidgetTableNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableNrqlQueryArrayOutput) ToOneDashboardPageWidgetTableNrqlQueryArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNrqlQueryArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableNrqlQueryArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableNrqlQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableNrqlQuery {
		return vs[0].([]OneDashboardPageWidgetTableNrqlQuery)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableNrqlQueryOutput)
}

type OneDashboardPageWidgetTableNullValue struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetTableNullValueSeriesOverride `pulumi:"seriesOverrides"`
}

// OneDashboardPageWidgetTableNullValueInput is an input type that accepts OneDashboardPageWidgetTableNullValueArgs and OneDashboardPageWidgetTableNullValueOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableNullValueInput` via:
//
//	OneDashboardPageWidgetTableNullValueArgs{...}
type OneDashboardPageWidgetTableNullValueInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableNullValueOutput() OneDashboardPageWidgetTableNullValueOutput
	ToOneDashboardPageWidgetTableNullValueOutputWithContext(context.Context) OneDashboardPageWidgetTableNullValueOutput
}

type OneDashboardPageWidgetTableNullValueArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetTableNullValueSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
}

func (OneDashboardPageWidgetTableNullValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableNullValueArgs) ToOneDashboardPageWidgetTableNullValueOutput() OneDashboardPageWidgetTableNullValueOutput {
	return i.ToOneDashboardPageWidgetTableNullValueOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableNullValueArgs) ToOneDashboardPageWidgetTableNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableNullValueOutput)
}

// OneDashboardPageWidgetTableNullValueArrayInput is an input type that accepts OneDashboardPageWidgetTableNullValueArray and OneDashboardPageWidgetTableNullValueArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableNullValueArrayInput` via:
//
//	OneDashboardPageWidgetTableNullValueArray{ OneDashboardPageWidgetTableNullValueArgs{...} }
type OneDashboardPageWidgetTableNullValueArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableNullValueArrayOutput() OneDashboardPageWidgetTableNullValueArrayOutput
	ToOneDashboardPageWidgetTableNullValueArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableNullValueArrayOutput
}

type OneDashboardPageWidgetTableNullValueArray []OneDashboardPageWidgetTableNullValueInput

func (OneDashboardPageWidgetTableNullValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableNullValue)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableNullValueArray) ToOneDashboardPageWidgetTableNullValueArrayOutput() OneDashboardPageWidgetTableNullValueArrayOutput {
	return i.ToOneDashboardPageWidgetTableNullValueArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableNullValueArray) ToOneDashboardPageWidgetTableNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableNullValueArrayOutput)
}

type OneDashboardPageWidgetTableNullValueOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableNullValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableNullValueOutput) ToOneDashboardPageWidgetTableNullValueOutput() OneDashboardPageWidgetTableNullValueOutput {
	return o
}

func (o OneDashboardPageWidgetTableNullValueOutput) ToOneDashboardPageWidgetTableNullValueOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetTableNullValueOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableNullValue) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetTableNullValueOutput) SeriesOverrides() OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableNullValue) []OneDashboardPageWidgetTableNullValueSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetTableNullValueArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableNullValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableNullValue)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableNullValueArrayOutput) ToOneDashboardPageWidgetTableNullValueArrayOutput() OneDashboardPageWidgetTableNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableNullValueArrayOutput) ToOneDashboardPageWidgetTableNullValueArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableNullValueArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableNullValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableNullValue {
		return vs[0].([]OneDashboardPageWidgetTableNullValue)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableNullValueOutput)
}

type OneDashboardPageWidgetTableNullValueSeriesOverride struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue *string `pulumi:"nullValue"`
	// Series name
	SeriesName *string `pulumi:"seriesName"`
}

// OneDashboardPageWidgetTableNullValueSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetTableNullValueSeriesOverrideArgs and OneDashboardPageWidgetTableNullValueSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableNullValueSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetTableNullValueSeriesOverrideArgs{...}
type OneDashboardPageWidgetTableNullValueSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutput() OneDashboardPageWidgetTableNullValueSeriesOverrideOutput
	ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetTableNullValueSeriesOverrideOutput
}

type OneDashboardPageWidgetTableNullValueSeriesOverrideArgs struct {
	// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
	NullValue pulumi.StringPtrInput `pulumi:"nullValue"`
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
}

func (OneDashboardPageWidgetTableNullValueSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutput() OneDashboardPageWidgetTableNullValueSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableNullValueSeriesOverrideArgs) ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableNullValueSeriesOverrideOutput)
}

// OneDashboardPageWidgetTableNullValueSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetTableNullValueSeriesOverrideArray and OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableNullValueSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetTableNullValueSeriesOverrideArray{ OneDashboardPageWidgetTableNullValueSeriesOverrideArgs{...} }
type OneDashboardPageWidgetTableNullValueSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetTableNullValueSeriesOverrideArray []OneDashboardPageWidgetTableNullValueSeriesOverrideInput

func (OneDashboardPageWidgetTableNullValueSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableNullValueSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableNullValueSeriesOverrideArray) ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableNullValueSeriesOverrideArray) ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetTableNullValueSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableNullValueSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutput() OneDashboardPageWidgetTableNullValueSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetTableNullValueSeriesOverrideOutput) ToOneDashboardPageWidgetTableNullValueSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueSeriesOverrideOutput {
	return o
}

// Choose an option in displaying null values. Accepted values are `default`, `remove`, `preserve`, or `zero`.
func (o OneDashboardPageWidgetTableNullValueSeriesOverrideOutput) NullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableNullValueSeriesOverride) *string { return v.NullValue }).(pulumi.StringPtrOutput)
}

// Series name
func (o OneDashboardPageWidgetTableNullValueSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableNullValueSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableNullValueSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput() OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput) ToOneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableNullValueSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableNullValueSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetTableNullValueSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableNullValueSeriesOverrideOutput)
}

type OneDashboardPageWidgetTableThreshold struct {
	// The name of the column in the table, to which the threshold would need to be applied.
	ColumnName *string `pulumi:"columnName"`
	// The value 'from' which the threshold would need to be applied.
	From *string `pulumi:"from"`
	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
	Severity *string `pulumi:"severity"`
	// The value until which the threshold would need to be applied.
	To *string `pulumi:"to"`
}

// OneDashboardPageWidgetTableThresholdInput is an input type that accepts OneDashboardPageWidgetTableThresholdArgs and OneDashboardPageWidgetTableThresholdOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableThresholdInput` via:
//
//	OneDashboardPageWidgetTableThresholdArgs{...}
type OneDashboardPageWidgetTableThresholdInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableThresholdOutput() OneDashboardPageWidgetTableThresholdOutput
	ToOneDashboardPageWidgetTableThresholdOutputWithContext(context.Context) OneDashboardPageWidgetTableThresholdOutput
}

type OneDashboardPageWidgetTableThresholdArgs struct {
	// The name of the column in the table, to which the threshold would need to be applied.
	ColumnName pulumi.StringPtrInput `pulumi:"columnName"`
	// The value 'from' which the threshold would need to be applied.
	From pulumi.StringPtrInput `pulumi:"from"`
	// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
	Severity pulumi.StringPtrInput `pulumi:"severity"`
	// The value until which the threshold would need to be applied.
	To pulumi.StringPtrInput `pulumi:"to"`
}

func (OneDashboardPageWidgetTableThresholdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableThreshold)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableThresholdArgs) ToOneDashboardPageWidgetTableThresholdOutput() OneDashboardPageWidgetTableThresholdOutput {
	return i.ToOneDashboardPageWidgetTableThresholdOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableThresholdArgs) ToOneDashboardPageWidgetTableThresholdOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableThresholdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableThresholdOutput)
}

// OneDashboardPageWidgetTableThresholdArrayInput is an input type that accepts OneDashboardPageWidgetTableThresholdArray and OneDashboardPageWidgetTableThresholdArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableThresholdArrayInput` via:
//
//	OneDashboardPageWidgetTableThresholdArray{ OneDashboardPageWidgetTableThresholdArgs{...} }
type OneDashboardPageWidgetTableThresholdArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableThresholdArrayOutput() OneDashboardPageWidgetTableThresholdArrayOutput
	ToOneDashboardPageWidgetTableThresholdArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableThresholdArrayOutput
}

type OneDashboardPageWidgetTableThresholdArray []OneDashboardPageWidgetTableThresholdInput

func (OneDashboardPageWidgetTableThresholdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableThreshold)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableThresholdArray) ToOneDashboardPageWidgetTableThresholdArrayOutput() OneDashboardPageWidgetTableThresholdArrayOutput {
	return i.ToOneDashboardPageWidgetTableThresholdArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableThresholdArray) ToOneDashboardPageWidgetTableThresholdArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableThresholdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableThresholdArrayOutput)
}

type OneDashboardPageWidgetTableThresholdOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableThresholdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableThreshold)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableThresholdOutput) ToOneDashboardPageWidgetTableThresholdOutput() OneDashboardPageWidgetTableThresholdOutput {
	return o
}

func (o OneDashboardPageWidgetTableThresholdOutput) ToOneDashboardPageWidgetTableThresholdOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableThresholdOutput {
	return o
}

// The name of the column in the table, to which the threshold would need to be applied.
func (o OneDashboardPageWidgetTableThresholdOutput) ColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableThreshold) *string { return v.ColumnName }).(pulumi.StringPtrOutput)
}

// The value 'from' which the threshold would need to be applied.
func (o OneDashboardPageWidgetTableThresholdOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableThreshold) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The severity of the threshold, which would affect the visual appearance of the threshold (such as its color) accordingly. The value of this attribute would need to be one of the following - `warning`, `severe`, `critical`, `success`, `unavailable` which correspond to the severity labels _Warning_, _Approaching critical_, _Critical_, _Good_, _Neutral_ in the dropdown that helps specify the severity of thresholds in table widgets in the UI, respectively.
func (o OneDashboardPageWidgetTableThresholdOutput) Severity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableThreshold) *string { return v.Severity }).(pulumi.StringPtrOutput)
}

// The value until which the threshold would need to be applied.
func (o OneDashboardPageWidgetTableThresholdOutput) To() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableThreshold) *string { return v.To }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetTableThresholdArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableThresholdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableThreshold)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableThresholdArrayOutput) ToOneDashboardPageWidgetTableThresholdArrayOutput() OneDashboardPageWidgetTableThresholdArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableThresholdArrayOutput) ToOneDashboardPageWidgetTableThresholdArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableThresholdArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableThresholdArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableThresholdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableThreshold {
		return vs[0].([]OneDashboardPageWidgetTableThreshold)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableThresholdOutput)
}

type OneDashboardPageWidgetTableUnit struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides []OneDashboardPageWidgetTableUnitSeriesOverride `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetTableUnitInput is an input type that accepts OneDashboardPageWidgetTableUnitArgs and OneDashboardPageWidgetTableUnitOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableUnitInput` via:
//
//	OneDashboardPageWidgetTableUnitArgs{...}
type OneDashboardPageWidgetTableUnitInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableUnitOutput() OneDashboardPageWidgetTableUnitOutput
	ToOneDashboardPageWidgetTableUnitOutputWithContext(context.Context) OneDashboardPageWidgetTableUnitOutput
}

type OneDashboardPageWidgetTableUnitArgs struct {
	// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
	SeriesOverrides OneDashboardPageWidgetTableUnitSeriesOverrideArrayInput `pulumi:"seriesOverrides"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetTableUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableUnitArgs) ToOneDashboardPageWidgetTableUnitOutput() OneDashboardPageWidgetTableUnitOutput {
	return i.ToOneDashboardPageWidgetTableUnitOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableUnitArgs) ToOneDashboardPageWidgetTableUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableUnitOutput)
}

// OneDashboardPageWidgetTableUnitArrayInput is an input type that accepts OneDashboardPageWidgetTableUnitArray and OneDashboardPageWidgetTableUnitArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableUnitArrayInput` via:
//
//	OneDashboardPageWidgetTableUnitArray{ OneDashboardPageWidgetTableUnitArgs{...} }
type OneDashboardPageWidgetTableUnitArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableUnitArrayOutput() OneDashboardPageWidgetTableUnitArrayOutput
	ToOneDashboardPageWidgetTableUnitArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableUnitArrayOutput
}

type OneDashboardPageWidgetTableUnitArray []OneDashboardPageWidgetTableUnitInput

func (OneDashboardPageWidgetTableUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableUnit)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableUnitArray) ToOneDashboardPageWidgetTableUnitArrayOutput() OneDashboardPageWidgetTableUnitArrayOutput {
	return i.ToOneDashboardPageWidgetTableUnitArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableUnitArray) ToOneDashboardPageWidgetTableUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableUnitArrayOutput)
}

type OneDashboardPageWidgetTableUnitOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableUnitOutput) ToOneDashboardPageWidgetTableUnitOutput() OneDashboardPageWidgetTableUnitOutput {
	return o
}

func (o OneDashboardPageWidgetTableUnitOutput) ToOneDashboardPageWidgetTableUnitOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitOutput {
	return o
}

// (Optional) A Nested block which will take two string attributes `color` and `seriesName`. This nested block is used to customize colors of individual.
func (o OneDashboardPageWidgetTableUnitOutput) SeriesOverrides() OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableUnit) []OneDashboardPageWidgetTableUnitSeriesOverride {
		return v.SeriesOverrides
	}).(OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetTableUnitOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableUnit) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetTableUnitArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableUnit)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableUnitArrayOutput) ToOneDashboardPageWidgetTableUnitArrayOutput() OneDashboardPageWidgetTableUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableUnitArrayOutput) ToOneDashboardPageWidgetTableUnitArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableUnitArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableUnit {
		return vs[0].([]OneDashboardPageWidgetTableUnit)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableUnitOutput)
}

type OneDashboardPageWidgetTableUnitSeriesOverride struct {
	// Series name
	SeriesName *string `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit *string `pulumi:"unit"`
}

// OneDashboardPageWidgetTableUnitSeriesOverrideInput is an input type that accepts OneDashboardPageWidgetTableUnitSeriesOverrideArgs and OneDashboardPageWidgetTableUnitSeriesOverrideOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableUnitSeriesOverrideInput` via:
//
//	OneDashboardPageWidgetTableUnitSeriesOverrideArgs{...}
type OneDashboardPageWidgetTableUnitSeriesOverrideInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableUnitSeriesOverrideOutput() OneDashboardPageWidgetTableUnitSeriesOverrideOutput
	ToOneDashboardPageWidgetTableUnitSeriesOverrideOutputWithContext(context.Context) OneDashboardPageWidgetTableUnitSeriesOverrideOutput
}

type OneDashboardPageWidgetTableUnitSeriesOverrideArgs struct {
	// Series name
	SeriesName pulumi.StringPtrInput `pulumi:"seriesName"`
	// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (OneDashboardPageWidgetTableUnitSeriesOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableUnitSeriesOverrideArgs) ToOneDashboardPageWidgetTableUnitSeriesOverrideOutput() OneDashboardPageWidgetTableUnitSeriesOverrideOutput {
	return i.ToOneDashboardPageWidgetTableUnitSeriesOverrideOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableUnitSeriesOverrideArgs) ToOneDashboardPageWidgetTableUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitSeriesOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableUnitSeriesOverrideOutput)
}

// OneDashboardPageWidgetTableUnitSeriesOverrideArrayInput is an input type that accepts OneDashboardPageWidgetTableUnitSeriesOverrideArray and OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput values.
// You can construct a concrete instance of `OneDashboardPageWidgetTableUnitSeriesOverrideArrayInput` via:
//
//	OneDashboardPageWidgetTableUnitSeriesOverrideArray{ OneDashboardPageWidgetTableUnitSeriesOverrideArgs{...} }
type OneDashboardPageWidgetTableUnitSeriesOverrideArrayInput interface {
	pulumi.Input

	ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput
	ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutputWithContext(context.Context) OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput
}

type OneDashboardPageWidgetTableUnitSeriesOverrideArray []OneDashboardPageWidgetTableUnitSeriesOverrideInput

func (OneDashboardPageWidgetTableUnitSeriesOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableUnitSeriesOverride)(nil)).Elem()
}

func (i OneDashboardPageWidgetTableUnitSeriesOverrideArray) ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput {
	return i.ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutputWithContext(context.Background())
}

func (i OneDashboardPageWidgetTableUnitSeriesOverrideArray) ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput)
}

type OneDashboardPageWidgetTableUnitSeriesOverrideOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableUnitSeriesOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardPageWidgetTableUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableUnitSeriesOverrideOutput) ToOneDashboardPageWidgetTableUnitSeriesOverrideOutput() OneDashboardPageWidgetTableUnitSeriesOverrideOutput {
	return o
}

func (o OneDashboardPageWidgetTableUnitSeriesOverrideOutput) ToOneDashboardPageWidgetTableUnitSeriesOverrideOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitSeriesOverrideOutput {
	return o
}

// Series name
func (o OneDashboardPageWidgetTableUnitSeriesOverrideOutput) SeriesName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableUnitSeriesOverride) *string { return v.SeriesName }).(pulumi.StringPtrOutput)
}

// (Optional) Choose a unit to customize the unit on your Y axis and in each of your series.
func (o OneDashboardPageWidgetTableUnitSeriesOverrideOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardPageWidgetTableUnitSeriesOverride) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardPageWidgetTableUnitSeriesOverride)(nil)).Elem()
}

func (o OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput() OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput) ToOneDashboardPageWidgetTableUnitSeriesOverrideArrayOutputWithContext(ctx context.Context) OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput {
	return o
}

func (o OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput) Index(i pulumi.IntInput) OneDashboardPageWidgetTableUnitSeriesOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardPageWidgetTableUnitSeriesOverride {
		return vs[0].([]OneDashboardPageWidgetTableUnitSeriesOverride)[vs[1].(int)]
	}).(OneDashboardPageWidgetTableUnitSeriesOverrideOutput)
}

type OneDashboardRawPage struct {
	// Brief text describing the dashboard.
	Description *string `pulumi:"description"`
	// The unique entity identifier of the dashboard page in New Relic.
	Guid *string `pulumi:"guid"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
	Widgets []OneDashboardRawPageWidget `pulumi:"widgets"`
}

// OneDashboardRawPageInput is an input type that accepts OneDashboardRawPageArgs and OneDashboardRawPageOutput values.
// You can construct a concrete instance of `OneDashboardRawPageInput` via:
//
//	OneDashboardRawPageArgs{...}
type OneDashboardRawPageInput interface {
	pulumi.Input

	ToOneDashboardRawPageOutput() OneDashboardRawPageOutput
	ToOneDashboardRawPageOutputWithContext(context.Context) OneDashboardRawPageOutput
}

type OneDashboardRawPageArgs struct {
	// Brief text describing the dashboard.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The unique entity identifier of the dashboard page in New Relic.
	Guid pulumi.StringPtrInput `pulumi:"guid"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
	Widgets OneDashboardRawPageWidgetArrayInput `pulumi:"widgets"`
}

func (OneDashboardRawPageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardRawPage)(nil)).Elem()
}

func (i OneDashboardRawPageArgs) ToOneDashboardRawPageOutput() OneDashboardRawPageOutput {
	return i.ToOneDashboardRawPageOutputWithContext(context.Background())
}

func (i OneDashboardRawPageArgs) ToOneDashboardRawPageOutputWithContext(ctx context.Context) OneDashboardRawPageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardRawPageOutput)
}

// OneDashboardRawPageArrayInput is an input type that accepts OneDashboardRawPageArray and OneDashboardRawPageArrayOutput values.
// You can construct a concrete instance of `OneDashboardRawPageArrayInput` via:
//
//	OneDashboardRawPageArray{ OneDashboardRawPageArgs{...} }
type OneDashboardRawPageArrayInput interface {
	pulumi.Input

	ToOneDashboardRawPageArrayOutput() OneDashboardRawPageArrayOutput
	ToOneDashboardRawPageArrayOutputWithContext(context.Context) OneDashboardRawPageArrayOutput
}

type OneDashboardRawPageArray []OneDashboardRawPageInput

func (OneDashboardRawPageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardRawPage)(nil)).Elem()
}

func (i OneDashboardRawPageArray) ToOneDashboardRawPageArrayOutput() OneDashboardRawPageArrayOutput {
	return i.ToOneDashboardRawPageArrayOutputWithContext(context.Background())
}

func (i OneDashboardRawPageArray) ToOneDashboardRawPageArrayOutputWithContext(ctx context.Context) OneDashboardRawPageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardRawPageArrayOutput)
}

type OneDashboardRawPageOutput struct{ *pulumi.OutputState }

func (OneDashboardRawPageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardRawPage)(nil)).Elem()
}

func (o OneDashboardRawPageOutput) ToOneDashboardRawPageOutput() OneDashboardRawPageOutput {
	return o
}

func (o OneDashboardRawPageOutput) ToOneDashboardRawPageOutputWithContext(ctx context.Context) OneDashboardRawPageOutput {
	return o
}

// Brief text describing the dashboard.
func (o OneDashboardRawPageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardRawPage) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique entity identifier of the dashboard page in New Relic.
func (o OneDashboardRawPageOutput) Guid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardRawPage) *string { return v.Guid }).(pulumi.StringPtrOutput)
}

// The title of the dashboard.
func (o OneDashboardRawPageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardRawPage) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) A nested block that describes a widget. See Nested widget blocks below for details.
func (o OneDashboardRawPageOutput) Widgets() OneDashboardRawPageWidgetArrayOutput {
	return o.ApplyT(func(v OneDashboardRawPage) []OneDashboardRawPageWidget { return v.Widgets }).(OneDashboardRawPageWidgetArrayOutput)
}

type OneDashboardRawPageArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardRawPageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardRawPage)(nil)).Elem()
}

func (o OneDashboardRawPageArrayOutput) ToOneDashboardRawPageArrayOutput() OneDashboardRawPageArrayOutput {
	return o
}

func (o OneDashboardRawPageArrayOutput) ToOneDashboardRawPageArrayOutputWithContext(ctx context.Context) OneDashboardRawPageArrayOutput {
	return o
}

func (o OneDashboardRawPageArrayOutput) Index(i pulumi.IntInput) OneDashboardRawPageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardRawPage {
		return vs[0].([]OneDashboardRawPage)[vs[1].(int)]
	}).(OneDashboardRawPageOutput)
}

type OneDashboardRawPageWidget struct {
	// (Required) Column position of widget from top left, starting at `1`.
	Column int `pulumi:"column"`
	// (Required) The configuration of the widget.
	Configuration string `pulumi:"configuration"`
	// (Optional) Height of the widget. Valid values are `1` to `12` inclusive. Defaults to `3`.
	Height *int `pulumi:"height"`
	// The ID of the widget.
	Id *string `pulumi:"id"`
	// (Optional) Related entity GUIDs.
	LinkedEntityGuids []string `pulumi:"linkedEntityGuids"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row int `pulumi:"row"`
	// (Required) A title for the widget.
	Title string `pulumi:"title"`
	// (Required) The visualization ID of the widget
	VisualizationId string `pulumi:"visualizationId"`
	// (Optional) Width of the widget. Valid values are `1` to `12` inclusive. Defaults to `4`.
	Width *int `pulumi:"width"`
}

// OneDashboardRawPageWidgetInput is an input type that accepts OneDashboardRawPageWidgetArgs and OneDashboardRawPageWidgetOutput values.
// You can construct a concrete instance of `OneDashboardRawPageWidgetInput` via:
//
//	OneDashboardRawPageWidgetArgs{...}
type OneDashboardRawPageWidgetInput interface {
	pulumi.Input

	ToOneDashboardRawPageWidgetOutput() OneDashboardRawPageWidgetOutput
	ToOneDashboardRawPageWidgetOutputWithContext(context.Context) OneDashboardRawPageWidgetOutput
}

type OneDashboardRawPageWidgetArgs struct {
	// (Required) Column position of widget from top left, starting at `1`.
	Column pulumi.IntInput `pulumi:"column"`
	// (Required) The configuration of the widget.
	Configuration pulumi.StringInput `pulumi:"configuration"`
	// (Optional) Height of the widget. Valid values are `1` to `12` inclusive. Defaults to `3`.
	Height pulumi.IntPtrInput `pulumi:"height"`
	// The ID of the widget.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// (Optional) Related entity GUIDs.
	LinkedEntityGuids pulumi.StringArrayInput `pulumi:"linkedEntityGuids"`
	// (Required) Row position of widget from top left, starting at `1`.
	Row pulumi.IntInput `pulumi:"row"`
	// (Required) A title for the widget.
	Title pulumi.StringInput `pulumi:"title"`
	// (Required) The visualization ID of the widget
	VisualizationId pulumi.StringInput `pulumi:"visualizationId"`
	// (Optional) Width of the widget. Valid values are `1` to `12` inclusive. Defaults to `4`.
	Width pulumi.IntPtrInput `pulumi:"width"`
}

func (OneDashboardRawPageWidgetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardRawPageWidget)(nil)).Elem()
}

func (i OneDashboardRawPageWidgetArgs) ToOneDashboardRawPageWidgetOutput() OneDashboardRawPageWidgetOutput {
	return i.ToOneDashboardRawPageWidgetOutputWithContext(context.Background())
}

func (i OneDashboardRawPageWidgetArgs) ToOneDashboardRawPageWidgetOutputWithContext(ctx context.Context) OneDashboardRawPageWidgetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardRawPageWidgetOutput)
}

// OneDashboardRawPageWidgetArrayInput is an input type that accepts OneDashboardRawPageWidgetArray and OneDashboardRawPageWidgetArrayOutput values.
// You can construct a concrete instance of `OneDashboardRawPageWidgetArrayInput` via:
//
//	OneDashboardRawPageWidgetArray{ OneDashboardRawPageWidgetArgs{...} }
type OneDashboardRawPageWidgetArrayInput interface {
	pulumi.Input

	ToOneDashboardRawPageWidgetArrayOutput() OneDashboardRawPageWidgetArrayOutput
	ToOneDashboardRawPageWidgetArrayOutputWithContext(context.Context) OneDashboardRawPageWidgetArrayOutput
}

type OneDashboardRawPageWidgetArray []OneDashboardRawPageWidgetInput

func (OneDashboardRawPageWidgetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardRawPageWidget)(nil)).Elem()
}

func (i OneDashboardRawPageWidgetArray) ToOneDashboardRawPageWidgetArrayOutput() OneDashboardRawPageWidgetArrayOutput {
	return i.ToOneDashboardRawPageWidgetArrayOutputWithContext(context.Background())
}

func (i OneDashboardRawPageWidgetArray) ToOneDashboardRawPageWidgetArrayOutputWithContext(ctx context.Context) OneDashboardRawPageWidgetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardRawPageWidgetArrayOutput)
}

type OneDashboardRawPageWidgetOutput struct{ *pulumi.OutputState }

func (OneDashboardRawPageWidgetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardRawPageWidget)(nil)).Elem()
}

func (o OneDashboardRawPageWidgetOutput) ToOneDashboardRawPageWidgetOutput() OneDashboardRawPageWidgetOutput {
	return o
}

func (o OneDashboardRawPageWidgetOutput) ToOneDashboardRawPageWidgetOutputWithContext(ctx context.Context) OneDashboardRawPageWidgetOutput {
	return o
}

// (Required) Column position of widget from top left, starting at `1`.
func (o OneDashboardRawPageWidgetOutput) Column() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) int { return v.Column }).(pulumi.IntOutput)
}

// (Required) The configuration of the widget.
func (o OneDashboardRawPageWidgetOutput) Configuration() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) string { return v.Configuration }).(pulumi.StringOutput)
}

// (Optional) Height of the widget. Valid values are `1` to `12` inclusive. Defaults to `3`.
func (o OneDashboardRawPageWidgetOutput) Height() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) *int { return v.Height }).(pulumi.IntPtrOutput)
}

// The ID of the widget.
func (o OneDashboardRawPageWidgetOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// (Optional) Related entity GUIDs.
func (o OneDashboardRawPageWidgetOutput) LinkedEntityGuids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) []string { return v.LinkedEntityGuids }).(pulumi.StringArrayOutput)
}

// (Required) Row position of widget from top left, starting at `1`.
func (o OneDashboardRawPageWidgetOutput) Row() pulumi.IntOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) int { return v.Row }).(pulumi.IntOutput)
}

// (Required) A title for the widget.
func (o OneDashboardRawPageWidgetOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) string { return v.Title }).(pulumi.StringOutput)
}

// (Required) The visualization ID of the widget
func (o OneDashboardRawPageWidgetOutput) VisualizationId() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) string { return v.VisualizationId }).(pulumi.StringOutput)
}

// (Optional) Width of the widget. Valid values are `1` to `12` inclusive. Defaults to `4`.
func (o OneDashboardRawPageWidgetOutput) Width() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OneDashboardRawPageWidget) *int { return v.Width }).(pulumi.IntPtrOutput)
}

type OneDashboardRawPageWidgetArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardRawPageWidgetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardRawPageWidget)(nil)).Elem()
}

func (o OneDashboardRawPageWidgetArrayOutput) ToOneDashboardRawPageWidgetArrayOutput() OneDashboardRawPageWidgetArrayOutput {
	return o
}

func (o OneDashboardRawPageWidgetArrayOutput) ToOneDashboardRawPageWidgetArrayOutputWithContext(ctx context.Context) OneDashboardRawPageWidgetArrayOutput {
	return o
}

func (o OneDashboardRawPageWidgetArrayOutput) Index(i pulumi.IntInput) OneDashboardRawPageWidgetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardRawPageWidget {
		return vs[0].([]OneDashboardRawPageWidget)[vs[1].(int)]
	}).(OneDashboardRawPageWidgetOutput)
}

type OneDashboardVariable struct {
	// (Optional) A list of default values for this variable. To select **all** default values, the appropriate value to be used with this argument would be `["*"]`.
	DefaultValues []string `pulumi:"defaultValues"`
	// (Optional) Indicates whether this variable supports multiple selection or not. Only applies to variables of type `nrql` or `enum`.
	IsMultiSelection *bool `pulumi:"isMultiSelection"`
	// (Optional) List of possible values for variables of type `enum`. See Nested item blocks below for details.
	Items []OneDashboardVariableItem `pulumi:"items"`
	// The title of the dashboard.
	Name string `pulumi:"name"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQuery *OneDashboardVariableNrqlQuery `pulumi:"nrqlQuery"`
	// (Optional) Specifies additional options to be added to dashboard variables. Supports the following nested attribute(s) -
	Options []OneDashboardVariableOption `pulumi:"options"`
	// (Optional) Indicates the strategy to apply when replacing a variable in a NRQL query. One of `default`, `identifier`, `number` or `string`.
	ReplacementStrategy string `pulumi:"replacementStrategy"`
	// (Optional) A human-friendly display string for this value.
	Title string `pulumi:"title"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type string `pulumi:"type"`
}

// OneDashboardVariableInput is an input type that accepts OneDashboardVariableArgs and OneDashboardVariableOutput values.
// You can construct a concrete instance of `OneDashboardVariableInput` via:
//
//	OneDashboardVariableArgs{...}
type OneDashboardVariableInput interface {
	pulumi.Input

	ToOneDashboardVariableOutput() OneDashboardVariableOutput
	ToOneDashboardVariableOutputWithContext(context.Context) OneDashboardVariableOutput
}

type OneDashboardVariableArgs struct {
	// (Optional) A list of default values for this variable. To select **all** default values, the appropriate value to be used with this argument would be `["*"]`.
	DefaultValues pulumi.StringArrayInput `pulumi:"defaultValues"`
	// (Optional) Indicates whether this variable supports multiple selection or not. Only applies to variables of type `nrql` or `enum`.
	IsMultiSelection pulumi.BoolPtrInput `pulumi:"isMultiSelection"`
	// (Optional) List of possible values for variables of type `enum`. See Nested item blocks below for details.
	Items OneDashboardVariableItemArrayInput `pulumi:"items"`
	// The title of the dashboard.
	Name pulumi.StringInput `pulumi:"name"`
	// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
	NrqlQuery OneDashboardVariableNrqlQueryPtrInput `pulumi:"nrqlQuery"`
	// (Optional) Specifies additional options to be added to dashboard variables. Supports the following nested attribute(s) -
	Options OneDashboardVariableOptionArrayInput `pulumi:"options"`
	// (Optional) Indicates the strategy to apply when replacing a variable in a NRQL query. One of `default`, `identifier`, `number` or `string`.
	ReplacementStrategy pulumi.StringInput `pulumi:"replacementStrategy"`
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringInput `pulumi:"title"`
	// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
	Type pulumi.StringInput `pulumi:"type"`
}

func (OneDashboardVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariable)(nil)).Elem()
}

func (i OneDashboardVariableArgs) ToOneDashboardVariableOutput() OneDashboardVariableOutput {
	return i.ToOneDashboardVariableOutputWithContext(context.Background())
}

func (i OneDashboardVariableArgs) ToOneDashboardVariableOutputWithContext(ctx context.Context) OneDashboardVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableOutput)
}

// OneDashboardVariableArrayInput is an input type that accepts OneDashboardVariableArray and OneDashboardVariableArrayOutput values.
// You can construct a concrete instance of `OneDashboardVariableArrayInput` via:
//
//	OneDashboardVariableArray{ OneDashboardVariableArgs{...} }
type OneDashboardVariableArrayInput interface {
	pulumi.Input

	ToOneDashboardVariableArrayOutput() OneDashboardVariableArrayOutput
	ToOneDashboardVariableArrayOutputWithContext(context.Context) OneDashboardVariableArrayOutput
}

type OneDashboardVariableArray []OneDashboardVariableInput

func (OneDashboardVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardVariable)(nil)).Elem()
}

func (i OneDashboardVariableArray) ToOneDashboardVariableArrayOutput() OneDashboardVariableArrayOutput {
	return i.ToOneDashboardVariableArrayOutputWithContext(context.Background())
}

func (i OneDashboardVariableArray) ToOneDashboardVariableArrayOutputWithContext(ctx context.Context) OneDashboardVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableArrayOutput)
}

type OneDashboardVariableOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariable)(nil)).Elem()
}

func (o OneDashboardVariableOutput) ToOneDashboardVariableOutput() OneDashboardVariableOutput {
	return o
}

func (o OneDashboardVariableOutput) ToOneDashboardVariableOutputWithContext(ctx context.Context) OneDashboardVariableOutput {
	return o
}

// (Optional) A list of default values for this variable. To select **all** default values, the appropriate value to be used with this argument would be `["*"]`.
func (o OneDashboardVariableOutput) DefaultValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardVariable) []string { return v.DefaultValues }).(pulumi.StringArrayOutput)
}

// (Optional) Indicates whether this variable supports multiple selection or not. Only applies to variables of type `nrql` or `enum`.
func (o OneDashboardVariableOutput) IsMultiSelection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardVariable) *bool { return v.IsMultiSelection }).(pulumi.BoolPtrOutput)
}

// (Optional) List of possible values for variables of type `enum`. See Nested item blocks below for details.
func (o OneDashboardVariableOutput) Items() OneDashboardVariableItemArrayOutput {
	return o.ApplyT(func(v OneDashboardVariable) []OneDashboardVariableItem { return v.Items }).(OneDashboardVariableItemArrayOutput)
}

// The title of the dashboard.
func (o OneDashboardVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardVariable) string { return v.Name }).(pulumi.StringOutput)
}

// (Optional) Configuration for variables of type `nrql`. See Nested nrql\_query blocks for details.
func (o OneDashboardVariableOutput) NrqlQuery() OneDashboardVariableNrqlQueryPtrOutput {
	return o.ApplyT(func(v OneDashboardVariable) *OneDashboardVariableNrqlQuery { return v.NrqlQuery }).(OneDashboardVariableNrqlQueryPtrOutput)
}

// (Optional) Specifies additional options to be added to dashboard variables. Supports the following nested attribute(s) -
func (o OneDashboardVariableOutput) Options() OneDashboardVariableOptionArrayOutput {
	return o.ApplyT(func(v OneDashboardVariable) []OneDashboardVariableOption { return v.Options }).(OneDashboardVariableOptionArrayOutput)
}

// (Optional) Indicates the strategy to apply when replacing a variable in a NRQL query. One of `default`, `identifier`, `number` or `string`.
func (o OneDashboardVariableOutput) ReplacementStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardVariable) string { return v.ReplacementStrategy }).(pulumi.StringOutput)
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardVariableOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardVariable) string { return v.Title }).(pulumi.StringOutput)
}

// (Required) Specifies the data type of the variable and where its possible values may come from. One of `enum`, `nrql` or `string`
func (o OneDashboardVariableOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardVariable) string { return v.Type }).(pulumi.StringOutput)
}

type OneDashboardVariableArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardVariable)(nil)).Elem()
}

func (o OneDashboardVariableArrayOutput) ToOneDashboardVariableArrayOutput() OneDashboardVariableArrayOutput {
	return o
}

func (o OneDashboardVariableArrayOutput) ToOneDashboardVariableArrayOutputWithContext(ctx context.Context) OneDashboardVariableArrayOutput {
	return o
}

func (o OneDashboardVariableArrayOutput) Index(i pulumi.IntInput) OneDashboardVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardVariable {
		return vs[0].([]OneDashboardVariable)[vs[1].(int)]
	}).(OneDashboardVariableOutput)
}

type OneDashboardVariableItem struct {
	// (Optional) A human-friendly display string for this value.
	Title *string `pulumi:"title"`
	// (Required) A possible variable value
	Value string `pulumi:"value"`
}

// OneDashboardVariableItemInput is an input type that accepts OneDashboardVariableItemArgs and OneDashboardVariableItemOutput values.
// You can construct a concrete instance of `OneDashboardVariableItemInput` via:
//
//	OneDashboardVariableItemArgs{...}
type OneDashboardVariableItemInput interface {
	pulumi.Input

	ToOneDashboardVariableItemOutput() OneDashboardVariableItemOutput
	ToOneDashboardVariableItemOutputWithContext(context.Context) OneDashboardVariableItemOutput
}

type OneDashboardVariableItemArgs struct {
	// (Optional) A human-friendly display string for this value.
	Title pulumi.StringPtrInput `pulumi:"title"`
	// (Required) A possible variable value
	Value pulumi.StringInput `pulumi:"value"`
}

func (OneDashboardVariableItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariableItem)(nil)).Elem()
}

func (i OneDashboardVariableItemArgs) ToOneDashboardVariableItemOutput() OneDashboardVariableItemOutput {
	return i.ToOneDashboardVariableItemOutputWithContext(context.Background())
}

func (i OneDashboardVariableItemArgs) ToOneDashboardVariableItemOutputWithContext(ctx context.Context) OneDashboardVariableItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableItemOutput)
}

// OneDashboardVariableItemArrayInput is an input type that accepts OneDashboardVariableItemArray and OneDashboardVariableItemArrayOutput values.
// You can construct a concrete instance of `OneDashboardVariableItemArrayInput` via:
//
//	OneDashboardVariableItemArray{ OneDashboardVariableItemArgs{...} }
type OneDashboardVariableItemArrayInput interface {
	pulumi.Input

	ToOneDashboardVariableItemArrayOutput() OneDashboardVariableItemArrayOutput
	ToOneDashboardVariableItemArrayOutputWithContext(context.Context) OneDashboardVariableItemArrayOutput
}

type OneDashboardVariableItemArray []OneDashboardVariableItemInput

func (OneDashboardVariableItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardVariableItem)(nil)).Elem()
}

func (i OneDashboardVariableItemArray) ToOneDashboardVariableItemArrayOutput() OneDashboardVariableItemArrayOutput {
	return i.ToOneDashboardVariableItemArrayOutputWithContext(context.Background())
}

func (i OneDashboardVariableItemArray) ToOneDashboardVariableItemArrayOutputWithContext(ctx context.Context) OneDashboardVariableItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableItemArrayOutput)
}

type OneDashboardVariableItemOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariableItem)(nil)).Elem()
}

func (o OneDashboardVariableItemOutput) ToOneDashboardVariableItemOutput() OneDashboardVariableItemOutput {
	return o
}

func (o OneDashboardVariableItemOutput) ToOneDashboardVariableItemOutputWithContext(ctx context.Context) OneDashboardVariableItemOutput {
	return o
}

// (Optional) A human-friendly display string for this value.
func (o OneDashboardVariableItemOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OneDashboardVariableItem) *string { return v.Title }).(pulumi.StringPtrOutput)
}

// (Required) A possible variable value
func (o OneDashboardVariableItemOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardVariableItem) string { return v.Value }).(pulumi.StringOutput)
}

type OneDashboardVariableItemArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardVariableItem)(nil)).Elem()
}

func (o OneDashboardVariableItemArrayOutput) ToOneDashboardVariableItemArrayOutput() OneDashboardVariableItemArrayOutput {
	return o
}

func (o OneDashboardVariableItemArrayOutput) ToOneDashboardVariableItemArrayOutputWithContext(ctx context.Context) OneDashboardVariableItemArrayOutput {
	return o
}

func (o OneDashboardVariableItemArrayOutput) Index(i pulumi.IntInput) OneDashboardVariableItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardVariableItem {
		return vs[0].([]OneDashboardVariableItem)[vs[1].(int)]
	}).(OneDashboardVariableItemOutput)
}

type OneDashboardVariableNrqlQuery struct {
	// New Relic account ID(s) to issue the query against.
	AccountIds []string `pulumi:"accountIds"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query string `pulumi:"query"`
}

// OneDashboardVariableNrqlQueryInput is an input type that accepts OneDashboardVariableNrqlQueryArgs and OneDashboardVariableNrqlQueryOutput values.
// You can construct a concrete instance of `OneDashboardVariableNrqlQueryInput` via:
//
//	OneDashboardVariableNrqlQueryArgs{...}
type OneDashboardVariableNrqlQueryInput interface {
	pulumi.Input

	ToOneDashboardVariableNrqlQueryOutput() OneDashboardVariableNrqlQueryOutput
	ToOneDashboardVariableNrqlQueryOutputWithContext(context.Context) OneDashboardVariableNrqlQueryOutput
}

type OneDashboardVariableNrqlQueryArgs struct {
	// New Relic account ID(s) to issue the query against.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
	Query pulumi.StringInput `pulumi:"query"`
}

func (OneDashboardVariableNrqlQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariableNrqlQuery)(nil)).Elem()
}

func (i OneDashboardVariableNrqlQueryArgs) ToOneDashboardVariableNrqlQueryOutput() OneDashboardVariableNrqlQueryOutput {
	return i.ToOneDashboardVariableNrqlQueryOutputWithContext(context.Background())
}

func (i OneDashboardVariableNrqlQueryArgs) ToOneDashboardVariableNrqlQueryOutputWithContext(ctx context.Context) OneDashboardVariableNrqlQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableNrqlQueryOutput)
}

func (i OneDashboardVariableNrqlQueryArgs) ToOneDashboardVariableNrqlQueryPtrOutput() OneDashboardVariableNrqlQueryPtrOutput {
	return i.ToOneDashboardVariableNrqlQueryPtrOutputWithContext(context.Background())
}

func (i OneDashboardVariableNrqlQueryArgs) ToOneDashboardVariableNrqlQueryPtrOutputWithContext(ctx context.Context) OneDashboardVariableNrqlQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableNrqlQueryOutput).ToOneDashboardVariableNrqlQueryPtrOutputWithContext(ctx)
}

// OneDashboardVariableNrqlQueryPtrInput is an input type that accepts OneDashboardVariableNrqlQueryArgs, OneDashboardVariableNrqlQueryPtr and OneDashboardVariableNrqlQueryPtrOutput values.
// You can construct a concrete instance of `OneDashboardVariableNrqlQueryPtrInput` via:
//
//	        OneDashboardVariableNrqlQueryArgs{...}
//
//	or:
//
//	        nil
type OneDashboardVariableNrqlQueryPtrInput interface {
	pulumi.Input

	ToOneDashboardVariableNrqlQueryPtrOutput() OneDashboardVariableNrqlQueryPtrOutput
	ToOneDashboardVariableNrqlQueryPtrOutputWithContext(context.Context) OneDashboardVariableNrqlQueryPtrOutput
}

type oneDashboardVariableNrqlQueryPtrType OneDashboardVariableNrqlQueryArgs

func OneDashboardVariableNrqlQueryPtr(v *OneDashboardVariableNrqlQueryArgs) OneDashboardVariableNrqlQueryPtrInput {
	return (*oneDashboardVariableNrqlQueryPtrType)(v)
}

func (*oneDashboardVariableNrqlQueryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardVariableNrqlQuery)(nil)).Elem()
}

func (i *oneDashboardVariableNrqlQueryPtrType) ToOneDashboardVariableNrqlQueryPtrOutput() OneDashboardVariableNrqlQueryPtrOutput {
	return i.ToOneDashboardVariableNrqlQueryPtrOutputWithContext(context.Background())
}

func (i *oneDashboardVariableNrqlQueryPtrType) ToOneDashboardVariableNrqlQueryPtrOutputWithContext(ctx context.Context) OneDashboardVariableNrqlQueryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableNrqlQueryPtrOutput)
}

type OneDashboardVariableNrqlQueryOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableNrqlQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariableNrqlQuery)(nil)).Elem()
}

func (o OneDashboardVariableNrqlQueryOutput) ToOneDashboardVariableNrqlQueryOutput() OneDashboardVariableNrqlQueryOutput {
	return o
}

func (o OneDashboardVariableNrqlQueryOutput) ToOneDashboardVariableNrqlQueryOutputWithContext(ctx context.Context) OneDashboardVariableNrqlQueryOutput {
	return o
}

func (o OneDashboardVariableNrqlQueryOutput) ToOneDashboardVariableNrqlQueryPtrOutput() OneDashboardVariableNrqlQueryPtrOutput {
	return o.ToOneDashboardVariableNrqlQueryPtrOutputWithContext(context.Background())
}

func (o OneDashboardVariableNrqlQueryOutput) ToOneDashboardVariableNrqlQueryPtrOutputWithContext(ctx context.Context) OneDashboardVariableNrqlQueryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OneDashboardVariableNrqlQuery) *OneDashboardVariableNrqlQuery {
		return &v
	}).(OneDashboardVariableNrqlQueryPtrOutput)
}

// New Relic account ID(s) to issue the query against.
func (o OneDashboardVariableNrqlQueryOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OneDashboardVariableNrqlQuery) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardVariableNrqlQueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v OneDashboardVariableNrqlQuery) string { return v.Query }).(pulumi.StringOutput)
}

type OneDashboardVariableNrqlQueryPtrOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableNrqlQueryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OneDashboardVariableNrqlQuery)(nil)).Elem()
}

func (o OneDashboardVariableNrqlQueryPtrOutput) ToOneDashboardVariableNrqlQueryPtrOutput() OneDashboardVariableNrqlQueryPtrOutput {
	return o
}

func (o OneDashboardVariableNrqlQueryPtrOutput) ToOneDashboardVariableNrqlQueryPtrOutputWithContext(ctx context.Context) OneDashboardVariableNrqlQueryPtrOutput {
	return o
}

func (o OneDashboardVariableNrqlQueryPtrOutput) Elem() OneDashboardVariableNrqlQueryOutput {
	return o.ApplyT(func(v *OneDashboardVariableNrqlQuery) OneDashboardVariableNrqlQuery {
		if v != nil {
			return *v
		}
		var ret OneDashboardVariableNrqlQuery
		return ret
	}).(OneDashboardVariableNrqlQueryOutput)
}

// New Relic account ID(s) to issue the query against.
func (o OneDashboardVariableNrqlQueryPtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OneDashboardVariableNrqlQuery) []string {
		if v == nil {
			return nil
		}
		return v.AccountIds
	}).(pulumi.StringArrayOutput)
}

// (Required) Valid NRQL query string. See [Writing NRQL Queries](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/using-nrql/introduction-nrql) for help.
func (o OneDashboardVariableNrqlQueryPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OneDashboardVariableNrqlQuery) *string {
		if v == nil {
			return nil
		}
		return &v.Query
	}).(pulumi.StringPtrOutput)
}

type OneDashboardVariableOption struct {
	// (Optional) An argument with a boolean value. With this turned on, the query condition defined with the variable will not be included in the query. Defaults to `false`.
	Excluded *bool `pulumi:"excluded"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange *bool `pulumi:"ignoreTimeRange"`
}

// OneDashboardVariableOptionInput is an input type that accepts OneDashboardVariableOptionArgs and OneDashboardVariableOptionOutput values.
// You can construct a concrete instance of `OneDashboardVariableOptionInput` via:
//
//	OneDashboardVariableOptionArgs{...}
type OneDashboardVariableOptionInput interface {
	pulumi.Input

	ToOneDashboardVariableOptionOutput() OneDashboardVariableOptionOutput
	ToOneDashboardVariableOptionOutputWithContext(context.Context) OneDashboardVariableOptionOutput
}

type OneDashboardVariableOptionArgs struct {
	// (Optional) An argument with a boolean value. With this turned on, the query condition defined with the variable will not be included in the query. Defaults to `false`.
	Excluded pulumi.BoolPtrInput `pulumi:"excluded"`
	// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
	IgnoreTimeRange pulumi.BoolPtrInput `pulumi:"ignoreTimeRange"`
}

func (OneDashboardVariableOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariableOption)(nil)).Elem()
}

func (i OneDashboardVariableOptionArgs) ToOneDashboardVariableOptionOutput() OneDashboardVariableOptionOutput {
	return i.ToOneDashboardVariableOptionOutputWithContext(context.Background())
}

func (i OneDashboardVariableOptionArgs) ToOneDashboardVariableOptionOutputWithContext(ctx context.Context) OneDashboardVariableOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableOptionOutput)
}

// OneDashboardVariableOptionArrayInput is an input type that accepts OneDashboardVariableOptionArray and OneDashboardVariableOptionArrayOutput values.
// You can construct a concrete instance of `OneDashboardVariableOptionArrayInput` via:
//
//	OneDashboardVariableOptionArray{ OneDashboardVariableOptionArgs{...} }
type OneDashboardVariableOptionArrayInput interface {
	pulumi.Input

	ToOneDashboardVariableOptionArrayOutput() OneDashboardVariableOptionArrayOutput
	ToOneDashboardVariableOptionArrayOutputWithContext(context.Context) OneDashboardVariableOptionArrayOutput
}

type OneDashboardVariableOptionArray []OneDashboardVariableOptionInput

func (OneDashboardVariableOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardVariableOption)(nil)).Elem()
}

func (i OneDashboardVariableOptionArray) ToOneDashboardVariableOptionArrayOutput() OneDashboardVariableOptionArrayOutput {
	return i.ToOneDashboardVariableOptionArrayOutputWithContext(context.Background())
}

func (i OneDashboardVariableOptionArray) ToOneDashboardVariableOptionArrayOutputWithContext(ctx context.Context) OneDashboardVariableOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OneDashboardVariableOptionArrayOutput)
}

type OneDashboardVariableOptionOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OneDashboardVariableOption)(nil)).Elem()
}

func (o OneDashboardVariableOptionOutput) ToOneDashboardVariableOptionOutput() OneDashboardVariableOptionOutput {
	return o
}

func (o OneDashboardVariableOptionOutput) ToOneDashboardVariableOptionOutputWithContext(ctx context.Context) OneDashboardVariableOptionOutput {
	return o
}

// (Optional) An argument with a boolean value. With this turned on, the query condition defined with the variable will not be included in the query. Defaults to `false`.
func (o OneDashboardVariableOptionOutput) Excluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardVariableOption) *bool { return v.Excluded }).(pulumi.BoolPtrOutput)
}

// (Optional) An argument with a boolean value that is supported only by variables of `type` _nrql_ - when true, the time range specified in the query will override the time picker on dashboards and other pages.
func (o OneDashboardVariableOptionOutput) IgnoreTimeRange() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OneDashboardVariableOption) *bool { return v.IgnoreTimeRange }).(pulumi.BoolPtrOutput)
}

type OneDashboardVariableOptionArrayOutput struct{ *pulumi.OutputState }

func (OneDashboardVariableOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OneDashboardVariableOption)(nil)).Elem()
}

func (o OneDashboardVariableOptionArrayOutput) ToOneDashboardVariableOptionArrayOutput() OneDashboardVariableOptionArrayOutput {
	return o
}

func (o OneDashboardVariableOptionArrayOutput) ToOneDashboardVariableOptionArrayOutputWithContext(ctx context.Context) OneDashboardVariableOptionArrayOutput {
	return o
}

func (o OneDashboardVariableOptionArrayOutput) Index(i pulumi.IntInput) OneDashboardVariableOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OneDashboardVariableOption {
		return vs[0].([]OneDashboardVariableOption)[vs[1].(int)]
	}).(OneDashboardVariableOptionOutput)
}

type ServiceLevelEvents struct {
	// The ID of the account where the entity (e.g, APM Service, Browser application, Workload, etc.) belongs to,
	// and that contains the NRDB data for the SLI/SLO calculations. Note that changing the account ID will force a new resource.
	AccountId string `pulumi:"accountId"`
	// The definition of the bad responses. If you define an SLI from valid and bad events, you must leave the good events argument empty.
	BadEvents *ServiceLevelEventsBadEvents `pulumi:"badEvents"`
	// The definition of good responses. If you define an SLI from valid and good events, you must leave the bad events argument empty.
	GoodEvents *ServiceLevelEventsGoodEvents `pulumi:"goodEvents"`
	// The definition of valid requests.
	ValidEvents ServiceLevelEventsValidEvents `pulumi:"validEvents"`
}

// ServiceLevelEventsInput is an input type that accepts ServiceLevelEventsArgs and ServiceLevelEventsOutput values.
// You can construct a concrete instance of `ServiceLevelEventsInput` via:
//
//	ServiceLevelEventsArgs{...}
type ServiceLevelEventsInput interface {
	pulumi.Input

	ToServiceLevelEventsOutput() ServiceLevelEventsOutput
	ToServiceLevelEventsOutputWithContext(context.Context) ServiceLevelEventsOutput
}

type ServiceLevelEventsArgs struct {
	// The ID of the account where the entity (e.g, APM Service, Browser application, Workload, etc.) belongs to,
	// and that contains the NRDB data for the SLI/SLO calculations. Note that changing the account ID will force a new resource.
	AccountId pulumi.StringInput `pulumi:"accountId"`
	// The definition of the bad responses. If you define an SLI from valid and bad events, you must leave the good events argument empty.
	BadEvents ServiceLevelEventsBadEventsPtrInput `pulumi:"badEvents"`
	// The definition of good responses. If you define an SLI from valid and good events, you must leave the bad events argument empty.
	GoodEvents ServiceLevelEventsGoodEventsPtrInput `pulumi:"goodEvents"`
	// The definition of valid requests.
	ValidEvents ServiceLevelEventsValidEventsInput `pulumi:"validEvents"`
}

func (ServiceLevelEventsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEvents)(nil)).Elem()
}

func (i ServiceLevelEventsArgs) ToServiceLevelEventsOutput() ServiceLevelEventsOutput {
	return i.ToServiceLevelEventsOutputWithContext(context.Background())
}

func (i ServiceLevelEventsArgs) ToServiceLevelEventsOutputWithContext(ctx context.Context) ServiceLevelEventsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsOutput)
}

func (i ServiceLevelEventsArgs) ToServiceLevelEventsPtrOutput() ServiceLevelEventsPtrOutput {
	return i.ToServiceLevelEventsPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsArgs) ToServiceLevelEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsOutput).ToServiceLevelEventsPtrOutputWithContext(ctx)
}

// ServiceLevelEventsPtrInput is an input type that accepts ServiceLevelEventsArgs, ServiceLevelEventsPtr and ServiceLevelEventsPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsPtrInput` via:
//
//	        ServiceLevelEventsArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsPtrOutput() ServiceLevelEventsPtrOutput
	ToServiceLevelEventsPtrOutputWithContext(context.Context) ServiceLevelEventsPtrOutput
}

type serviceLevelEventsPtrType ServiceLevelEventsArgs

func ServiceLevelEventsPtr(v *ServiceLevelEventsArgs) ServiceLevelEventsPtrInput {
	return (*serviceLevelEventsPtrType)(v)
}

func (*serviceLevelEventsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEvents)(nil)).Elem()
}

func (i *serviceLevelEventsPtrType) ToServiceLevelEventsPtrOutput() ServiceLevelEventsPtrOutput {
	return i.ToServiceLevelEventsPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsPtrType) ToServiceLevelEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsPtrOutput)
}

type ServiceLevelEventsOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEvents)(nil)).Elem()
}

func (o ServiceLevelEventsOutput) ToServiceLevelEventsOutput() ServiceLevelEventsOutput {
	return o
}

func (o ServiceLevelEventsOutput) ToServiceLevelEventsOutputWithContext(ctx context.Context) ServiceLevelEventsOutput {
	return o
}

func (o ServiceLevelEventsOutput) ToServiceLevelEventsPtrOutput() ServiceLevelEventsPtrOutput {
	return o.ToServiceLevelEventsPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsOutput) ToServiceLevelEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEvents) *ServiceLevelEvents {
		return &v
	}).(ServiceLevelEventsPtrOutput)
}

// The ID of the account where the entity (e.g, APM Service, Browser application, Workload, etc.) belongs to,
// and that contains the NRDB data for the SLI/SLO calculations. Note that changing the account ID will force a new resource.
func (o ServiceLevelEventsOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEvents) string { return v.AccountId }).(pulumi.StringOutput)
}

// The definition of the bad responses. If you define an SLI from valid and bad events, you must leave the good events argument empty.
func (o ServiceLevelEventsOutput) BadEvents() ServiceLevelEventsBadEventsPtrOutput {
	return o.ApplyT(func(v ServiceLevelEvents) *ServiceLevelEventsBadEvents { return v.BadEvents }).(ServiceLevelEventsBadEventsPtrOutput)
}

// The definition of good responses. If you define an SLI from valid and good events, you must leave the bad events argument empty.
func (o ServiceLevelEventsOutput) GoodEvents() ServiceLevelEventsGoodEventsPtrOutput {
	return o.ApplyT(func(v ServiceLevelEvents) *ServiceLevelEventsGoodEvents { return v.GoodEvents }).(ServiceLevelEventsGoodEventsPtrOutput)
}

// The definition of valid requests.
func (o ServiceLevelEventsOutput) ValidEvents() ServiceLevelEventsValidEventsOutput {
	return o.ApplyT(func(v ServiceLevelEvents) ServiceLevelEventsValidEvents { return v.ValidEvents }).(ServiceLevelEventsValidEventsOutput)
}

type ServiceLevelEventsPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEvents)(nil)).Elem()
}

func (o ServiceLevelEventsPtrOutput) ToServiceLevelEventsPtrOutput() ServiceLevelEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsPtrOutput) ToServiceLevelEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsPtrOutput) Elem() ServiceLevelEventsOutput {
	return o.ApplyT(func(v *ServiceLevelEvents) ServiceLevelEvents {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEvents
		return ret
	}).(ServiceLevelEventsOutput)
}

// The ID of the account where the entity (e.g, APM Service, Browser application, Workload, etc.) belongs to,
// and that contains the NRDB data for the SLI/SLO calculations. Note that changing the account ID will force a new resource.
func (o ServiceLevelEventsPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEvents) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

// The definition of the bad responses. If you define an SLI from valid and bad events, you must leave the good events argument empty.
func (o ServiceLevelEventsPtrOutput) BadEvents() ServiceLevelEventsBadEventsPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEvents) *ServiceLevelEventsBadEvents {
		if v == nil {
			return nil
		}
		return v.BadEvents
	}).(ServiceLevelEventsBadEventsPtrOutput)
}

// The definition of good responses. If you define an SLI from valid and good events, you must leave the bad events argument empty.
func (o ServiceLevelEventsPtrOutput) GoodEvents() ServiceLevelEventsGoodEventsPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEvents) *ServiceLevelEventsGoodEvents {
		if v == nil {
			return nil
		}
		return v.GoodEvents
	}).(ServiceLevelEventsGoodEventsPtrOutput)
}

// The definition of valid requests.
func (o ServiceLevelEventsPtrOutput) ValidEvents() ServiceLevelEventsValidEventsPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEvents) *ServiceLevelEventsValidEvents {
		if v == nil {
			return nil
		}
		return &v.ValidEvents
	}).(ServiceLevelEventsValidEventsPtrOutput)
}

type ServiceLevelEventsBadEvents struct {
	// The event type where NRDB data will be fetched from.
	From string `pulumi:"from"`
	// The NRQL SELECT clause to aggregate events.
	Select *ServiceLevelEventsBadEventsSelect `pulumi:"select"`
	// A filter that narrows down the NRDB events just to those that are considered bad responses (e.g, those that refer to
	// a particular entity and returned an error).
	Where *string `pulumi:"where"`
}

// ServiceLevelEventsBadEventsInput is an input type that accepts ServiceLevelEventsBadEventsArgs and ServiceLevelEventsBadEventsOutput values.
// You can construct a concrete instance of `ServiceLevelEventsBadEventsInput` via:
//
//	ServiceLevelEventsBadEventsArgs{...}
type ServiceLevelEventsBadEventsInput interface {
	pulumi.Input

	ToServiceLevelEventsBadEventsOutput() ServiceLevelEventsBadEventsOutput
	ToServiceLevelEventsBadEventsOutputWithContext(context.Context) ServiceLevelEventsBadEventsOutput
}

type ServiceLevelEventsBadEventsArgs struct {
	// The event type where NRDB data will be fetched from.
	From pulumi.StringInput `pulumi:"from"`
	// The NRQL SELECT clause to aggregate events.
	Select ServiceLevelEventsBadEventsSelectPtrInput `pulumi:"select"`
	// A filter that narrows down the NRDB events just to those that are considered bad responses (e.g, those that refer to
	// a particular entity and returned an error).
	Where pulumi.StringPtrInput `pulumi:"where"`
}

func (ServiceLevelEventsBadEventsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsBadEvents)(nil)).Elem()
}

func (i ServiceLevelEventsBadEventsArgs) ToServiceLevelEventsBadEventsOutput() ServiceLevelEventsBadEventsOutput {
	return i.ToServiceLevelEventsBadEventsOutputWithContext(context.Background())
}

func (i ServiceLevelEventsBadEventsArgs) ToServiceLevelEventsBadEventsOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsBadEventsOutput)
}

func (i ServiceLevelEventsBadEventsArgs) ToServiceLevelEventsBadEventsPtrOutput() ServiceLevelEventsBadEventsPtrOutput {
	return i.ToServiceLevelEventsBadEventsPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsBadEventsArgs) ToServiceLevelEventsBadEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsBadEventsOutput).ToServiceLevelEventsBadEventsPtrOutputWithContext(ctx)
}

// ServiceLevelEventsBadEventsPtrInput is an input type that accepts ServiceLevelEventsBadEventsArgs, ServiceLevelEventsBadEventsPtr and ServiceLevelEventsBadEventsPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsBadEventsPtrInput` via:
//
//	        ServiceLevelEventsBadEventsArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsBadEventsPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsBadEventsPtrOutput() ServiceLevelEventsBadEventsPtrOutput
	ToServiceLevelEventsBadEventsPtrOutputWithContext(context.Context) ServiceLevelEventsBadEventsPtrOutput
}

type serviceLevelEventsBadEventsPtrType ServiceLevelEventsBadEventsArgs

func ServiceLevelEventsBadEventsPtr(v *ServiceLevelEventsBadEventsArgs) ServiceLevelEventsBadEventsPtrInput {
	return (*serviceLevelEventsBadEventsPtrType)(v)
}

func (*serviceLevelEventsBadEventsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsBadEvents)(nil)).Elem()
}

func (i *serviceLevelEventsBadEventsPtrType) ToServiceLevelEventsBadEventsPtrOutput() ServiceLevelEventsBadEventsPtrOutput {
	return i.ToServiceLevelEventsBadEventsPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsBadEventsPtrType) ToServiceLevelEventsBadEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsBadEventsPtrOutput)
}

type ServiceLevelEventsBadEventsOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsBadEventsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsBadEvents)(nil)).Elem()
}

func (o ServiceLevelEventsBadEventsOutput) ToServiceLevelEventsBadEventsOutput() ServiceLevelEventsBadEventsOutput {
	return o
}

func (o ServiceLevelEventsBadEventsOutput) ToServiceLevelEventsBadEventsOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsOutput {
	return o
}

func (o ServiceLevelEventsBadEventsOutput) ToServiceLevelEventsBadEventsPtrOutput() ServiceLevelEventsBadEventsPtrOutput {
	return o.ToServiceLevelEventsBadEventsPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsBadEventsOutput) ToServiceLevelEventsBadEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEventsBadEvents) *ServiceLevelEventsBadEvents {
		return &v
	}).(ServiceLevelEventsBadEventsPtrOutput)
}

// The event type where NRDB data will be fetched from.
func (o ServiceLevelEventsBadEventsOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEventsBadEvents) string { return v.From }).(pulumi.StringOutput)
}

// The NRQL SELECT clause to aggregate events.
func (o ServiceLevelEventsBadEventsOutput) Select() ServiceLevelEventsBadEventsSelectPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsBadEvents) *ServiceLevelEventsBadEventsSelect { return v.Select }).(ServiceLevelEventsBadEventsSelectPtrOutput)
}

// A filter that narrows down the NRDB events just to those that are considered bad responses (e.g, those that refer to
// a particular entity and returned an error).
func (o ServiceLevelEventsBadEventsOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsBadEvents) *string { return v.Where }).(pulumi.StringPtrOutput)
}

type ServiceLevelEventsBadEventsPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsBadEventsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsBadEvents)(nil)).Elem()
}

func (o ServiceLevelEventsBadEventsPtrOutput) ToServiceLevelEventsBadEventsPtrOutput() ServiceLevelEventsBadEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsBadEventsPtrOutput) ToServiceLevelEventsBadEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsBadEventsPtrOutput) Elem() ServiceLevelEventsBadEventsOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEvents) ServiceLevelEventsBadEvents {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEventsBadEvents
		return ret
	}).(ServiceLevelEventsBadEventsOutput)
}

// The event type where NRDB data will be fetched from.
func (o ServiceLevelEventsBadEventsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEvents) *string {
		if v == nil {
			return nil
		}
		return &v.From
	}).(pulumi.StringPtrOutput)
}

// The NRQL SELECT clause to aggregate events.
func (o ServiceLevelEventsBadEventsPtrOutput) Select() ServiceLevelEventsBadEventsSelectPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEvents) *ServiceLevelEventsBadEventsSelect {
		if v == nil {
			return nil
		}
		return v.Select
	}).(ServiceLevelEventsBadEventsSelectPtrOutput)
}

// A filter that narrows down the NRDB events just to those that are considered bad responses (e.g, those that refer to
// a particular entity and returned an error).
func (o ServiceLevelEventsBadEventsPtrOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEvents) *string {
		if v == nil {
			return nil
		}
		return v.Where
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelEventsBadEventsSelect struct {
	// The event attribute to use in the SELECT clause.
	Attribute *string `pulumi:"attribute"`
	// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
	Function string `pulumi:"function"`
	// Limit for values to be counter by `GET_CDF_COUNT` function.
	Threshold *float64 `pulumi:"threshold"`
}

// ServiceLevelEventsBadEventsSelectInput is an input type that accepts ServiceLevelEventsBadEventsSelectArgs and ServiceLevelEventsBadEventsSelectOutput values.
// You can construct a concrete instance of `ServiceLevelEventsBadEventsSelectInput` via:
//
//	ServiceLevelEventsBadEventsSelectArgs{...}
type ServiceLevelEventsBadEventsSelectInput interface {
	pulumi.Input

	ToServiceLevelEventsBadEventsSelectOutput() ServiceLevelEventsBadEventsSelectOutput
	ToServiceLevelEventsBadEventsSelectOutputWithContext(context.Context) ServiceLevelEventsBadEventsSelectOutput
}

type ServiceLevelEventsBadEventsSelectArgs struct {
	// The event attribute to use in the SELECT clause.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
	Function pulumi.StringInput `pulumi:"function"`
	// Limit for values to be counter by `GET_CDF_COUNT` function.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (ServiceLevelEventsBadEventsSelectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsBadEventsSelect)(nil)).Elem()
}

func (i ServiceLevelEventsBadEventsSelectArgs) ToServiceLevelEventsBadEventsSelectOutput() ServiceLevelEventsBadEventsSelectOutput {
	return i.ToServiceLevelEventsBadEventsSelectOutputWithContext(context.Background())
}

func (i ServiceLevelEventsBadEventsSelectArgs) ToServiceLevelEventsBadEventsSelectOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsSelectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsBadEventsSelectOutput)
}

func (i ServiceLevelEventsBadEventsSelectArgs) ToServiceLevelEventsBadEventsSelectPtrOutput() ServiceLevelEventsBadEventsSelectPtrOutput {
	return i.ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsBadEventsSelectArgs) ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsSelectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsBadEventsSelectOutput).ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(ctx)
}

// ServiceLevelEventsBadEventsSelectPtrInput is an input type that accepts ServiceLevelEventsBadEventsSelectArgs, ServiceLevelEventsBadEventsSelectPtr and ServiceLevelEventsBadEventsSelectPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsBadEventsSelectPtrInput` via:
//
//	        ServiceLevelEventsBadEventsSelectArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsBadEventsSelectPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsBadEventsSelectPtrOutput() ServiceLevelEventsBadEventsSelectPtrOutput
	ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(context.Context) ServiceLevelEventsBadEventsSelectPtrOutput
}

type serviceLevelEventsBadEventsSelectPtrType ServiceLevelEventsBadEventsSelectArgs

func ServiceLevelEventsBadEventsSelectPtr(v *ServiceLevelEventsBadEventsSelectArgs) ServiceLevelEventsBadEventsSelectPtrInput {
	return (*serviceLevelEventsBadEventsSelectPtrType)(v)
}

func (*serviceLevelEventsBadEventsSelectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsBadEventsSelect)(nil)).Elem()
}

func (i *serviceLevelEventsBadEventsSelectPtrType) ToServiceLevelEventsBadEventsSelectPtrOutput() ServiceLevelEventsBadEventsSelectPtrOutput {
	return i.ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsBadEventsSelectPtrType) ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsSelectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsBadEventsSelectPtrOutput)
}

type ServiceLevelEventsBadEventsSelectOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsBadEventsSelectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsBadEventsSelect)(nil)).Elem()
}

func (o ServiceLevelEventsBadEventsSelectOutput) ToServiceLevelEventsBadEventsSelectOutput() ServiceLevelEventsBadEventsSelectOutput {
	return o
}

func (o ServiceLevelEventsBadEventsSelectOutput) ToServiceLevelEventsBadEventsSelectOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsSelectOutput {
	return o
}

func (o ServiceLevelEventsBadEventsSelectOutput) ToServiceLevelEventsBadEventsSelectPtrOutput() ServiceLevelEventsBadEventsSelectPtrOutput {
	return o.ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsBadEventsSelectOutput) ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsSelectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEventsBadEventsSelect) *ServiceLevelEventsBadEventsSelect {
		return &v
	}).(ServiceLevelEventsBadEventsSelectPtrOutput)
}

// The event attribute to use in the SELECT clause.
func (o ServiceLevelEventsBadEventsSelectOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsBadEventsSelect) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
func (o ServiceLevelEventsBadEventsSelectOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEventsBadEventsSelect) string { return v.Function }).(pulumi.StringOutput)
}

// Limit for values to be counter by `GET_CDF_COUNT` function.
func (o ServiceLevelEventsBadEventsSelectOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsBadEventsSelect) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type ServiceLevelEventsBadEventsSelectPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsBadEventsSelectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsBadEventsSelect)(nil)).Elem()
}

func (o ServiceLevelEventsBadEventsSelectPtrOutput) ToServiceLevelEventsBadEventsSelectPtrOutput() ServiceLevelEventsBadEventsSelectPtrOutput {
	return o
}

func (o ServiceLevelEventsBadEventsSelectPtrOutput) ToServiceLevelEventsBadEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsBadEventsSelectPtrOutput {
	return o
}

func (o ServiceLevelEventsBadEventsSelectPtrOutput) Elem() ServiceLevelEventsBadEventsSelectOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEventsSelect) ServiceLevelEventsBadEventsSelect {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEventsBadEventsSelect
		return ret
	}).(ServiceLevelEventsBadEventsSelectOutput)
}

// The event attribute to use in the SELECT clause.
func (o ServiceLevelEventsBadEventsSelectPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEventsSelect) *string {
		if v == nil {
			return nil
		}
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
func (o ServiceLevelEventsBadEventsSelectPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEventsSelect) *string {
		if v == nil {
			return nil
		}
		return &v.Function
	}).(pulumi.StringPtrOutput)
}

// Limit for values to be counter by `GET_CDF_COUNT` function.
func (o ServiceLevelEventsBadEventsSelectPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsBadEventsSelect) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type ServiceLevelEventsGoodEvents struct {
	// The event type where NRDB data will be fetched from.
	From string `pulumi:"from"`
	// The NRQL SELECT clause to aggregate events.
	Select *ServiceLevelEventsGoodEventsSelect `pulumi:"select"`
	// A filter that narrows down the NRDB events just to those that are considered good responses (e.g, those that refer to
	// a particular entity and were successful).
	Where *string `pulumi:"where"`
}

// ServiceLevelEventsGoodEventsInput is an input type that accepts ServiceLevelEventsGoodEventsArgs and ServiceLevelEventsGoodEventsOutput values.
// You can construct a concrete instance of `ServiceLevelEventsGoodEventsInput` via:
//
//	ServiceLevelEventsGoodEventsArgs{...}
type ServiceLevelEventsGoodEventsInput interface {
	pulumi.Input

	ToServiceLevelEventsGoodEventsOutput() ServiceLevelEventsGoodEventsOutput
	ToServiceLevelEventsGoodEventsOutputWithContext(context.Context) ServiceLevelEventsGoodEventsOutput
}

type ServiceLevelEventsGoodEventsArgs struct {
	// The event type where NRDB data will be fetched from.
	From pulumi.StringInput `pulumi:"from"`
	// The NRQL SELECT clause to aggregate events.
	Select ServiceLevelEventsGoodEventsSelectPtrInput `pulumi:"select"`
	// A filter that narrows down the NRDB events just to those that are considered good responses (e.g, those that refer to
	// a particular entity and were successful).
	Where pulumi.StringPtrInput `pulumi:"where"`
}

func (ServiceLevelEventsGoodEventsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsGoodEvents)(nil)).Elem()
}

func (i ServiceLevelEventsGoodEventsArgs) ToServiceLevelEventsGoodEventsOutput() ServiceLevelEventsGoodEventsOutput {
	return i.ToServiceLevelEventsGoodEventsOutputWithContext(context.Background())
}

func (i ServiceLevelEventsGoodEventsArgs) ToServiceLevelEventsGoodEventsOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsGoodEventsOutput)
}

func (i ServiceLevelEventsGoodEventsArgs) ToServiceLevelEventsGoodEventsPtrOutput() ServiceLevelEventsGoodEventsPtrOutput {
	return i.ToServiceLevelEventsGoodEventsPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsGoodEventsArgs) ToServiceLevelEventsGoodEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsGoodEventsOutput).ToServiceLevelEventsGoodEventsPtrOutputWithContext(ctx)
}

// ServiceLevelEventsGoodEventsPtrInput is an input type that accepts ServiceLevelEventsGoodEventsArgs, ServiceLevelEventsGoodEventsPtr and ServiceLevelEventsGoodEventsPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsGoodEventsPtrInput` via:
//
//	        ServiceLevelEventsGoodEventsArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsGoodEventsPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsGoodEventsPtrOutput() ServiceLevelEventsGoodEventsPtrOutput
	ToServiceLevelEventsGoodEventsPtrOutputWithContext(context.Context) ServiceLevelEventsGoodEventsPtrOutput
}

type serviceLevelEventsGoodEventsPtrType ServiceLevelEventsGoodEventsArgs

func ServiceLevelEventsGoodEventsPtr(v *ServiceLevelEventsGoodEventsArgs) ServiceLevelEventsGoodEventsPtrInput {
	return (*serviceLevelEventsGoodEventsPtrType)(v)
}

func (*serviceLevelEventsGoodEventsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsGoodEvents)(nil)).Elem()
}

func (i *serviceLevelEventsGoodEventsPtrType) ToServiceLevelEventsGoodEventsPtrOutput() ServiceLevelEventsGoodEventsPtrOutput {
	return i.ToServiceLevelEventsGoodEventsPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsGoodEventsPtrType) ToServiceLevelEventsGoodEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsGoodEventsPtrOutput)
}

type ServiceLevelEventsGoodEventsOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsGoodEventsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsGoodEvents)(nil)).Elem()
}

func (o ServiceLevelEventsGoodEventsOutput) ToServiceLevelEventsGoodEventsOutput() ServiceLevelEventsGoodEventsOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsOutput) ToServiceLevelEventsGoodEventsOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsOutput) ToServiceLevelEventsGoodEventsPtrOutput() ServiceLevelEventsGoodEventsPtrOutput {
	return o.ToServiceLevelEventsGoodEventsPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsGoodEventsOutput) ToServiceLevelEventsGoodEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEventsGoodEvents) *ServiceLevelEventsGoodEvents {
		return &v
	}).(ServiceLevelEventsGoodEventsPtrOutput)
}

// The event type where NRDB data will be fetched from.
func (o ServiceLevelEventsGoodEventsOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEventsGoodEvents) string { return v.From }).(pulumi.StringOutput)
}

// The NRQL SELECT clause to aggregate events.
func (o ServiceLevelEventsGoodEventsOutput) Select() ServiceLevelEventsGoodEventsSelectPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsGoodEvents) *ServiceLevelEventsGoodEventsSelect { return v.Select }).(ServiceLevelEventsGoodEventsSelectPtrOutput)
}

// A filter that narrows down the NRDB events just to those that are considered good responses (e.g, those that refer to
// a particular entity and were successful).
func (o ServiceLevelEventsGoodEventsOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsGoodEvents) *string { return v.Where }).(pulumi.StringPtrOutput)
}

type ServiceLevelEventsGoodEventsPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsGoodEventsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsGoodEvents)(nil)).Elem()
}

func (o ServiceLevelEventsGoodEventsPtrOutput) ToServiceLevelEventsGoodEventsPtrOutput() ServiceLevelEventsGoodEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsPtrOutput) ToServiceLevelEventsGoodEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsPtrOutput) Elem() ServiceLevelEventsGoodEventsOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEvents) ServiceLevelEventsGoodEvents {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEventsGoodEvents
		return ret
	}).(ServiceLevelEventsGoodEventsOutput)
}

// The event type where NRDB data will be fetched from.
func (o ServiceLevelEventsGoodEventsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEvents) *string {
		if v == nil {
			return nil
		}
		return &v.From
	}).(pulumi.StringPtrOutput)
}

// The NRQL SELECT clause to aggregate events.
func (o ServiceLevelEventsGoodEventsPtrOutput) Select() ServiceLevelEventsGoodEventsSelectPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEvents) *ServiceLevelEventsGoodEventsSelect {
		if v == nil {
			return nil
		}
		return v.Select
	}).(ServiceLevelEventsGoodEventsSelectPtrOutput)
}

// A filter that narrows down the NRDB events just to those that are considered good responses (e.g, those that refer to
// a particular entity and were successful).
func (o ServiceLevelEventsGoodEventsPtrOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEvents) *string {
		if v == nil {
			return nil
		}
		return v.Where
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelEventsGoodEventsSelect struct {
	// The event attribute to use in the SELECT clause.
	Attribute *string `pulumi:"attribute"`
	// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
	Function string `pulumi:"function"`
	// Limit for values to be counter by `GET_CDF_COUNT` function.
	Threshold *float64 `pulumi:"threshold"`
}

// ServiceLevelEventsGoodEventsSelectInput is an input type that accepts ServiceLevelEventsGoodEventsSelectArgs and ServiceLevelEventsGoodEventsSelectOutput values.
// You can construct a concrete instance of `ServiceLevelEventsGoodEventsSelectInput` via:
//
//	ServiceLevelEventsGoodEventsSelectArgs{...}
type ServiceLevelEventsGoodEventsSelectInput interface {
	pulumi.Input

	ToServiceLevelEventsGoodEventsSelectOutput() ServiceLevelEventsGoodEventsSelectOutput
	ToServiceLevelEventsGoodEventsSelectOutputWithContext(context.Context) ServiceLevelEventsGoodEventsSelectOutput
}

type ServiceLevelEventsGoodEventsSelectArgs struct {
	// The event attribute to use in the SELECT clause.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
	Function pulumi.StringInput `pulumi:"function"`
	// Limit for values to be counter by `GET_CDF_COUNT` function.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (ServiceLevelEventsGoodEventsSelectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsGoodEventsSelect)(nil)).Elem()
}

func (i ServiceLevelEventsGoodEventsSelectArgs) ToServiceLevelEventsGoodEventsSelectOutput() ServiceLevelEventsGoodEventsSelectOutput {
	return i.ToServiceLevelEventsGoodEventsSelectOutputWithContext(context.Background())
}

func (i ServiceLevelEventsGoodEventsSelectArgs) ToServiceLevelEventsGoodEventsSelectOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsSelectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsGoodEventsSelectOutput)
}

func (i ServiceLevelEventsGoodEventsSelectArgs) ToServiceLevelEventsGoodEventsSelectPtrOutput() ServiceLevelEventsGoodEventsSelectPtrOutput {
	return i.ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsGoodEventsSelectArgs) ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsSelectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsGoodEventsSelectOutput).ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(ctx)
}

// ServiceLevelEventsGoodEventsSelectPtrInput is an input type that accepts ServiceLevelEventsGoodEventsSelectArgs, ServiceLevelEventsGoodEventsSelectPtr and ServiceLevelEventsGoodEventsSelectPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsGoodEventsSelectPtrInput` via:
//
//	        ServiceLevelEventsGoodEventsSelectArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsGoodEventsSelectPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsGoodEventsSelectPtrOutput() ServiceLevelEventsGoodEventsSelectPtrOutput
	ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(context.Context) ServiceLevelEventsGoodEventsSelectPtrOutput
}

type serviceLevelEventsGoodEventsSelectPtrType ServiceLevelEventsGoodEventsSelectArgs

func ServiceLevelEventsGoodEventsSelectPtr(v *ServiceLevelEventsGoodEventsSelectArgs) ServiceLevelEventsGoodEventsSelectPtrInput {
	return (*serviceLevelEventsGoodEventsSelectPtrType)(v)
}

func (*serviceLevelEventsGoodEventsSelectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsGoodEventsSelect)(nil)).Elem()
}

func (i *serviceLevelEventsGoodEventsSelectPtrType) ToServiceLevelEventsGoodEventsSelectPtrOutput() ServiceLevelEventsGoodEventsSelectPtrOutput {
	return i.ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsGoodEventsSelectPtrType) ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsSelectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsGoodEventsSelectPtrOutput)
}

type ServiceLevelEventsGoodEventsSelectOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsGoodEventsSelectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsGoodEventsSelect)(nil)).Elem()
}

func (o ServiceLevelEventsGoodEventsSelectOutput) ToServiceLevelEventsGoodEventsSelectOutput() ServiceLevelEventsGoodEventsSelectOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsSelectOutput) ToServiceLevelEventsGoodEventsSelectOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsSelectOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsSelectOutput) ToServiceLevelEventsGoodEventsSelectPtrOutput() ServiceLevelEventsGoodEventsSelectPtrOutput {
	return o.ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsGoodEventsSelectOutput) ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsSelectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEventsGoodEventsSelect) *ServiceLevelEventsGoodEventsSelect {
		return &v
	}).(ServiceLevelEventsGoodEventsSelectPtrOutput)
}

// The event attribute to use in the SELECT clause.
func (o ServiceLevelEventsGoodEventsSelectOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsGoodEventsSelect) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
func (o ServiceLevelEventsGoodEventsSelectOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEventsGoodEventsSelect) string { return v.Function }).(pulumi.StringOutput)
}

// Limit for values to be counter by `GET_CDF_COUNT` function.
func (o ServiceLevelEventsGoodEventsSelectOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsGoodEventsSelect) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type ServiceLevelEventsGoodEventsSelectPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsGoodEventsSelectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsGoodEventsSelect)(nil)).Elem()
}

func (o ServiceLevelEventsGoodEventsSelectPtrOutput) ToServiceLevelEventsGoodEventsSelectPtrOutput() ServiceLevelEventsGoodEventsSelectPtrOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsSelectPtrOutput) ToServiceLevelEventsGoodEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsGoodEventsSelectPtrOutput {
	return o
}

func (o ServiceLevelEventsGoodEventsSelectPtrOutput) Elem() ServiceLevelEventsGoodEventsSelectOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEventsSelect) ServiceLevelEventsGoodEventsSelect {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEventsGoodEventsSelect
		return ret
	}).(ServiceLevelEventsGoodEventsSelectOutput)
}

// The event attribute to use in the SELECT clause.
func (o ServiceLevelEventsGoodEventsSelectPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEventsSelect) *string {
		if v == nil {
			return nil
		}
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
func (o ServiceLevelEventsGoodEventsSelectPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEventsSelect) *string {
		if v == nil {
			return nil
		}
		return &v.Function
	}).(pulumi.StringPtrOutput)
}

// Limit for values to be counter by `GET_CDF_COUNT` function.
func (o ServiceLevelEventsGoodEventsSelectPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsGoodEventsSelect) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type ServiceLevelEventsValidEvents struct {
	// The event type where NRDB data will be fetched from.
	From string `pulumi:"from"`
	// The NRQL SELECT clause to aggregate events.
	Select *ServiceLevelEventsValidEventsSelect `pulumi:"select"`
	// A filter that specifies all the NRDB events that are considered in this SLI (e.g, those that refer to a particular entity).
	Where *string `pulumi:"where"`
}

// ServiceLevelEventsValidEventsInput is an input type that accepts ServiceLevelEventsValidEventsArgs and ServiceLevelEventsValidEventsOutput values.
// You can construct a concrete instance of `ServiceLevelEventsValidEventsInput` via:
//
//	ServiceLevelEventsValidEventsArgs{...}
type ServiceLevelEventsValidEventsInput interface {
	pulumi.Input

	ToServiceLevelEventsValidEventsOutput() ServiceLevelEventsValidEventsOutput
	ToServiceLevelEventsValidEventsOutputWithContext(context.Context) ServiceLevelEventsValidEventsOutput
}

type ServiceLevelEventsValidEventsArgs struct {
	// The event type where NRDB data will be fetched from.
	From pulumi.StringInput `pulumi:"from"`
	// The NRQL SELECT clause to aggregate events.
	Select ServiceLevelEventsValidEventsSelectPtrInput `pulumi:"select"`
	// A filter that specifies all the NRDB events that are considered in this SLI (e.g, those that refer to a particular entity).
	Where pulumi.StringPtrInput `pulumi:"where"`
}

func (ServiceLevelEventsValidEventsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsValidEvents)(nil)).Elem()
}

func (i ServiceLevelEventsValidEventsArgs) ToServiceLevelEventsValidEventsOutput() ServiceLevelEventsValidEventsOutput {
	return i.ToServiceLevelEventsValidEventsOutputWithContext(context.Background())
}

func (i ServiceLevelEventsValidEventsArgs) ToServiceLevelEventsValidEventsOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsValidEventsOutput)
}

func (i ServiceLevelEventsValidEventsArgs) ToServiceLevelEventsValidEventsPtrOutput() ServiceLevelEventsValidEventsPtrOutput {
	return i.ToServiceLevelEventsValidEventsPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsValidEventsArgs) ToServiceLevelEventsValidEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsValidEventsOutput).ToServiceLevelEventsValidEventsPtrOutputWithContext(ctx)
}

// ServiceLevelEventsValidEventsPtrInput is an input type that accepts ServiceLevelEventsValidEventsArgs, ServiceLevelEventsValidEventsPtr and ServiceLevelEventsValidEventsPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsValidEventsPtrInput` via:
//
//	        ServiceLevelEventsValidEventsArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsValidEventsPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsValidEventsPtrOutput() ServiceLevelEventsValidEventsPtrOutput
	ToServiceLevelEventsValidEventsPtrOutputWithContext(context.Context) ServiceLevelEventsValidEventsPtrOutput
}

type serviceLevelEventsValidEventsPtrType ServiceLevelEventsValidEventsArgs

func ServiceLevelEventsValidEventsPtr(v *ServiceLevelEventsValidEventsArgs) ServiceLevelEventsValidEventsPtrInput {
	return (*serviceLevelEventsValidEventsPtrType)(v)
}

func (*serviceLevelEventsValidEventsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsValidEvents)(nil)).Elem()
}

func (i *serviceLevelEventsValidEventsPtrType) ToServiceLevelEventsValidEventsPtrOutput() ServiceLevelEventsValidEventsPtrOutput {
	return i.ToServiceLevelEventsValidEventsPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsValidEventsPtrType) ToServiceLevelEventsValidEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsValidEventsPtrOutput)
}

type ServiceLevelEventsValidEventsOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsValidEventsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsValidEvents)(nil)).Elem()
}

func (o ServiceLevelEventsValidEventsOutput) ToServiceLevelEventsValidEventsOutput() ServiceLevelEventsValidEventsOutput {
	return o
}

func (o ServiceLevelEventsValidEventsOutput) ToServiceLevelEventsValidEventsOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsOutput {
	return o
}

func (o ServiceLevelEventsValidEventsOutput) ToServiceLevelEventsValidEventsPtrOutput() ServiceLevelEventsValidEventsPtrOutput {
	return o.ToServiceLevelEventsValidEventsPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsValidEventsOutput) ToServiceLevelEventsValidEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEventsValidEvents) *ServiceLevelEventsValidEvents {
		return &v
	}).(ServiceLevelEventsValidEventsPtrOutput)
}

// The event type where NRDB data will be fetched from.
func (o ServiceLevelEventsValidEventsOutput) From() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEventsValidEvents) string { return v.From }).(pulumi.StringOutput)
}

// The NRQL SELECT clause to aggregate events.
func (o ServiceLevelEventsValidEventsOutput) Select() ServiceLevelEventsValidEventsSelectPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsValidEvents) *ServiceLevelEventsValidEventsSelect { return v.Select }).(ServiceLevelEventsValidEventsSelectPtrOutput)
}

// A filter that specifies all the NRDB events that are considered in this SLI (e.g, those that refer to a particular entity).
func (o ServiceLevelEventsValidEventsOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsValidEvents) *string { return v.Where }).(pulumi.StringPtrOutput)
}

type ServiceLevelEventsValidEventsPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsValidEventsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsValidEvents)(nil)).Elem()
}

func (o ServiceLevelEventsValidEventsPtrOutput) ToServiceLevelEventsValidEventsPtrOutput() ServiceLevelEventsValidEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsValidEventsPtrOutput) ToServiceLevelEventsValidEventsPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsPtrOutput {
	return o
}

func (o ServiceLevelEventsValidEventsPtrOutput) Elem() ServiceLevelEventsValidEventsOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEvents) ServiceLevelEventsValidEvents {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEventsValidEvents
		return ret
	}).(ServiceLevelEventsValidEventsOutput)
}

// The event type where NRDB data will be fetched from.
func (o ServiceLevelEventsValidEventsPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEvents) *string {
		if v == nil {
			return nil
		}
		return &v.From
	}).(pulumi.StringPtrOutput)
}

// The NRQL SELECT clause to aggregate events.
func (o ServiceLevelEventsValidEventsPtrOutput) Select() ServiceLevelEventsValidEventsSelectPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEvents) *ServiceLevelEventsValidEventsSelect {
		if v == nil {
			return nil
		}
		return v.Select
	}).(ServiceLevelEventsValidEventsSelectPtrOutput)
}

// A filter that specifies all the NRDB events that are considered in this SLI (e.g, those that refer to a particular entity).
func (o ServiceLevelEventsValidEventsPtrOutput) Where() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEvents) *string {
		if v == nil {
			return nil
		}
		return v.Where
	}).(pulumi.StringPtrOutput)
}

type ServiceLevelEventsValidEventsSelect struct {
	// The event attribute to use in the SELECT clause.
	Attribute *string `pulumi:"attribute"`
	// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
	Function string `pulumi:"function"`
	// Limit for values to be counter by `GET_CDF_COUNT` function.
	Threshold *float64 `pulumi:"threshold"`
}

// ServiceLevelEventsValidEventsSelectInput is an input type that accepts ServiceLevelEventsValidEventsSelectArgs and ServiceLevelEventsValidEventsSelectOutput values.
// You can construct a concrete instance of `ServiceLevelEventsValidEventsSelectInput` via:
//
//	ServiceLevelEventsValidEventsSelectArgs{...}
type ServiceLevelEventsValidEventsSelectInput interface {
	pulumi.Input

	ToServiceLevelEventsValidEventsSelectOutput() ServiceLevelEventsValidEventsSelectOutput
	ToServiceLevelEventsValidEventsSelectOutputWithContext(context.Context) ServiceLevelEventsValidEventsSelectOutput
}

type ServiceLevelEventsValidEventsSelectArgs struct {
	// The event attribute to use in the SELECT clause.
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
	Function pulumi.StringInput `pulumi:"function"`
	// Limit for values to be counter by `GET_CDF_COUNT` function.
	Threshold pulumi.Float64PtrInput `pulumi:"threshold"`
}

func (ServiceLevelEventsValidEventsSelectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsValidEventsSelect)(nil)).Elem()
}

func (i ServiceLevelEventsValidEventsSelectArgs) ToServiceLevelEventsValidEventsSelectOutput() ServiceLevelEventsValidEventsSelectOutput {
	return i.ToServiceLevelEventsValidEventsSelectOutputWithContext(context.Background())
}

func (i ServiceLevelEventsValidEventsSelectArgs) ToServiceLevelEventsValidEventsSelectOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsSelectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsValidEventsSelectOutput)
}

func (i ServiceLevelEventsValidEventsSelectArgs) ToServiceLevelEventsValidEventsSelectPtrOutput() ServiceLevelEventsValidEventsSelectPtrOutput {
	return i.ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(context.Background())
}

func (i ServiceLevelEventsValidEventsSelectArgs) ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsSelectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsValidEventsSelectOutput).ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(ctx)
}

// ServiceLevelEventsValidEventsSelectPtrInput is an input type that accepts ServiceLevelEventsValidEventsSelectArgs, ServiceLevelEventsValidEventsSelectPtr and ServiceLevelEventsValidEventsSelectPtrOutput values.
// You can construct a concrete instance of `ServiceLevelEventsValidEventsSelectPtrInput` via:
//
//	        ServiceLevelEventsValidEventsSelectArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelEventsValidEventsSelectPtrInput interface {
	pulumi.Input

	ToServiceLevelEventsValidEventsSelectPtrOutput() ServiceLevelEventsValidEventsSelectPtrOutput
	ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(context.Context) ServiceLevelEventsValidEventsSelectPtrOutput
}

type serviceLevelEventsValidEventsSelectPtrType ServiceLevelEventsValidEventsSelectArgs

func ServiceLevelEventsValidEventsSelectPtr(v *ServiceLevelEventsValidEventsSelectArgs) ServiceLevelEventsValidEventsSelectPtrInput {
	return (*serviceLevelEventsValidEventsSelectPtrType)(v)
}

func (*serviceLevelEventsValidEventsSelectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsValidEventsSelect)(nil)).Elem()
}

func (i *serviceLevelEventsValidEventsSelectPtrType) ToServiceLevelEventsValidEventsSelectPtrOutput() ServiceLevelEventsValidEventsSelectPtrOutput {
	return i.ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(context.Background())
}

func (i *serviceLevelEventsValidEventsSelectPtrType) ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsSelectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelEventsValidEventsSelectPtrOutput)
}

type ServiceLevelEventsValidEventsSelectOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsValidEventsSelectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelEventsValidEventsSelect)(nil)).Elem()
}

func (o ServiceLevelEventsValidEventsSelectOutput) ToServiceLevelEventsValidEventsSelectOutput() ServiceLevelEventsValidEventsSelectOutput {
	return o
}

func (o ServiceLevelEventsValidEventsSelectOutput) ToServiceLevelEventsValidEventsSelectOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsSelectOutput {
	return o
}

func (o ServiceLevelEventsValidEventsSelectOutput) ToServiceLevelEventsValidEventsSelectPtrOutput() ServiceLevelEventsValidEventsSelectPtrOutput {
	return o.ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(context.Background())
}

func (o ServiceLevelEventsValidEventsSelectOutput) ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsSelectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelEventsValidEventsSelect) *ServiceLevelEventsValidEventsSelect {
		return &v
	}).(ServiceLevelEventsValidEventsSelectPtrOutput)
}

// The event attribute to use in the SELECT clause.
func (o ServiceLevelEventsValidEventsSelectOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsValidEventsSelect) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
func (o ServiceLevelEventsValidEventsSelectOutput) Function() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelEventsValidEventsSelect) string { return v.Function }).(pulumi.StringOutput)
}

// Limit for values to be counter by `GET_CDF_COUNT` function.
func (o ServiceLevelEventsValidEventsSelectOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ServiceLevelEventsValidEventsSelect) *float64 { return v.Threshold }).(pulumi.Float64PtrOutput)
}

type ServiceLevelEventsValidEventsSelectPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelEventsValidEventsSelectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelEventsValidEventsSelect)(nil)).Elem()
}

func (o ServiceLevelEventsValidEventsSelectPtrOutput) ToServiceLevelEventsValidEventsSelectPtrOutput() ServiceLevelEventsValidEventsSelectPtrOutput {
	return o
}

func (o ServiceLevelEventsValidEventsSelectPtrOutput) ToServiceLevelEventsValidEventsSelectPtrOutputWithContext(ctx context.Context) ServiceLevelEventsValidEventsSelectPtrOutput {
	return o
}

func (o ServiceLevelEventsValidEventsSelectPtrOutput) Elem() ServiceLevelEventsValidEventsSelectOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEventsSelect) ServiceLevelEventsValidEventsSelect {
		if v != nil {
			return *v
		}
		var ret ServiceLevelEventsValidEventsSelect
		return ret
	}).(ServiceLevelEventsValidEventsSelectOutput)
}

// The event attribute to use in the SELECT clause.
func (o ServiceLevelEventsValidEventsSelectPtrOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEventsSelect) *string {
		if v == nil {
			return nil
		}
		return v.Attribute
	}).(pulumi.StringPtrOutput)
}

// The function to use in the SELECT clause. Valid values are `COUNT`, `SUM`, `GET_FIELD`, and `GET_CDF_COUNT`.
func (o ServiceLevelEventsValidEventsSelectPtrOutput) Function() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEventsSelect) *string {
		if v == nil {
			return nil
		}
		return &v.Function
	}).(pulumi.StringPtrOutput)
}

// Limit for values to be counter by `GET_CDF_COUNT` function.
func (o ServiceLevelEventsValidEventsSelectPtrOutput) Threshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceLevelEventsValidEventsSelect) *float64 {
		if v == nil {
			return nil
		}
		return v.Threshold
	}).(pulumi.Float64PtrOutput)
}

type ServiceLevelObjective struct {
	// The description of the SLI.
	Description *string `pulumi:"description"`
	// A short name for the SLI that will help anyone understand what it is about.
	Name *string `pulumi:"name"`
	// The target of the objective, valid values between `0` and `100`. Up to 5 decimals accepted.
	Target float64 `pulumi:"target"`
	// Time window is the period of the objective.
	TimeWindow ServiceLevelObjectiveTimeWindow `pulumi:"timeWindow"`
}

// ServiceLevelObjectiveInput is an input type that accepts ServiceLevelObjectiveArgs and ServiceLevelObjectiveOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveInput` via:
//
//	ServiceLevelObjectiveArgs{...}
type ServiceLevelObjectiveInput interface {
	pulumi.Input

	ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput
	ToServiceLevelObjectiveOutputWithContext(context.Context) ServiceLevelObjectiveOutput
}

type ServiceLevelObjectiveArgs struct {
	// The description of the SLI.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// A short name for the SLI that will help anyone understand what it is about.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The target of the objective, valid values between `0` and `100`. Up to 5 decimals accepted.
	Target pulumi.Float64Input `pulumi:"target"`
	// Time window is the period of the objective.
	TimeWindow ServiceLevelObjectiveTimeWindowInput `pulumi:"timeWindow"`
}

func (ServiceLevelObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjective)(nil)).Elem()
}

func (i ServiceLevelObjectiveArgs) ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput {
	return i.ToServiceLevelObjectiveOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveArgs) ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveOutput)
}

func (i ServiceLevelObjectiveArgs) ToServiceLevelObjectivePtrOutput() ServiceLevelObjectivePtrOutput {
	return i.ToServiceLevelObjectivePtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveArgs) ToServiceLevelObjectivePtrOutputWithContext(ctx context.Context) ServiceLevelObjectivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveOutput).ToServiceLevelObjectivePtrOutputWithContext(ctx)
}

// ServiceLevelObjectivePtrInput is an input type that accepts ServiceLevelObjectiveArgs, ServiceLevelObjectivePtr and ServiceLevelObjectivePtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectivePtrInput` via:
//
//	        ServiceLevelObjectiveArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectivePtrInput interface {
	pulumi.Input

	ToServiceLevelObjectivePtrOutput() ServiceLevelObjectivePtrOutput
	ToServiceLevelObjectivePtrOutputWithContext(context.Context) ServiceLevelObjectivePtrOutput
}

type serviceLevelObjectivePtrType ServiceLevelObjectiveArgs

func ServiceLevelObjectivePtr(v *ServiceLevelObjectiveArgs) ServiceLevelObjectivePtrInput {
	return (*serviceLevelObjectivePtrType)(v)
}

func (*serviceLevelObjectivePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjective)(nil)).Elem()
}

func (i *serviceLevelObjectivePtrType) ToServiceLevelObjectivePtrOutput() ServiceLevelObjectivePtrOutput {
	return i.ToServiceLevelObjectivePtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectivePtrType) ToServiceLevelObjectivePtrOutputWithContext(ctx context.Context) ServiceLevelObjectivePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectivePtrOutput)
}

type ServiceLevelObjectiveOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjective)(nil)).Elem()
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectiveOutput() ServiceLevelObjectiveOutput {
	return o
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectiveOutputWithContext(ctx context.Context) ServiceLevelObjectiveOutput {
	return o
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectivePtrOutput() ServiceLevelObjectivePtrOutput {
	return o.ToServiceLevelObjectivePtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveOutput) ToServiceLevelObjectivePtrOutputWithContext(ctx context.Context) ServiceLevelObjectivePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjective) *ServiceLevelObjective {
		return &v
	}).(ServiceLevelObjectivePtrOutput)
}

// The description of the SLI.
func (o ServiceLevelObjectiveOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjective) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// A short name for the SLI that will help anyone understand what it is about.
func (o ServiceLevelObjectiveOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLevelObjective) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The target of the objective, valid values between `0` and `100`. Up to 5 decimals accepted.
func (o ServiceLevelObjectiveOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v ServiceLevelObjective) float64 { return v.Target }).(pulumi.Float64Output)
}

// Time window is the period of the objective.
func (o ServiceLevelObjectiveOutput) TimeWindow() ServiceLevelObjectiveTimeWindowOutput {
	return o.ApplyT(func(v ServiceLevelObjective) ServiceLevelObjectiveTimeWindow { return v.TimeWindow }).(ServiceLevelObjectiveTimeWindowOutput)
}

type ServiceLevelObjectivePtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectivePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjective)(nil)).Elem()
}

func (o ServiceLevelObjectivePtrOutput) ToServiceLevelObjectivePtrOutput() ServiceLevelObjectivePtrOutput {
	return o
}

func (o ServiceLevelObjectivePtrOutput) ToServiceLevelObjectivePtrOutputWithContext(ctx context.Context) ServiceLevelObjectivePtrOutput {
	return o
}

func (o ServiceLevelObjectivePtrOutput) Elem() ServiceLevelObjectiveOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) ServiceLevelObjective {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjective
		return ret
	}).(ServiceLevelObjectiveOutput)
}

// The description of the SLI.
func (o ServiceLevelObjectivePtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// A short name for the SLI that will help anyone understand what it is about.
func (o ServiceLevelObjectivePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// The target of the objective, valid values between `0` and `100`. Up to 5 decimals accepted.
func (o ServiceLevelObjectivePtrOutput) Target() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) *float64 {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.Float64PtrOutput)
}

// Time window is the period of the objective.
func (o ServiceLevelObjectivePtrOutput) TimeWindow() ServiceLevelObjectiveTimeWindowPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjective) *ServiceLevelObjectiveTimeWindow {
		if v == nil {
			return nil
		}
		return &v.TimeWindow
	}).(ServiceLevelObjectiveTimeWindowPtrOutput)
}

type ServiceLevelObjectiveTimeWindow struct {
	// Rolling window.
	Rolling ServiceLevelObjectiveTimeWindowRolling `pulumi:"rolling"`
}

// ServiceLevelObjectiveTimeWindowInput is an input type that accepts ServiceLevelObjectiveTimeWindowArgs and ServiceLevelObjectiveTimeWindowOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveTimeWindowInput` via:
//
//	ServiceLevelObjectiveTimeWindowArgs{...}
type ServiceLevelObjectiveTimeWindowInput interface {
	pulumi.Input

	ToServiceLevelObjectiveTimeWindowOutput() ServiceLevelObjectiveTimeWindowOutput
	ToServiceLevelObjectiveTimeWindowOutputWithContext(context.Context) ServiceLevelObjectiveTimeWindowOutput
}

type ServiceLevelObjectiveTimeWindowArgs struct {
	// Rolling window.
	Rolling ServiceLevelObjectiveTimeWindowRollingInput `pulumi:"rolling"`
}

func (ServiceLevelObjectiveTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveTimeWindow)(nil)).Elem()
}

func (i ServiceLevelObjectiveTimeWindowArgs) ToServiceLevelObjectiveTimeWindowOutput() ServiceLevelObjectiveTimeWindowOutput {
	return i.ToServiceLevelObjectiveTimeWindowOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveTimeWindowArgs) ToServiceLevelObjectiveTimeWindowOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveTimeWindowOutput)
}

func (i ServiceLevelObjectiveTimeWindowArgs) ToServiceLevelObjectiveTimeWindowPtrOutput() ServiceLevelObjectiveTimeWindowPtrOutput {
	return i.ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveTimeWindowArgs) ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveTimeWindowOutput).ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveTimeWindowPtrInput is an input type that accepts ServiceLevelObjectiveTimeWindowArgs, ServiceLevelObjectiveTimeWindowPtr and ServiceLevelObjectiveTimeWindowPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveTimeWindowPtrInput` via:
//
//	        ServiceLevelObjectiveTimeWindowArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveTimeWindowPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveTimeWindowPtrOutput() ServiceLevelObjectiveTimeWindowPtrOutput
	ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(context.Context) ServiceLevelObjectiveTimeWindowPtrOutput
}

type serviceLevelObjectiveTimeWindowPtrType ServiceLevelObjectiveTimeWindowArgs

func ServiceLevelObjectiveTimeWindowPtr(v *ServiceLevelObjectiveTimeWindowArgs) ServiceLevelObjectiveTimeWindowPtrInput {
	return (*serviceLevelObjectiveTimeWindowPtrType)(v)
}

func (*serviceLevelObjectiveTimeWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveTimeWindow)(nil)).Elem()
}

func (i *serviceLevelObjectiveTimeWindowPtrType) ToServiceLevelObjectiveTimeWindowPtrOutput() ServiceLevelObjectiveTimeWindowPtrOutput {
	return i.ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveTimeWindowPtrType) ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveTimeWindowPtrOutput)
}

type ServiceLevelObjectiveTimeWindowOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveTimeWindow)(nil)).Elem()
}

func (o ServiceLevelObjectiveTimeWindowOutput) ToServiceLevelObjectiveTimeWindowOutput() ServiceLevelObjectiveTimeWindowOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowOutput) ToServiceLevelObjectiveTimeWindowOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowOutput) ToServiceLevelObjectiveTimeWindowPtrOutput() ServiceLevelObjectiveTimeWindowPtrOutput {
	return o.ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveTimeWindowOutput) ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveTimeWindow) *ServiceLevelObjectiveTimeWindow {
		return &v
	}).(ServiceLevelObjectiveTimeWindowPtrOutput)
}

// Rolling window.
func (o ServiceLevelObjectiveTimeWindowOutput) Rolling() ServiceLevelObjectiveTimeWindowRollingOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveTimeWindow) ServiceLevelObjectiveTimeWindowRolling { return v.Rolling }).(ServiceLevelObjectiveTimeWindowRollingOutput)
}

type ServiceLevelObjectiveTimeWindowPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveTimeWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveTimeWindow)(nil)).Elem()
}

func (o ServiceLevelObjectiveTimeWindowPtrOutput) ToServiceLevelObjectiveTimeWindowPtrOutput() ServiceLevelObjectiveTimeWindowPtrOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowPtrOutput) ToServiceLevelObjectiveTimeWindowPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowPtrOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowPtrOutput) Elem() ServiceLevelObjectiveTimeWindowOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveTimeWindow) ServiceLevelObjectiveTimeWindow {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveTimeWindow
		return ret
	}).(ServiceLevelObjectiveTimeWindowOutput)
}

// Rolling window.
func (o ServiceLevelObjectiveTimeWindowPtrOutput) Rolling() ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveTimeWindow) *ServiceLevelObjectiveTimeWindowRolling {
		if v == nil {
			return nil
		}
		return &v.Rolling
	}).(ServiceLevelObjectiveTimeWindowRollingPtrOutput)
}

type ServiceLevelObjectiveTimeWindowRolling struct {
	// Valid values are `1`, `7` and `28`.
	Count int `pulumi:"count"`
	// The only supported value is `DAY`.
	Unit string `pulumi:"unit"`
}

// ServiceLevelObjectiveTimeWindowRollingInput is an input type that accepts ServiceLevelObjectiveTimeWindowRollingArgs and ServiceLevelObjectiveTimeWindowRollingOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveTimeWindowRollingInput` via:
//
//	ServiceLevelObjectiveTimeWindowRollingArgs{...}
type ServiceLevelObjectiveTimeWindowRollingInput interface {
	pulumi.Input

	ToServiceLevelObjectiveTimeWindowRollingOutput() ServiceLevelObjectiveTimeWindowRollingOutput
	ToServiceLevelObjectiveTimeWindowRollingOutputWithContext(context.Context) ServiceLevelObjectiveTimeWindowRollingOutput
}

type ServiceLevelObjectiveTimeWindowRollingArgs struct {
	// Valid values are `1`, `7` and `28`.
	Count pulumi.IntInput `pulumi:"count"`
	// The only supported value is `DAY`.
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (ServiceLevelObjectiveTimeWindowRollingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveTimeWindowRolling)(nil)).Elem()
}

func (i ServiceLevelObjectiveTimeWindowRollingArgs) ToServiceLevelObjectiveTimeWindowRollingOutput() ServiceLevelObjectiveTimeWindowRollingOutput {
	return i.ToServiceLevelObjectiveTimeWindowRollingOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveTimeWindowRollingArgs) ToServiceLevelObjectiveTimeWindowRollingOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowRollingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveTimeWindowRollingOutput)
}

func (i ServiceLevelObjectiveTimeWindowRollingArgs) ToServiceLevelObjectiveTimeWindowRollingPtrOutput() ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return i.ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(context.Background())
}

func (i ServiceLevelObjectiveTimeWindowRollingArgs) ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveTimeWindowRollingOutput).ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(ctx)
}

// ServiceLevelObjectiveTimeWindowRollingPtrInput is an input type that accepts ServiceLevelObjectiveTimeWindowRollingArgs, ServiceLevelObjectiveTimeWindowRollingPtr and ServiceLevelObjectiveTimeWindowRollingPtrOutput values.
// You can construct a concrete instance of `ServiceLevelObjectiveTimeWindowRollingPtrInput` via:
//
//	        ServiceLevelObjectiveTimeWindowRollingArgs{...}
//
//	or:
//
//	        nil
type ServiceLevelObjectiveTimeWindowRollingPtrInput interface {
	pulumi.Input

	ToServiceLevelObjectiveTimeWindowRollingPtrOutput() ServiceLevelObjectiveTimeWindowRollingPtrOutput
	ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(context.Context) ServiceLevelObjectiveTimeWindowRollingPtrOutput
}

type serviceLevelObjectiveTimeWindowRollingPtrType ServiceLevelObjectiveTimeWindowRollingArgs

func ServiceLevelObjectiveTimeWindowRollingPtr(v *ServiceLevelObjectiveTimeWindowRollingArgs) ServiceLevelObjectiveTimeWindowRollingPtrInput {
	return (*serviceLevelObjectiveTimeWindowRollingPtrType)(v)
}

func (*serviceLevelObjectiveTimeWindowRollingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveTimeWindowRolling)(nil)).Elem()
}

func (i *serviceLevelObjectiveTimeWindowRollingPtrType) ToServiceLevelObjectiveTimeWindowRollingPtrOutput() ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return i.ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(context.Background())
}

func (i *serviceLevelObjectiveTimeWindowRollingPtrType) ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLevelObjectiveTimeWindowRollingPtrOutput)
}

type ServiceLevelObjectiveTimeWindowRollingOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveTimeWindowRollingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLevelObjectiveTimeWindowRolling)(nil)).Elem()
}

func (o ServiceLevelObjectiveTimeWindowRollingOutput) ToServiceLevelObjectiveTimeWindowRollingOutput() ServiceLevelObjectiveTimeWindowRollingOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowRollingOutput) ToServiceLevelObjectiveTimeWindowRollingOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowRollingOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowRollingOutput) ToServiceLevelObjectiveTimeWindowRollingPtrOutput() ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return o.ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(context.Background())
}

func (o ServiceLevelObjectiveTimeWindowRollingOutput) ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceLevelObjectiveTimeWindowRolling) *ServiceLevelObjectiveTimeWindowRolling {
		return &v
	}).(ServiceLevelObjectiveTimeWindowRollingPtrOutput)
}

// Valid values are `1`, `7` and `28`.
func (o ServiceLevelObjectiveTimeWindowRollingOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveTimeWindowRolling) int { return v.Count }).(pulumi.IntOutput)
}

// The only supported value is `DAY`.
func (o ServiceLevelObjectiveTimeWindowRollingOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLevelObjectiveTimeWindowRolling) string { return v.Unit }).(pulumi.StringOutput)
}

type ServiceLevelObjectiveTimeWindowRollingPtrOutput struct{ *pulumi.OutputState }

func (ServiceLevelObjectiveTimeWindowRollingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceLevelObjectiveTimeWindowRolling)(nil)).Elem()
}

func (o ServiceLevelObjectiveTimeWindowRollingPtrOutput) ToServiceLevelObjectiveTimeWindowRollingPtrOutput() ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowRollingPtrOutput) ToServiceLevelObjectiveTimeWindowRollingPtrOutputWithContext(ctx context.Context) ServiceLevelObjectiveTimeWindowRollingPtrOutput {
	return o
}

func (o ServiceLevelObjectiveTimeWindowRollingPtrOutput) Elem() ServiceLevelObjectiveTimeWindowRollingOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveTimeWindowRolling) ServiceLevelObjectiveTimeWindowRolling {
		if v != nil {
			return *v
		}
		var ret ServiceLevelObjectiveTimeWindowRolling
		return ret
	}).(ServiceLevelObjectiveTimeWindowRollingOutput)
}

// Valid values are `1`, `7` and `28`.
func (o ServiceLevelObjectiveTimeWindowRollingPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveTimeWindowRolling) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// The only supported value is `DAY`.
func (o ServiceLevelObjectiveTimeWindowRollingPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceLevelObjectiveTimeWindowRolling) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

type WorkflowDestination struct {
	// (Required) Destination's channel id.
	ChannelId string `pulumi:"channelId"`
	// The name of the workflow.
	Name *string `pulumi:"name"`
	// List of triggers to notify about in this destination configuration.
	NotificationTriggers []string `pulumi:"notificationTriggers"`
	// (Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, SERVICE_NOW_APP, WEBHOOK, MOBILE_PUSH, SLACK, JIRA, MICROSOFT_TEAMS).
	Type *string `pulumi:"type"`
	// Update original notification message (Slack channels only)
	UpdateOriginalMessage *bool `pulumi:"updateOriginalMessage"`
}

// WorkflowDestinationInput is an input type that accepts WorkflowDestinationArgs and WorkflowDestinationOutput values.
// You can construct a concrete instance of `WorkflowDestinationInput` via:
//
//	WorkflowDestinationArgs{...}
type WorkflowDestinationInput interface {
	pulumi.Input

	ToWorkflowDestinationOutput() WorkflowDestinationOutput
	ToWorkflowDestinationOutputWithContext(context.Context) WorkflowDestinationOutput
}

type WorkflowDestinationArgs struct {
	// (Required) Destination's channel id.
	ChannelId pulumi.StringInput `pulumi:"channelId"`
	// The name of the workflow.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of triggers to notify about in this destination configuration.
	NotificationTriggers pulumi.StringArrayInput `pulumi:"notificationTriggers"`
	// (Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, SERVICE_NOW_APP, WEBHOOK, MOBILE_PUSH, SLACK, JIRA, MICROSOFT_TEAMS).
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Update original notification message (Slack channels only)
	UpdateOriginalMessage pulumi.BoolPtrInput `pulumi:"updateOriginalMessage"`
}

func (WorkflowDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowDestination)(nil)).Elem()
}

func (i WorkflowDestinationArgs) ToWorkflowDestinationOutput() WorkflowDestinationOutput {
	return i.ToWorkflowDestinationOutputWithContext(context.Background())
}

func (i WorkflowDestinationArgs) ToWorkflowDestinationOutputWithContext(ctx context.Context) WorkflowDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowDestinationOutput)
}

// WorkflowDestinationArrayInput is an input type that accepts WorkflowDestinationArray and WorkflowDestinationArrayOutput values.
// You can construct a concrete instance of `WorkflowDestinationArrayInput` via:
//
//	WorkflowDestinationArray{ WorkflowDestinationArgs{...} }
type WorkflowDestinationArrayInput interface {
	pulumi.Input

	ToWorkflowDestinationArrayOutput() WorkflowDestinationArrayOutput
	ToWorkflowDestinationArrayOutputWithContext(context.Context) WorkflowDestinationArrayOutput
}

type WorkflowDestinationArray []WorkflowDestinationInput

func (WorkflowDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowDestination)(nil)).Elem()
}

func (i WorkflowDestinationArray) ToWorkflowDestinationArrayOutput() WorkflowDestinationArrayOutput {
	return i.ToWorkflowDestinationArrayOutputWithContext(context.Background())
}

func (i WorkflowDestinationArray) ToWorkflowDestinationArrayOutputWithContext(ctx context.Context) WorkflowDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowDestinationArrayOutput)
}

type WorkflowDestinationOutput struct{ *pulumi.OutputState }

func (WorkflowDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowDestination)(nil)).Elem()
}

func (o WorkflowDestinationOutput) ToWorkflowDestinationOutput() WorkflowDestinationOutput {
	return o
}

func (o WorkflowDestinationOutput) ToWorkflowDestinationOutputWithContext(ctx context.Context) WorkflowDestinationOutput {
	return o
}

// (Required) Destination's channel id.
func (o WorkflowDestinationOutput) ChannelId() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowDestination) string { return v.ChannelId }).(pulumi.StringOutput)
}

// The name of the workflow.
func (o WorkflowDestinationOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowDestination) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of triggers to notify about in this destination configuration.
func (o WorkflowDestinationOutput) NotificationTriggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowDestination) []string { return v.NotificationTriggers }).(pulumi.StringArrayOutput)
}

// (Required) The type of the destination. One of: (EMAIL, EVENT_BRIDGE, PAGERDUTY_ACCOUNT_INTEGRATION, PAGERDUTY_SERVICE_INTEGRATION, SERVICE_NOW, SERVICE_NOW_APP, WEBHOOK, MOBILE_PUSH, SLACK, JIRA, MICROSOFT_TEAMS).
func (o WorkflowDestinationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowDestination) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Update original notification message (Slack channels only)
func (o WorkflowDestinationOutput) UpdateOriginalMessage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkflowDestination) *bool { return v.UpdateOriginalMessage }).(pulumi.BoolPtrOutput)
}

type WorkflowDestinationArrayOutput struct{ *pulumi.OutputState }

func (WorkflowDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowDestination)(nil)).Elem()
}

func (o WorkflowDestinationArrayOutput) ToWorkflowDestinationArrayOutput() WorkflowDestinationArrayOutput {
	return o
}

func (o WorkflowDestinationArrayOutput) ToWorkflowDestinationArrayOutputWithContext(ctx context.Context) WorkflowDestinationArrayOutput {
	return o
}

func (o WorkflowDestinationArrayOutput) Index(i pulumi.IntInput) WorkflowDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowDestination {
		return vs[0].([]WorkflowDestination)[vs[1].(int)]
	}).(WorkflowDestinationOutput)
}

type WorkflowEnrichments struct {
	// (Required) Nrql type Enrichments.
	Nrqls []WorkflowEnrichmentsNrql `pulumi:"nrqls"`
}

// WorkflowEnrichmentsInput is an input type that accepts WorkflowEnrichmentsArgs and WorkflowEnrichmentsOutput values.
// You can construct a concrete instance of `WorkflowEnrichmentsInput` via:
//
//	WorkflowEnrichmentsArgs{...}
type WorkflowEnrichmentsInput interface {
	pulumi.Input

	ToWorkflowEnrichmentsOutput() WorkflowEnrichmentsOutput
	ToWorkflowEnrichmentsOutputWithContext(context.Context) WorkflowEnrichmentsOutput
}

type WorkflowEnrichmentsArgs struct {
	// (Required) Nrql type Enrichments.
	Nrqls WorkflowEnrichmentsNrqlArrayInput `pulumi:"nrqls"`
}

func (WorkflowEnrichmentsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEnrichments)(nil)).Elem()
}

func (i WorkflowEnrichmentsArgs) ToWorkflowEnrichmentsOutput() WorkflowEnrichmentsOutput {
	return i.ToWorkflowEnrichmentsOutputWithContext(context.Background())
}

func (i WorkflowEnrichmentsArgs) ToWorkflowEnrichmentsOutputWithContext(ctx context.Context) WorkflowEnrichmentsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsOutput)
}

func (i WorkflowEnrichmentsArgs) ToWorkflowEnrichmentsPtrOutput() WorkflowEnrichmentsPtrOutput {
	return i.ToWorkflowEnrichmentsPtrOutputWithContext(context.Background())
}

func (i WorkflowEnrichmentsArgs) ToWorkflowEnrichmentsPtrOutputWithContext(ctx context.Context) WorkflowEnrichmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsOutput).ToWorkflowEnrichmentsPtrOutputWithContext(ctx)
}

// WorkflowEnrichmentsPtrInput is an input type that accepts WorkflowEnrichmentsArgs, WorkflowEnrichmentsPtr and WorkflowEnrichmentsPtrOutput values.
// You can construct a concrete instance of `WorkflowEnrichmentsPtrInput` via:
//
//	        WorkflowEnrichmentsArgs{...}
//
//	or:
//
//	        nil
type WorkflowEnrichmentsPtrInput interface {
	pulumi.Input

	ToWorkflowEnrichmentsPtrOutput() WorkflowEnrichmentsPtrOutput
	ToWorkflowEnrichmentsPtrOutputWithContext(context.Context) WorkflowEnrichmentsPtrOutput
}

type workflowEnrichmentsPtrType WorkflowEnrichmentsArgs

func WorkflowEnrichmentsPtr(v *WorkflowEnrichmentsArgs) WorkflowEnrichmentsPtrInput {
	return (*workflowEnrichmentsPtrType)(v)
}

func (*workflowEnrichmentsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowEnrichments)(nil)).Elem()
}

func (i *workflowEnrichmentsPtrType) ToWorkflowEnrichmentsPtrOutput() WorkflowEnrichmentsPtrOutput {
	return i.ToWorkflowEnrichmentsPtrOutputWithContext(context.Background())
}

func (i *workflowEnrichmentsPtrType) ToWorkflowEnrichmentsPtrOutputWithContext(ctx context.Context) WorkflowEnrichmentsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsPtrOutput)
}

type WorkflowEnrichmentsOutput struct{ *pulumi.OutputState }

func (WorkflowEnrichmentsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEnrichments)(nil)).Elem()
}

func (o WorkflowEnrichmentsOutput) ToWorkflowEnrichmentsOutput() WorkflowEnrichmentsOutput {
	return o
}

func (o WorkflowEnrichmentsOutput) ToWorkflowEnrichmentsOutputWithContext(ctx context.Context) WorkflowEnrichmentsOutput {
	return o
}

func (o WorkflowEnrichmentsOutput) ToWorkflowEnrichmentsPtrOutput() WorkflowEnrichmentsPtrOutput {
	return o.ToWorkflowEnrichmentsPtrOutputWithContext(context.Background())
}

func (o WorkflowEnrichmentsOutput) ToWorkflowEnrichmentsPtrOutputWithContext(ctx context.Context) WorkflowEnrichmentsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowEnrichments) *WorkflowEnrichments {
		return &v
	}).(WorkflowEnrichmentsPtrOutput)
}

// (Required) Nrql type Enrichments.
func (o WorkflowEnrichmentsOutput) Nrqls() WorkflowEnrichmentsNrqlArrayOutput {
	return o.ApplyT(func(v WorkflowEnrichments) []WorkflowEnrichmentsNrql { return v.Nrqls }).(WorkflowEnrichmentsNrqlArrayOutput)
}

type WorkflowEnrichmentsPtrOutput struct{ *pulumi.OutputState }

func (WorkflowEnrichmentsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowEnrichments)(nil)).Elem()
}

func (o WorkflowEnrichmentsPtrOutput) ToWorkflowEnrichmentsPtrOutput() WorkflowEnrichmentsPtrOutput {
	return o
}

func (o WorkflowEnrichmentsPtrOutput) ToWorkflowEnrichmentsPtrOutputWithContext(ctx context.Context) WorkflowEnrichmentsPtrOutput {
	return o
}

func (o WorkflowEnrichmentsPtrOutput) Elem() WorkflowEnrichmentsOutput {
	return o.ApplyT(func(v *WorkflowEnrichments) WorkflowEnrichments {
		if v != nil {
			return *v
		}
		var ret WorkflowEnrichments
		return ret
	}).(WorkflowEnrichmentsOutput)
}

// (Required) Nrql type Enrichments.
func (o WorkflowEnrichmentsPtrOutput) Nrqls() WorkflowEnrichmentsNrqlArrayOutput {
	return o.ApplyT(func(v *WorkflowEnrichments) []WorkflowEnrichmentsNrql {
		if v == nil {
			return nil
		}
		return v.Nrqls
	}).(WorkflowEnrichmentsNrqlArrayOutput)
}

type WorkflowEnrichmentsNrql struct {
	// Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
	AccountId *string `pulumi:"accountId"`
	// A set of key-value pairs to represent a enrichment configuration.
	Configurations []WorkflowEnrichmentsNrqlConfiguration `pulumi:"configurations"`
	// Enrichment's id.
	EnrichmentId *string `pulumi:"enrichmentId"`
	// The name of the workflow.
	Name string `pulumi:"name"`
	// The type of the enrichment. One of: (NRQL).
	Type *string `pulumi:"type"`
}

// WorkflowEnrichmentsNrqlInput is an input type that accepts WorkflowEnrichmentsNrqlArgs and WorkflowEnrichmentsNrqlOutput values.
// You can construct a concrete instance of `WorkflowEnrichmentsNrqlInput` via:
//
//	WorkflowEnrichmentsNrqlArgs{...}
type WorkflowEnrichmentsNrqlInput interface {
	pulumi.Input

	ToWorkflowEnrichmentsNrqlOutput() WorkflowEnrichmentsNrqlOutput
	ToWorkflowEnrichmentsNrqlOutputWithContext(context.Context) WorkflowEnrichmentsNrqlOutput
}

type WorkflowEnrichmentsNrqlArgs struct {
	// Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// A set of key-value pairs to represent a enrichment configuration.
	Configurations WorkflowEnrichmentsNrqlConfigurationArrayInput `pulumi:"configurations"`
	// Enrichment's id.
	EnrichmentId pulumi.StringPtrInput `pulumi:"enrichmentId"`
	// The name of the workflow.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the enrichment. One of: (NRQL).
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WorkflowEnrichmentsNrqlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEnrichmentsNrql)(nil)).Elem()
}

func (i WorkflowEnrichmentsNrqlArgs) ToWorkflowEnrichmentsNrqlOutput() WorkflowEnrichmentsNrqlOutput {
	return i.ToWorkflowEnrichmentsNrqlOutputWithContext(context.Background())
}

func (i WorkflowEnrichmentsNrqlArgs) ToWorkflowEnrichmentsNrqlOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsNrqlOutput)
}

// WorkflowEnrichmentsNrqlArrayInput is an input type that accepts WorkflowEnrichmentsNrqlArray and WorkflowEnrichmentsNrqlArrayOutput values.
// You can construct a concrete instance of `WorkflowEnrichmentsNrqlArrayInput` via:
//
//	WorkflowEnrichmentsNrqlArray{ WorkflowEnrichmentsNrqlArgs{...} }
type WorkflowEnrichmentsNrqlArrayInput interface {
	pulumi.Input

	ToWorkflowEnrichmentsNrqlArrayOutput() WorkflowEnrichmentsNrqlArrayOutput
	ToWorkflowEnrichmentsNrqlArrayOutputWithContext(context.Context) WorkflowEnrichmentsNrqlArrayOutput
}

type WorkflowEnrichmentsNrqlArray []WorkflowEnrichmentsNrqlInput

func (WorkflowEnrichmentsNrqlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowEnrichmentsNrql)(nil)).Elem()
}

func (i WorkflowEnrichmentsNrqlArray) ToWorkflowEnrichmentsNrqlArrayOutput() WorkflowEnrichmentsNrqlArrayOutput {
	return i.ToWorkflowEnrichmentsNrqlArrayOutputWithContext(context.Background())
}

func (i WorkflowEnrichmentsNrqlArray) ToWorkflowEnrichmentsNrqlArrayOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsNrqlArrayOutput)
}

type WorkflowEnrichmentsNrqlOutput struct{ *pulumi.OutputState }

func (WorkflowEnrichmentsNrqlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEnrichmentsNrql)(nil)).Elem()
}

func (o WorkflowEnrichmentsNrqlOutput) ToWorkflowEnrichmentsNrqlOutput() WorkflowEnrichmentsNrqlOutput {
	return o
}

func (o WorkflowEnrichmentsNrqlOutput) ToWorkflowEnrichmentsNrqlOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlOutput {
	return o
}

// Determines the New Relic account in which the workflow is created. Defaults to the account defined in the provider section.
func (o WorkflowEnrichmentsNrqlOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowEnrichmentsNrql) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// A set of key-value pairs to represent a enrichment configuration.
func (o WorkflowEnrichmentsNrqlOutput) Configurations() WorkflowEnrichmentsNrqlConfigurationArrayOutput {
	return o.ApplyT(func(v WorkflowEnrichmentsNrql) []WorkflowEnrichmentsNrqlConfiguration { return v.Configurations }).(WorkflowEnrichmentsNrqlConfigurationArrayOutput)
}

// Enrichment's id.
func (o WorkflowEnrichmentsNrqlOutput) EnrichmentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowEnrichmentsNrql) *string { return v.EnrichmentId }).(pulumi.StringPtrOutput)
}

// The name of the workflow.
func (o WorkflowEnrichmentsNrqlOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowEnrichmentsNrql) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the enrichment. One of: (NRQL).
func (o WorkflowEnrichmentsNrqlOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowEnrichmentsNrql) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WorkflowEnrichmentsNrqlArrayOutput struct{ *pulumi.OutputState }

func (WorkflowEnrichmentsNrqlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowEnrichmentsNrql)(nil)).Elem()
}

func (o WorkflowEnrichmentsNrqlArrayOutput) ToWorkflowEnrichmentsNrqlArrayOutput() WorkflowEnrichmentsNrqlArrayOutput {
	return o
}

func (o WorkflowEnrichmentsNrqlArrayOutput) ToWorkflowEnrichmentsNrqlArrayOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlArrayOutput {
	return o
}

func (o WorkflowEnrichmentsNrqlArrayOutput) Index(i pulumi.IntInput) WorkflowEnrichmentsNrqlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowEnrichmentsNrql {
		return vs[0].([]WorkflowEnrichmentsNrql)[vs[1].(int)]
	}).(WorkflowEnrichmentsNrqlOutput)
}

type WorkflowEnrichmentsNrqlConfiguration struct {
	// enrichment's NRQL query
	Query string `pulumi:"query"`
}

// WorkflowEnrichmentsNrqlConfigurationInput is an input type that accepts WorkflowEnrichmentsNrqlConfigurationArgs and WorkflowEnrichmentsNrqlConfigurationOutput values.
// You can construct a concrete instance of `WorkflowEnrichmentsNrqlConfigurationInput` via:
//
//	WorkflowEnrichmentsNrqlConfigurationArgs{...}
type WorkflowEnrichmentsNrqlConfigurationInput interface {
	pulumi.Input

	ToWorkflowEnrichmentsNrqlConfigurationOutput() WorkflowEnrichmentsNrqlConfigurationOutput
	ToWorkflowEnrichmentsNrqlConfigurationOutputWithContext(context.Context) WorkflowEnrichmentsNrqlConfigurationOutput
}

type WorkflowEnrichmentsNrqlConfigurationArgs struct {
	// enrichment's NRQL query
	Query pulumi.StringInput `pulumi:"query"`
}

func (WorkflowEnrichmentsNrqlConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEnrichmentsNrqlConfiguration)(nil)).Elem()
}

func (i WorkflowEnrichmentsNrqlConfigurationArgs) ToWorkflowEnrichmentsNrqlConfigurationOutput() WorkflowEnrichmentsNrqlConfigurationOutput {
	return i.ToWorkflowEnrichmentsNrqlConfigurationOutputWithContext(context.Background())
}

func (i WorkflowEnrichmentsNrqlConfigurationArgs) ToWorkflowEnrichmentsNrqlConfigurationOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsNrqlConfigurationOutput)
}

// WorkflowEnrichmentsNrqlConfigurationArrayInput is an input type that accepts WorkflowEnrichmentsNrqlConfigurationArray and WorkflowEnrichmentsNrqlConfigurationArrayOutput values.
// You can construct a concrete instance of `WorkflowEnrichmentsNrqlConfigurationArrayInput` via:
//
//	WorkflowEnrichmentsNrqlConfigurationArray{ WorkflowEnrichmentsNrqlConfigurationArgs{...} }
type WorkflowEnrichmentsNrqlConfigurationArrayInput interface {
	pulumi.Input

	ToWorkflowEnrichmentsNrqlConfigurationArrayOutput() WorkflowEnrichmentsNrqlConfigurationArrayOutput
	ToWorkflowEnrichmentsNrqlConfigurationArrayOutputWithContext(context.Context) WorkflowEnrichmentsNrqlConfigurationArrayOutput
}

type WorkflowEnrichmentsNrqlConfigurationArray []WorkflowEnrichmentsNrqlConfigurationInput

func (WorkflowEnrichmentsNrqlConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowEnrichmentsNrqlConfiguration)(nil)).Elem()
}

func (i WorkflowEnrichmentsNrqlConfigurationArray) ToWorkflowEnrichmentsNrqlConfigurationArrayOutput() WorkflowEnrichmentsNrqlConfigurationArrayOutput {
	return i.ToWorkflowEnrichmentsNrqlConfigurationArrayOutputWithContext(context.Background())
}

func (i WorkflowEnrichmentsNrqlConfigurationArray) ToWorkflowEnrichmentsNrqlConfigurationArrayOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowEnrichmentsNrqlConfigurationArrayOutput)
}

type WorkflowEnrichmentsNrqlConfigurationOutput struct{ *pulumi.OutputState }

func (WorkflowEnrichmentsNrqlConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowEnrichmentsNrqlConfiguration)(nil)).Elem()
}

func (o WorkflowEnrichmentsNrqlConfigurationOutput) ToWorkflowEnrichmentsNrqlConfigurationOutput() WorkflowEnrichmentsNrqlConfigurationOutput {
	return o
}

func (o WorkflowEnrichmentsNrqlConfigurationOutput) ToWorkflowEnrichmentsNrqlConfigurationOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlConfigurationOutput {
	return o
}

// enrichment's NRQL query
func (o WorkflowEnrichmentsNrqlConfigurationOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowEnrichmentsNrqlConfiguration) string { return v.Query }).(pulumi.StringOutput)
}

type WorkflowEnrichmentsNrqlConfigurationArrayOutput struct{ *pulumi.OutputState }

func (WorkflowEnrichmentsNrqlConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowEnrichmentsNrqlConfiguration)(nil)).Elem()
}

func (o WorkflowEnrichmentsNrqlConfigurationArrayOutput) ToWorkflowEnrichmentsNrqlConfigurationArrayOutput() WorkflowEnrichmentsNrqlConfigurationArrayOutput {
	return o
}

func (o WorkflowEnrichmentsNrqlConfigurationArrayOutput) ToWorkflowEnrichmentsNrqlConfigurationArrayOutputWithContext(ctx context.Context) WorkflowEnrichmentsNrqlConfigurationArrayOutput {
	return o
}

func (o WorkflowEnrichmentsNrqlConfigurationArrayOutput) Index(i pulumi.IntInput) WorkflowEnrichmentsNrqlConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowEnrichmentsNrqlConfiguration {
		return vs[0].([]WorkflowEnrichmentsNrqlConfiguration)[vs[1].(int)]
	}).(WorkflowEnrichmentsNrqlConfigurationOutput)
}

type WorkflowIssuesFilter struct {
	// filter id.
	FilterId *string `pulumi:"filterId"`
	// (Required) Filter's name.
	Name string `pulumi:"name"`
	// A condition an issue event should satisfy to be processed by the workflow
	Predicates []WorkflowIssuesFilterPredicate `pulumi:"predicates"`
	// Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
	Type string `pulumi:"type"`
}

// WorkflowIssuesFilterInput is an input type that accepts WorkflowIssuesFilterArgs and WorkflowIssuesFilterOutput values.
// You can construct a concrete instance of `WorkflowIssuesFilterInput` via:
//
//	WorkflowIssuesFilterArgs{...}
type WorkflowIssuesFilterInput interface {
	pulumi.Input

	ToWorkflowIssuesFilterOutput() WorkflowIssuesFilterOutput
	ToWorkflowIssuesFilterOutputWithContext(context.Context) WorkflowIssuesFilterOutput
}

type WorkflowIssuesFilterArgs struct {
	// filter id.
	FilterId pulumi.StringPtrInput `pulumi:"filterId"`
	// (Required) Filter's name.
	Name pulumi.StringInput `pulumi:"name"`
	// A condition an issue event should satisfy to be processed by the workflow
	Predicates WorkflowIssuesFilterPredicateArrayInput `pulumi:"predicates"`
	// Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
	Type pulumi.StringInput `pulumi:"type"`
}

func (WorkflowIssuesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIssuesFilter)(nil)).Elem()
}

func (i WorkflowIssuesFilterArgs) ToWorkflowIssuesFilterOutput() WorkflowIssuesFilterOutput {
	return i.ToWorkflowIssuesFilterOutputWithContext(context.Background())
}

func (i WorkflowIssuesFilterArgs) ToWorkflowIssuesFilterOutputWithContext(ctx context.Context) WorkflowIssuesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIssuesFilterOutput)
}

func (i WorkflowIssuesFilterArgs) ToWorkflowIssuesFilterPtrOutput() WorkflowIssuesFilterPtrOutput {
	return i.ToWorkflowIssuesFilterPtrOutputWithContext(context.Background())
}

func (i WorkflowIssuesFilterArgs) ToWorkflowIssuesFilterPtrOutputWithContext(ctx context.Context) WorkflowIssuesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIssuesFilterOutput).ToWorkflowIssuesFilterPtrOutputWithContext(ctx)
}

// WorkflowIssuesFilterPtrInput is an input type that accepts WorkflowIssuesFilterArgs, WorkflowIssuesFilterPtr and WorkflowIssuesFilterPtrOutput values.
// You can construct a concrete instance of `WorkflowIssuesFilterPtrInput` via:
//
//	        WorkflowIssuesFilterArgs{...}
//
//	or:
//
//	        nil
type WorkflowIssuesFilterPtrInput interface {
	pulumi.Input

	ToWorkflowIssuesFilterPtrOutput() WorkflowIssuesFilterPtrOutput
	ToWorkflowIssuesFilterPtrOutputWithContext(context.Context) WorkflowIssuesFilterPtrOutput
}

type workflowIssuesFilterPtrType WorkflowIssuesFilterArgs

func WorkflowIssuesFilterPtr(v *WorkflowIssuesFilterArgs) WorkflowIssuesFilterPtrInput {
	return (*workflowIssuesFilterPtrType)(v)
}

func (*workflowIssuesFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowIssuesFilter)(nil)).Elem()
}

func (i *workflowIssuesFilterPtrType) ToWorkflowIssuesFilterPtrOutput() WorkflowIssuesFilterPtrOutput {
	return i.ToWorkflowIssuesFilterPtrOutputWithContext(context.Background())
}

func (i *workflowIssuesFilterPtrType) ToWorkflowIssuesFilterPtrOutputWithContext(ctx context.Context) WorkflowIssuesFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIssuesFilterPtrOutput)
}

type WorkflowIssuesFilterOutput struct{ *pulumi.OutputState }

func (WorkflowIssuesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIssuesFilter)(nil)).Elem()
}

func (o WorkflowIssuesFilterOutput) ToWorkflowIssuesFilterOutput() WorkflowIssuesFilterOutput {
	return o
}

func (o WorkflowIssuesFilterOutput) ToWorkflowIssuesFilterOutputWithContext(ctx context.Context) WorkflowIssuesFilterOutput {
	return o
}

func (o WorkflowIssuesFilterOutput) ToWorkflowIssuesFilterPtrOutput() WorkflowIssuesFilterPtrOutput {
	return o.ToWorkflowIssuesFilterPtrOutputWithContext(context.Background())
}

func (o WorkflowIssuesFilterOutput) ToWorkflowIssuesFilterPtrOutputWithContext(ctx context.Context) WorkflowIssuesFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkflowIssuesFilter) *WorkflowIssuesFilter {
		return &v
	}).(WorkflowIssuesFilterPtrOutput)
}

// filter id.
func (o WorkflowIssuesFilterOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkflowIssuesFilter) *string { return v.FilterId }).(pulumi.StringPtrOutput)
}

// (Required) Filter's name.
func (o WorkflowIssuesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowIssuesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// A condition an issue event should satisfy to be processed by the workflow
func (o WorkflowIssuesFilterOutput) Predicates() WorkflowIssuesFilterPredicateArrayOutput {
	return o.ApplyT(func(v WorkflowIssuesFilter) []WorkflowIssuesFilterPredicate { return v.Predicates }).(WorkflowIssuesFilterPredicateArrayOutput)
}

// Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
func (o WorkflowIssuesFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowIssuesFilter) string { return v.Type }).(pulumi.StringOutput)
}

type WorkflowIssuesFilterPtrOutput struct{ *pulumi.OutputState }

func (WorkflowIssuesFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkflowIssuesFilter)(nil)).Elem()
}

func (o WorkflowIssuesFilterPtrOutput) ToWorkflowIssuesFilterPtrOutput() WorkflowIssuesFilterPtrOutput {
	return o
}

func (o WorkflowIssuesFilterPtrOutput) ToWorkflowIssuesFilterPtrOutputWithContext(ctx context.Context) WorkflowIssuesFilterPtrOutput {
	return o
}

func (o WorkflowIssuesFilterPtrOutput) Elem() WorkflowIssuesFilterOutput {
	return o.ApplyT(func(v *WorkflowIssuesFilter) WorkflowIssuesFilter {
		if v != nil {
			return *v
		}
		var ret WorkflowIssuesFilter
		return ret
	}).(WorkflowIssuesFilterOutput)
}

// filter id.
func (o WorkflowIssuesFilterPtrOutput) FilterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIssuesFilter) *string {
		if v == nil {
			return nil
		}
		return v.FilterId
	}).(pulumi.StringPtrOutput)
}

// (Required) Filter's name.
func (o WorkflowIssuesFilterPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIssuesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// A condition an issue event should satisfy to be processed by the workflow
func (o WorkflowIssuesFilterPtrOutput) Predicates() WorkflowIssuesFilterPredicateArrayOutput {
	return o.ApplyT(func(v *WorkflowIssuesFilter) []WorkflowIssuesFilterPredicate {
		if v == nil {
			return nil
		}
		return v.Predicates
	}).(WorkflowIssuesFilterPredicateArrayOutput)
}

// Type of the filter. Please just set this field to `FILTER`. The field is likely to be deprecated/removed in the near future.
func (o WorkflowIssuesFilterPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkflowIssuesFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type WorkflowIssuesFilterPredicate struct {
	// Issue event attribute to check
	Attribute string `pulumi:"attribute"`
	// An operator to use to compare the attribute with the provided `values`, see supported operators below
	Operator string `pulumi:"operator"`
	// The `attribute` must match **any** of the values in this list
	Values []string `pulumi:"values"`
}

// WorkflowIssuesFilterPredicateInput is an input type that accepts WorkflowIssuesFilterPredicateArgs and WorkflowIssuesFilterPredicateOutput values.
// You can construct a concrete instance of `WorkflowIssuesFilterPredicateInput` via:
//
//	WorkflowIssuesFilterPredicateArgs{...}
type WorkflowIssuesFilterPredicateInput interface {
	pulumi.Input

	ToWorkflowIssuesFilterPredicateOutput() WorkflowIssuesFilterPredicateOutput
	ToWorkflowIssuesFilterPredicateOutputWithContext(context.Context) WorkflowIssuesFilterPredicateOutput
}

type WorkflowIssuesFilterPredicateArgs struct {
	// Issue event attribute to check
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// An operator to use to compare the attribute with the provided `values`, see supported operators below
	Operator pulumi.StringInput `pulumi:"operator"`
	// The `attribute` must match **any** of the values in this list
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (WorkflowIssuesFilterPredicateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIssuesFilterPredicate)(nil)).Elem()
}

func (i WorkflowIssuesFilterPredicateArgs) ToWorkflowIssuesFilterPredicateOutput() WorkflowIssuesFilterPredicateOutput {
	return i.ToWorkflowIssuesFilterPredicateOutputWithContext(context.Background())
}

func (i WorkflowIssuesFilterPredicateArgs) ToWorkflowIssuesFilterPredicateOutputWithContext(ctx context.Context) WorkflowIssuesFilterPredicateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIssuesFilterPredicateOutput)
}

// WorkflowIssuesFilterPredicateArrayInput is an input type that accepts WorkflowIssuesFilterPredicateArray and WorkflowIssuesFilterPredicateArrayOutput values.
// You can construct a concrete instance of `WorkflowIssuesFilterPredicateArrayInput` via:
//
//	WorkflowIssuesFilterPredicateArray{ WorkflowIssuesFilterPredicateArgs{...} }
type WorkflowIssuesFilterPredicateArrayInput interface {
	pulumi.Input

	ToWorkflowIssuesFilterPredicateArrayOutput() WorkflowIssuesFilterPredicateArrayOutput
	ToWorkflowIssuesFilterPredicateArrayOutputWithContext(context.Context) WorkflowIssuesFilterPredicateArrayOutput
}

type WorkflowIssuesFilterPredicateArray []WorkflowIssuesFilterPredicateInput

func (WorkflowIssuesFilterPredicateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowIssuesFilterPredicate)(nil)).Elem()
}

func (i WorkflowIssuesFilterPredicateArray) ToWorkflowIssuesFilterPredicateArrayOutput() WorkflowIssuesFilterPredicateArrayOutput {
	return i.ToWorkflowIssuesFilterPredicateArrayOutputWithContext(context.Background())
}

func (i WorkflowIssuesFilterPredicateArray) ToWorkflowIssuesFilterPredicateArrayOutputWithContext(ctx context.Context) WorkflowIssuesFilterPredicateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkflowIssuesFilterPredicateArrayOutput)
}

type WorkflowIssuesFilterPredicateOutput struct{ *pulumi.OutputState }

func (WorkflowIssuesFilterPredicateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkflowIssuesFilterPredicate)(nil)).Elem()
}

func (o WorkflowIssuesFilterPredicateOutput) ToWorkflowIssuesFilterPredicateOutput() WorkflowIssuesFilterPredicateOutput {
	return o
}

func (o WorkflowIssuesFilterPredicateOutput) ToWorkflowIssuesFilterPredicateOutputWithContext(ctx context.Context) WorkflowIssuesFilterPredicateOutput {
	return o
}

// Issue event attribute to check
func (o WorkflowIssuesFilterPredicateOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowIssuesFilterPredicate) string { return v.Attribute }).(pulumi.StringOutput)
}

// An operator to use to compare the attribute with the provided `values`, see supported operators below
func (o WorkflowIssuesFilterPredicateOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v WorkflowIssuesFilterPredicate) string { return v.Operator }).(pulumi.StringOutput)
}

// The `attribute` must match **any** of the values in this list
func (o WorkflowIssuesFilterPredicateOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WorkflowIssuesFilterPredicate) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type WorkflowIssuesFilterPredicateArrayOutput struct{ *pulumi.OutputState }

func (WorkflowIssuesFilterPredicateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkflowIssuesFilterPredicate)(nil)).Elem()
}

func (o WorkflowIssuesFilterPredicateArrayOutput) ToWorkflowIssuesFilterPredicateArrayOutput() WorkflowIssuesFilterPredicateArrayOutput {
	return o
}

func (o WorkflowIssuesFilterPredicateArrayOutput) ToWorkflowIssuesFilterPredicateArrayOutputWithContext(ctx context.Context) WorkflowIssuesFilterPredicateArrayOutput {
	return o
}

func (o WorkflowIssuesFilterPredicateArrayOutput) Index(i pulumi.IntInput) WorkflowIssuesFilterPredicateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkflowIssuesFilterPredicate {
		return vs[0].([]WorkflowIssuesFilterPredicate)[vs[1].(int)]
	}).(WorkflowIssuesFilterPredicateOutput)
}

type GetAlertChannelConfig struct {
	ApiKey                *string           `pulumi:"apiKey"`
	AuthPassword          *string           `pulumi:"authPassword"`
	AuthType              *string           `pulumi:"authType"`
	AuthUsername          *string           `pulumi:"authUsername"`
	BaseUrl               *string           `pulumi:"baseUrl"`
	Channel               *string           `pulumi:"channel"`
	Headers               map[string]string `pulumi:"headers"`
	IncludeJsonAttachment *string           `pulumi:"includeJsonAttachment"`
	Key                   *string           `pulumi:"key"`
	Payload               map[string]string `pulumi:"payload"`
	PayloadString         *string           `pulumi:"payloadString"`
	PayloadType           *string           `pulumi:"payloadType"`
	Recipients            *string           `pulumi:"recipients"`
	Region                *string           `pulumi:"region"`
	RouteKey              *string           `pulumi:"routeKey"`
	ServiceKey            *string           `pulumi:"serviceKey"`
	Tags                  *string           `pulumi:"tags"`
	Teams                 *string           `pulumi:"teams"`
	Url                   *string           `pulumi:"url"`
	UserId                *string           `pulumi:"userId"`
}

// GetAlertChannelConfigInput is an input type that accepts GetAlertChannelConfigArgs and GetAlertChannelConfigOutput values.
// You can construct a concrete instance of `GetAlertChannelConfigInput` via:
//
//	GetAlertChannelConfigArgs{...}
type GetAlertChannelConfigInput interface {
	pulumi.Input

	ToGetAlertChannelConfigOutput() GetAlertChannelConfigOutput
	ToGetAlertChannelConfigOutputWithContext(context.Context) GetAlertChannelConfigOutput
}

type GetAlertChannelConfigArgs struct {
	ApiKey                pulumi.StringPtrInput `pulumi:"apiKey"`
	AuthPassword          pulumi.StringPtrInput `pulumi:"authPassword"`
	AuthType              pulumi.StringPtrInput `pulumi:"authType"`
	AuthUsername          pulumi.StringPtrInput `pulumi:"authUsername"`
	BaseUrl               pulumi.StringPtrInput `pulumi:"baseUrl"`
	Channel               pulumi.StringPtrInput `pulumi:"channel"`
	Headers               pulumi.StringMapInput `pulumi:"headers"`
	IncludeJsonAttachment pulumi.StringPtrInput `pulumi:"includeJsonAttachment"`
	Key                   pulumi.StringPtrInput `pulumi:"key"`
	Payload               pulumi.StringMapInput `pulumi:"payload"`
	PayloadString         pulumi.StringPtrInput `pulumi:"payloadString"`
	PayloadType           pulumi.StringPtrInput `pulumi:"payloadType"`
	Recipients            pulumi.StringPtrInput `pulumi:"recipients"`
	Region                pulumi.StringPtrInput `pulumi:"region"`
	RouteKey              pulumi.StringPtrInput `pulumi:"routeKey"`
	ServiceKey            pulumi.StringPtrInput `pulumi:"serviceKey"`
	Tags                  pulumi.StringPtrInput `pulumi:"tags"`
	Teams                 pulumi.StringPtrInput `pulumi:"teams"`
	Url                   pulumi.StringPtrInput `pulumi:"url"`
	UserId                pulumi.StringPtrInput `pulumi:"userId"`
}

func (GetAlertChannelConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertChannelConfig)(nil)).Elem()
}

func (i GetAlertChannelConfigArgs) ToGetAlertChannelConfigOutput() GetAlertChannelConfigOutput {
	return i.ToGetAlertChannelConfigOutputWithContext(context.Background())
}

func (i GetAlertChannelConfigArgs) ToGetAlertChannelConfigOutputWithContext(ctx context.Context) GetAlertChannelConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAlertChannelConfigOutput)
}

type GetAlertChannelConfigOutput struct{ *pulumi.OutputState }

func (GetAlertChannelConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAlertChannelConfig)(nil)).Elem()
}

func (o GetAlertChannelConfigOutput) ToGetAlertChannelConfigOutput() GetAlertChannelConfigOutput {
	return o
}

func (o GetAlertChannelConfigOutput) ToGetAlertChannelConfigOutputWithContext(ctx context.Context) GetAlertChannelConfigOutput {
	return o
}

func (o GetAlertChannelConfigOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.ApiKey }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) AuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.AuthPassword }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) AuthUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.AuthUsername }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) BaseUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.BaseUrl }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Channel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Channel }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Headers() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) map[string]string { return v.Headers }).(pulumi.StringMapOutput)
}

func (o GetAlertChannelConfigOutput) IncludeJsonAttachment() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.IncludeJsonAttachment }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Payload() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) map[string]string { return v.Payload }).(pulumi.StringMapOutput)
}

func (o GetAlertChannelConfigOutput) PayloadString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.PayloadString }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) PayloadType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.PayloadType }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Recipients() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Recipients }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) RouteKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.RouteKey }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) ServiceKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.ServiceKey }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Tags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Tags }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Teams() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Teams }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

func (o GetAlertChannelConfigOutput) UserId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAlertChannelConfig) *string { return v.UserId }).(pulumi.StringPtrOutput)
}

type GetEntityTag struct {
	// The tag key.
	Key string `pulumi:"key"`
	// The tag value.
	Value string `pulumi:"value"`
}

// GetEntityTagInput is an input type that accepts GetEntityTagArgs and GetEntityTagOutput values.
// You can construct a concrete instance of `GetEntityTagInput` via:
//
//	GetEntityTagArgs{...}
type GetEntityTagInput interface {
	pulumi.Input

	ToGetEntityTagOutput() GetEntityTagOutput
	ToGetEntityTagOutputWithContext(context.Context) GetEntityTagOutput
}

type GetEntityTagArgs struct {
	// The tag key.
	Key pulumi.StringInput `pulumi:"key"`
	// The tag value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetEntityTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityTag)(nil)).Elem()
}

func (i GetEntityTagArgs) ToGetEntityTagOutput() GetEntityTagOutput {
	return i.ToGetEntityTagOutputWithContext(context.Background())
}

func (i GetEntityTagArgs) ToGetEntityTagOutputWithContext(ctx context.Context) GetEntityTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntityTagOutput)
}

// GetEntityTagArrayInput is an input type that accepts GetEntityTagArray and GetEntityTagArrayOutput values.
// You can construct a concrete instance of `GetEntityTagArrayInput` via:
//
//	GetEntityTagArray{ GetEntityTagArgs{...} }
type GetEntityTagArrayInput interface {
	pulumi.Input

	ToGetEntityTagArrayOutput() GetEntityTagArrayOutput
	ToGetEntityTagArrayOutputWithContext(context.Context) GetEntityTagArrayOutput
}

type GetEntityTagArray []GetEntityTagInput

func (GetEntityTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntityTag)(nil)).Elem()
}

func (i GetEntityTagArray) ToGetEntityTagArrayOutput() GetEntityTagArrayOutput {
	return i.ToGetEntityTagArrayOutputWithContext(context.Background())
}

func (i GetEntityTagArray) ToGetEntityTagArrayOutputWithContext(ctx context.Context) GetEntityTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEntityTagArrayOutput)
}

type GetEntityTagOutput struct{ *pulumi.OutputState }

func (GetEntityTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEntityTag)(nil)).Elem()
}

func (o GetEntityTagOutput) ToGetEntityTagOutput() GetEntityTagOutput {
	return o
}

func (o GetEntityTagOutput) ToGetEntityTagOutputWithContext(ctx context.Context) GetEntityTagOutput {
	return o
}

// The tag key.
func (o GetEntityTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityTag) string { return v.Key }).(pulumi.StringOutput)
}

// The tag value.
func (o GetEntityTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetEntityTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetEntityTagArrayOutput struct{ *pulumi.OutputState }

func (GetEntityTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEntityTag)(nil)).Elem()
}

func (o GetEntityTagArrayOutput) ToGetEntityTagArrayOutput() GetEntityTagArrayOutput {
	return o
}

func (o GetEntityTagArrayOutput) ToGetEntityTagArrayOutputWithContext(ctx context.Context) GetEntityTagArrayOutput {
	return o
}

func (o GetEntityTagArrayOutput) Index(i pulumi.IntInput) GetEntityTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEntityTag {
		return vs[0].([]GetEntityTag)[vs[1].(int)]
	}).(GetEntityTagOutput)
}

type GetNotificationDestinationProperty struct {
	// Notification property display key.
	DisplayValue *string `pulumi:"displayValue"`
	// Notification property key.
	Key string `pulumi:"key"`
	// Notification property label.
	Label *string `pulumi:"label"`
	// Notification property value.
	Value string `pulumi:"value"`
}

// GetNotificationDestinationPropertyInput is an input type that accepts GetNotificationDestinationPropertyArgs and GetNotificationDestinationPropertyOutput values.
// You can construct a concrete instance of `GetNotificationDestinationPropertyInput` via:
//
//	GetNotificationDestinationPropertyArgs{...}
type GetNotificationDestinationPropertyInput interface {
	pulumi.Input

	ToGetNotificationDestinationPropertyOutput() GetNotificationDestinationPropertyOutput
	ToGetNotificationDestinationPropertyOutputWithContext(context.Context) GetNotificationDestinationPropertyOutput
}

type GetNotificationDestinationPropertyArgs struct {
	// Notification property display key.
	DisplayValue pulumi.StringPtrInput `pulumi:"displayValue"`
	// Notification property key.
	Key pulumi.StringInput `pulumi:"key"`
	// Notification property label.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// Notification property value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetNotificationDestinationPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationDestinationProperty)(nil)).Elem()
}

func (i GetNotificationDestinationPropertyArgs) ToGetNotificationDestinationPropertyOutput() GetNotificationDestinationPropertyOutput {
	return i.ToGetNotificationDestinationPropertyOutputWithContext(context.Background())
}

func (i GetNotificationDestinationPropertyArgs) ToGetNotificationDestinationPropertyOutputWithContext(ctx context.Context) GetNotificationDestinationPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationDestinationPropertyOutput)
}

// GetNotificationDestinationPropertyArrayInput is an input type that accepts GetNotificationDestinationPropertyArray and GetNotificationDestinationPropertyArrayOutput values.
// You can construct a concrete instance of `GetNotificationDestinationPropertyArrayInput` via:
//
//	GetNotificationDestinationPropertyArray{ GetNotificationDestinationPropertyArgs{...} }
type GetNotificationDestinationPropertyArrayInput interface {
	pulumi.Input

	ToGetNotificationDestinationPropertyArrayOutput() GetNotificationDestinationPropertyArrayOutput
	ToGetNotificationDestinationPropertyArrayOutputWithContext(context.Context) GetNotificationDestinationPropertyArrayOutput
}

type GetNotificationDestinationPropertyArray []GetNotificationDestinationPropertyInput

func (GetNotificationDestinationPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationDestinationProperty)(nil)).Elem()
}

func (i GetNotificationDestinationPropertyArray) ToGetNotificationDestinationPropertyArrayOutput() GetNotificationDestinationPropertyArrayOutput {
	return i.ToGetNotificationDestinationPropertyArrayOutputWithContext(context.Background())
}

func (i GetNotificationDestinationPropertyArray) ToGetNotificationDestinationPropertyArrayOutputWithContext(ctx context.Context) GetNotificationDestinationPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationDestinationPropertyArrayOutput)
}

type GetNotificationDestinationPropertyOutput struct{ *pulumi.OutputState }

func (GetNotificationDestinationPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationDestinationProperty)(nil)).Elem()
}

func (o GetNotificationDestinationPropertyOutput) ToGetNotificationDestinationPropertyOutput() GetNotificationDestinationPropertyOutput {
	return o
}

func (o GetNotificationDestinationPropertyOutput) ToGetNotificationDestinationPropertyOutputWithContext(ctx context.Context) GetNotificationDestinationPropertyOutput {
	return o
}

// Notification property display key.
func (o GetNotificationDestinationPropertyOutput) DisplayValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotificationDestinationProperty) *string { return v.DisplayValue }).(pulumi.StringPtrOutput)
}

// Notification property key.
func (o GetNotificationDestinationPropertyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationDestinationProperty) string { return v.Key }).(pulumi.StringOutput)
}

// Notification property label.
func (o GetNotificationDestinationPropertyOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNotificationDestinationProperty) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// Notification property value.
func (o GetNotificationDestinationPropertyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationDestinationProperty) string { return v.Value }).(pulumi.StringOutput)
}

type GetNotificationDestinationPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetNotificationDestinationPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationDestinationProperty)(nil)).Elem()
}

func (o GetNotificationDestinationPropertyArrayOutput) ToGetNotificationDestinationPropertyArrayOutput() GetNotificationDestinationPropertyArrayOutput {
	return o
}

func (o GetNotificationDestinationPropertyArrayOutput) ToGetNotificationDestinationPropertyArrayOutputWithContext(ctx context.Context) GetNotificationDestinationPropertyArrayOutput {
	return o
}

func (o GetNotificationDestinationPropertyArrayOutput) Index(i pulumi.IntInput) GetNotificationDestinationPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotificationDestinationProperty {
		return vs[0].([]GetNotificationDestinationProperty)[vs[1].(int)]
	}).(GetNotificationDestinationPropertyOutput)
}

type GetNotificationDestinationSecureUrl struct {
	Prefix string `pulumi:"prefix"`
}

// GetNotificationDestinationSecureUrlInput is an input type that accepts GetNotificationDestinationSecureUrlArgs and GetNotificationDestinationSecureUrlOutput values.
// You can construct a concrete instance of `GetNotificationDestinationSecureUrlInput` via:
//
//	GetNotificationDestinationSecureUrlArgs{...}
type GetNotificationDestinationSecureUrlInput interface {
	pulumi.Input

	ToGetNotificationDestinationSecureUrlOutput() GetNotificationDestinationSecureUrlOutput
	ToGetNotificationDestinationSecureUrlOutputWithContext(context.Context) GetNotificationDestinationSecureUrlOutput
}

type GetNotificationDestinationSecureUrlArgs struct {
	Prefix pulumi.StringInput `pulumi:"prefix"`
}

func (GetNotificationDestinationSecureUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationDestinationSecureUrl)(nil)).Elem()
}

func (i GetNotificationDestinationSecureUrlArgs) ToGetNotificationDestinationSecureUrlOutput() GetNotificationDestinationSecureUrlOutput {
	return i.ToGetNotificationDestinationSecureUrlOutputWithContext(context.Background())
}

func (i GetNotificationDestinationSecureUrlArgs) ToGetNotificationDestinationSecureUrlOutputWithContext(ctx context.Context) GetNotificationDestinationSecureUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationDestinationSecureUrlOutput)
}

// GetNotificationDestinationSecureUrlArrayInput is an input type that accepts GetNotificationDestinationSecureUrlArray and GetNotificationDestinationSecureUrlArrayOutput values.
// You can construct a concrete instance of `GetNotificationDestinationSecureUrlArrayInput` via:
//
//	GetNotificationDestinationSecureUrlArray{ GetNotificationDestinationSecureUrlArgs{...} }
type GetNotificationDestinationSecureUrlArrayInput interface {
	pulumi.Input

	ToGetNotificationDestinationSecureUrlArrayOutput() GetNotificationDestinationSecureUrlArrayOutput
	ToGetNotificationDestinationSecureUrlArrayOutputWithContext(context.Context) GetNotificationDestinationSecureUrlArrayOutput
}

type GetNotificationDestinationSecureUrlArray []GetNotificationDestinationSecureUrlInput

func (GetNotificationDestinationSecureUrlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationDestinationSecureUrl)(nil)).Elem()
}

func (i GetNotificationDestinationSecureUrlArray) ToGetNotificationDestinationSecureUrlArrayOutput() GetNotificationDestinationSecureUrlArrayOutput {
	return i.ToGetNotificationDestinationSecureUrlArrayOutputWithContext(context.Background())
}

func (i GetNotificationDestinationSecureUrlArray) ToGetNotificationDestinationSecureUrlArrayOutputWithContext(ctx context.Context) GetNotificationDestinationSecureUrlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNotificationDestinationSecureUrlArrayOutput)
}

type GetNotificationDestinationSecureUrlOutput struct{ *pulumi.OutputState }

func (GetNotificationDestinationSecureUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNotificationDestinationSecureUrl)(nil)).Elem()
}

func (o GetNotificationDestinationSecureUrlOutput) ToGetNotificationDestinationSecureUrlOutput() GetNotificationDestinationSecureUrlOutput {
	return o
}

func (o GetNotificationDestinationSecureUrlOutput) ToGetNotificationDestinationSecureUrlOutputWithContext(ctx context.Context) GetNotificationDestinationSecureUrlOutput {
	return o
}

func (o GetNotificationDestinationSecureUrlOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetNotificationDestinationSecureUrl) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetNotificationDestinationSecureUrlArrayOutput struct{ *pulumi.OutputState }

func (GetNotificationDestinationSecureUrlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNotificationDestinationSecureUrl)(nil)).Elem()
}

func (o GetNotificationDestinationSecureUrlArrayOutput) ToGetNotificationDestinationSecureUrlArrayOutput() GetNotificationDestinationSecureUrlArrayOutput {
	return o
}

func (o GetNotificationDestinationSecureUrlArrayOutput) ToGetNotificationDestinationSecureUrlArrayOutputWithContext(ctx context.Context) GetNotificationDestinationSecureUrlArrayOutput {
	return o
}

func (o GetNotificationDestinationSecureUrlArrayOutput) Index(i pulumi.IntInput) GetNotificationDestinationSecureUrlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNotificationDestinationSecureUrl {
		return vs[0].([]GetNotificationDestinationSecureUrl)[vs[1].(int)]
	}).(GetNotificationDestinationSecureUrlOutput)
}

type GetTestGrokPatternTestGrok struct {
	// Nested list containing information about any attributes that were extracted.
	Attributes []GetTestGrokPatternTestGrokAttribute `pulumi:"attributes"`
	// The log line that was tested against.
	LogLine string `pulumi:"logLine"`
	// Whether the Grok pattern matched.
	Matched bool `pulumi:"matched"`
}

// GetTestGrokPatternTestGrokInput is an input type that accepts GetTestGrokPatternTestGrokArgs and GetTestGrokPatternTestGrokOutput values.
// You can construct a concrete instance of `GetTestGrokPatternTestGrokInput` via:
//
//	GetTestGrokPatternTestGrokArgs{...}
type GetTestGrokPatternTestGrokInput interface {
	pulumi.Input

	ToGetTestGrokPatternTestGrokOutput() GetTestGrokPatternTestGrokOutput
	ToGetTestGrokPatternTestGrokOutputWithContext(context.Context) GetTestGrokPatternTestGrokOutput
}

type GetTestGrokPatternTestGrokArgs struct {
	// Nested list containing information about any attributes that were extracted.
	Attributes GetTestGrokPatternTestGrokAttributeArrayInput `pulumi:"attributes"`
	// The log line that was tested against.
	LogLine pulumi.StringInput `pulumi:"logLine"`
	// Whether the Grok pattern matched.
	Matched pulumi.BoolInput `pulumi:"matched"`
}

func (GetTestGrokPatternTestGrokArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTestGrokPatternTestGrok)(nil)).Elem()
}

func (i GetTestGrokPatternTestGrokArgs) ToGetTestGrokPatternTestGrokOutput() GetTestGrokPatternTestGrokOutput {
	return i.ToGetTestGrokPatternTestGrokOutputWithContext(context.Background())
}

func (i GetTestGrokPatternTestGrokArgs) ToGetTestGrokPatternTestGrokOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTestGrokPatternTestGrokOutput)
}

// GetTestGrokPatternTestGrokArrayInput is an input type that accepts GetTestGrokPatternTestGrokArray and GetTestGrokPatternTestGrokArrayOutput values.
// You can construct a concrete instance of `GetTestGrokPatternTestGrokArrayInput` via:
//
//	GetTestGrokPatternTestGrokArray{ GetTestGrokPatternTestGrokArgs{...} }
type GetTestGrokPatternTestGrokArrayInput interface {
	pulumi.Input

	ToGetTestGrokPatternTestGrokArrayOutput() GetTestGrokPatternTestGrokArrayOutput
	ToGetTestGrokPatternTestGrokArrayOutputWithContext(context.Context) GetTestGrokPatternTestGrokArrayOutput
}

type GetTestGrokPatternTestGrokArray []GetTestGrokPatternTestGrokInput

func (GetTestGrokPatternTestGrokArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTestGrokPatternTestGrok)(nil)).Elem()
}

func (i GetTestGrokPatternTestGrokArray) ToGetTestGrokPatternTestGrokArrayOutput() GetTestGrokPatternTestGrokArrayOutput {
	return i.ToGetTestGrokPatternTestGrokArrayOutputWithContext(context.Background())
}

func (i GetTestGrokPatternTestGrokArray) ToGetTestGrokPatternTestGrokArrayOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTestGrokPatternTestGrokArrayOutput)
}

type GetTestGrokPatternTestGrokOutput struct{ *pulumi.OutputState }

func (GetTestGrokPatternTestGrokOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTestGrokPatternTestGrok)(nil)).Elem()
}

func (o GetTestGrokPatternTestGrokOutput) ToGetTestGrokPatternTestGrokOutput() GetTestGrokPatternTestGrokOutput {
	return o
}

func (o GetTestGrokPatternTestGrokOutput) ToGetTestGrokPatternTestGrokOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokOutput {
	return o
}

// Nested list containing information about any attributes that were extracted.
func (o GetTestGrokPatternTestGrokOutput) Attributes() GetTestGrokPatternTestGrokAttributeArrayOutput {
	return o.ApplyT(func(v GetTestGrokPatternTestGrok) []GetTestGrokPatternTestGrokAttribute { return v.Attributes }).(GetTestGrokPatternTestGrokAttributeArrayOutput)
}

// The log line that was tested against.
func (o GetTestGrokPatternTestGrokOutput) LogLine() pulumi.StringOutput {
	return o.ApplyT(func(v GetTestGrokPatternTestGrok) string { return v.LogLine }).(pulumi.StringOutput)
}

// Whether the Grok pattern matched.
func (o GetTestGrokPatternTestGrokOutput) Matched() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTestGrokPatternTestGrok) bool { return v.Matched }).(pulumi.BoolOutput)
}

type GetTestGrokPatternTestGrokArrayOutput struct{ *pulumi.OutputState }

func (GetTestGrokPatternTestGrokArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTestGrokPatternTestGrok)(nil)).Elem()
}

func (o GetTestGrokPatternTestGrokArrayOutput) ToGetTestGrokPatternTestGrokArrayOutput() GetTestGrokPatternTestGrokArrayOutput {
	return o
}

func (o GetTestGrokPatternTestGrokArrayOutput) ToGetTestGrokPatternTestGrokArrayOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokArrayOutput {
	return o
}

func (o GetTestGrokPatternTestGrokArrayOutput) Index(i pulumi.IntInput) GetTestGrokPatternTestGrokOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTestGrokPatternTestGrok {
		return vs[0].([]GetTestGrokPatternTestGrok)[vs[1].(int)]
	}).(GetTestGrokPatternTestGrokOutput)
}

type GetTestGrokPatternTestGrokAttribute struct {
	// The attribute name.
	Name string `pulumi:"name"`
	// A string representation of the extracted value (which might not be a String).
	Value string `pulumi:"value"`
}

// GetTestGrokPatternTestGrokAttributeInput is an input type that accepts GetTestGrokPatternTestGrokAttributeArgs and GetTestGrokPatternTestGrokAttributeOutput values.
// You can construct a concrete instance of `GetTestGrokPatternTestGrokAttributeInput` via:
//
//	GetTestGrokPatternTestGrokAttributeArgs{...}
type GetTestGrokPatternTestGrokAttributeInput interface {
	pulumi.Input

	ToGetTestGrokPatternTestGrokAttributeOutput() GetTestGrokPatternTestGrokAttributeOutput
	ToGetTestGrokPatternTestGrokAttributeOutputWithContext(context.Context) GetTestGrokPatternTestGrokAttributeOutput
}

type GetTestGrokPatternTestGrokAttributeArgs struct {
	// The attribute name.
	Name pulumi.StringInput `pulumi:"name"`
	// A string representation of the extracted value (which might not be a String).
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetTestGrokPatternTestGrokAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTestGrokPatternTestGrokAttribute)(nil)).Elem()
}

func (i GetTestGrokPatternTestGrokAttributeArgs) ToGetTestGrokPatternTestGrokAttributeOutput() GetTestGrokPatternTestGrokAttributeOutput {
	return i.ToGetTestGrokPatternTestGrokAttributeOutputWithContext(context.Background())
}

func (i GetTestGrokPatternTestGrokAttributeArgs) ToGetTestGrokPatternTestGrokAttributeOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTestGrokPatternTestGrokAttributeOutput)
}

// GetTestGrokPatternTestGrokAttributeArrayInput is an input type that accepts GetTestGrokPatternTestGrokAttributeArray and GetTestGrokPatternTestGrokAttributeArrayOutput values.
// You can construct a concrete instance of `GetTestGrokPatternTestGrokAttributeArrayInput` via:
//
//	GetTestGrokPatternTestGrokAttributeArray{ GetTestGrokPatternTestGrokAttributeArgs{...} }
type GetTestGrokPatternTestGrokAttributeArrayInput interface {
	pulumi.Input

	ToGetTestGrokPatternTestGrokAttributeArrayOutput() GetTestGrokPatternTestGrokAttributeArrayOutput
	ToGetTestGrokPatternTestGrokAttributeArrayOutputWithContext(context.Context) GetTestGrokPatternTestGrokAttributeArrayOutput
}

type GetTestGrokPatternTestGrokAttributeArray []GetTestGrokPatternTestGrokAttributeInput

func (GetTestGrokPatternTestGrokAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTestGrokPatternTestGrokAttribute)(nil)).Elem()
}

func (i GetTestGrokPatternTestGrokAttributeArray) ToGetTestGrokPatternTestGrokAttributeArrayOutput() GetTestGrokPatternTestGrokAttributeArrayOutput {
	return i.ToGetTestGrokPatternTestGrokAttributeArrayOutputWithContext(context.Background())
}

func (i GetTestGrokPatternTestGrokAttributeArray) ToGetTestGrokPatternTestGrokAttributeArrayOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTestGrokPatternTestGrokAttributeArrayOutput)
}

type GetTestGrokPatternTestGrokAttributeOutput struct{ *pulumi.OutputState }

func (GetTestGrokPatternTestGrokAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTestGrokPatternTestGrokAttribute)(nil)).Elem()
}

func (o GetTestGrokPatternTestGrokAttributeOutput) ToGetTestGrokPatternTestGrokAttributeOutput() GetTestGrokPatternTestGrokAttributeOutput {
	return o
}

func (o GetTestGrokPatternTestGrokAttributeOutput) ToGetTestGrokPatternTestGrokAttributeOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokAttributeOutput {
	return o
}

// The attribute name.
func (o GetTestGrokPatternTestGrokAttributeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTestGrokPatternTestGrokAttribute) string { return v.Name }).(pulumi.StringOutput)
}

// A string representation of the extracted value (which might not be a String).
func (o GetTestGrokPatternTestGrokAttributeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetTestGrokPatternTestGrokAttribute) string { return v.Value }).(pulumi.StringOutput)
}

type GetTestGrokPatternTestGrokAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetTestGrokPatternTestGrokAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTestGrokPatternTestGrokAttribute)(nil)).Elem()
}

func (o GetTestGrokPatternTestGrokAttributeArrayOutput) ToGetTestGrokPatternTestGrokAttributeArrayOutput() GetTestGrokPatternTestGrokAttributeArrayOutput {
	return o
}

func (o GetTestGrokPatternTestGrokAttributeArrayOutput) ToGetTestGrokPatternTestGrokAttributeArrayOutputWithContext(ctx context.Context) GetTestGrokPatternTestGrokAttributeArrayOutput {
	return o
}

func (o GetTestGrokPatternTestGrokAttributeArrayOutput) Index(i pulumi.IntInput) GetTestGrokPatternTestGrokAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTestGrokPatternTestGrokAttribute {
		return vs[0].([]GetTestGrokPatternTestGrokAttribute)[vs[1].(int)]
	}).(GetTestGrokPatternTestGrokAttributeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertChannelConfigInput)(nil)).Elem(), AlertChannelConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertChannelConfigPtrInput)(nil)).Elem(), AlertChannelConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConditionTermInput)(nil)).Elem(), AlertConditionTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertConditionTermArrayInput)(nil)).Elem(), AlertConditionTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMutingRuleConditionInput)(nil)).Elem(), AlertMutingRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMutingRuleConditionPtrInput)(nil)).Elem(), AlertMutingRuleConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMutingRuleConditionConditionInput)(nil)).Elem(), AlertMutingRuleConditionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMutingRuleConditionConditionArrayInput)(nil)).Elem(), AlertMutingRuleConditionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMutingRuleScheduleInput)(nil)).Elem(), AlertMutingRuleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMutingRuleSchedulePtrInput)(nil)).Elem(), AlertMutingRuleScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityTagsTagInput)(nil)).Elem(), EntityTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EntityTagsTagArrayInput)(nil)).Elem(), EntityTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraAlertConditionCriticalInput)(nil)).Elem(), InfraAlertConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraAlertConditionCriticalPtrInput)(nil)).Elem(), InfraAlertConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraAlertConditionWarningInput)(nil)).Elem(), InfraAlertConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InfraAlertConditionWarningPtrInput)(nil)).Elem(), InfraAlertConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorDowntimeEndRepeatInput)(nil)).Elem(), MonitorDowntimeEndRepeatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorDowntimeEndRepeatPtrInput)(nil)).Elem(), MonitorDowntimeEndRepeatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorDowntimeFrequencyInput)(nil)).Elem(), MonitorDowntimeFrequencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorDowntimeFrequencyPtrInput)(nil)).Elem(), MonitorDowntimeFrequencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorDowntimeFrequencyDaysOfWeekInput)(nil)).Elem(), MonitorDowntimeFrequencyDaysOfWeekArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorDowntimeFrequencyDaysOfWeekPtrInput)(nil)).Elem(), MonitorDowntimeFrequencyDaysOfWeekArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelPropertyInput)(nil)).Elem(), NotificationChannelPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationChannelPropertyArrayInput)(nil)).Elem(), NotificationChannelPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationAuthBasicInput)(nil)).Elem(), NotificationDestinationAuthBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationAuthBasicPtrInput)(nil)).Elem(), NotificationDestinationAuthBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationAuthCustomHeaderInput)(nil)).Elem(), NotificationDestinationAuthCustomHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationAuthCustomHeaderArrayInput)(nil)).Elem(), NotificationDestinationAuthCustomHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationAuthTokenInput)(nil)).Elem(), NotificationDestinationAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationAuthTokenPtrInput)(nil)).Elem(), NotificationDestinationAuthTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationPropertyInput)(nil)).Elem(), NotificationDestinationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationPropertyArrayInput)(nil)).Elem(), NotificationDestinationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationSecureUrlInput)(nil)).Elem(), NotificationDestinationSecureUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationDestinationSecureUrlPtrInput)(nil)).Elem(), NotificationDestinationSecureUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionCriticalInput)(nil)).Elem(), NrqlAlertConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionCriticalPtrInput)(nil)).Elem(), NrqlAlertConditionCriticalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionCriticalPredictionInput)(nil)).Elem(), NrqlAlertConditionCriticalPredictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionCriticalPredictionPtrInput)(nil)).Elem(), NrqlAlertConditionCriticalPredictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionNrqlInput)(nil)).Elem(), NrqlAlertConditionNrqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionNrqlPtrInput)(nil)).Elem(), NrqlAlertConditionNrqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionTermInput)(nil)).Elem(), NrqlAlertConditionTermArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionTermArrayInput)(nil)).Elem(), NrqlAlertConditionTermArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionTermPredictionInput)(nil)).Elem(), NrqlAlertConditionTermPredictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionTermPredictionPtrInput)(nil)).Elem(), NrqlAlertConditionTermPredictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionWarningInput)(nil)).Elem(), NrqlAlertConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionWarningPtrInput)(nil)).Elem(), NrqlAlertConditionWarningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionWarningPredictionInput)(nil)).Elem(), NrqlAlertConditionWarningPredictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NrqlAlertConditionWarningPredictionPtrInput)(nil)).Elem(), NrqlAlertConditionWarningPredictionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObfuscationRuleActionInput)(nil)).Elem(), ObfuscationRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObfuscationRuleActionArrayInput)(nil)).Elem(), ObfuscationRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageInput)(nil)).Elem(), OneDashboardPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageArrayInput)(nil)).Elem(), OneDashboardPageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaInput)(nil)).Elem(), OneDashboardPageWidgetAreaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaColorInput)(nil)).Elem(), OneDashboardPageWidgetAreaColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetAreaColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetAreaDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetAreaInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetAreaInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetAreaNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaNullValueInput)(nil)).Elem(), OneDashboardPageWidgetAreaNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetAreaNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaUnitInput)(nil)).Elem(), OneDashboardPageWidgetAreaUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetAreaUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetAreaUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetAreaUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarInput)(nil)).Elem(), OneDashboardPageWidgetBarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarColorInput)(nil)).Elem(), OneDashboardPageWidgetBarColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBarColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetBarDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetBarInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetBarInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetBarNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarNullValueInput)(nil)).Elem(), OneDashboardPageWidgetBarNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBarNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarUnitInput)(nil)).Elem(), OneDashboardPageWidgetBarUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBarUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBarUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBarUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardInput)(nil)).Elem(), OneDashboardPageWidgetBillboardArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardColorInput)(nil)).Elem(), OneDashboardPageWidgetBillboardColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBillboardColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetBillboardDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetBillboardInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetBillboardInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetBillboardNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValueInput)(nil)).Elem(), OneDashboardPageWidgetBillboardNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBillboardNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardUnitInput)(nil)).Elem(), OneDashboardPageWidgetBillboardUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBillboardUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBillboardUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletInput)(nil)).Elem(), OneDashboardPageWidgetBulletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletColorInput)(nil)).Elem(), OneDashboardPageWidgetBulletColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBulletColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetBulletDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetBulletInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetBulletInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetBulletNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletNullValueInput)(nil)).Elem(), OneDashboardPageWidgetBulletNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBulletNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletUnitInput)(nil)).Elem(), OneDashboardPageWidgetBulletUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetBulletUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetBulletUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetBulletUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelInput)(nil)).Elem(), OneDashboardPageWidgetFunnelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelColorInput)(nil)).Elem(), OneDashboardPageWidgetFunnelColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetFunnelColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetFunnelDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetFunnelInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetFunnelInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetFunnelNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValueInput)(nil)).Elem(), OneDashboardPageWidgetFunnelNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetFunnelNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelUnitInput)(nil)).Elem(), OneDashboardPageWidgetFunnelUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetFunnelUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetFunnelUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapColorInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValueInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnitInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetHeatmapUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramInput)(nil)).Elem(), OneDashboardPageWidgetHistogramArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramColorInput)(nil)).Elem(), OneDashboardPageWidgetHistogramColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetHistogramColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetHistogramDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetHistogramInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetHistogramInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetHistogramNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValueInput)(nil)).Elem(), OneDashboardPageWidgetHistogramNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetHistogramNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramUnitInput)(nil)).Elem(), OneDashboardPageWidgetHistogramUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetHistogramUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetHistogramUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonInput)(nil)).Elem(), OneDashboardPageWidgetJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonColorInput)(nil)).Elem(), OneDashboardPageWidgetJsonColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetJsonColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetJsonDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetJsonInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetJsonInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetJsonNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonNullValueInput)(nil)).Elem(), OneDashboardPageWidgetJsonNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetJsonNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonUnitInput)(nil)).Elem(), OneDashboardPageWidgetJsonUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetJsonUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetJsonUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetJsonUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineInput)(nil)).Elem(), OneDashboardPageWidgetLineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineColorInput)(nil)).Elem(), OneDashboardPageWidgetLineColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetLineColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetLineDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetLineInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetLineInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetLineNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineNullValueInput)(nil)).Elem(), OneDashboardPageWidgetLineNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetLineNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineThresholdInput)(nil)).Elem(), OneDashboardPageWidgetLineThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineThresholdArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineUnitInput)(nil)).Elem(), OneDashboardPageWidgetLineUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetLineUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetLineUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineYAxisRightInput)(nil)).Elem(), OneDashboardPageWidgetLineYAxisRightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLineYAxisRightPtrInput)(nil)).Elem(), OneDashboardPageWidgetLineYAxisRightArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableInput)(nil)).Elem(), OneDashboardPageWidgetLogTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableColorInput)(nil)).Elem(), OneDashboardPageWidgetLogTableColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetLogTableColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetLogTableDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetLogTableInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetLogTableInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetLogTableNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValueInput)(nil)).Elem(), OneDashboardPageWidgetLogTableNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetLogTableNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableUnitInput)(nil)).Elem(), OneDashboardPageWidgetLogTableUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetLogTableUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetLogTableUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownColorInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValueInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnitInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetMarkdownUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyInput)(nil)).Elem(), OneDashboardPageWidgetPyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyColorInput)(nil)).Elem(), OneDashboardPageWidgetPyColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetPyColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetPyDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetPyInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetPyInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetPyNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyNullValueInput)(nil)).Elem(), OneDashboardPageWidgetPyNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetPyNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyUnitInput)(nil)).Elem(), OneDashboardPageWidgetPyUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetPyUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetPyUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetPyUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarColorInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValueInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnitInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetStackedBarUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableInput)(nil)).Elem(), OneDashboardPageWidgetTableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableColorInput)(nil)).Elem(), OneDashboardPageWidgetTableColorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableColorArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableColorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableColorSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetTableColorSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableColorSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableColorSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableDataFormatInput)(nil)).Elem(), OneDashboardPageWidgetTableDataFormatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableDataFormatArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableDataFormatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableInitialSortingInput)(nil)).Elem(), OneDashboardPageWidgetTableInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableInitialSortingPtrInput)(nil)).Elem(), OneDashboardPageWidgetTableInitialSortingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableNrqlQueryInput)(nil)).Elem(), OneDashboardPageWidgetTableNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableNrqlQueryArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableNrqlQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableNullValueInput)(nil)).Elem(), OneDashboardPageWidgetTableNullValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableNullValueArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableNullValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableNullValueSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetTableNullValueSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableNullValueSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableNullValueSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableThresholdInput)(nil)).Elem(), OneDashboardPageWidgetTableThresholdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableThresholdArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableThresholdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableUnitInput)(nil)).Elem(), OneDashboardPageWidgetTableUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableUnitArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableUnitArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableUnitSeriesOverrideInput)(nil)).Elem(), OneDashboardPageWidgetTableUnitSeriesOverrideArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardPageWidgetTableUnitSeriesOverrideArrayInput)(nil)).Elem(), OneDashboardPageWidgetTableUnitSeriesOverrideArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardRawPageInput)(nil)).Elem(), OneDashboardRawPageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardRawPageArrayInput)(nil)).Elem(), OneDashboardRawPageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardRawPageWidgetInput)(nil)).Elem(), OneDashboardRawPageWidgetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardRawPageWidgetArrayInput)(nil)).Elem(), OneDashboardRawPageWidgetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableInput)(nil)).Elem(), OneDashboardVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableArrayInput)(nil)).Elem(), OneDashboardVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableItemInput)(nil)).Elem(), OneDashboardVariableItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableItemArrayInput)(nil)).Elem(), OneDashboardVariableItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableNrqlQueryInput)(nil)).Elem(), OneDashboardVariableNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableNrqlQueryPtrInput)(nil)).Elem(), OneDashboardVariableNrqlQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableOptionInput)(nil)).Elem(), OneDashboardVariableOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OneDashboardVariableOptionArrayInput)(nil)).Elem(), OneDashboardVariableOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsInput)(nil)).Elem(), ServiceLevelEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsPtrInput)(nil)).Elem(), ServiceLevelEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsBadEventsInput)(nil)).Elem(), ServiceLevelEventsBadEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsBadEventsPtrInput)(nil)).Elem(), ServiceLevelEventsBadEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsBadEventsSelectInput)(nil)).Elem(), ServiceLevelEventsBadEventsSelectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsBadEventsSelectPtrInput)(nil)).Elem(), ServiceLevelEventsBadEventsSelectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsGoodEventsInput)(nil)).Elem(), ServiceLevelEventsGoodEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsGoodEventsPtrInput)(nil)).Elem(), ServiceLevelEventsGoodEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsGoodEventsSelectInput)(nil)).Elem(), ServiceLevelEventsGoodEventsSelectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsGoodEventsSelectPtrInput)(nil)).Elem(), ServiceLevelEventsGoodEventsSelectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsValidEventsInput)(nil)).Elem(), ServiceLevelEventsValidEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsValidEventsPtrInput)(nil)).Elem(), ServiceLevelEventsValidEventsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsValidEventsSelectInput)(nil)).Elem(), ServiceLevelEventsValidEventsSelectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelEventsValidEventsSelectPtrInput)(nil)).Elem(), ServiceLevelEventsValidEventsSelectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveInput)(nil)).Elem(), ServiceLevelObjectiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectivePtrInput)(nil)).Elem(), ServiceLevelObjectiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveTimeWindowInput)(nil)).Elem(), ServiceLevelObjectiveTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveTimeWindowPtrInput)(nil)).Elem(), ServiceLevelObjectiveTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveTimeWindowRollingInput)(nil)).Elem(), ServiceLevelObjectiveTimeWindowRollingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLevelObjectiveTimeWindowRollingPtrInput)(nil)).Elem(), ServiceLevelObjectiveTimeWindowRollingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowDestinationInput)(nil)).Elem(), WorkflowDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowDestinationArrayInput)(nil)).Elem(), WorkflowDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnrichmentsInput)(nil)).Elem(), WorkflowEnrichmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnrichmentsPtrInput)(nil)).Elem(), WorkflowEnrichmentsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnrichmentsNrqlInput)(nil)).Elem(), WorkflowEnrichmentsNrqlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnrichmentsNrqlArrayInput)(nil)).Elem(), WorkflowEnrichmentsNrqlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnrichmentsNrqlConfigurationInput)(nil)).Elem(), WorkflowEnrichmentsNrqlConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowEnrichmentsNrqlConfigurationArrayInput)(nil)).Elem(), WorkflowEnrichmentsNrqlConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIssuesFilterInput)(nil)).Elem(), WorkflowIssuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIssuesFilterPtrInput)(nil)).Elem(), WorkflowIssuesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIssuesFilterPredicateInput)(nil)).Elem(), WorkflowIssuesFilterPredicateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkflowIssuesFilterPredicateArrayInput)(nil)).Elem(), WorkflowIssuesFilterPredicateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAlertChannelConfigInput)(nil)).Elem(), GetAlertChannelConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntityTagInput)(nil)).Elem(), GetEntityTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEntityTagArrayInput)(nil)).Elem(), GetEntityTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationDestinationPropertyInput)(nil)).Elem(), GetNotificationDestinationPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationDestinationPropertyArrayInput)(nil)).Elem(), GetNotificationDestinationPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationDestinationSecureUrlInput)(nil)).Elem(), GetNotificationDestinationSecureUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNotificationDestinationSecureUrlArrayInput)(nil)).Elem(), GetNotificationDestinationSecureUrlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTestGrokPatternTestGrokInput)(nil)).Elem(), GetTestGrokPatternTestGrokArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTestGrokPatternTestGrokArrayInput)(nil)).Elem(), GetTestGrokPatternTestGrokArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTestGrokPatternTestGrokAttributeInput)(nil)).Elem(), GetTestGrokPatternTestGrokAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTestGrokPatternTestGrokAttributeArrayInput)(nil)).Elem(), GetTestGrokPatternTestGrokAttributeArray{})
	pulumi.RegisterOutputType(AlertChannelConfigOutput{})
	pulumi.RegisterOutputType(AlertChannelConfigPtrOutput{})
	pulumi.RegisterOutputType(AlertConditionTermOutput{})
	pulumi.RegisterOutputType(AlertConditionTermArrayOutput{})
	pulumi.RegisterOutputType(AlertMutingRuleConditionOutput{})
	pulumi.RegisterOutputType(AlertMutingRuleConditionPtrOutput{})
	pulumi.RegisterOutputType(AlertMutingRuleConditionConditionOutput{})
	pulumi.RegisterOutputType(AlertMutingRuleConditionConditionArrayOutput{})
	pulumi.RegisterOutputType(AlertMutingRuleScheduleOutput{})
	pulumi.RegisterOutputType(AlertMutingRuleSchedulePtrOutput{})
	pulumi.RegisterOutputType(EntityTagsTagOutput{})
	pulumi.RegisterOutputType(EntityTagsTagArrayOutput{})
	pulumi.RegisterOutputType(InfraAlertConditionCriticalOutput{})
	pulumi.RegisterOutputType(InfraAlertConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(InfraAlertConditionWarningOutput{})
	pulumi.RegisterOutputType(InfraAlertConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(MonitorDowntimeEndRepeatOutput{})
	pulumi.RegisterOutputType(MonitorDowntimeEndRepeatPtrOutput{})
	pulumi.RegisterOutputType(MonitorDowntimeFrequencyOutput{})
	pulumi.RegisterOutputType(MonitorDowntimeFrequencyPtrOutput{})
	pulumi.RegisterOutputType(MonitorDowntimeFrequencyDaysOfWeekOutput{})
	pulumi.RegisterOutputType(MonitorDowntimeFrequencyDaysOfWeekPtrOutput{})
	pulumi.RegisterOutputType(NotificationChannelPropertyOutput{})
	pulumi.RegisterOutputType(NotificationChannelPropertyArrayOutput{})
	pulumi.RegisterOutputType(NotificationDestinationAuthBasicOutput{})
	pulumi.RegisterOutputType(NotificationDestinationAuthBasicPtrOutput{})
	pulumi.RegisterOutputType(NotificationDestinationAuthCustomHeaderOutput{})
	pulumi.RegisterOutputType(NotificationDestinationAuthCustomHeaderArrayOutput{})
	pulumi.RegisterOutputType(NotificationDestinationAuthTokenOutput{})
	pulumi.RegisterOutputType(NotificationDestinationAuthTokenPtrOutput{})
	pulumi.RegisterOutputType(NotificationDestinationPropertyOutput{})
	pulumi.RegisterOutputType(NotificationDestinationPropertyArrayOutput{})
	pulumi.RegisterOutputType(NotificationDestinationSecureUrlOutput{})
	pulumi.RegisterOutputType(NotificationDestinationSecureUrlPtrOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionCriticalOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionCriticalPtrOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionCriticalPredictionOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionCriticalPredictionPtrOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionNrqlOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionNrqlPtrOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionTermOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionTermArrayOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionTermPredictionOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionTermPredictionPtrOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionWarningOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionWarningPtrOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionWarningPredictionOutput{})
	pulumi.RegisterOutputType(NrqlAlertConditionWarningPredictionPtrOutput{})
	pulumi.RegisterOutputType(ObfuscationRuleActionOutput{})
	pulumi.RegisterOutputType(ObfuscationRuleActionArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageOutput{})
	pulumi.RegisterOutputType(OneDashboardPageArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetAreaUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBarUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBillboardUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetBulletUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetFunnelUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHeatmapUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetHistogramUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetJsonUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineThresholdOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineThresholdArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineYAxisRightOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLineYAxisRightPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetLogTableUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetMarkdownUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetPyUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetStackedBarUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableColorOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableColorArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableColorSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableColorSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableDataFormatOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableDataFormatArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableInitialSortingOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableInitialSortingPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableNrqlQueryArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableNullValueOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableNullValueArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableNullValueSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableNullValueSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableThresholdOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableThresholdArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableUnitOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableUnitArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableUnitSeriesOverrideOutput{})
	pulumi.RegisterOutputType(OneDashboardPageWidgetTableUnitSeriesOverrideArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardRawPageOutput{})
	pulumi.RegisterOutputType(OneDashboardRawPageArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardRawPageWidgetOutput{})
	pulumi.RegisterOutputType(OneDashboardRawPageWidgetArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableItemOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableItemArrayOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableNrqlQueryOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableNrqlQueryPtrOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableOptionOutput{})
	pulumi.RegisterOutputType(OneDashboardVariableOptionArrayOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsBadEventsOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsBadEventsPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsBadEventsSelectOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsBadEventsSelectPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsGoodEventsOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsGoodEventsPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsGoodEventsSelectOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsGoodEventsSelectPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsValidEventsOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsValidEventsPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsValidEventsSelectOutput{})
	pulumi.RegisterOutputType(ServiceLevelEventsValidEventsSelectPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectivePtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveTimeWindowOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveTimeWindowPtrOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveTimeWindowRollingOutput{})
	pulumi.RegisterOutputType(ServiceLevelObjectiveTimeWindowRollingPtrOutput{})
	pulumi.RegisterOutputType(WorkflowDestinationOutput{})
	pulumi.RegisterOutputType(WorkflowDestinationArrayOutput{})
	pulumi.RegisterOutputType(WorkflowEnrichmentsOutput{})
	pulumi.RegisterOutputType(WorkflowEnrichmentsPtrOutput{})
	pulumi.RegisterOutputType(WorkflowEnrichmentsNrqlOutput{})
	pulumi.RegisterOutputType(WorkflowEnrichmentsNrqlArrayOutput{})
	pulumi.RegisterOutputType(WorkflowEnrichmentsNrqlConfigurationOutput{})
	pulumi.RegisterOutputType(WorkflowEnrichmentsNrqlConfigurationArrayOutput{})
	pulumi.RegisterOutputType(WorkflowIssuesFilterOutput{})
	pulumi.RegisterOutputType(WorkflowIssuesFilterPtrOutput{})
	pulumi.RegisterOutputType(WorkflowIssuesFilterPredicateOutput{})
	pulumi.RegisterOutputType(WorkflowIssuesFilterPredicateArrayOutput{})
	pulumi.RegisterOutputType(GetAlertChannelConfigOutput{})
	pulumi.RegisterOutputType(GetEntityTagOutput{})
	pulumi.RegisterOutputType(GetEntityTagArrayOutput{})
	pulumi.RegisterOutputType(GetNotificationDestinationPropertyOutput{})
	pulumi.RegisterOutputType(GetNotificationDestinationPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetNotificationDestinationSecureUrlOutput{})
	pulumi.RegisterOutputType(GetNotificationDestinationSecureUrlArrayOutput{})
	pulumi.RegisterOutputType(GetTestGrokPatternTestGrokOutput{})
	pulumi.RegisterOutputType(GetTestGrokPatternTestGrokArrayOutput{})
	pulumi.RegisterOutputType(GetTestGrokPatternTestGrokAttributeOutput{})
	pulumi.RegisterOutputType(GetTestGrokPatternTestGrokAttributeArrayOutput{})
}
