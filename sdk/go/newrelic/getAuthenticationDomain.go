// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to fetch the ID of an authentication domain belonging to your account, matching the specified name.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			foo, err := newrelic.GetAuthenticationDomain(ctx, &newrelic.GetAuthenticationDomainArgs{
//				Name: "Test Authentication Domain",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("foo", foo.Id)
//			return nil
//		})
//	}
//
// ```
func GetAuthenticationDomain(ctx *pulumi.Context, args *GetAuthenticationDomainArgs, opts ...pulumi.InvokeOption) (*GetAuthenticationDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAuthenticationDomainResult
	err := ctx.Invoke("newrelic:index/getAuthenticationDomain:getAuthenticationDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthenticationDomain.
type GetAuthenticationDomainArgs struct {
	// The name of the authentication domain to be searched for. An error is thrown, if no authentication domain is found with the specified name.
	Name string `pulumi:"name"`
}

// A collection of values returned by getAuthenticationDomain.
type GetAuthenticationDomainResult struct {
	// The ID of the matching authentication domain fetched.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func GetAuthenticationDomainOutput(ctx *pulumi.Context, args GetAuthenticationDomainOutputArgs, opts ...pulumi.InvokeOption) GetAuthenticationDomainResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAuthenticationDomainResultOutput, error) {
			args := v.(GetAuthenticationDomainArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("newrelic:index/getAuthenticationDomain:getAuthenticationDomain", args, GetAuthenticationDomainResultOutput{}, options).(GetAuthenticationDomainResultOutput), nil
		}).(GetAuthenticationDomainResultOutput)
}

// A collection of arguments for invoking getAuthenticationDomain.
type GetAuthenticationDomainOutputArgs struct {
	// The name of the authentication domain to be searched for. An error is thrown, if no authentication domain is found with the specified name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAuthenticationDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthenticationDomainArgs)(nil)).Elem()
}

// A collection of values returned by getAuthenticationDomain.
type GetAuthenticationDomainResultOutput struct{ *pulumi.OutputState }

func (GetAuthenticationDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthenticationDomainResult)(nil)).Elem()
}

func (o GetAuthenticationDomainResultOutput) ToGetAuthenticationDomainResultOutput() GetAuthenticationDomainResultOutput {
	return o
}

func (o GetAuthenticationDomainResultOutput) ToGetAuthenticationDomainResultOutputWithContext(ctx context.Context) GetAuthenticationDomainResultOutput {
	return o
}

// The ID of the matching authentication domain fetched.
func (o GetAuthenticationDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthenticationDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAuthenticationDomainResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthenticationDomainResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthenticationDomainResultOutput{})
}
