// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package newrelic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-newrelic/sdk/v5/go/newrelic/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about a specific alert channel in New Relic that already exists.
//
// > **WARNING:** The `AlertChannel` data source is deprecated and will be removed in the next major release.
func LookupAlertChannel(ctx *pulumi.Context, args *LookupAlertChannelArgs, opts ...pulumi.InvokeOption) (*LookupAlertChannelResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupAlertChannelResult
	err := ctx.Invoke("newrelic:index/getAlertChannel:getAlertChannel", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAlertChannel.
type LookupAlertChannelArgs struct {
	// The New Relic account ID to operate on.  This allows you to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId *int `pulumi:"accountId"`
	// The name of the alert channel in New Relic.
	Name string `pulumi:"name"`
}

// A collection of values returned by getAlertChannel.
type LookupAlertChannelResult struct {
	AccountId int `pulumi:"accountId"`
	// Alert channel configuration.
	Config GetAlertChannelConfig `pulumi:"config"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
	// A list of policy IDs associated with the alert channel.
	PolicyIds []int `pulumi:"policyIds"`
	// Alert channel type, either: `email`, `opsgenie`, `pagerduty`, `slack`, `victorops`, or `webhook`.
	Type string `pulumi:"type"`
}

func LookupAlertChannelOutput(ctx *pulumi.Context, args LookupAlertChannelOutputArgs, opts ...pulumi.InvokeOption) LookupAlertChannelResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAlertChannelResult, error) {
			args := v.(LookupAlertChannelArgs)
			r, err := LookupAlertChannel(ctx, &args, opts...)
			var s LookupAlertChannelResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAlertChannelResultOutput)
}

// A collection of arguments for invoking getAlertChannel.
type LookupAlertChannelOutputArgs struct {
	// The New Relic account ID to operate on.  This allows you to override the `accountId` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
	AccountId pulumi.IntPtrInput `pulumi:"accountId"`
	// The name of the alert channel in New Relic.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupAlertChannelOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertChannelArgs)(nil)).Elem()
}

// A collection of values returned by getAlertChannel.
type LookupAlertChannelResultOutput struct{ *pulumi.OutputState }

func (LookupAlertChannelResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAlertChannelResult)(nil)).Elem()
}

func (o LookupAlertChannelResultOutput) ToLookupAlertChannelResultOutput() LookupAlertChannelResultOutput {
	return o
}

func (o LookupAlertChannelResultOutput) ToLookupAlertChannelResultOutputWithContext(ctx context.Context) LookupAlertChannelResultOutput {
	return o
}

func (o LookupAlertChannelResultOutput) AccountId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAlertChannelResult) int { return v.AccountId }).(pulumi.IntOutput)
}

// Alert channel configuration.
func (o LookupAlertChannelResultOutput) Config() GetAlertChannelConfigOutput {
	return o.ApplyT(func(v LookupAlertChannelResult) GetAlertChannelConfig { return v.Config }).(GetAlertChannelConfigOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAlertChannelResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertChannelResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAlertChannelResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertChannelResult) string { return v.Name }).(pulumi.StringOutput)
}

// A list of policy IDs associated with the alert channel.
func (o LookupAlertChannelResultOutput) PolicyIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupAlertChannelResult) []int { return v.PolicyIds }).(pulumi.IntArrayOutput)
}

// Alert channel type, either: `email`, `opsgenie`, `pagerduty`, `slack`, `victorops`, or `webhook`.
func (o LookupAlertChannelResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAlertChannelResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAlertChannelResultOutput{})
}
