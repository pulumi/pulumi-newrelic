// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package insights

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Event struct {
	pulumi.CustomResourceState

	// An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
	Events EventEventArrayOutput `pulumi:"events"`
}

// NewEvent registers a new resource with the given unique name, arguments, and options.
func NewEvent(ctx *pulumi.Context,
	name string, args *EventArgs, opts ...pulumi.ResourceOption) (*Event, error) {
	if args == nil || args.Events == nil {
		return nil, errors.New("missing required argument 'Events'")
	}
	if args == nil {
		args = &EventArgs{}
	}
	var resource Event
	err := ctx.RegisterResource("newrelic:insights/event:Event", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEvent gets an existing Event resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEvent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventState, opts ...pulumi.ResourceOption) (*Event, error) {
	var resource Event
	err := ctx.ReadResource("newrelic:insights/event:Event", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Event resources.
type eventState struct {
	// An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
	Events []EventEvent `pulumi:"events"`
}

type EventState struct {
	// An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
	Events EventEventArrayInput
}

func (EventState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventState)(nil)).Elem()
}

type eventArgs struct {
	// An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
	Events []EventEvent `pulumi:"events"`
}

// The set of arguments for constructing a Event resource.
type EventArgs struct {
	// An event to insert into Insights. Multiple event blocks can be defined. See Events below for details.
	Events EventEventArrayInput
}

func (EventArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventArgs)(nil)).Elem()
}
