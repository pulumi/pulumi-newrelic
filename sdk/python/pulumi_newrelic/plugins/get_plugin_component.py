# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetPluginComponentResult',
    'AwaitableGetPluginComponentResult',
    'get_plugin_component',
    'get_plugin_component_output',
]

@pulumi.output_type
class GetPluginComponentResult:
    """
    A collection of values returned by getPluginComponent.
    """
    def __init__(__self__, health_status=None, id=None, name=None, plugin_id=None):
        if health_status and not isinstance(health_status, str):
            raise TypeError("Expected argument 'health_status' to be a str")
        pulumi.set(__self__, "health_status", health_status)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if plugin_id and not isinstance(plugin_id, int):
            raise TypeError("Expected argument 'plugin_id' to be a int")
        pulumi.set(__self__, "plugin_id", plugin_id)

    @property
    @pulumi.getter(name="healthStatus")
    def health_status(self) -> str:
        return pulumi.get(self, "health_status")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="pluginId")
    def plugin_id(self) -> int:
        return pulumi.get(self, "plugin_id")


class AwaitableGetPluginComponentResult(GetPluginComponentResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetPluginComponentResult(
            health_status=self.health_status,
            id=self.id,
            name=self.name,
            plugin_id=self.plugin_id)


def get_plugin_component(name: Optional[str] = None,
                         plugin_id: Optional[int] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetPluginComponentResult:
    """
    New Relic Plugins reached end of life Wednesday June 16, 2021.

    **This data source has been removed.**

    For more information, [click here](https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267)
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['pluginId'] = plugin_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('newrelic:plugins/getPluginComponent:getPluginComponent', __args__, opts=opts, typ=GetPluginComponentResult).value

    return AwaitableGetPluginComponentResult(
        health_status=__ret__.health_status,
        id=__ret__.id,
        name=__ret__.name,
        plugin_id=__ret__.plugin_id)


@_utilities.lift_output_func(get_plugin_component)
def get_plugin_component_output(name: Optional[pulumi.Input[str]] = None,
                                plugin_id: Optional[pulumi.Input[int]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetPluginComponentResult]:
    """
    New Relic Plugins reached end of life Wednesday June 16, 2021.

    **This data source has been removed.**

    For more information, [click here](https://discuss.newrelic.com/t/new-relic-plugin-eol-wednesday-june-16th-2021/127267)
    """
    ...
