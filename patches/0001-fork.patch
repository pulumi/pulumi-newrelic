From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Ian Wahbe <ian@wahbe.com>
Date: Mon, 24 Apr 2023 15:00:52 -0700
Subject: [PATCH] fork


diff --git a/newrelic/resource_newrelic_nrql_alert_condition.go b/newrelic/resource_newrelic_nrql_alert_condition.go
index b3d5be77..cb14292f 100644
--- a/newrelic/resource_newrelic_nrql_alert_condition.go
+++ b/newrelic/resource_newrelic_nrql_alert_condition.go
@@ -179,14 +179,13 @@ func resourceNewRelicNrqlAlertCondition() *schema.Resource {
 				},
 			},
 			"term": {
-				Type:          schema.TypeSet,
-				MinItems:      1,
-				MaxItems:      2,
-				Optional:      true,
-				Description:   "A set of terms for this condition. Max 2 terms allowed - at least one 1 critical term and 1 optional warning term.",
-				Elem:          termSchemaDeprecated(),
-				ConflictsWith: []string{"critical", "warning"},
-				Deprecated:    "use `critical` and `warning` attributes instead",
+				Type:        schema.TypeSet,
+				MinItems:    1,
+				MaxItems:    2,
+				Optional:    true,
+				Description: "A set of terms for this condition. Max 2 terms allowed - at least one 1 critical term and 1 optional warning term.",
+				Elem:        termSchemaDeprecated(),
+				Deprecated:  "use `critical` and `warning` attributes instead",
 			},
 			"critical": {
 				Type:          schema.TypeList,
diff --git a/scripts/release.sh b/scripts/release.sh
index ea894a38..225168cf 100755
--- a/scripts/release.sh
+++ b/scripts/release.sh
@@ -8,9 +8,9 @@ COLOR_LIGHT_GREEN='\033[1;32m'
 DEFAULT_BRANCH='main'
 CURRENT_GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
 
-if [ $CURRENT_GIT_BRANCH != $DEFAULT_BRANCH ]; then
+if [ $CURRENT_GIT_BRANCH != $DEFAULT_BRANCH ] && [ $CURRENT_GIT_BRANCH != 'v2' ]; then
   printf "\n"
-  printf "${COLOR_RED} Error: The release.sh script must be run while on the main branch. \n ${COLOR_NONE}"
+  printf "${COLOR_RED} Error: The release.sh script must be run while on the main or v2 branch. \n ${COLOR_NONE}"
   printf "\n"
 
   exit 1
@@ -73,7 +73,7 @@ ${SPELL_CMD} -source text -w ${CHANGELOG_FILE}
 # Commit CHANGELOG updates
 git add ${CHANGELOG_FILE}
 git commit --no-verify -m "chore(changelog): update CHANGELOG for ${VER_NEXT}"
-git push --no-verify origin HEAD:${DEFAULT_BRANCH}
+git push --no-verify origin HEAD:${CURRENT_GIT_BRANCH}
 
 if [ $? -ne 0 ]; then
   echo "Failed to push branch updates, exiting"
@@ -82,7 +82,7 @@ fi
 
 # Create and push new tag
 git tag ${VER_NEXT}
-git push --no-verify origin HEAD:${DEFAULT_BRANCH} --tags
+git push --no-verify origin HEAD:${CURRENT_GIT_BRANCH} --tags
 
 if [ $? -ne 0 ]; then
   echo "Failed to push tag, exiting"
diff --git a/website/docs/d/alert_channel.html.markdown b/website/docs/d/alert_channel.html.markdown
index 3c3c4d54..0c49eb15 100644
--- a/website/docs/d/alert_channel.html.markdown
+++ b/website/docs/d/alert_channel.html.markdown
@@ -8,7 +8,7 @@ description: |-
 
 # Data Source: newrelic\_alert\_channel
 
-Use this data source to get information about a specific alert channel in New Relic that already exists. More information on Terraform's data sources can be found [here](https://www.terraform.io/language/data-sources).
+Use this data source to get information about a specific alert channel in New Relic that already exists.
 
 -> **WARNING:** The `newrelic_alert_channel` data source is deprecated and will be removed in the next major release.
 
@@ -49,7 +49,6 @@ In addition to all arguments above, the following attributes are exported:
 * `config` - Alert channel configuration.
 * `policy_ids` - A list of policy IDs associated with the alert channel.
 
-
 ```
 Warning: This data source will use the account ID linked to your API key. At the moment it is not possible to dynamically set the account ID.
 ```
diff --git a/website/docs/d/alert_policy.html.markdown b/website/docs/d/alert_policy.html.markdown
index a475f9b9..b2efa53b 100644
--- a/website/docs/d/alert_policy.html.markdown
+++ b/website/docs/d/alert_policy.html.markdown
@@ -9,7 +9,6 @@ description: |-
 # Data Source: newrelic\_alert\_policy
 
 Use this data source to get information about a specific alert policy in New Relic that already exists.
-More information on Terraform's data sources can be found [here](https://www.terraform.io/language/data-sources).
 
 ## Example Usage
 
diff --git a/website/docs/d/application.html.markdown b/website/docs/d/application.html.markdown
index 1bff5b00..d85af74d 100644
--- a/website/docs/d/application.html.markdown
+++ b/website/docs/d/application.html.markdown
@@ -7,9 +7,10 @@ description: |-
 ---
 
 # Data Source: newrelic\_application
-~> **DEPRECATED** Use at your own risk. Use the [`newrelic_entity`](/docs/providers/newrelic/d/entity.html) data source instead. This feature may be removed in the next major release.
 
-Use this data source to get information about a specific application in New Relic that already exists. More information on Terraform's data sources can be found [here](https://www.terraform.io/language/data-sources).
+#### DEPRECATED! Use at your own risk. Use the `newrelic_entity` data source instead. This feature may be removed in the next major release
+
+Use this data source to get information about a specific application in New Relic that already exists.
 
 ## Example Usage
 
@@ -57,4 +58,4 @@ In addition to all arguments above, the following attributes are exported:
 
 ```
 Warning: This data source will use the account ID linked to your API key. At the moment it is not possible to dynamically set the account ID.
-```
\ No newline at end of file
+```
diff --git a/website/docs/d/entity.html.markdown b/website/docs/d/entity.html.markdown
index 84b92c8b..b3f64a99 100644
--- a/website/docs/d/entity.html.markdown
+++ b/website/docs/d/entity.html.markdown
@@ -8,11 +8,7 @@ description: |-
 
 # Data Source: newrelic\_entity
 
-Use this data source to get information about a specific entity in New Relic One that already exists. More information on Terraform's data sources can be found [here](https://www.terraform.io/language/data-sources).
-
--> **IMPORTANT!** Version 2.0.0 of the New Relic Terraform Provider introduces some [additional requirements](/providers/newrelic/newrelic/latest/docs/guides/migration_guide_v2) for configuring the provider.
-<br><br>
-Before upgrading to version 2.0.0 or later, it is recommended to upgrade to the most recent 1.x version of the provider and ensure that your environment successfully runs `terraform plan` without unexpected changes.
+Use this data source to get information about a specific entity in New Relic One that already exists.
 
 ## Example Usage
 
diff --git a/website/docs/d/key_transaction.html.markdown b/website/docs/d/key_transaction.html.markdown
index cba2f31a..78721d06 100644
--- a/website/docs/d/key_transaction.html.markdown
+++ b/website/docs/d/key_transaction.html.markdown
@@ -8,7 +8,7 @@ description: |-
 
 # Data Source: newrelic\_key\_transaction
 
-Use this data source to get information about a specific key transaction in New Relic that already exists.  More information on Terraform's data sources can be found [here](https://www.terraform.io/language/data-sources).
+Use this data source to get information about a specific key transaction in New Relic that already exists.
 
 ## Example Usage
 
@@ -54,4 +54,4 @@ In addition to all arguments above, the following attributes are exported:
 
 ```
 Warning: This data source will use the account ID linked to your API key. At the moment it is not possible to dynamically set the account ID.
-```
\ No newline at end of file
+```
diff --git a/website/docs/r/alert_channel.html.markdown b/website/docs/r/alert_channel.html.markdown
index f74765b2..8c4423ca 100644
--- a/website/docs/r/alert_channel.html.markdown
+++ b/website/docs/r/alert_channel.html.markdown
@@ -14,7 +14,7 @@ Use this resource to create and manage New Relic alert channels.
 
 ## Example Usage
 
-##### Email
+### Email
 ```hcl
 resource "newrelic_alert_channel" "foo" {
   name = "foo"
@@ -26,7 +26,6 @@ resource "newrelic_alert_channel" "foo" {
   }
 }
 ```
-See additional [examples](#additional-examples).
 
 ## Argument Reference
 
@@ -92,7 +91,7 @@ resource "newrelic_alert_channel" "foo" {
 
 -> **NOTE:** For instructions on setting up Webhooks with Slack, please visit the article linked under the argument `slack` in the aforementioned configuration, or [this article](https://docs.newrelic.com/docs/alerts-applied-intelligence/new-relic-alerts/alert-notifications/notification-channels-control-where-send-alerts/#slack) in New Relic's docs for additional details on setting up the `New Relic Alerts` Slack application, and subsequently using the generated Webhook URL.
 
-##### OpsGenie
+### OpsGenie
 ```hcl
 resource "newrelic_alert_channel" "foo" {
   name = "opsgenie-example"
@@ -107,7 +106,7 @@ resource "newrelic_alert_channel" "foo" {
 }
 ```
 
-##### PagerDuty
+### PagerDuty
 ```hcl
 resource "newrelic_alert_channel" "foo" {
   name = "pagerduty-example"
@@ -119,7 +118,7 @@ resource "newrelic_alert_channel" "foo" {
 }
 ```
 
-##### VictorOps
+### VictorOps
 ```hcl
 resource "newrelic_alert_channel" "foo" {
   name = "victorops-example"
@@ -132,7 +131,7 @@ resource "newrelic_alert_channel" "foo" {
 }
 ```
 
-##### Webhook
+### Webhook
 ```hcl
 resource "newrelic_alert_channel" "foo" {
   name = "webhook-example"
@@ -154,7 +153,7 @@ resource "newrelic_alert_channel" "foo" {
 }
 ```
 
-##### Webhook with complex payload
+### Webhook with complex payload
 ```hcl
 resource "newrelic_alert_channel" "foo" {
   name = "webhook-example"
@@ -175,6 +174,52 @@ EOF
 }
 ```
 
+## Argument Reference
+
+The following arguments are supported:
+
+  * `name` - (Required) The name of the channel.
+  * `type` - (Required) The type of channel.  One of: `email`, `slack`, `opsgenie`, `pagerduty`, `victorops`, or `webhook`.
+  * `config` - (Optional) A nested block that describes an alert channel configuration.  Only one config block is permitted per alert channel definition.  See [Nested config blocks](#nested-config-blocks) below for details.
+
+### Nested `config` blocks
+
+Each alert channel type supports a specific set of arguments for the `config` block:
+
+  * `email`
+    * `recipients` - (Required) Comma delimited list of email addresses.
+    * `include_json_attachment` - (Optional) `true` or `false`. Flag for whether or not to attach a JSON document containing information about the associated alert to the email that is sent to recipients.
+  * `webhook`
+    * `base_url` - (Required) The base URL of the webhook destination.
+    * `auth_password` - (Optional) Specifies an authentication password for use with a channel.  Supported by the `webhook` channel type.
+    * `auth_type` - (Optional) Specifies an authentication method for use with a channel.  Supported by the `webhook` channel type.  Only HTTP basic authentication is currently supported via the value `BASIC`.
+    * `auth_username` - (Optional) Specifies an authentication username for use with a channel.  Supported by the `webhook` channel type.
+    * `headers` - (Optional) A map of key/value pairs that represents extra HTTP headers to be sent along with the webhook payload.
+    * `headers_string` - (Optional) Use instead of `headers` if the desired payload is more complex than a list of key/value pairs (e.g. a set of headers that makes use of nested objects).  The value provided should be a valid JSON string with escaped double quotes. Conflicts with `headers`.
+    * `payload` - (Optional) A map of key/value pairs that represents the webhook payload.  Must provide `payload_type` if setting this argument.
+    * `payload_string` - (Optional) Use instead of `payload` if the desired payload is more complex than a list of key/value pairs (e.g. a payload that makes use of nested objects).  The value provided should be a valid JSON string with escaped double quotes. Conflicts with `payload`.
+    * `payload_type` - (Optional) Can either be `application/json` or `application/x-www-form-urlencoded`. The `payload_type` argument is _required_ if `payload` is set.
+  * `pagerduty`
+    * `service_key` - (Required) Specifies the service key for integrating with Pagerduty.
+  * `victorops`
+    * `key` - (Required) The key for integrating with VictorOps.
+    * `route_key` - (Required) The route key for integrating with VictorOps.
+  * `slack`
+    * `url` - (Required) [Slack Webhook URL](https://slack.com/intl/en-es/help/articles/115005265063-Incoming-webhooks-for-Slack).
+    * `channel` - (Optional) The Slack channel to send notifications to.
+  * `opsgenie`
+    * `api_key` - (Required) The API key for integrating with OpsGenie.
+    * `region` - (Required) The data center region to store your data.  Valid values are `US` and `EU`.  Default is `US`.
+    * `teams` - (Optional) A set of teams for targeting notifications. Multiple values are comma separated.
+    * `tags` - (Optional) A set of tags for targeting notifications. Multiple values are comma separated.
+    * `recipients` - (Optional) A set of recipients for targeting notifications.  Multiple values are comma separated.
+
+## Attributes Reference
+
+In addition to all arguments above, the following attributes are exported:
+
+  * `id` - The ID of the channel.
+
 ## Import
 
 Alert channels can be imported using the `id`, e.g.
diff --git a/website/docs/r/alert_policy.html.markdown b/website/docs/r/alert_policy.html.markdown
index dc642798..eb10c510 100644
--- a/website/docs/r/alert_policy.html.markdown
+++ b/website/docs/r/alert_policy.html.markdown
@@ -12,15 +12,16 @@ Use this resource to create and manage New Relic alert policies.
 
 ## Example Usage
 
+### Basic Usage
+
 ```hcl
 resource "newrelic_alert_policy" "foo" {
   name = "example"
   incident_preference = "PER_POLICY" # PER_POLICY is default
 }
 ```
-See additional [examples](#additional-examples).
 
-## Argument Reference
+### Provision multiple notification channels and add those channels to a policy
 
 The following arguments are supported:
 
@@ -48,7 +49,7 @@ resource "newrelic_alert_channel" "slack_channel" {
   type = "slack"
 
   config {
-    url     = "https://hooks.slack.com/services/<*****>/<*****>"
+    url     = "https://hooks.slack.com/services/xxxxxxx/yyyyyyyy"
     channel = "example-alerts-channel"
   }
 }
@@ -77,9 +78,8 @@ resource "newrelic_alert_policy" "policy_with_channels" {
   ]
 }
 ```
-<br>
 
-##### Reference existing notification channels and add those channel to a policy
+### Reference existing notification channels and add those channel to a policy
 ```hcl
 # Reference an existing Slack notification channel.
 data "newrelic_alert_channel" "slack_channel" {
@@ -105,6 +105,21 @@ resource "newrelic_alert_policy" "policy_with_channels" {
 }
 ```
 
+## Argument Reference
+
+The following arguments are supported:
+
+  * `name` - (Required) The name of the policy.
+  * `incident_preference` - (Optional) The rollup strategy for the policy.  Options include: `PER_POLICY`, `PER_CONDITION`, or `PER_CONDITION_AND_TARGET`.  The default is `PER_POLICY`.
+  * `channel_ids` - (Optional) An array of channel IDs (integers) to assign to the policy. Adding or removing channel IDs from this array will result in a new alert policy resource being created and the old one being destroyed. Also note that channel IDs _cannot_ be imported.
+  * `account_id` - (Optional) The New Relic account ID to operate on.  This allows the user to override the `account_id` attribute set on the provider. Defaults to the environment variable `NEW_RELIC_ACCOUNT_ID`.
+
+## Attributes Reference
+
+In addition to all arguments above, the following attributes are exported:
+
+  * `id` - The ID of the policy.
+
 ## Import
 
 Alert policies can be imported using a composite ID of `<id>:<account_id>`, where `account_id` is the account number scoped to the alert policy resource.
diff --git a/website/docs/r/alert_policy_channel.html.markdown b/website/docs/r/alert_policy_channel.html.markdown
index 4c9ce52d..95a722a0 100644
--- a/website/docs/r/alert_policy_channel.html.markdown
+++ b/website/docs/r/alert_policy_channel.html.markdown
@@ -62,7 +62,7 @@ The following arguments are supported:
 
 - `account_id` - (Optional) Determines the New Relic account where the alert policy channel will be created. Defaults to the account associated with the API key used.
 - `policy_id` - (Required) The ID of the policy.
-- `channel_ids` - (Required) Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift your Terraform state.
+- `channel_ids` - (Required) Array of channel IDs to apply to the specified policy. We recommended sorting channel IDs in ascending order to avoid drift in your state.
 
 ## Import
 
diff --git a/website/docs/r/entity_tags.html.markdown b/website/docs/r/entity_tags.html.markdown
index 1cab38da..cfa416e2 100644
--- a/website/docs/r/entity_tags.html.markdown
+++ b/website/docs/r/entity_tags.html.markdown
@@ -10,10 +10,6 @@ description: |-
 
 Use this resource to create, update, and delete tags for a New Relic One entity.
 
--> **IMPORTANT!** Version 2.0.0 of the New Relic Terraform Provider introduces some [additional requirements](/providers/newrelic/newrelic/latest/docs/guides/migration_guide_v2) for configuring the provider.
-<br><br>
-Before upgrading to version 2.0.0 or later, it is recommended to upgrade to the most recent 1.x version of the provider and ensure that your environment successfully runs `terraform plan` without unexpected changes.
-
 ## Example Usage
 
 ```hcl
diff --git a/website/docs/r/events_to_metrics_rule.html.markdown b/website/docs/r/events_to_metrics_rule.html.markdown
index 6ea83ee1..4b85d9c0 100644
--- a/website/docs/r/events_to_metrics_rule.html.markdown
+++ b/website/docs/r/events_to_metrics_rule.html.markdown
@@ -10,10 +10,6 @@ description: |-
 
 Use this resource to create, update, and delete New Relic Events to Metrics rules.
 
--> **IMPORTANT!** Version 2.0.0 of the New Relic Terraform Provider introduces some [additional requirements](/providers/newrelic/newrelic/latest/docs/guides/migration_guide_v2) for configuring the provider.
-<br><br>
-Before upgrading to version 2.0.0 or later, it is recommended to upgrade to the most recent 1.x version of the provider and ensure that your environment successfully runs `terraform plan` without unexpected changes.
-
 ## Example Usage
 
 ```hcl
diff --git a/website/docs/r/insights_event.html.markdown b/website/docs/r/insights_event.html.markdown
index d19049a5..d6522327 100644
--- a/website/docs/r/insights_event.html.markdown
+++ b/website/docs/r/insights_event.html.markdown
@@ -8,7 +8,7 @@ description: |-
 
 # Resource: newrelic\_insights\_event
 
-Use this resource to create one or more Insights events during a terraform run.
+Use this resource to create one or more Insights events.
 
 ## Example Usage
 
diff --git a/website/docs/r/nrql_alert_condition.html.markdown b/website/docs/r/nrql_alert_condition.html.markdown
index c2fd6def..ab28d085 100644
--- a/website/docs/r/nrql_alert_condition.html.markdown
+++ b/website/docs/r/nrql_alert_condition.html.markdown
@@ -10,13 +10,10 @@ description: |-
 
 Use this resource to create and manage NRQL alert conditions in New Relic.
 
--> **IMPORTANT!** Version 2.0.0 of the New Relic Terraform Provider introduces some [additional requirements](/providers/newrelic/newrelic/latest/docs/guides/migration_guide_v2) for configuring the provider.
-<br><br>
-Before upgrading to version 2.0.0 or later, it is recommended to upgrade to the most recent 1.x version of the provider and ensure that your environment successfully runs `terraform plan` without unexpected changes.
-
 ## Example Usage
 
-##### Type: `static` (default)
+### Type: `static` (default)
+
 ```hcl
 resource "newrelic_alert_policy" "foo" {
   name = "foo"
@@ -62,7 +59,6 @@ resource "newrelic_nrql_alert_condition" "foo" {
   }
 }
 ```
-See additional [examples](#additional-examples).
 
 ## Argument Reference
 
@@ -140,10 +136,8 @@ In addition to all arguments above, the following attributes are exported:
 - `id` - The ID of the NRQL alert condition. This is a composite ID with the format `<policy_id>:<condition_id>` - e.g. `538291:6789035`.
 - `entity_guid` - The unique entity identifier of the NRQL Condition in New Relic.
 
-
 ## Additional Examples
 
-
 ##### Type: `baseline`
 
 [Baseline NRQL alert conditions](https://docs.newrelic.com/docs/alerts/new-relic-alerts/defining-conditions/create-baseline-alert-conditions) are dynamic in nature and adjust to the behavior of your data. The example below demonstrates a baseline NRQL alert condition for alerting when transaction durations are above a specified threshold and dynamically adjusts based on data trends.
@@ -154,43 +148,44 @@ resource "newrelic_alert_policy" "foo" {
 }
 
 resource "newrelic_nrql_alert_condition" "foo" {
-  type                         = "baseline"
-  account_id                   = 12345678
-  name                         = "foo"
-  policy_id                    = newrelic_alert_policy.foo.id
-  description                  = "Alert when transactions are taking too long"
-  enabled                      = true
-  runbook_url                  = "https://www.example.com"
-  violation_time_limit_seconds = 3600
-  aggregation_method           = "event_flow"
-  aggregation_delay            = 120
-  slide_by                     = 30
-
-  # baseline type only
-  baseline_direction = "upper_only"
+  account_id                     = "your_account_id"
+  policy_id                      = newrelic_alert_policy.foo.id
+  type                           = "static"
+  name                           = "foo"
+  description                    = "Alert when transactions are taking too long"
+  runbook_url                    = "https://www.example.com"
+  enabled                        = true
+  violation_time_limit_seconds   = 3600
+  fill_option                    = "static"
+  fill_value                     = 1.0
+  aggregation_window             = 60
+  aggregation_method             = "event_flow"
+  aggregation_delay              = 120
+  expiration_duration            = 120
+  open_violation_on_expiration   = true
+  close_violations_on_expiration = true
+  slide_by                       = 30
 
   nrql {
-    query = "SELECT percentile(duration, 95) FROM Transaction WHERE appName = 'ExampleAppName'"
+    query = "SELECT average(duration) FROM Transaction where appName = 'Your App'"
   }
 
   critical {
     operator              = "above"
     threshold             = 5.5
     threshold_duration    = 300
-    threshold_occurrences = "all"
+    threshold_occurrences = "ALL"
   }
 
   warning {
     operator              = "above"
     threshold             = 3.5
     threshold_duration    = 600
-    threshold_occurrences = "all"
+    threshold_occurrences = "ALL"
   }
 }
 ```
 
-<br>
-
 ## Import
 
 NRQL alert conditions can be imported using a composite ID of `<policy_id>:<condition_id>:<conditionType>`, e.g.
@@ -203,14 +198,9 @@ $ terraform import newrelic_nrql_alert_condition.foo 538291:6789035:baseline
 $ terraform import newrelic_nrql_alert_condition.foo 538291:6789035:static
 ```
 
-~> **NOTE:** The value of `conditionType` in the import composite ID must be a valid condition type - `static` or `baseline`. Also note that deprecated arguments will *not* be set when importing.
-
-Users can find the actual values for `policy_id` and `condition_id` from the New Relic One UI under respective policy and condition.
-
-
 ## Tags
 
-Manage NRQL alert condition tags with `newrelic_entity_tags`. For up-to-date documentation about the tagging resource, please check [newrelic_entity_tags](entity_tags.html#example-usage)
+Manage NRQL alert condition tags with `newrelic_entity_tags`. For up-to-date documentation about the tagging resource, please check `newrelic_entity_tags`.
 
 ```hcl
 resource "newrelic_alert_policy" "foo" {
@@ -270,6 +260,7 @@ resource "newrelic_entity_tags" "my_condition_entity_tags" {
 }
 ```
 
+<small>alerts.newrelic.com/accounts/**\<account_id\>**/policies/**\<policy_id\>**/conditions/**\<condition_id\>**/edit</small>
 
 ## Upgrade from 1.x to 2.x
 
